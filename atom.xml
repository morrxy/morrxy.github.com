<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡军的网络日志</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-05-15T05:50:06.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>胡军</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Clojure炼金术:读取，求值，宏</title>
    <link href="http://yoursite.com/2016/05/11/braveclojure-read-and-eval/"/>
    <id>http://yoursite.com/2016/05/11/braveclojure-read-and-eval/</id>
    <published>2016-05-11T07:42:47.000Z</published>
    <updated>2016-05-15T05:50:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x4E03;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/read-and-eval/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure Alchemy: Reading, Evaluation, and Macros&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;Clojure&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x7B2C;3&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/do-things/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Clojure Crash Course&lt;/a&gt;;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x67D0;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&lt;a href=&quot;http://clojuredocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coojuredocs&lt;/a&gt;&amp;#x7684;&amp;#x53C2;&amp;#x8003;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6587;&amp;#x6863;&amp;#x90FD;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The philosopher&amp;#x2019;s stone, along with the elixir of life and Viagra, is one of the most well-known specimens of alchemical lore, pursued for its ability to transmute lead into gold. Clojure, however, offers a tool that makes the philosopher&amp;#x2019;s stone look like a mere trinket: the macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros allow you to transform arbitrary expressions into valid Clojure, so you can extend the language itself to fit your needs. And you don&amp;#x2019;t even have to be a wizened old dude or lady in a robe to use them!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x628A;&amp;#x4EFB;&amp;#x610F;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;Clojure&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x6269;&amp;#x5C55;&amp;#x8BED;&amp;#x8A00;&amp;#x4EE5;&amp;#x7B26;&amp;#x5408;&amp;#x4F60;&amp;#x7684;&amp;#x9700;&amp;#x6C42;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get just a sip of this power, consider this trivial macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; backwards&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [form]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reverse&lt;/span&gt;&lt;/span&gt; form))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;backwards&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&amp;quot; backwards&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot; am&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;quot;&lt;/span&gt; str))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;I am backwards&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The backwards macro allows Clojure to successfully evaluate the expression &lt;code&gt;(&amp;quot; backwards&amp;quot; &amp;quot; am&amp;quot; &amp;quot;I&amp;quot; str)&lt;/code&gt;, even though it doesn&amp;#x2019;t follow Clojure&amp;#x2019;s built-in syntax rules, which require an expression&amp;#x2019;s operand to appear first (not to mention the rule that an expression not be written in reverse order). Without backwards, the expression would fail harder than millennia of alchemists ironically spending their entire lives pursuing an impossible means of achieving immortality. With backwards, you&amp;#x2019;ve created your own syntax! You&amp;#x2019;ve extended Clojure so you can write code however you please! Better than turning lead into gold, I tell you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;code&gt;(&amp;quot; backwards&amp;quot; &amp;quot; am&amp;quot; &amp;quot;I&amp;quot; str)&lt;/code&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;Clojure&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;backwards&lt;/code&gt;&amp;#x5B8F;&amp;#x4F7F;Clojure&amp;#x80FD;&amp;#x6210;&amp;#x529F;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x4F60;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x521B;&amp;#x9020;&amp;#x4E86;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This chapter gives you the conceptual foundation you need to go mad with power writing your own macros. It explains the elements of Clojure&amp;#x2019;s evaluation model: the &lt;code&gt;reader&lt;/code&gt;, the &lt;code&gt;evaluator&lt;/code&gt;, and the &lt;code&gt;macro expander&lt;/code&gt;. It&amp;#x2019;s like the periodic table of Clojure elements. Think of how the periodic table reveals the properties of atoms: elements in the same column behave similarly because they have the same nuclear charge. Without the periodic table and its underlying theory, we&amp;#x2019;d be in the same position as the alchemists of yore, mixing stuff together randomly to see what blows up. But with a deeper understanding of the elements, you can see why stuff blows up and learn how to blow stuff up on purpose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x5199;&amp;#x5B8F;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x5230;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x89E3;&amp;#x91CA;&amp;#x4E86;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x7684;&amp;#x4E09;&amp;#x4E2A;&amp;#x65B9;&amp;#x9762;&amp;#xFF1A;&lt;code&gt;reader&lt;/code&gt;(&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;)&amp;#xFF0C;&lt;code&gt;evaluator&lt;/code&gt;(&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;)&amp;#xFF0C;&lt;code&gt;macro expander&lt;/code&gt;(&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7A0B;&amp;#x5E8F;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An Overview of Clojure&amp;#x2019;s Evaluation Model&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Clojure (like all Lisps) has an evaluation model that differs from most other languages: it has a two-phase system where it reads textual source code, producing Clojure data structures. These data structures are then evaluated: Clojure traverses the data structures and performs actions like function application or var lookup based on the type of the data structure. For example, when Clojure reads the text &lt;code&gt;(+ 1 2)&lt;/code&gt;, the result is a list data structure whose first element is a &lt;code&gt;+&lt;/code&gt; symbol, followed by the numbers 1 and 2. This data structure is passed to Clojure&amp;#x2019;s evaluator, which looks up the function corresponding to + and applies that function to 1 and 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure(&amp;#x4E0E;&amp;#x6240;&amp;#x6709;&amp;#x7684;Lisp&amp;#x4E00;&amp;#x6837;)&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x4E0E;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x540C;&amp;#xFF1A;&amp;#x7531;&amp;#x4E24;&amp;#x6B65;&amp;#x7EC4;&amp;#x6210;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B65;&amp;#x8BFB;&amp;#x5165;&amp;#x6587;&amp;#x672C;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x6B65;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x52A8;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x53D8;&amp;#x91CF;&amp;#x67E5;&amp;#x627E;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x6E90;&amp;#x7801;&lt;code&gt;(+ 1 2)&lt;/code&gt;,&amp;#x8BFB;&amp;#x5165;&amp;#x540E;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&lt;code&gt;+&lt;/code&gt;&amp;#x8FD9;&amp;#x4E2A;symbol(&amp;#x7B26;&amp;#x53F7;)&amp;#xFF0C;&amp;#x540E;&amp;#x9762;&amp;#x8DDF;&amp;#x7740;1&amp;#x548C;2&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4F20;&amp;#x7ED9;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7528;1&amp;#x548C;2&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Languages that have this relationship between source code, data, and evaluation are called &lt;code&gt;homoiconic&lt;/code&gt;. (Incidentally, if you say &lt;code&gt;homoiconic&lt;/code&gt; in front of your bathroom mirror three times with the lights out, the ghost of John McCarthy appears and hands you a parenthesis.) Homoiconic languages empower you to reason about your code as a set of data structures that you can manipulate programmatically. To put this into context, let&amp;#x2019;s take a jaunt through the land of compilation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x5173;&amp;#x7CFB;&amp;#x7684;&amp;#x8BED;&amp;#x8A00;&amp;#x88AB;&amp;#x79F0;&amp;#x4E3A;&lt;code&gt;homoiconic&lt;/code&gt;&amp;#x8BED;&amp;#x8A00;(&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%90%8C%E5%83%8F%E6%80%A7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&lt;/a&gt;)&amp;#x3002;(&amp;#x987A;&amp;#x4FBF;&amp;#x63D0;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5F00;&amp;#x7740;&amp;#x706F;&amp;#xFF0C;&amp;#x5728;&amp;#x6D74;&amp;#x5BA4;&amp;#x955C;&amp;#x5B50;&amp;#x524D;&amp;#x9762;&amp;#x8BF4;&amp;#x4E09;&amp;#x58F0;&lt;code&gt;homoiconic&lt;/code&gt;,&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E9%BA%A6%E5%8D%A1%E9%94%A1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x7EA6;&amp;#x7FF0;&amp;#xB7;&amp;#x9EA6;&amp;#x5361;&amp;#x9521;&lt;/a&gt;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#xFF0C;&amp;#x5E76;&amp;#x4EA4;&amp;#x7ED9;&amp;#x4F60;&amp;#x4E00;&amp;#x5BF9;&amp;#x5706;&amp;#x62EC;&amp;#x53F7;&amp;#x3002;)&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x628A;&amp;#x4EE3;&amp;#x7801;&amp;#x770B;&amp;#x6210;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5E8F;&amp;#x64CD;&amp;#x7EB5;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5373;&amp;#x4F20;&amp;#x8BF4;&amp;#x4E2D;&amp;#x7684;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5373;&amp;#x6570;&amp;#x636E;&amp;#x8BED;&amp;#x8A00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Programming languages require a compiler or interpreter for translating the code you write, which consists of Unicode characters, into something else: machine instructions, code in another programming language, whatever. During this process, the compiler constructs an &lt;code&gt;abstract syntax tree&lt;/code&gt; (AST), which is a data structure that represents your program. You can think of the AST as the input to the evaluator, which you can think of as a function that traverses the tree to produce the machine code or whatever as its output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x9700;&amp;#x8981;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6216;&amp;#x89E3;&amp;#x91CA;&amp;#x5668;&amp;#x628A;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x673A;&amp;#x5668;&amp;#x6307;&amp;#x4EE4;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x7B49;&amp;#x7B49;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6784;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&lt;/code&gt;(AST)&amp;#x4EE3;&amp;#x8868;&amp;#x6E90;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;AST&amp;#x770B;&amp;#x6210;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6811;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x673A;&amp;#x5668;&amp;#x7801;&amp;#x6216;&amp;#x5176;&amp;#x4ED6;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So far this sounds a lot like what I described for Clojure. However, in most languages the AST&amp;#x2019;s data structure is inaccessible within the programming language; the programming language space and the compiler space are forever separated, and never the twain shall meet. Figure 7-1 shows how you might visualize the compilation process for an expression in a non-Lisp programming language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x662F;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;AST&amp;#x7684;&amp;#xFF0C;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0E;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6C38;&amp;#x8FDC;&amp;#x662F;&amp;#x9694;&amp;#x79BB;&amp;#x7684;&amp;#x3002;&amp;#x56FE;7-1&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x975E;Lisp&amp;#x8BED;&amp;#x8A00;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;&amp;#x7F16;&amp;#x8BD1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-1&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/non-lisp-eval.png&quot; alt=&quot;&amp;#x56FE;7-1&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But Clojure is different, because Clojure is a Lisp and Lisps are hotter than a stolen tamale. Instead of evaluating an AST that&amp;#x2019;s represented as some inaccessible internal data structure, Lisps evaluate native data structures. Clojure still evaluates tree structures, but the trees are structured using Clojure lists and the nodes are Clojure values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;Clojure&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;Clojure&amp;#x662F;Lisp&amp;#x3002;Lisp&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0D;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x8BBF;&amp;#x95EE;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x6E90;&amp;#x751F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;Clojure&amp;#x4E5F;&amp;#x662F;&amp;#x5BF9;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F46;&amp;#x6811;&amp;#x662F;&amp;#x7531;Clojure&amp;#x6E90;&amp;#x751F;list&amp;#x6784;&amp;#x6210;&amp;#xFF0C;&amp;#x6811;&amp;#x8282;&amp;#x70B9;&amp;#x662F;&amp;#x6E90;&amp;#x751F;Clojure&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists are ideal for constructing tree structures. The first element of a list is treated as the root, and each subsequent element is treated as a branch. To create a nested tree, you can just use nested lists, as shown in Figure 7-2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;list&amp;#x6784;&amp;#x9020;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#x5F88;&amp;#x5408;&amp;#x9002;&amp;#x3002;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x6839;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x540E;&amp;#x7EED;&amp;#x5143;&amp;#x7D20;&amp;#x90FD;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&amp;#x3002;&amp;#x5982;&amp;#x9700;&amp;#x6784;&amp;#x5EFA;&amp;#x5D4C;&amp;#x5957;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;list,&amp;#x5982;&amp;#x56FE;7-2&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-2&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/trees.png&quot; alt=&quot;&amp;#x56FE;7-2&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First, Clojure&amp;#x2019;s reader converts the text &lt;code&gt;(+ 1 (* 6 7))&lt;/code&gt; into a nested list. (You&amp;#x2019;ll learn more about the reader in the next section.) Then, Clojure&amp;#x2019;s evaluator takes that data as input and produces a result. (It also compiles Java Virtual Machine ( JVM) bytecode, which you&amp;#x2019;ll learn about in Chapter 12. For now, we&amp;#x2019;ll just focus on the evaluation model on a conceptual level.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&lt;code&gt;(+ 1 (* 6 7))&lt;/code&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x5D4C;&amp;#x5957;list&amp;#x3002;&amp;#x7136;&amp;#x540E;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x5E76;&amp;#x4EA7;&amp;#x751F;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With this in mind, Figure 7-3 shows what Clojure&amp;#x2019;s evaluation process looks like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;7-3&amp;#x8868;&amp;#x793A;&amp;#x4E86;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-3&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/lisp-eval.png&quot; alt=&quot;&amp;#x56FE;7-3&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;S-Expressions&lt;/strong&gt;&lt;br&gt;In your Lisp adventures, you&amp;#x2019;ll come across resources that explain that Lisps evaluate s-expressions. I avoid that term here because it&amp;#x2019;s ambiguous: you&amp;#x2019;ll see it used to refer to both the actual data object that gets evaluated and the source code that represents that data. Using the same term for two different components of Lisp evaluation (code and data) obscures what&amp;#x2019;s important: your text represents native data structures, and Lisps evaluate native data structures, which is unique and awesome. For a great treatment of s-expressions, check out &lt;a href=&quot;http://www.gigamonkeys.com/book/syntax-and-semantics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gigamonkeys.com/book/syntax-and-semantics.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5B66;&amp;#x4E60;Lisp&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x78B0;&amp;#x4E0A;s-expressions(s&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;)&amp;#x7684;&amp;#x89E3;&amp;#x91CA;&amp;#x3002;&amp;#x6211;&amp;#x907F;&amp;#x514D;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x6B67;&amp;#x4E49;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#x5B83;&amp;#x65E2;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x53C8;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x6E90;&amp;#x7801;&amp;#x3002;&amp;#x7528;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#x4EE3;&amp;#x8868;Lips&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EC4;&amp;#x6210;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x63A9;&amp;#x76D6;&amp;#x4E86;&amp;#x8981;&amp;#x70B9;&amp;#xFF1A;&amp;#x6E90;&amp;#x7801;&amp;#x6587;&amp;#x672C;&amp;#x4EE3;&amp;#x8868;&amp;#x6E90;&amp;#x751F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;Lisp&amp;#x5BF9;&amp;#x6E90;&amp;#x751F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5F88;&amp;#x72EC;&amp;#x7279;&amp;#x5F88;&amp;#x68D2;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E00;&amp;#x7BC7;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&lt;a href=&quot;http://www.gigamonkeys.com/book/syntax-and-semantics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;s&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x6587;&amp;#x7AE0;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the evaluator doesn&amp;#x2019;t actually care where its input comes from; it doesn&amp;#x2019;t have to come from the reader. As a result, you can send your program&amp;#x2019;s data structures directly to the Clojure evaluator with &lt;code&gt;eval&lt;/code&gt;. Behold!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E0D;&amp;#x5728;&amp;#x4E4E;&amp;#x8F93;&amp;#x5165;&amp;#x4ECE;&amp;#x54EA;&amp;#x6765;&amp;#xFF0C;&amp;#x8F93;&amp;#x5165;&amp;#x4E0D;&amp;#x4E00;&amp;#x5B9A;&amp;#x6765;&amp;#x81EA;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;&lt;code&gt;eval&lt;/code&gt;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; addition-list (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; addition-list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That&amp;#x2019;s right, baby! Your program just evaluated a Clojure list. You&amp;#x2019;ll read all about Clojure&amp;#x2019;s evaluation rules soon, but briefly, this is what happened: when Clojure evaluated the list, it looked up the list that &lt;code&gt;addition-list&lt;/code&gt; refers to; then it looked up the function corresponding to the &lt;code&gt;+&lt;/code&gt; symbol; and then it called that function with &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; as arguments, returning &lt;code&gt;3&lt;/code&gt;. The data structures of your running program and those of the evaluator live in the same space, and the upshot is that you can use the full power of Clojure and all the code you&amp;#x2019;ve written to construct data structures for evaluation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&amp;#x5F53;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&lt;code&gt;addition-list&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;list,&amp;#x7136;&amp;#x540E;&amp;#x627E;&amp;#x5230;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4EE5;&lt;code&gt;1&lt;/code&gt;&amp;#x548C;&lt;code&gt;2&lt;/code&gt;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&amp;#x8FD0;&amp;#x884C;&amp;#x4E2D;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5904;&amp;#x4E8E;&amp;#x540C;&amp;#x4E00;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD0;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x7684;Clojure&amp;#x529B;&amp;#x91CF;&amp;#x6784;&amp;#x5EFA;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(eval (concat addition-list [10]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(eval (list &amp;apos;def &amp;apos;lucky-number (concat addition-list [10])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;apos;user/lucky-number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lucky-number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 7-4 shows the lists you sent to the evaluator in these two examples.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;7-4&amp;#x663E;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;list&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-4&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/data-to-eval.png&quot; alt=&quot;&amp;#x56FE;7-4&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your program can talk directly to its own evaluator, using its own functions and data to modify itself as it runs! Are you going mad with power yet? I hope so! Hold on to some of your sanity, though, because there&amp;#x2019;s still more to learn.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8DDF;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BF9;&amp;#x8BDD;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x5019;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4FEE;&amp;#x6539;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So Clojure is homoiconic: it represents abstract syntax trees using lists, and you write textual representations of lists when you write Clojure code. Because the code you write represents data structures that you&amp;#x2019;re used to manipulating and the evaluator consumes those data structures, it&amp;#x2019;s easy to reason about how to programmatically modify your program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x662F;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#xFF1A;&amp;#x7528;list&amp;#x8868;&amp;#x793A;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6E90;&amp;#x7801;&amp;#x4E5F;&amp;#x7528;list&amp;#x8868;&amp;#x793A;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x8981;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C31;&amp;#x5BB9;&amp;#x6613;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros are what allow you to perform those manipulations easily. The rest of this chapter covers Clojure&amp;#x2019;s reader and evaluation rules in detail to give you a precise understanding of how macros work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8F7B;&amp;#x677E;&amp;#x5B8C;&amp;#x6210;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x8BB2;&amp;#x8FF0;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x51C6;&amp;#x786E;&amp;#x7406;&amp;#x89E3;&amp;#x5B8F;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Reader&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The reader converts the textual source code you save in a file or enter in the REPL into Clojure data structures. It&amp;#x2019;s like a translator between the human world of Unicode characters and Clojure&amp;#x2019;s world of lists, vectors, maps, symbols, and other data structures. In this section, you&amp;#x2019;ll interact directly with the reader and learn how a handy feature, the reader macro, lets you write code more succinctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x5B58;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x7684;&amp;#x6216;REPL&amp;#x8F93;&amp;#x5165;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x7FFB;&amp;#x8BD1;&amp;#xFF0C;&amp;#x628A;&amp;#x4EBA;&amp;#x7C7B;&amp;#x4E16;&amp;#x754C;&amp;#x7684;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#x7FFB;&amp;#x8BD1;&amp;#x6210;Clojure&amp;#x4E16;&amp;#x754C;&amp;#x7684;list, vector, map, symbol&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x8981;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4EA4;&amp;#x4E92;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B66;&amp;#x4E60;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BFB;&amp;#x5165;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;To understand reading, let&amp;#x2019;s first take a close look at how Clojure handles the text you type in the REPL. First, the REPL prompts you for text:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x7406;&amp;#x89E3;&amp;#x8BFB;&amp;#x5165;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x4ED4;&amp;#x7EC6;&amp;#x770B;&amp;#x770B;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5904;&amp;#x7406;REPL&amp;#x91CC;&amp;#x8F93;&amp;#x5165;&amp;#x7684;&amp;#x6587;&amp;#x5B57;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;REPL&amp;#x63D0;&amp;#x793A;&amp;#x4F60;&amp;#x8F93;&amp;#x5165;&amp;#x6587;&amp;#x5B57;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Then you enter a bit of text. Maybe something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x4F60;&amp;#x8F93;&amp;#x5165;&amp;#x4E00;&amp;#x4E9B;&amp;#x6587;&amp;#x5B57;&amp;#x3002;&amp;#x4E5F;&amp;#x8BB8;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (str &amp;quot;To understand what recursion is,&amp;quot; &amp;quot; you must first understand recursion.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That text is really just a sequence of Unicode characters, but it&amp;#x2019;s meant to represent a combination of Clojure data structures. This textual representation of data structures is called a &lt;code&gt;reader form&lt;/code&gt;. In this example, the form represents a list data structure that contains three more forms: the &lt;code&gt;str&lt;/code&gt; symbol and two strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x5B57;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EE3;&amp;#x8868;&amp;#x7684;&amp;#x662F;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7EC4;&amp;#x5408;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x5F62;&amp;#x5F0F;&amp;#x53EB;&amp;#x505A;&lt;code&gt;reader form&lt;/code&gt;(&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;)&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x53C8;&amp;#x5305;&amp;#x542B;&amp;#x4E86;3&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;code&gt;str&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you type those characters into the prompt and press enter, that text goes to the reader (remember REPL stands for read-eval-print-loop). Clojure reads the stream of characters and internally produces the corresponding data structures. It then evaluates the data structures and prints the textual representation of the result:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8F93;&amp;#x5165;&amp;#x5B8C;&amp;#x6210;&amp;#x5E76;&amp;#x56DE;&amp;#x8F66;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x672C;&amp;#x88AB;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;(REPL&amp;#x4EE3;&amp;#x8868;&amp;#x4E86;&amp;#x8BFB;&amp;#x5165;-&amp;#x6C42;&amp;#x503C;-&amp;#x6253;&amp;#x5370;-&amp;#x5FAA;&amp;#x73AF;)&amp;#x3002;Clojure&amp;#x5185;&amp;#x90E8;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x672C;&amp;#x4EA7;&amp;#x751F;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x8868;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;To understand what recursion is, you must first understand recursion.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading and evaluation are discrete processes that you can perform independently. One way to interact with the reader directly is by using the &lt;code&gt;read-string&lt;/code&gt; function. &lt;code&gt;read-string&lt;/code&gt; takes a string as an argument and processes it using Clojure&amp;#x2019;s reader, returning a data structure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x662F;&amp;#x80FD;&amp;#x72EC;&amp;#x7ACB;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x5206;&amp;#x79BB;&amp;#x6B65;&amp;#x9AA4;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;read-string&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&lt;code&gt;read-string&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x5B83;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list?&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;conj&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;) &lt;span class=&quot;symbol&quot;&gt;:zagglewag&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (:zagglewag + 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the first example, &lt;code&gt;read-string&lt;/code&gt; reads the string representation of a list containing a plus symbol and the numbers 1 and 2. The return value is an actual list, as proven by the second example. The last example uses &lt;code&gt;conj&lt;/code&gt; to prepend a keyword to the list. The takeaway is that reading and evaluating are independent of each other. You can read text without evaluating it, and you can pass the result to other functions. You can also evaluate the result, if you want:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&lt;code&gt;read-string&lt;/code&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5305;&amp;#x542B;&amp;#x52A0;&amp;#x53F7;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x6570;&amp;#x5B57;1&amp;#xFF0C;2&amp;#x7684;list&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x5B9E;&amp;#x9645;list&amp;#xFF0C;&amp;#x4ECE;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BC1;&amp;#x5B9E;&amp;#x3002;&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7528;&lt;code&gt;conj&lt;/code&gt;&amp;#x628A;&amp;#x4E00;&amp;#x4E2A;keyword&amp;#x9644;&amp;#x52A0;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x4E0A;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x8981;&amp;#x70B9;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x4E92;&amp;#x76F8;&amp;#x72EC;&amp;#x7ACB;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BFB;&amp;#x5165;&amp;#x6587;&amp;#x672C;&amp;#x4F46;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8BFB;&amp;#x5165;&amp;#x7ED3;&amp;#x679C;&amp;#x4F20;&amp;#x7ED9;&amp;#x5176;&amp;#x4ED6;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x613F;&amp;#x610F;&amp;#xFF0C;&amp;#x4F60;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In all the examples so far, there&amp;#x2019;s been a one-to-one relationship between the reader form and the corresponding data structures. Here are more examples of simple reader forms that directly map to the data structures they represent:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x90FD;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;() A list reader form&lt;br&gt;str A symbol reader form&lt;br&gt;[1 2] A vector reader form containing two number reader forms&lt;br&gt;{:sound &amp;#x201C;hoot&amp;#x201D;} A map reader form with a keyword reader form and string reader form&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;() list&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;str symbol&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;[1 2] vector&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x6570;&amp;#x5B57;&amp;#x8BFB;&amp;#x5165;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;{:sound &amp;#x201C;hoot&amp;#x201D;} map&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x4E24;&amp;#x4E2A;&amp;#x8BFB;&amp;#x5165;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;keyword&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the reader can employ more complex behavior when converting text to data structures. For example, remember anonymous functions?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x662F;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x66F4;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x3002;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x533F;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;#&lt;/span&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; %) &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, try this out:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BD5;&amp;#x8BD5;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;#(+ 1 %)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (fn* [p1__423#] (+ 1 p1__423#))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Whoa! This is not the one-to-one mapping that we&amp;#x2019;re used to. Reading &lt;code&gt;#(+ 1 %)&lt;/code&gt; somehow resulted in a list consisting of the &lt;code&gt;fn*&lt;/code&gt; symbol, a vector containing a symbol, and a list containing three elements. What just happened?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x64E6;&amp;#xFF01;&amp;#x8FD9;&amp;#x4E0D;&amp;#x662F;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x8BFB;&amp;#x5165;&lt;code&gt;#(+ 1 %)&lt;/code&gt;&amp;#x751F;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&lt;code&gt;fn*&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;vector(&amp;#x542B;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;)&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;list(&amp;#x542B;&amp;#x6709;3&amp;#x4E2A;&amp;#x6210;&amp;#x5458;)&amp;#x3002;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reader Macros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ll answer my own question: the reader used a &lt;em&gt;reader macro&lt;/em&gt; to transform &lt;code&gt;#(+ 1 %)&lt;/code&gt;. Reader macros are sets of rules for transforming text into data structures. They often allow you to represent data structures in more compact ways because they take an abbreviated reader form and expand it into a full form. They&amp;#x2019;re designated by &lt;em&gt;macro characters&lt;/em&gt;, like &lt;code&gt;&amp;apos;&lt;/code&gt; (the single quote), &lt;code&gt;#&lt;/code&gt;, and &lt;code&gt;@&lt;/code&gt;. They&amp;#x2019;re also completely different from the macros we&amp;#x2019;ll get to later. So as not to get the two confused, I&amp;#x2019;ll always refer to reader macros using the full term reader macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/em&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x4E86;&lt;code&gt;#(+ 1 %)&lt;/code&gt;&amp;#x3002;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x662F;&amp;#x4E00;&amp;#x7EC4;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x91C7;&amp;#x7528;&amp;#x4E86;&amp;#x7F29;&amp;#x5199;&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x88AB;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x5B8C;&amp;#x6574;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7531;&lt;em&gt;&amp;#x5B8F;&amp;#x5B57;&amp;#x7B26;&lt;/em&gt;&amp;#x6807;&amp;#x8BC6;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;&amp;#x2018;&lt;/code&gt;(&amp;#x5355;&amp;#x5F15;&amp;#x53F7;)&amp;#xFF0C;&lt;code&gt;#&lt;/code&gt;,&lt;code&gt;@&lt;/code&gt;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E0E;&amp;#x540E;&amp;#x9762;&amp;#x8BB2;&amp;#x7684;&amp;#x5B8F;&amp;#x5B8C;&amp;#x5168;&amp;#x662F;&amp;#x4E24;&amp;#x7801;&amp;#x4E8B;&amp;#x3002;&amp;#x4E0D;&amp;#x8981;&amp;#x6DF7;&amp;#x4E3A;&amp;#x4E00;&amp;#x8C08;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x6211;&amp;#x4F1A;&amp;#x603B;&amp;#x662F;&amp;#x7528;&amp;#x5B8C;&amp;#x6574;&amp;#x7684;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/em&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, you can see how the quote reader macro expands the single quote character here:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x770B;&amp;#x770B;&amp;#x5F15;&amp;#x7528;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x6269;&amp;#x5C55;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;(a b c)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (quote (a b c))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When the reader encounters the single quote, it expands it to a list whose first member is the symbol &lt;code&gt;quote&lt;/code&gt; and whose second member is the data structure that followed the single quote. The &lt;code&gt;deref&lt;/code&gt; reader macro works similarly for the &lt;code&gt;@&lt;/code&gt; character:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x9047;&amp;#x5230;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x628A;&amp;#x5B83;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x5176;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;quote&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7C7B;&amp;#x4F3C;&amp;#x5730;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&lt;code&gt;@&lt;/code&gt;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&lt;code&gt;defef&lt;/code&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;@var&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (clojure.core/deref var)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Reader macros can also do crazy stuff like cause text to be ignored. The semicolon designates the single-line comment reader macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x8FD8;&amp;#x80FD;&amp;#x5FFD;&amp;#x7565;&amp;#x6587;&amp;#x672C;&amp;#x3002;&amp;#x5206;&amp;#x53F7;&amp;#x662F;&amp;#x5355;&amp;#x884C;&amp;#x6CE8;&amp;#x91CA;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;; ignore!\n(+ 1 2)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;And that&amp;#x2019;s the reader! Your humble companion, toiling away at transforming text into data structures. Now let&amp;#x2019;s look at how Clojure evaluates those data structures.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x770B;Clojure&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Evaluator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;a href=&quot;#&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;/a&gt;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;You can think of Clojure&amp;#x2019;s evaluator as a function that takes a data structure as an argument, processes the data structure using rules corresponding to the data structure&amp;#x2019;s type, and returns a result. To evaluate a symbol, Clojure looks up what the symbol refers to. To evaluate a list, Clojure looks at the first element of the list and calls a function, macro, or special form. Any other values (including strings, numbers, and keywords) simply evaluate to themselves.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x770B;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7C7B;&amp;#x578B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89C4;&amp;#x5219;&amp;#x5904;&amp;#x7406;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x6C42;&amp;#x503C;list&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Clojure&amp;#x67E5;&amp;#x770B;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x5B8F;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x503C;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x6570;&amp;#x5B57;&amp;#xFF0C;keyword&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, let&amp;#x2019;s say you&amp;#x2019;ve typed &lt;code&gt;(+ 1 2)&lt;/code&gt; in the REPL. Figure 7-5 shows a diagram of the data structure that gets sent to the evaluator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x4F60;&amp;#x5728;REPL&amp;#x8F93;&amp;#x5165;&amp;#x4E86;&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x56FE;7-5&amp;#x793A;&amp;#x610F;&amp;#x4E86;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-5&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/simple-eval.png&quot; alt=&quot;7-5&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because it&amp;#x2019;s a list, the evaluator starts by evaluating the first element in the list. The first element is the plus symbol, and the evaluator resolves that by returning the corresponding function. Because the first element in the list is a function, the evaluator evaluates each of the operands. The operands 1 and 2 evaluate to themselves because they&amp;#x2019;re not lists or symbols. Then the evaluator calls the addition function with 1 and 2 as the operands, and returns the result.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5148;&amp;#x6C42;&amp;#x503C;list&amp;#x91CC;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x89E3;&amp;#x6790;&amp;#x5B83;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;1&amp;#x548C;2&amp;#x4E0D;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x662F;list&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x90FD;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;1&amp;#x548C;2&amp;#x4F5C;&amp;#x4E3A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The rest of this section explains the evaluator&amp;#x2019;s rules for each kind of data structure more fully. To show how the evaluator works, we&amp;#x2019;ll just run each example in the REPL. Keep in mind that the REPL first reads your text to get a data structure, then sends that data structure to the evaluator, and then prints the result as text.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8282;&amp;#x7684;&amp;#x5269;&amp;#x4F59;&amp;#x90E8;&amp;#x5206;&amp;#x5168;&amp;#x9762;&amp;#x89E3;&amp;#x91CA;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BF9;&amp;#x6BCF;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;br&gt;I write about how Clojure evaluates data structures in this chapter, but that&amp;#x2019;s imprecise. Technically, data structure refers to some kind of collection, like a linked list or b-tree, or whatever, but I also use the term to refer to scalar (singular, noncollection) values like symbols and numbers. I considered using the term data objects but didn&amp;#x2019;t want to imply object-oriented programming, or using just data but didn&amp;#x2019;t want to confuse that with data as a concept. So, data structure it is, and if you find this offensive, I will give you a thousand apologies, thoughtfully organized in a Van Emde Boas tree.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x6570;&amp;#x636E;&lt;/strong&gt;&lt;br&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x91CC;&amp;#x6211;&amp;#x7ECF;&amp;#x5E38;&amp;#x63D0;&amp;#x5230;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E0D;&amp;#x592A;&amp;#x7CBE;&amp;#x786E;&amp;#x3002;&amp;#x6280;&amp;#x672F;&amp;#x4E0A;&amp;#x8BB2;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x6307;&amp;#x67D0;&amp;#x79CD;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x4F46;&amp;#x6211;&amp;#x4E5F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BCD;&amp;#x4EE3;&amp;#x8868;&amp;#x7EAF;&amp;#x91CF;(&amp;#x5355;&amp;#x4E2A;&amp;#x7684;&amp;#xFF0C;&amp;#x975E;&amp;#x96C6;&amp;#x5408;)&amp;#x503C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x6570;&amp;#x5B57;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x6BD4;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x5BF9;&amp;#x8C61;&amp;#x6216;&amp;#x6570;&amp;#x636E;&amp;#x66F4;&amp;#x5408;&amp;#x9002;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x4E0D;&amp;#x59A5;&amp;#xFF0C;&amp;#x6DF1;&amp;#x8868;&amp;#x6B49;&amp;#x610F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These Things Evaluate to Themselves&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot;&gt;&lt;a href=&quot;#&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot;&gt;&lt;/a&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Whenever Clojure evaluates data structures that aren&amp;#x2019;t a list or symbol, the result is the data structure itself:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x65E0;&amp;#x8BBA;&amp;#x4F55;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;list&amp;#x6216;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;:huzzah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; :huzzah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Empty lists evaluate to themselves, too:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A7A;list&amp;#x4E5F;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;symbols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7B26;&amp;#x53F7;&quot;&gt;&lt;a href=&quot;#&amp;#x7B26;&amp;#x53F7;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B26;&amp;#x53F7;&quot;&gt;&lt;/a&gt;&amp;#x7B26;&amp;#x53F7;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One of your fundamental tasks as a programmer is creating abstractions by associating names with values. You learned how to do this in Chapter 3 by using &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, and function definitions. Clojure uses &lt;em&gt;symbols&lt;/em&gt; to name functions, macros, data, and anything else you can use, and evaluates them by &lt;em&gt;resolving&lt;/em&gt; them. To resolve a symbol, Clojure traverses any bindings you&amp;#x2019;ve created and then looks up the symbol&amp;#x2019;s entry in a namespace mapping, which you learned about in Chapter 6. Ultimately, a symbol resolves to either a &lt;em&gt;value&lt;/em&gt; or a &lt;em&gt;special form&lt;/em&gt;&amp;#x2014;a built-in Clojure operator that provides fundamental behavior.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C31;&amp;#x662F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x540D;&amp;#x5B57;&amp;#x548C;&amp;#x503C;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x7B2C;3&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x7684;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;,&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x90FD;&amp;#x662F;&amp;#x5E72;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7684;&amp;#x3002;Clojure&amp;#x7528;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&amp;#x547D;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x548C;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&lt;em&gt;&amp;#x89E3;&amp;#x6790;&lt;/em&gt;&amp;#x6765;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x8981;&amp;#x89E3;&amp;#x6790;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;Clojure&amp;#x904D;&amp;#x5386;&amp;#x6240;&amp;#x6709;&amp;#x4F60;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x6761;&amp;#x76EE;&amp;#xFF0C;&amp;#x7B2C;6&amp;#x7AE0;&amp;#x8BB2;&amp;#x89E3;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&amp;#x6700;&amp;#x7EC8;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#x6216;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt;&amp;#x2013;&amp;#x63D0;&amp;#x4F9B;&amp;#x57FA;&amp;#x7840;&amp;#x884C;&amp;#x4E3A;&amp;#x7684;Clojure&amp;#x5167;&amp;#x5EFA;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In general, Clojure resolves a symbol by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Looking up whether the symbol names a special form. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Looking up whether the symbol corresponds to a local binding. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Trying to find a namespace mapping introduced by &lt;code&gt;def&lt;/code&gt;. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Throwing an exception&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;Clojure&amp;#x8FD9;&amp;#x6837;&amp;#x89E3;&amp;#x6790;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;def&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6620;&amp;#x5C04;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s first look at a symbol resolving to a special form. Special forms, like &lt;code&gt;if&lt;/code&gt;, are always used in the context of an operation; they&amp;#x2019;re always the first element in a list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;if&lt;/code&gt;,&amp;#x603B;&amp;#x662F;&amp;#x4F5C;&amp;#x4E3A;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x603B;&amp;#x662F;list&amp;#x91CC;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; :a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, &lt;code&gt;if&lt;/code&gt; is a special form and it&amp;#x2019;s being used as an operator. If you try to refer to a special form outside of this context, you&amp;#x2019;ll get an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;if&lt;/code&gt;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x5F15;&amp;#x7528;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; CompilerException java.lang.RuntimeException: Unable to resolve symbol: if in this context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, let&amp;#x2019;s evaluate some &lt;em&gt;local bindings&lt;/em&gt;. A local binding is any association between a symbol and a value that wasn&amp;#x2019;t created by &lt;code&gt;def&lt;/code&gt;. In the next example, the symbol &lt;code&gt;x&lt;/code&gt; is bound to 5 using &lt;code&gt;let&lt;/code&gt;. When the evaluator resolves &lt;code&gt;x&lt;/code&gt;, it resolves the symbol &lt;code&gt;x&lt;/code&gt; to the value 5:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&lt;em&gt;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&lt;/em&gt;&amp;#x3002;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x662F;&amp;#x4EFB;&amp;#x4F55;&amp;#x975E;&lt;code&gt;def&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;x&lt;/code&gt;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;let&lt;/code&gt;&amp;#x4E0E;5&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x89E3;&amp;#x6790;&lt;code&gt;x&lt;/code&gt;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x503C;5:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now if we create a namespace mapping of &lt;code&gt;x&lt;/code&gt; to 15, Clojure resolves it accordingly:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;x&lt;/code&gt;&amp;#x4E0E;15&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x6620;&amp;#x5C04;,Clojure&amp;#x4F1A;&amp;#x76F8;&amp;#x5E94;&amp;#x5730;&amp;#x89E3;&amp;#x6790;&amp;#x5B83;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the next example, &lt;code&gt;x&lt;/code&gt; is mapped to 15, but we introduce a local binding of &lt;code&gt;x&lt;/code&gt; to 5 using &lt;code&gt;let&lt;/code&gt;. So &lt;code&gt;x&lt;/code&gt; is resolved to 5:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;x&lt;/code&gt;&amp;#x6620;&amp;#x5C04;&amp;#x6210;15,&amp;#x4F46;&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x91CC;&lt;code&gt;x&lt;/code&gt;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E3A;5,&amp;#x6240;&amp;#x4EE5;&lt;code&gt;x&lt;/code&gt;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;5:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can nest bindings, in which case the most recently defined binding takes precedence:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x7ED1;&amp;#x5B9A;,&amp;#x6700;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x6700;&amp;#x9AD8;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Functions also create local bindings, binding parameters to arguments within the function body. In this next example, &lt;code&gt;exclaim&lt;/code&gt; is mapped to a function. Within the function body, the parameter name &lt;code&gt;exclamation&lt;/code&gt; is bound to the argument passed to the function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E5F;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;,&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x91CC;,&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x540D;&amp;#x4E0E;&amp;#x53C2;&amp;#x6570;&amp;#x503C;&amp;#x7ED1;&amp;#x5B9A;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;exclaim&lt;/code&gt;&amp;#x662F;&amp;#x51FD;&amp;#x6570;.&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x91CC;,&amp;#x53C2;&amp;#x6570;&amp;#x540D;&lt;code&gt;exclamation&lt;/code&gt;&amp;#x4E0E;&amp;#x4F20;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x503C;&amp;#x7ED1;&amp;#x5B9A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; exclaim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [exclamation]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; exclamation &lt;span class=&quot;string&quot;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;exclaim&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Hadoken&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Hadoken!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, in this last example, &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;inc&lt;/code&gt; both refer to functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;inc&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x5F15;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; inc [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (2 3 4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When Clojure evaluates this code, it first evaluates the &lt;code&gt;map&lt;/code&gt; symbol, looking up the corresponding function and applying it to its arguments. The symbol &lt;code&gt;map&lt;/code&gt; refers to the map function, but it shouldn&amp;#x2019;t be confused with the function itself. The &lt;code&gt;map&lt;/code&gt; symbol is still a data structure, the same way that the string &lt;code&gt;&amp;quot;fried salad&amp;quot;&lt;/code&gt; is a data structure, but it&amp;#x2019;s not the same as the function itself:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x89E3;&amp;#x6790;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x65F6;,&amp;#x5148;&amp;#x6C42;&amp;#x503C;&lt;code&gt;map&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;,&amp;#x67E5;&amp;#x627E;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x7528;&amp;#x5176;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;.&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x662F;map&amp;#x51FD;&amp;#x6570;,&amp;#x4F46;&amp;#x4E0D;&amp;#x8981;&amp;#x628A;&amp;#x5B83;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x81EA;&amp;#x8EAB;&amp;#x6DF7;&amp;#x6DC6;&amp;#x3002;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;&amp;#x4ECD;&amp;#x7136;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;,&amp;#x5C31;&amp;#x50CF;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;fried salad&amp;quot;&lt;/code&gt;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x6837;,&amp;#x7B26;&amp;#x53F7;&amp;#x4E0D;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x672C;&amp;#x8EAB;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;type&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; clojure.lang.Symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In these examples, you&amp;#x2019;re interacting with the plus symbol, &lt;code&gt;+&lt;/code&gt;, as a data structure. You&amp;#x2019;re not interacting with the addition function that it refers to. If you evaluate it, Clojure looks up the function and applies it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&amp;#x4F60;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x4EA4;&amp;#x4E92;.&amp;#x4E0D;&amp;#x662F;&amp;#x4E0E;&amp;#x5B83;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#x4EA4;&amp;#x4E92;.&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;,Clojure&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;On their own, symbols and their referents don&amp;#x2019;t actually do anything; Clojure performs work by evaluating lists.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x81EA;&amp;#x8EAB;&amp;#x6765;&amp;#x8BF4;,&amp;#x4ED6;&amp;#x4EEC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E5F;&amp;#x4E0D;&amp;#x505A;;Clojure&amp;#x9760;&amp;#x6C42;&amp;#x503C;list&amp;#x5E72;&amp;#x6D3B;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;a href=&quot;#&amp;#x5217;&amp;#x8868;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;/a&gt;&amp;#x5217;&amp;#x8868;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;If the data structure is an empty list, it evaluates to an empty list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x7A7A;list, &amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x7A7A;list:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;()&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Otherwise, it is evaluated as a &lt;em&gt;call&lt;/em&gt; to the first element in the list. The way the call is performed depends on the nature of that first element.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5426;&amp;#x5219;,&amp;#x5C31;&amp;#x662F;&amp;#x5BF9;&amp;#x5217;&amp;#x8868;&amp;#x91CC;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&lt;em&gt;&amp;#x8C03;&amp;#x7528;&lt;/em&gt;&amp;#x7684;&amp;#x6C42;&amp;#x503C;.&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x7531;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x6027;&amp;#x8D28;&amp;#x51B3;&amp;#x5B9A;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Function Calls&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;When performing a function call, each operand is fully evaluated and then passed to the function as an argument. In this example, the &lt;code&gt;+&lt;/code&gt; symbol resolves to a function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x884C;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x5B8C;&amp;#x5168;&amp;#x6C42;&amp;#x503C;,&amp;#x7136;&amp;#x540E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;,&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure sees that the list&amp;#x2019;s head is a function, so it proceeds to evaluate the rest of the elements in the list. The operands 1 and 2 both evaluate to themselves, and after they&amp;#x2019;re evaluated, Clojure applies the addition function to them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x770B;&amp;#x5230;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;,&amp;#x6240;&amp;#x4EE5;&amp;#x5B83;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;list&amp;#x91CC;&amp;#x5269;&amp;#x4F59;&amp;#x7684;&amp;#x5143;&amp;#x7D20;.&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;1&amp;#x548C;2&amp;#x90FD;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;,&amp;#x4E4B;&amp;#x540E;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also nest function calls:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E5F;&amp;#x53EF;&amp;#x80FD;&amp;#x5D4C;&amp;#x5957;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Even though the second argument is a list, Clojure follows the same process here: look up the &lt;code&gt;+&lt;/code&gt; symbol and evaluate each argument. To evaluate the list &lt;code&gt;(+ 2 3)&lt;/code&gt;, Clojure resolves the first member to the addition function and proceeds to evaluate each of the arguments. In this way, evaluation is recursive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C3D;&amp;#x7BA1;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x52A0;&amp;#x662F;&amp;#x4E2A;list,Clojure&amp;#x4ECD;&amp;#x91C7;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;: &amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x5E76;&amp;#x6C42;&amp;#x503C;&amp;#x5176;&amp;#x6BCF;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;.&amp;#x6C42;&amp;#x503C;list&lt;code&gt;(+ 2 3)&lt;/code&gt;&amp;#x65F6;,Clojure&amp;#x628A;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;.&amp;#x6C42;&amp;#x503C;&amp;#x4EE5;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x9012;&amp;#x5F52;&amp;#x8FDB;&amp;#x884C;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Special Forms&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;You can also call &lt;em&gt;special forms&lt;/em&gt;. In general, special forms are special because they implement core behavior that can&amp;#x2019;t be implemented with functions. For example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt; &amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;.&amp;#x603B;&amp;#x7684;&amp;#x6765;&amp;#x8BF4;,&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7279;&amp;#x6B8A;&amp;#x4E4B;&amp;#x5904;&amp;#x5728;&amp;#x4E8E;: &amp;#x5B83;&amp;#x4EEC;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x529F;&amp;#x80FD;.&amp;#x6BD4;&amp;#x5982;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, we ask Clojure to evaluate a list beginning with the symbol &lt;code&gt;if&lt;/code&gt;. That &lt;code&gt;if&lt;/code&gt; symbol gets resolved to the &lt;code&gt;if&lt;/code&gt; special form, and Clojure calls that special form with the operands &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;,Clojure&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EE5;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;if&lt;/code&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;list&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&lt;code&gt;if&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&lt;code&gt;if&lt;/code&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;,Clojure&amp;#x7528;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Special forms don&amp;#x2019;t follow the same evaluation rules as normal functions. For example, when you call a function, each operand gets evaluated. However, with &lt;code&gt;if&lt;/code&gt; you don&amp;#x2019;t want each operand to be evaluated. You only want certain operands to be evaluated, depending on whether the condition is true or false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x9075;&amp;#x4ECE;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#x65F6;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&amp;#x5BF9;&amp;#x4E8E;&lt;code&gt;if&lt;/code&gt;,&amp;#x4E0D;&amp;#x5E0C;&amp;#x671B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x53EA;&amp;#x5E0C;&amp;#x671B;&amp;#x6839;&amp;#x636E;&amp;#x6761;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;true&amp;#x6216;false,&amp;#x67D0;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another important special form is &lt;code&gt;quote&lt;/code&gt;. You&amp;#x2019;ve seen lists represented like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x662F;&lt;code&gt;&amp;#x5F15;&amp;#x7528;&lt;/code&gt;(quote)&amp;#x3002;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x89C1;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E48;&amp;#x8868;&amp;#x793A;&amp;#x7684;list:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(a b c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you saw in &amp;#x201C;The Reader&amp;#x201D; on page 153, this invokes a reader macro so that we end up with this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x524D;&amp;#x9762;&amp;#x89C1;&amp;#x8FC7;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x6700;&amp;#x7EC8;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; b c))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Normally, Clojure would try to resolve the &lt;code&gt;a&lt;/code&gt; symbol and then call it because it&amp;#x2019;s the first element in a list. The &lt;code&gt;quote&lt;/code&gt; special form tells the evaluator, &amp;#x201C;Instead of evaluating my next data structure like normal, just return the data structure itself.&amp;#x201D; In this case, you end up with a list consisting of the symbols &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;a&lt;/code&gt;&amp;#x662F;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;Clojure&amp;#x4F1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x89E3;&amp;#x6790;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;code&gt;&amp;#x5F15;&amp;#x7528;&lt;/code&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x662F;&amp;#x544A;&amp;#x8BC9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8981;&amp;#x6C42;&amp;#x503C;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;a&lt;/code&gt;,&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;c&lt;/code&gt;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;list&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, and &lt;code&gt;recur&lt;/code&gt; are all special forms as well. You can see why: they don&amp;#x2019;t get evaluated the same way as functions. For example, normally when the evaluator evaluates a symbol, it resolves that symbol, but &lt;code&gt;def&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; obviously don&amp;#x2019;t behave that way. Instead of resolving symbols, they actually create associations between symbols and values. So the evaluator receives a combination of data structures from the reader, and it goes about resolving the symbols and calling the functions or special forms at the beginning of each list. But there&amp;#x2019;s more! You can also place a &lt;em&gt;macro&lt;/em&gt; at the beginning of a list instead of a function or a special form, and this can give you tremendous power over how the rest of the data structures are evaluated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt; &amp;#x548C; &lt;code&gt;recur&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0D;&amp;#x540C;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x89E3;&amp;#x6790;&amp;#x90A3;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4F46;&lt;code&gt;def&lt;/code&gt;&amp;#x548C;&lt;code&gt;let&lt;/code&gt;&amp;#x660E;&amp;#x663E;&amp;#x4E0D;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4ECE;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x89E3;&amp;#x6790;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5B8C;&amp;#xFF01;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x9664;&amp;#x4E86;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&lt;em&gt;&amp;#x5B8F;&lt;/em&gt;&amp;#xFF0C;&amp;#x5B8F;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x6781;&amp;#x5176;&amp;#x5F3A;&amp;#x5927;&amp;#x7684;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5176;&amp;#x540E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x4F55;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Hmm . . . Clojure evaluates data structures&amp;#x2014;the same data structures that we write and manipulate in our Clojure programs. Wouldn&amp;#x2019;t it be awesome if we could use Clojure to manipulate the data structures that Clojure evaluates? Yes, yes it would! And guess what? You can do this with macros! Did your head just explode? Mine did!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6211;&amp;#x4EEC;&amp;#x5199;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x80FD;&amp;#x591F;&amp;#x4FEE;&amp;#x6539;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x5F88;&amp;#x68D2;&amp;#x5462;&amp;#xFF1F;&amp;#x5B8F;&amp;#x5C31;&amp;#x662F;&amp;#x5E72;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7684;&amp;#xFF01;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x64CD;&amp;#x7EB5;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get an idea of what macros do, let&amp;#x2019;s look at some code. Say we want to write a function that makes Clojure read infix notation (such as &lt;code&gt;1 + 1&lt;/code&gt;) instead of its normal notation with the operator first (&lt;code&gt;+ 1 1&lt;/code&gt;). This example is not a macro. Rather, it merely shows that you can write code using infix notation and then use Clojure to transform it so it will actually execute. First, create a list that represents infix addition:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x611F;&amp;#x53D7;&amp;#x4E00;&amp;#x4E0B;&amp;#x5B8F;&amp;#x4F7F;&amp;#x5E72;&amp;#x5565;&amp;#x7684;&amp;#xFF0C;&amp;#x6765;&amp;#x770B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x8BFB;&amp;#x53D6;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;1 + 1&lt;/code&gt;),&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x6B63;&amp;#x5E38;&amp;#x7684;&amp;#x524D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;(&lt;code&gt;+ 1 1&lt;/code&gt;)&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E0D;&amp;#x662F;&amp;#x5B8F;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x8BA9;&amp;#x4F60;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x7F6E;&amp;#x52A0;&amp;#x6CD5;list&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure will throw an exception if you try to make it evaluate this list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ClassCastException java.lang.Long cannot be cast to clojure.lang.IFn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, &lt;code&gt;read-string&lt;/code&gt; returns a list, and you can use Clojure to reorganize that list into something it &lt;code&gt;can&lt;/code&gt; successfully evaluate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&lt;code&gt;read-string&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;list,&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x7EC4;&amp;#x8FD9;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x4F7F;&amp;#x5B83;&lt;code&gt;&amp;#x80FD;&amp;#x591F;&lt;/code&gt;&amp;#x6210;&amp;#x529F;&amp;#x6C42;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [infix (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infix)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you eval this, it returns 2, just as you&amp;#x2019;d expect:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;2&amp;#xFF0C;&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x613F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [infix (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infix))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is cool, but it&amp;#x2019;s also quite clunky. That&amp;#x2019;s where macros come in. Macros give you a convenient way to manipulate lists before Clojure evaluates them. Macros are a lot like functions: they take arguments and return a value, just like a function would. They work on Clojure data structures, just like functions do. What makes them unique and powerful is the way they fit in to the evaluation process. They are executed in between the reader and the evaluator&amp;#x2014;so they can manipulate the data structures that the reader spits out and transform with those data structures before passing them to the evaluator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5F88;&amp;#x9177;&amp;#xFF0C;&amp;#x4F46;&amp;#x5F88;&amp;#x9EBB;&amp;#x70E6;&amp;#x3002;&amp;#x5B8F;&amp;#x5C31;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x3002;Clojure&amp;#x6C42;&amp;#x503C;list&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x7528;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x65B9;&amp;#x4FBF;&amp;#x5730;&amp;#x64CD;&amp;#x7EB5;&amp;#x5B83;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&amp;#x63A5;&amp;#x53D7;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x3002;&amp;#x5B8F;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x8D77;&amp;#x4F5C;&amp;#x7528;&amp;#x3002;&amp;#x5B8F;&amp;#x7684;&amp;#x72EC;&amp;#x7279;&amp;#x548C;&amp;#x5F3A;&amp;#x5927;&amp;#x4E4B;&amp;#x5904;&amp;#x5728;&amp;#x4E8E;&amp;#x5B83;&amp;#x5982;&amp;#x4F55;&amp;#x878D;&amp;#x5165;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5B8F;&amp;#x6267;&amp;#x884C;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E4B;&amp;#x95F4;&amp;#x2013;&amp;#x6240;&amp;#x4EE5;&amp;#x5B8F;&amp;#x80FD;&amp;#x64CD;&amp;#x7EB5;&amp;#x5E76;&amp;#x8F6C;&amp;#x6362;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x4F20;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s look at an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defmacro ignore-last-operand&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [function-call]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (butlast function-call))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; (ignore-last-operand (+ 1 2 10))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; This will not print anything&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(ignore-last-operand (+ 1 2 (println &amp;quot;look at me!!!&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;At &amp;#x278A; the macro &lt;code&gt;ignore-last-operand&lt;/code&gt; receives the list &lt;code&gt;(+ 1 2 10)&lt;/code&gt; as its argument, not the value 13. This is very different from a function call, because function calls always evaluate all of the arguments passed in, so there is no possible way for a function to reach into one of its operands and alter or ignore it. By contrast, when you call a macro, the operands are not evaluated. In particular, symbols are not resolved; they are passed as symbols. Lists are not evaluated either; that is, the first element in the list is not called as a function, special form, or macro. Rather, the unevaluated list data structure is passed in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728; &amp;#x278A; &amp;#x5904;&amp;#xFF0C;&amp;#x5B8F;&lt;code&gt;ignore-last-operand&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E86;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x662F;list&lt;code&gt;(+ 1 2 10)&lt;/code&gt;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;13&amp;#x3002;&amp;#x8FD9;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x5F88;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;&amp;#x603B;&amp;#x662F;&amp;#x6C42;&amp;#x503C;&amp;#x6240;&amp;#x6709;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5FFD;&amp;#x7565;&amp;#x6216;&amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x4E0E;&amp;#x4E4B;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4E0D;&amp;#x5BF9;&amp;#x53C2;&amp;#x6570;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7279;&amp;#x522B;&amp;#x662F;&amp;#x5B8F;&amp;#x4E0D;&amp;#x5BF9;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x7B26;&amp;#x53F7;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x8FD8;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5B8F;&amp;#x4E5F;&amp;#x4E0D;&amp;#x5BF9;list&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5373;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4F5C;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x6216;&amp;#x5B8F;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x7684;&amp;#x8FD8;&amp;#x662F;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another difference is that the data structure returned by a function is not evaluated, but the data structure returned by a macro &lt;code&gt;is&lt;/code&gt;. The process of determining the return value of a macro is called &lt;code&gt;macro expansion&lt;/code&gt;, and you can use the function &lt;code&gt;macroexpand&lt;/code&gt; to see what data structure a macro returns before that data structure is evaluated. Note that you have to quote the form that you pass to &lt;code&gt;macroexpand&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5DEE;&amp;#x522B;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E0D;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&lt;code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&lt;/code&gt;&amp;#x3002;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53EB;&lt;code&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&lt;/code&gt;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x770B;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x5FC5;&amp;#x987B;&amp;#x7528;quote&amp;#x5305;&amp;#x4F4F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;ignore-last-operand&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;ignore-last-operand&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;look at me!!!&amp;quot;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, both expansions result in the list &lt;code&gt;(+ 1 2)&lt;/code&gt;. When this list is evaluated, as in the previous example, the result is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;list&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x5F53;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just for fun, here&amp;#x2019;s a macro for doing simple infix notation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x597D;&amp;#x73A9;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [infixed]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infixed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infixed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infixed)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The best way to think about this whole process is to picture a phase between reading and evaluation: the &lt;code&gt;macro expansion&lt;/code&gt; phase. Figure 7-6 shows how you can visualize the entire evaluation process for &lt;code&gt;(infix (1 + 2))&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x601D;&amp;#x8003;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x6700;&amp;#x597D;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;&amp;#x56FE;&amp;#x4E0A;&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x9636;&amp;#x6BB5;&amp;#x4E2D;&amp;#x95F4;&amp;#x753B;&amp;#x51FA;&lt;code&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&lt;/code&gt;&amp;#x9636;&amp;#x6BB5;&amp;#x3002;&amp;#x56FE;7-6&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&lt;code&gt;(infix (1 + 2))&lt;/code&gt;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-6&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/whole-shebang.png&quot; alt=&quot;7-6&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And that&amp;#x2019;s how macros fit into the evaluation process. But why would you want to do this? The reason is that macros allow you to transform an arbitrary data structure like &lt;code&gt;(1 + 2)&lt;/code&gt; into one that can Clojure can evaluate, &lt;code&gt;(+ 1 2)&lt;/code&gt;. That means &lt;code&gt;you can use Clojure to extend itself&lt;/code&gt; so you can write programs however you please. In other words, macros enable &lt;code&gt;syntactic abstraction&lt;/code&gt;. Syntactic abstraction may sound a bit abstract (ha ha!), so let&amp;#x2019;s explore that a little.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x5B8F;&amp;#x878D;&amp;#x5165;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8981;&amp;#x8FD9;&amp;#x4E48;&amp;#x5E72;&amp;#x5462;&amp;#xFF1F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x4EFB;&amp;#x610F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;(1 + 2)&lt;/code&gt;,&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x80FD;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x53EF;&amp;#x4EE5;&lt;code&gt;&amp;#x7528;Clojure&amp;#x8BED;&amp;#x8A00;&amp;#x6269;&amp;#x5C55;&amp;#x81EA;&amp;#x8EAB;&lt;/code&gt;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x4F60;&amp;#x9AD8;&amp;#x5174;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7231;&amp;#x600E;&amp;#x4E48;&amp;#x5199;&amp;#x600E;&amp;#x4E48;&amp;#x5199;&amp;#x3002;&amp;#x6362;&amp;#x53E5;&amp;#x8BDD;&amp;#x8BF4;&amp;#xFF0C;Clojure&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x8FDB;&amp;#x884C;&lt;code&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&lt;/code&gt;&amp;#x3002;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x542C;&amp;#x8D77;&amp;#x6765;&amp;#x6709;&amp;#x70B9;&amp;#x62BD;&amp;#x8C61;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x63A2;&amp;#x7D22;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntactic Abstraction and the -&amp;gt; Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E;-gt-&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E;-gt-&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E; -&amp;gt; &amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E; -&amp;gt; &amp;#x5B8F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Often, Clojure code consists of a bunch of nested function calls. For example, I use the following function in one of my projects:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x4EE3;&amp;#x7801;&amp;#x7ECF;&amp;#x5E38;&amp;#x7531;&amp;#x5927;&amp;#x91CF;&amp;#x5D4C;&amp;#x5957;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x6784;&amp;#x6210;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x5728;&amp;#x6211;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; read-resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Read a resource into a string&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;slurp&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;clojure.java.io/resource&lt;/span&gt; path))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;To understand the function body, you have to find the innermost form, in this case &lt;code&gt;(clojure.java.io/resource path)&lt;/code&gt;, and then work your way outward from right to left to see how the result of each function gets passed to another function. This right-to-left flow is opposite of what non-Lisp programmers are used to. As you get used to writing in Clojure, this kind of code gets easier and easier to understand. But if you want to translate Clojure code so you can read it in a more familiar, left-to-right, top-to-bottom manner, you can use the built-in &lt;code&gt;-&amp;gt;&lt;/code&gt; macro, which is also known as the &lt;code&gt;threading&lt;/code&gt; or &lt;code&gt;stabby&lt;/code&gt; macro. It lets you rewrite the preceding function like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8981;&amp;#x7406;&amp;#x89E3;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x627E;&amp;#x5230;&amp;#x6700;&amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;(clojure.java.io/resource path)&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x4ECE;&amp;#x53F3;&amp;#x81F3;&amp;#x5DE6;&amp;#x5730;&amp;#x5F80;&amp;#x5916;&amp;#x5C42;&amp;#x8D70;&amp;#xFF0C;&amp;#x67E5;&amp;#x770B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x4F20;&amp;#x7ED9;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x4ECE;&amp;#x53F3;&amp;#x5F80;&amp;#x5DE6;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0E;&amp;#x975E;Lisp&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x76F8;&amp;#x53CD;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x4E86;Clojure&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4F1A;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x8F6C;&amp;#x6362;Clojure&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x7528;&amp;#x66F4;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#xFF0C;&amp;#x4ECE;&amp;#x5DE6;&amp;#x5230;&amp;#x53F3;&amp;#xFF0C;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x9605;&amp;#x8BFB;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5167;&amp;#x5EFA;&amp;#x7684;&lt;code&gt;-&amp;gt;&lt;/code&gt;&amp;#x5B8F;&amp;#x505A;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E5F;&amp;#x53EB;&lt;code&gt;&amp;#x7A7F;&amp;#x7EBF;&lt;/code&gt;&amp;#x6216;&lt;code&gt;&amp;#x7A7F;&amp;#x4E32;&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; read-resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clojure.java.io/resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      slurp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      read-string))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can read this as a pipeline that goes from top to bottom instead of from inner parentheses to outer parentheses. First, &lt;code&gt;path&lt;/code&gt; gets passed to &lt;code&gt;io/resource&lt;/code&gt;, then the result gets passed to &lt;code&gt;slurp&lt;/code&gt;, and finally the result of that gets passed to &lt;code&gt;read-string&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x7BA1;&amp;#x9053;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x4ECE;&amp;#x5185;&amp;#x5230;&amp;#x5916;&amp;#x7684;&amp;#x62EC;&amp;#x53F7;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&lt;code&gt;path&lt;/code&gt;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;io/resource&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;slurp&lt;/code&gt;,&amp;#x6700;&amp;#x540E;&amp;#x53C8;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;read-string&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These two ways of defining &lt;code&gt;read-resource&lt;/code&gt; are entirely equivalent. However, the second one might be easier understand because we can approach it from top to bottom, a direction we&amp;#x2019;re used to. The &lt;code&gt;-&amp;gt;&lt;/code&gt; also lets us omit parentheses, which means there&amp;#x2019;s less visual noise to contend with. This is a &lt;code&gt;syntactic abstraction&lt;/code&gt; because it lets you write code in a syntax that&amp;#x2019;s different from Clojure&amp;#x2019;s built-in syntax but is preferable for human consumption. Better than lead into gold!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;read-resource&lt;/code&gt;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x4F46;&amp;#x7B2C;&amp;#x4E8C;&amp;#x79CD;&amp;#x53EF;&amp;#x80FD;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5411;&amp;#x3002;&lt;code&gt;-&amp;gt;&lt;/code&gt;&amp;#x8FD8;&amp;#x7701;&amp;#x53BB;&amp;#x4E86;&amp;#x62EC;&amp;#x53F7;&amp;#xFF0C;&amp;#x89C6;&amp;#x89C9;&amp;#x4E0A;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&lt;code&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&lt;/code&gt;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x591F;&amp;#x7528;&amp;#x4E0E;Clojure&amp;#x5185;&amp;#x7F6E;&amp;#x8BED;&amp;#x6CD5;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EBA;&amp;#x7C7B;&amp;#x66F4;&amp;#x559C;&amp;#x6B22;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x771F;&amp;#x5C4C;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned about Clojure&amp;#x2019;s evaluation process. First, the reader transforms text into Clojure data structures. Next, the macro expander transforms those data structures with macros, converting your custom syntax into syntactically valid data structures. Finally, those data structures get sent to the evaluator. The evaluator processes data structures based on their type: symbols are resolved to their referents; lists result in function, macro, or special form calls; and everything else evaluates to itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x4E86;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#xFF0C;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&amp;#x5B8F;&amp;#x8F6C;&amp;#x6362;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x628A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x8BED;&amp;#x6CD5;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x8BED;&amp;#x6CD5;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x57FA;&amp;#x4E8E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5904;&amp;#x7406;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&amp;#x7B26;&amp;#x53F7;&amp;#x88AB;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF1B;list&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x3001;&amp;#x5B8F;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#xFF1B;&amp;#x6240;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x578B;&amp;#x90FD;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The coolest thing about this process is that it allows you to use Clojure to expand its own syntax. This process is made easier because Clojure is homoiconic: its text represents data structures, and those data structures represent abstract syntax trees, allowing you to more easily reason about how to construct syntax-expanding macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x9177;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7528;Clojure&amp;#x6269;&amp;#x5C55;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;Clojure&amp;#x662F;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x4E86;&amp;#xFF1A;&amp;#x4EE3;&amp;#x7801;&amp;#x4EE3;&amp;#x8868;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4EE3;&amp;#x8868;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x63A8;&amp;#x65AD;&amp;#x5982;&amp;#x4F55;&amp;#x6784;&amp;#x5EFA;&amp;#x8BED;&amp;#x6CD5;&amp;#x6269;&amp;#x5C55;&amp;#x5B8F;&amp;#x53D8;&amp;#x5F97;&amp;#x66F4;&amp;#x52A0;&amp;#x5BB9;&amp;#x6613;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With all these new concepts in your brainacles, you&amp;#x2019;re now ready to blow stuff up on purpose, just like I promised. The next chapter will teach you everything you need to know about writing macros. Hold on to your socks or they&amp;#x2019;re liable to get knocked off!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6982;&amp;#x5FF5;&amp;#x4E3A;&amp;#x4E0B;&amp;#x7AE0;&amp;#x505A;&amp;#x597D;&amp;#x4E86;&amp;#x51C6;&amp;#x5907;&amp;#x3002;&amp;#x4E0B;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BB2;&amp;#x8FF0;&amp;#x5199;&amp;#x5B8F;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x77E5;&amp;#x8BC6;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;These exercises focus on reading and evaluation. Chapter 8 has exercises for writing macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC3;&amp;#x4E60;&amp;#x4E13;&amp;#x6CE8;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7B2C;8&amp;#x7AE0;&amp;#x6709;&amp;#x5199;&amp;#x5B8F;&amp;#x7EC3;&amp;#x4E60;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;code&gt;list&lt;/code&gt; function, quoting, and &lt;code&gt;read-string&lt;/code&gt; to create a list that, when evaluated, prints your first name and your favorite sci-fi movie.&lt;/li&gt;
&lt;li&gt;Create an infix function that takes a list like &lt;code&gt;(1 + 3 * 4 - 5)&lt;/code&gt; and transforms it into the lists that Clojure needs in order to correctly evaluate the expression using operator precedence rules.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;quote&lt;/code&gt; &amp;#x548C; &lt;code&gt;read-string&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;list,&amp;#x8FD9;&amp;#x4E2A;list&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x4F60;&amp;#x7684;&amp;#x59D3;&amp;#x548C;&amp;#x4F60;&amp;#x6700;&amp;#x559C;&amp;#x6B22;&amp;#x7684;&amp;#x79D1;&amp;#x5E7B;&amp;#x7535;&amp;#x5F71;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7F16;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;infix&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x5F62;&amp;#x5982;&lt;code&gt;(1 + 3 * 4 - 5)&lt;/code&gt;&amp;#x7684;list&amp;#xFF0C;&amp;#x5E76;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x89C4;&amp;#x5219;&amp;#x6B63;&amp;#x786E;&amp;#x7684;Clojure&amp;#x9700;&amp;#x8981;&amp;#x7684;list&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>OpenClose原则的几类使用场景</title>
    <link href="http://yoursite.com/2016/03/27/openclose-principle-use-case/"/>
    <id>http://yoursite.com/2016/03/27/openclose-principle-use-case/</id>
    <published>2016-03-26T17:33:28.000Z</published>
    <updated>2016-03-27T14:17:07.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;a href=&quot;#OpenClose&amp;#x539F;&amp;#x5219;&quot; class=&quot;headerlink&quot; title=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;/a&gt;OpenClose&amp;#x539F;&amp;#x5219;&lt;/h2&gt;&lt;p&gt;&amp;#x524D;&amp;#x4E00;&amp;#x9635;&amp;#x770B;&amp;#x5230;&amp;#x9648;&amp;#x5929;&amp;#x8001;&amp;#x5E08;&amp;#x7684;&amp;#x4E00;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;,&amp;#x6807;&amp;#x9898;&amp;#x662F;&lt;a href=&quot;http://t.cn/Rq7j4fu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8C08;&amp;#x8C08;&amp;#x6211;&amp;#x5BF9;&amp;#x5DE5;&amp;#x7A0B;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x7684;&amp;#x770B;&amp;#x6CD5;&lt;/a&gt;.&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x7BC7;&amp;#x542B;&amp;#x91D1;&amp;#x91CF;&amp;#x5F02;&amp;#x5E38;&amp;#x9AD8;&amp;#x7684;&amp;#x6587;&amp;#x7AE0;,&amp;#x5F3A;&amp;#x70C8;&amp;#x5EFA;&amp;#x8BAE;&amp;#x4ED4;&amp;#x7EC6;&amp;#x9605;&amp;#x8BFB;.&amp;#x8FD9;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x8FD8;&amp;#x4F7F;&amp;#x6211;&amp;#x5F00;&amp;#x59CB;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5B66;&amp;#x4E60;Clojure,&amp;#x56E0;&amp;#x4E3A;Rich Hickey&amp;#x90A3;&amp;#x7BC7;&lt;a href=&quot;http://t.cn/R795YxA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simple Made Easy&lt;/a&gt;&amp;#x5B9E;&amp;#x5728;&amp;#x662F;&amp;#x592A;&amp;#x8BF1;&amp;#x4EBA;&amp;#x4E86;&amp;#x2026;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x8FD9;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x91CC;,&amp;#x6211;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;: &lt;code&gt;Open to extension, Close to modification&lt;/code&gt;. &amp;#x5373;&amp;#x4EE3;&amp;#x7801;&amp;#x5199;&amp;#x5B8C;&amp;#x4EE5;&amp;#x540E;,&amp;#x4FDD;&amp;#x6301;&amp;#x6269;&amp;#x5C55;&amp;#x80FD;&amp;#x529B;,&amp;#x4F46;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x518D;&amp;#x6539;&amp;#x52A8;&amp;#x4EE3;&amp;#x7801;.&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x76EE;&amp;#x524D;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x5C31;&amp;#x662F;:&amp;#x628A;&lt;code&gt;&amp;#x6761;&amp;#x4EF6;&amp;#x68C0;&amp;#x6D4B;&lt;/code&gt;&amp;#x548C;&lt;code&gt;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/code&gt;&amp;#x7EC4;&amp;#x7EC7;&amp;#x6210;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x6210;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;,&amp;#x6709;&amp;#x65B0;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x65F6;&amp;#x5019;,&amp;#x53EA;&amp;#x8981;&amp;#x589E;&amp;#x52A0;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5C31;&amp;#x884C;&amp;#x4E86;(Open to extension),&amp;#x800C;&amp;#x9009;&amp;#x62E9;&amp;#x5E76;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x904D;&amp;#x5386;&amp;#x51FD;&amp;#x6570;&amp;#x5B8C;&amp;#x6210;,&amp;#x4E0D;&amp;#x518D;&amp;#x9700;&amp;#x8981;&amp;#x4FEE;&amp;#x6539;(Close to modification).&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x7406;&amp;#x89E3;&amp;#x89D2;&amp;#x5EA6;&amp;#x5C31;&amp;#x662F;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;,&amp;#x628A;&amp;#x5305;&amp;#x542B;&amp;#x591A;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;,&amp;#x5C06;&amp;#x6765;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x589E;&amp;#x52A0;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x5355;&amp;#x903B;&amp;#x8F91;&amp;#x72EC;&amp;#x7ACB;&amp;#x4EFB;&amp;#x52A1;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;/h2&gt;&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x573A;&amp;#x666F;,&amp;#x6839;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x6587;&amp;#x5B57;,type&amp;#x4E3A;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;&amp;#x6570;&amp;#x5B57;,&amp;#x73B0;&amp;#x5728;&amp;#x8981;&amp;#x53D6;&amp;#x5F97;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x5B57;.&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#x5C31;&amp;#x662F;if&amp;#x52A0;&amp;#x4FEE;&amp;#x6539;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTypeName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; result = &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;spck_list&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;detail&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;search&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;activity&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;,&amp;#x5176;&amp;#x5B9E;&amp;#x4EE5;&amp;#x524D;&amp;#x786E;&amp;#x5B9E;&amp;#x53EA;&amp;#x6709;3&amp;#x79CD;,&amp;#x73B0;&amp;#x5728;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;4&amp;#x79CD;,&amp;#x6CA1;&amp;#x51C6;&amp;#x4EE5;&amp;#x540E;&amp;#x8FD8;&amp;#x4F1A;&amp;#x589E;&amp;#x52A0;,PM&amp;#x7684;idea,&amp;#x4F60;&amp;#x61C2;&amp;#x7684;.&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x91C7;&amp;#x7528;OpenClose&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTypeName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; coll = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;spck_list&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;detail&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;search&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;activity&amp;apos;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; found = _.find(coll, item =&amp;gt; item[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] === type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; found ? found[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x770B;&amp;#x4E0D;&amp;#x51FA;&amp;#x660E;&amp;#x663E;&amp;#x4F18;&amp;#x52BF;,&amp;#x4F46;&amp;#x9009;&amp;#x62E9;&amp;#x903B;&amp;#x8F91;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5F88;&amp;#x591A;,&amp;#x6267;&amp;#x884C;&amp;#x903B;&amp;#x8F91;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5F88;&amp;#x957F;,&amp;#x5F88;&amp;#x4E71;,&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x5C31;&amp;#x4F1A;&amp;#x66F4;&amp;#x660E;&amp;#x663E;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&lt;/h2&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x6B21;&amp;#x9700;&amp;#x8981;&amp;#x683C;&amp;#x5F0F;&amp;#x5316;&amp;#x4ECE;DB&amp;#x53D6;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;,&amp;#x6B63;&amp;#x597D;&amp;#x8FD8;&amp;#x662F;&amp;#x4E0A;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;,&amp;#x7531;&amp;#x4E8E;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E86;&amp;#x4E0D;&amp;#x540C;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;,&amp;#x6240;&amp;#x4EE5;&amp;#x8981;&amp;#x6839;&amp;#x636E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5BF9;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x5316;.&amp;#x8FD9;&amp;#x6B21;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;&amp;#x91C7;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;formatActWithDetail&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//act.type  0:&amp;#x7CBE;&amp;#x54C1;&amp;#x5408;&amp;#x96C6; 1:&amp;#x5355;&amp;#x54C1;&amp;#x63A8;&amp;#x8350; 2:&amp;#x68C0;&amp;#x7D22;&amp;#x89C4;&amp;#x5219; 9:&amp;#x5B98;&amp;#x7F51;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x62FC;&amp;#x88C5;0,2,9&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterWithAction = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format0(act) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format2(act, matched) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format9(act, matched) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; run(filterWithAction, act.type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;coll, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; option &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; coll) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.filter(args)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; option.action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format0&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x7CBE;&amp;#x54C1;&amp;#x5408;&amp;#x96C6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activityId: act.id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (act.width === &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;) result.pic = imgurl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x68C0;&amp;#x7D22;&amp;#x89C4;&amp;#x5219;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keyword: matched.keyword,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format9&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5B98;&amp;#x7F51;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activityId: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(matched.keyword),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x6709;&amp;#x76F8;&amp;#x4F3C;,&amp;#x4E5F;&amp;#x6709;&amp;#x5DEE;&amp;#x5F02;,&amp;#x6709;&amp;#x7684;&amp;#x8FD8;&amp;#x6709;&amp;#x81EA;&amp;#x5DF1;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5982;&amp;#x679C;&amp;#x5199;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x5373;&amp;#x96BE;&amp;#x770B;,&amp;#x53C8;&amp;#x75DB;&amp;#x82E6;,&amp;#x53C8;&amp;#x4E0D;&amp;#x597D;&amp;#x6269;&amp;#x5C55;,&amp;#x56E0;&amp;#x4E3A;&amp;#x6269;&amp;#x5C55;&amp;#x65F6;&amp;#x5019;&amp;#x53C8;&amp;#x662F;&amp;#x4E00;&amp;#x6B21;&amp;#x5373;&amp;#x96BE;&amp;#x770B;&amp;#x53C8;&amp;#x75DB;&amp;#x82E6;&amp;#x7684;&amp;#x7ECF;&amp;#x5386;.&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;OpenClose&amp;#x5199;&amp;#x6CD5;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6BD4;&amp;#x4E0A;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x660E;&amp;#x663E;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot;&gt;&lt;a href=&quot;#&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot;&gt;&lt;/a&gt;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&lt;/h2&gt;&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4E00;&amp;#x4E2A;api&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x5305;&amp;#x542B;&amp;#x597D;&amp;#x51E0;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x4F46;&amp;#x7531;&amp;#x4E8E;&amp;#x67D0;&amp;#x4E9B;&amp;#x539F;&amp;#x56E0;(&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;api&amp;#x66F4;&amp;#x5408;&amp;#x9002;),&amp;#x8FD9;&amp;#x4E2A;api&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5728;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x62C6;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;api,&amp;#x800C;&amp;#x662F;&amp;#x5E26;&amp;#x7740;&amp;#x591A;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;api&amp;#x8BF7;&amp;#x6C42;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;,&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x5199;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x76F4;&amp;#x63A5;&amp;#x7528;if&amp;#x8BED;&amp;#x53E5;&amp;#x5224;&amp;#x65AD;&amp;#x53C2;&amp;#x6570;&amp;#x5E76;&amp;#x6267;&amp;#x884C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x5FCD;&amp;#x65E0;&amp;#x53EF;&amp;#x5FCD;&amp;#x4E86;,&amp;#x56E0;&amp;#x4E3A;&amp;#x592A;&amp;#x591A;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x9700;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x8003;&amp;#x8651;.&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;OpenClose&amp;#x539F;&amp;#x5219;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&amp;#x53D1;&amp;#x6325;&amp;#x5A01;&amp;#x529B;.&amp;#x5373;&amp;#x76F4;&amp;#x63A5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;api&amp;#x6839;&amp;#x636E;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;,&amp;#x62C6;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;&amp;#x5185;&amp;#x90E8;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&amp;#x65E2;&amp;#x964D;&amp;#x4F4E;&amp;#x4E86;&amp;#x5F00;&amp;#x53D1;&amp;#x75DB;&amp;#x82E6;&amp;#x5EA6;,&amp;#x4E5F;&amp;#x4FDD;&amp;#x6301;&amp;#x4E86;&amp;#x6269;&amp;#x5C55;&amp;#x6027;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0A;&amp;#x8FF0;&amp;#x63CF;&amp;#x8FF0;&amp;#x7684;&amp;#x5177;&amp;#x4F53;&amp;#x4F8B;&amp;#x5B50;,&amp;#x591A;&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;,&amp;#x5404;&amp;#x4E2A;&amp;#x5206;&amp;#x4EAB;&amp;#x7684;&amp;#x76F8;&amp;#x4F3C;&amp;#x548C;&amp;#x5DEE;&amp;#x5F02;&amp;#x6709;&amp;#x5927;&amp;#x6709;&amp;#x5C0F;,&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5206;&amp;#x4EAB;&amp;#x7C7B;&amp;#x578B;&amp;#x4ECE;3&amp;#x79CD;&amp;#x589E;&amp;#x52A0;&amp;#x5230;&amp;#x4E86;5&amp;#x79CD;,&amp;#x76F4;&amp;#x63A5;&amp;#x770B;OpenClose&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#x5427;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//type: 1&amp;#x6D3B;&amp;#x52A8; 2&amp;#x4E13;&amp;#x8F91; 3&amp;#x5355;&amp;#x54C1; 4&amp;#x6211;&amp;#x7684;&amp;#x7CBE;&amp;#x9009;&amp;#x96C6; 5&amp;#x540E;&amp;#x53F0;&amp;#x5EFA;&amp;#x7684;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//channelId 0 &amp;#x5FAE;&amp;#x4FE1;&amp;#x597D;&amp;#x53CB; 1&amp;#x5FAE;&amp;#x4FE1;&amp;#x670B;&amp;#x53CB;&amp;#x5708; 2 &amp;#x5FAE;&amp;#x535A; 3 QQ&amp;#x597D;&amp;#x53CB; 4 QQ&amp;#x7A7A;&amp;#x95F4; 5 &amp;#x77ED;&amp;#x4FE1; 6 &amp;#x4E8C;&amp;#x7EF4;&amp;#x7801; 7&amp;#x590D;&amp;#x5236;&amp;#x94FE;&amp;#x63A5; 8&amp;#x5FAE;&amp;#x4FE1;&amp;#x5FEB;&amp;#x7167; 9&amp;#x670B;&amp;#x53CB;&amp;#x5708;&amp;#x5FEB;&amp;#x7167;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5355;&amp;#x54C1;&amp;#x6216;&amp;#x8005;&amp;#x6D3B;&amp;#x52A8;&amp;#x9700;&amp;#x8981;&amp;#x4F20;&amp;#x5165;&amp;#x5355;&amp;#x54C1;&amp;#x7684;url&amp;#x94FE;&amp;#x63A5;&amp;#x5730;&amp;#x5740;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; args = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    userId: req.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;uid&amp;apos;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    productId: req.body.pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: req.body.url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: req.body.type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    channelId: req.body.channel_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterWithAction = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;1&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-active&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;2&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-album&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;3&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-product&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-best&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;5&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-spck-list&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  run(filterWithAction, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;coll, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; option &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; coll) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.filter(args)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; option.action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,5&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x5185;&amp;#x5BB9;,&amp;#x6BCF;&amp;#x79CD;&amp;#x53C8;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x6E20;&amp;#x9053;,&amp;#x5176;&amp;#x4E2D;&amp;#x6709;&amp;#x7684;&amp;#x6E20;&amp;#x9053;&amp;#x9700;&amp;#x8981;&amp;#x8FD4;&amp;#x56DE;&amp;#x9644;&amp;#x52A0;&amp;#x7684;&amp;#x6570;&amp;#x636E;.&amp;#x6211;&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x62FC;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;args&lt;/code&gt;&amp;#x5BF9;&amp;#x8C61;.&amp;#x7136;&amp;#x540E;&amp;#x76F4;&amp;#x63A5;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;type&lt;/code&gt;&amp;#x53C2;&amp;#x6570;,&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;api&amp;#x62C6;&amp;#x5206;&amp;#x6210;5&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5355;&amp;#x4E00;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x5904;&amp;#x7406;&amp;#x6A21;&amp;#x5757;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x653E;&amp;#x5728;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;,&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5168;&amp;#x90E8;&amp;#x4F20;&amp;#x8FC7;&amp;#x53BB;,&amp;#x8FD9;&amp;#x5C42;api&amp;#x5C31;&amp;#x4E0D;&amp;#x518D;&amp;#x5E72;&amp;#x5176;&amp;#x4ED6;&amp;#x4E8B;&amp;#x60C5;&amp;#x4E86;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x6A21;&amp;#x5757;&lt;code&gt;action-active.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (args, res, req) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; productId = args.productId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; channelId = args.channelId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testArgs([productId, channelId]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; shareUrl = &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${global.appConfig.activityUrl}&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;${productId}&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; recordShare(args.userId, shareUrl, args.type, channelId, productId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; shareId = _.first(data).id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; apiUrl = global.appConfig.apiUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content : &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5546;&amp;#x54C1;&amp;#x5728;&amp;#x53C2;&amp;#x52A0;&amp;#x6D3B;&amp;#x52A8;&amp;#xFF0C;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x5F88;&amp;#x4E0D;&amp;#x9519;&amp;#xFF0C;&amp;#x5FEB;&amp;#x6765;&amp;#x770B;&amp;#x770B;&amp;#x5427;&amp;#xFF01;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${apiUrl}&lt;/span&gt;share/share?share_id=&lt;span class=&quot;subst&quot;&gt;${shareId}&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      status: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendError(res, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logError(err, req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x6BB5;&amp;#x5355;&amp;#x4E00;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#x7F16;&amp;#x7801;&amp;#x7684;&amp;#x540C;&amp;#x662F;&amp;#x8003;&amp;#x8651;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;.&amp;#x53EF;&amp;#x4EE5;&amp;#x60F3;&amp;#x8C61;&amp;#x4E00;&amp;#x4E0B;&amp;#x628A;&amp;#x6240;&amp;#x6709;5&amp;#x79CD;&amp;#x6DF7;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x800C;&amp;#x4E14;&amp;#x5C06;&amp;#x6765;&amp;#x6CA1;&amp;#x51C6;&amp;#x4F1A;&amp;#x589E;&amp;#x52A0;&amp;#x5206;&amp;#x4EAB;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;,&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x4F1A;&amp;#x5230;&amp;#x5904;&amp;#x5145;&amp;#x6EE1;&amp;#x4E86;if,&amp;#x800C;OpenClose&amp;#x4E00;&amp;#x65E6;&amp;#x642D;&amp;#x597D;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5C31;&amp;#x90FD;&amp;#x4EAB;&amp;#x53D7;&amp;#x5230;&amp;#x5355;&amp;#x4E00;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x6E05;&amp;#x6670;&amp;#x660E;&amp;#x4E86;,&amp;#x540C;&amp;#x65F6;&amp;#x73B0;&amp;#x5B58;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x4FEE;&amp;#x6539;,&amp;#x65B0;&amp;#x589E;&amp;#x65B0;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5F71;&amp;#x54CD;&amp;#x5176;&amp;#x4ED6;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot;&gt;&lt;a href=&quot;#&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot;&gt;&lt;/a&gt;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&lt;/h2&gt;&lt;p&gt;&amp;#x6C34;&amp;#x5E73;&amp;#x6709;&amp;#x9650;,&amp;#x5982;&amp;#x679C;&amp;#x60A8;&amp;#x53D1;&amp;#x73B0;&amp;#x4E86;&amp;#x5176;&amp;#x4ED6;&amp;#x597D;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6216;&amp;#x8005;&amp;#x6211;&amp;#x7406;&amp;#x89E3;&amp;#x7684;&amp;#x4E0D;&amp;#x6B63;&amp;#x786E;,&amp;#x4E0D;&amp;#x5168;&amp;#x9762;&amp;#x7684;&amp;#x5730;&amp;#x65B9;,&amp;#x8BF7;&amp;#x52A1;&amp;#x5FC5;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;,&amp;#x975E;&amp;#x5E38;&amp;#x611F;&amp;#x8C22;!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;a href=&quot;#OpenClose&amp;#x539F;&amp;#x5219;&quot; class=&quot;headerlink&quot; title=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;/a&gt;OpenClose&amp;#
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bluebird带给我的惊喜</title>
    <link href="http://yoursite.com/2016/03/13/bluebird-serendipity/"/>
    <id>http://yoursite.com/2016/03/13/bluebird-serendipity/</id>
    <published>2016-03-13T13:31:19.000Z</published>
    <updated>2016-03-13T13:31:19.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;a href=&quot;#&amp;#x80CC;&amp;#x666F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;/a&gt;&amp;#x80CC;&amp;#x666F;&lt;/h2&gt;&lt;p&gt;&amp;#x7528;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&amp;#x5F00;&amp;#x53D1;App&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;Api.&amp;#x6846;&amp;#x67B6;:&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express&lt;/a&gt;,Promise&amp;#x5E93;:&lt;a href=&quot;http://bluebirdjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluebird&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5C40;&amp;#x9650;&quot;&gt;&lt;a href=&quot;#&amp;#x5C40;&amp;#x9650;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5C40;&amp;#x9650;&quot;&gt;&lt;/a&gt;&amp;#x5C40;&amp;#x9650;&lt;/h2&gt;&lt;p&gt;&amp;#x6211;&amp;#x6CA1;&amp;#x7528;&amp;#x8FC7;ES7&amp;#x7684;await,async&amp;#x8BED;&amp;#x6CD5;,&amp;#x6240;&amp;#x4EE5;&amp;#x65E0;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;.&amp;#x53E6;&amp;#x5916;,bluebird&amp;#x4E5F;&amp;#x4E86;&amp;#x89E3;&amp;#x7684;&amp;#x4E0D;&amp;#x8BE6;&amp;#x7EC6;,&amp;#x5982;&amp;#x6709;&amp;#x5199;&amp;#x7684;&amp;#x4E0D;&amp;#x5BF9;&amp;#x7684;&amp;#x5730;&amp;#x65B9;,&amp;#x5B9E;&amp;#x5C5E;&amp;#x6B63;&amp;#x5E38;,&amp;#x6B22;&amp;#x8FCE;&amp;#x8BA8;&amp;#x8BBA;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x4ECE;callback&amp;#x5230;async&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;callback&amp;#x5230;async&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;callback&amp;#x5230;async&quot;&gt;&lt;/a&gt;&amp;#x4ECE;callback&amp;#x5230;async&lt;/h3&gt;&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x53EA;&amp;#x7528;Node&amp;#x7684;&amp;#x4F20;&amp;#x7EDF;callback&amp;#x5D4C;&amp;#x5957;&amp;#x65B9;&amp;#x5F0F;.&amp;#x540E;&amp;#x6765;&amp;#x6709;&amp;#x7684;api&amp;#x7EC8;&amp;#x4E8E;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;callback hell,&amp;#x53D8;&amp;#x5F97;&amp;#x96BE;&amp;#x4EE5;&amp;#x9605;&amp;#x8BFB;,&amp;#x7406;&amp;#x89E3;,&amp;#x8C03;&amp;#x8BD5;,&amp;#x4E8E;&amp;#x662F;&amp;#x53EA;&amp;#x597D;&amp;#x5BFB;&amp;#x627E;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6CD5;.&amp;#x9996;&amp;#x5148;&amp;#x627E;&amp;#x5230;&amp;#x4E86;&lt;a href=&quot;https://www.npmjs.com/package/async&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;async&lt;/a&gt;.async&amp;#x6CA1;&amp;#x6709;&amp;#x5F15;&amp;#x5165;&amp;#x65B0;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;,&amp;#x4E5F;&amp;#x7528;callback,&amp;#x4F46;&amp;#x53EA;&amp;#x7528;&amp;#x4E00;&amp;#x5C42;.&amp;#x5F00;&amp;#x59CB;&amp;#x7528;&amp;#x7684;&amp;#x8FD8;&amp;#x4E0D;&amp;#x9519;,&amp;#x7528;&amp;#x5B83;&amp;#x7684;&lt;a href=&quot;https://www.npmjs.com/package/async#waterfall&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;waterfall&lt;/a&gt;,&lt;a href=&quot;https://www.npmjs.com/package/async#parallel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parallel&lt;/a&gt;&amp;#x7B49;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;api&amp;#x7EC4;&amp;#x7EC7;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;.&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/03/13/bluebird-serendipity/async-1.jpg&quot; alt=&quot;async&amp;#x5199;&amp;#x7684;&amp;#x65E0;&amp;#x5D4C;&amp;#x5957;n&amp;#x6B65;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x7528;async&amp;#x7684;waterfall&amp;#x5199;&amp;#x7684;&amp;#x4E0D;&amp;#x5E26;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;(&amp;#x6BCF;&amp;#x6B65;&amp;#x5185;&amp;#x6CA1;&amp;#x6709;asycn&amp;#x7684;api&amp;#x5D4C;&amp;#x5957;),&amp;#x6BCF;&amp;#x6B65;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x6536;&amp;#x8D77;&amp;#x4E86;.&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x67E5;&amp;#x8BE2;,&amp;#x5F80;respEntity&amp;#x7684;data&amp;#x91CC;&amp;#x653E;&amp;#x6570;&amp;#x636E;.&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;callback&amp;#x5199;&amp;#x5DF2;&amp;#x7ECF;&amp;#x65E0;&amp;#x6CD5;&amp;#x5FCD;&amp;#x53D7;&amp;#x4E86;,&amp;#x7528;async&amp;#x7B97;&amp;#x662F;&amp;#x57FA;&amp;#x672C;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;callback hell.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x4ECE;async&amp;#x5230;Promise-bluebird&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;async&amp;#x5230;Promise-bluebird&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;async&amp;#x5230;Promise(bluebird)&quot;&gt;&lt;/a&gt;&amp;#x4ECE;async&amp;#x5230;Promise(bluebird)&lt;/h3&gt;&lt;p&gt;&amp;#x540E;&amp;#x6765;&amp;#x6709;&amp;#x4E9B;api,&amp;#x603B;&amp;#x4F53;&amp;#x662F;&amp;#x4E32;&amp;#x884C;&amp;#x7ED3;&amp;#x6784;,&amp;#x4F46;&amp;#x6709;&amp;#x4E9B;&amp;#x6B65;&amp;#x9AA4;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;,&amp;#x5F97;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x7ED3;&amp;#x679C;&amp;#x4EE5;&amp;#x540E;&amp;#x518D;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B65;(&amp;#x6216;&amp;#x603B;&amp;#x4F53;&amp;#x5E76;&amp;#x884C;,&amp;#x5176;&amp;#x4E2D;&amp;#x6709;&amp;#x4E32;&amp;#x884C;),&amp;#x8FD9;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x5D4C;&amp;#x5957;,&amp;#x5F00;&amp;#x59CB;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;async&amp;#x884C;&amp;#x4E0D;&amp;#x884C;,&amp;#x5C31;&amp;#x6CA1;&amp;#x5D4C;&amp;#x5957;&amp;#x7528;,&amp;#x540E;&amp;#x6765;&amp;#x4E3A;&amp;#x4E86;&amp;#x6027;&amp;#x80FD;&amp;#x6700;&amp;#x4F18;,&amp;#x8BD5;&amp;#x4E86;&amp;#x4E00;&amp;#x4E0B;,&amp;#x53D1;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x5199;,&amp;#x4F46;&amp;#x975E;&amp;#x5E38;&amp;#x75DB;&amp;#x82E6;.&amp;#x56E0;&amp;#x4E3A;async&amp;#x6BCF;&amp;#x6B65;&amp;#x5185;&amp;#x7528;&amp;#x7684;&amp;#x8FD8;&amp;#x662F;callback&amp;#x65B9;&amp;#x5F0F;,&amp;#x4E00;&amp;#x65E6;&amp;#x5D4C;&amp;#x5957;,&amp;#x5C31;&amp;#x662F;2&amp;#x5C42;callback&amp;#x52A0;&amp;#x4E0A;2&amp;#x5C42;async&amp;#x81EA;&amp;#x8EAB;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#x4EE3;&amp;#x7801;,&amp;#x6BCF;&amp;#x6B65;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x5F80;&amp;#x540E;&amp;#x4F20;,&amp;#x7F20;&amp;#x7EF5;&amp;#x60B1;&amp;#x607B;,&amp;#x5B8C;&amp;#x5168;&amp;#x65E0;&amp;#x6CD5;&amp;#x76F4;&amp;#x89C6;.&lt;/p&gt;
&lt;p&gt;&amp;#x4E8E;&amp;#x662F;&amp;#x5F00;&amp;#x59CB;&amp;#x5B66;&amp;#x4E60;Promise,&amp;#x4E0D;&amp;#x719F;&amp;#x6089;Promise&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x7684;&amp;#x53EF;&amp;#x4EE5;&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-promises&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x770B;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;,&amp;#x5E76;&amp;#x627E;&amp;#x5230;&amp;#x4E86;bluebird.bluebird&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x529F;&amp;#x80FD;&amp;#x7684;Promise&amp;#x5E93;,&amp;#x6027;&amp;#x80FD;&amp;#x636E;&amp;#x8BF4;&amp;#x4E5F;&amp;#x4E0D;&amp;#x9519;.&lt;a href=&quot;http://bluebirdjs.com/docs/why-bluebird.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x5B98;&amp;#x7F51;:Why bluebird?&lt;/a&gt;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x6301;&amp;#x7EED;&amp;#x4E86;&amp;#x4E00;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;,&amp;#x7528;&lt;code&gt;Promise.props&lt;/code&gt;,&lt;code&gt;Promise.all&lt;/code&gt;,&amp;#x548C;&lt;code&gt;then&lt;/code&gt;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;async&amp;#x7684;&amp;#x5D4C;&amp;#x5957;&amp;#x75DB;&amp;#x70B9;,&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5168;&amp;#x90E8;&amp;#x64B8;&amp;#x5E73;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x5C42;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x4F8B;&amp;#x5B50;,&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;:&amp;#x68C0;&amp;#x6D4B;&amp;#x53C2;&amp;#x6570;&amp;#x540E;,&amp;#x5F00;&amp;#x59CB;&amp;#x7528;bluebird&amp;#x8D70;&amp;#x5F02;&amp;#x6B65;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;,&amp;#x5148;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7528;&amp;#x6237;,&amp;#x5982;&amp;#x679C;&amp;#x53C2;&amp;#x6570;&amp;#x9519;&amp;#x8BEF;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;,&amp;#x5426;&amp;#x5219;&amp;#x7EE7;&amp;#x7EED;&amp;#x5E76;&amp;#x884C;&amp;#x67E5;&amp;#x8BE2;2&amp;#x79CD;&amp;#x6570;&amp;#x636E;,&amp;#x518D;&amp;#x62FC;&amp;#x7ED3;&amp;#x679C;,&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x6216;&amp;#x4E2D;&amp;#x95F4;&amp;#x6709;&amp;#x4EFB;&amp;#x610F;&amp;#x6B65;&amp;#x9AA4;&amp;#x51FA;&amp;#x9519;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uid = req.query.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// valid&amp;#x662F;&amp;#x540C;&amp;#x6B65;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!valid(uid)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x65E0;&amp;#x6548;&amp;#x53C2;&amp;#x6570;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// validUser, queryUser, queryMessage&amp;#x90FD;&amp;#x662F;&amp;#x5F02;&amp;#x6B65;&amp;#x67E5;&amp;#x5E93;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;bluebird&amp;#x5199;&amp;#x6210;&amp;#x8FD4;&amp;#x56DE;Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x6210;&amp;#x4F20;&amp;#x7EDF;&amp;#x7684;callback,&amp;#x518D;&amp;#x7528;Promise.promisify&amp;#x6216;Promise.promisifyAll&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x8FD4;&amp;#x56DE;Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(validUser(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.props({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: queryUser(uid),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: queryMessage(uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = data.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; message = data.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;success&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user: formatUser(user),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: formatMsg(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: err.message ? err.message : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5F02;&amp;#x5E38;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;,&amp;#x7528;bluebird&amp;#x5199;&amp;#x5F02;&amp;#x6B65;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x5D4C;&amp;#x5957;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x4F7F;&amp;#x6BCF;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x51FD;&amp;#x6570;.&amp;#x8FD9;&amp;#x5C31;&amp;#x4F7F;&amp;#x5F00;&amp;#x53D1;,&amp;#x8C03;&amp;#x8BD5;,&amp;#x4FEE;&amp;#x6539;&amp;#x90FD;&amp;#x53D8;&amp;#x5F97;&amp;#x8F7B;&amp;#x677E;&amp;#x6109;&amp;#x5FEB;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;,&amp;#x6781;&amp;#x5927;&amp;#x63D0;&amp;#x9AD8;&amp;#x4E86;&amp;#x6548;&amp;#x7387;.&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;,&amp;#x5B8C;&amp;#x5168;&amp;#x7B26;&amp;#x5408;&amp;#x4EBA;&amp;#x7C7B;&amp;#x601D;&amp;#x7EF4;&amp;#x8FC7;&amp;#x7A0B;,&amp;#x5904;&amp;#x7406;&amp;#x5B8C;&amp;#x4E00;&amp;#x4E2A;,&amp;#x518D;&amp;#x5904;&amp;#x7406;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;.&amp;#x6574;&amp;#x4E2A;&amp;#x5F02;&amp;#x6B65;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5B8C;&amp;#x5168;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x5199;&amp;#x51FA;&amp;#x6240;&amp;#x6709;&amp;#x4E1A;&amp;#x52A1;&amp;#x7684;stub&amp;#x51FD;&amp;#x6570;,&amp;#x628A;&amp;#x8DEF;&amp;#x7531;&amp;#x8D70;&amp;#x901A;,&amp;#x518D;&amp;#x6328;&amp;#x4E2A;&amp;#x5B9E;&amp;#x73B0;&amp;#x5177;&amp;#x4F53;&amp;#x529F;&amp;#x80FD;.&amp;#x8C03;&amp;#x8BD5;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7406;&amp;#x89E3;&amp;#x4EE3;&amp;#x7801;&amp;#x548C;&amp;#x65AD;&amp;#x70B9;&amp;#x9009;&amp;#x62E9;&amp;#x90FD;&amp;#x53D8;&amp;#x7684;&amp;#x4E00;&amp;#x76EE;&amp;#x4E86;&amp;#x7136;.&amp;#x4E1A;&amp;#x52A1;&amp;#x66F4;&amp;#x6539;&amp;#x65F6;&amp;#x5019;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x4E32;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x53EA;&amp;#x8981;&amp;#x6CE8;&amp;#x91CA;&amp;#x6389;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;then&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x5C31;&amp;#x884C;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x5E76;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x53EA;&amp;#x8981;&amp;#x6CE8;&amp;#x91CA;&amp;#x6389;Promise.props&amp;#x91CC;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x67D0;&amp;#x4E00;&amp;#x9879;&amp;#x5C31;&amp;#x884C;.&amp;#x6DFB;&amp;#x52A0;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x540C;&amp;#x7406;.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot;&gt;&lt;/a&gt;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&lt;/h3&gt;&lt;p&gt;&amp;#x4F46;&amp;#x5B9E;&amp;#x9645;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E2D;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6A21;&amp;#x5F0F;&amp;#x4F1A;&amp;#x9047;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;,&amp;#x6BD4;&amp;#x5982;&amp;#x53C2;&amp;#x6570;&amp;#x68C0;&amp;#x67E5;&amp;#x672C;&amp;#x8EAB;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x68C0;&amp;#x6D4B;&amp;#x548C;&amp;#x8FD4;&amp;#x56DE;,&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;.&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x590D;&amp;#x5199;&amp;#x591A;&amp;#x6B21;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&amp;#x52A0;&amp;#x4E0A;&amp;#x5F02;&amp;#x6B65;&amp;#x90E8;&amp;#x5206;&amp;#x4E5F;&amp;#x6709;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;,&amp;#x5BFC;&amp;#x81F4;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x6CA1;&amp;#x90A3;&amp;#x4E48;&amp;#x6E05;&amp;#x6670;,&amp;#x4E5F;&amp;#x4E0D;&amp;#x7B26;&amp;#x5408;DRY&amp;#x539F;&amp;#x5219;.&amp;#x6709;&amp;#x4E00;&amp;#x6B21;&amp;#x5199;&amp;#x4E86;3&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x68C0;&amp;#x67E5;&amp;#x52A0;&amp;#x4E09;&amp;#x4E2A;&amp;#x8FD4;&amp;#x56DE;,&amp;#x770B;&amp;#x7740;&amp;#x5B9E;&amp;#x5728;&amp;#x96BE;&amp;#x53D7;,&amp;#x4E8E;&amp;#x662F;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4E86;&amp;#x4E00;&amp;#x4E0B;&amp;#x628A;&amp;#x6574;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x90FD;&amp;#x7528;&amp;#x4E00;&amp;#x53E5;Promise&amp;#x4E32;&amp;#x8D77;&amp;#x6765;,&amp;#x7528;&amp;#x6700;&amp;#x540E;&amp;#x7684;catch&amp;#x6355;&amp;#x83B7;&amp;#x4ECE;&amp;#x5934;&amp;#x5230;&amp;#x5C3E;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x540C;&amp;#x6B65;,&amp;#x5F02;&amp;#x6B65;&amp;#x548C;&amp;#x5185;&amp;#x90E8;&amp;#x5D4C;&amp;#x5957;&amp;#x5F02;&amp;#x5E38;,&amp;#x53D1;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;,&amp;#x4E8E;&amp;#x662F;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x5C31;&amp;#x53D8;&amp;#x6210;&amp;#x4E00;&amp;#x53E5;Promise.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x60CA;&amp;#x559C;-&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;-&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot;&gt;&lt;a href=&quot;#&amp;#x60CA;&amp;#x559C;-&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;-&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x60CA;&amp;#x559C;: &amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;,&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot;&gt;&lt;/a&gt;&amp;#x60CA;&amp;#x559C;: &amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;,&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&lt;/h2&gt;&lt;p&gt;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x601D;&amp;#x8DEF;,&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x6539;&amp;#x6210;&amp;#x8FD9;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uid = req.query.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(testUid(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(validUser(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.props({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: queryUser(uid),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: queryMessage(uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = data.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; message = data.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;success&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user: formatUser(user),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: formatMsg(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sendError(err, res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testUid&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;uid&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!valid(uid)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; err = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x65E0;&amp;#x6548;&amp;#x53C2;&amp;#x6570;&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err.code = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;&amp;#x51FD;&amp;#x6570;&lt;code&gt;sendError&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x72EC;&amp;#x7ACB;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x4F9B;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x4F7F;&amp;#x7528;,&amp;#x6BCF;&amp;#x5904;&amp;#x5F02;&amp;#x5E38;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5B9A;&amp;#x4E49;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7F16;&amp;#x7801;&amp;#x548C;&amp;#x6587;&amp;#x5B57;,&amp;#x7136;&amp;#x540E;&amp;#x629B;&amp;#x51FA;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendError&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;res, err&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: err.code ? err.code : &lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: err.message ? err.message : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F02;&amp;#x5E38;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;&amp;#x91CD;&amp;#x590D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x5462;?&amp;#x5C31;&amp;#x6CA1;&amp;#x6709;&amp;#x7136;&amp;#x540E;&amp;#x4E86;,&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x5168;&amp;#x90FD;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5957;&amp;#x8DEF;&amp;#x91CD;&amp;#x5199;,&amp;#x81EA;&amp;#x6211;&amp;#x611F;&amp;#x89C9;&amp;#x903C;&amp;#x683C;&amp;#x9AD8;&amp;#x4E86;&amp;#x4E9B;.&amp;#x6709;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;&amp;#x5F0F;&amp;#x8FDE;&amp;#x7EED;transform&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x611F;&amp;#x89C9;,&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;,&amp;#x4EE5;&amp;#x8FD4;&amp;#x56DE;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x675F;,&amp;#x4E00;&amp;#x53E5;&amp;#x5B8C;&amp;#x6210;,&amp;#x4E2D;&amp;#x95F4;&amp;#x5F02;&amp;#x6B65;&amp;#x5E76;&amp;#x884C;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;return Promise.props()&lt;/code&gt;&amp;#x6216;return&amp;#x5355;&amp;#x4E00;Promise&amp;#x5F80;&amp;#x540E;&amp;#x4F20;,&amp;#x90FD;&amp;#x5168;&amp;#x4E86;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;then&lt;/code&gt;&amp;#x91CC;&amp;#x6574;&amp;#x7406;,&amp;#x683C;&amp;#x5F0F;&amp;#x5316;&amp;#x6570;&amp;#x636E;&amp;#x8FD4;&amp;#x56DE;.&amp;#x540E;&amp;#x9762;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;.catch&lt;/code&gt;&amp;#x6355;&amp;#x83B7;&amp;#x6240;&amp;#x6709;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird-Api-&amp;#x53C2;&amp;#x8003;&quot;&gt;&lt;a href=&quot;#&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird-Api-&amp;#x53C2;&amp;#x8003;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird Api,&amp;#x53C2;&amp;#x8003;&quot;&gt;&lt;/a&gt;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird Api,&lt;a href=&quot;http://bluebirdjs.com/docs/api-reference.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6D41;&amp;#x63A7;&amp;#x5236;api&lt;br&gt;&lt;code&gt;then&lt;/code&gt;(&amp;#x5355;&amp;#x4E00;&amp;#x5F02;&amp;#x6B65;&amp;#x6216;&amp;#x540C;&amp;#x6B65;),&lt;code&gt;Promise.props&lt;/code&gt;(&amp;#x6709;&amp;#x9650;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5E76;&amp;#x884C;),&lt;code&gt;Promise.all&lt;/code&gt;,&lt;code&gt;Prommise.map&lt;/code&gt;(&amp;#x4E0D;&amp;#x5B9A;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5E76;&amp;#x884C;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6570;&amp;#x636E;&amp;#x5E93;api&lt;br&gt;&lt;code&gt;Promise.using&lt;/code&gt;(&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;,&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#x8FDE;&amp;#x63A5;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5176;&amp;#x4ED6;&lt;br&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;(&amp;#x4FBF;&amp;#x4E8E;&amp;#x4F20;&amp;#x9012;&amp;#x503C;),&lt;code&gt;catch&lt;/code&gt;(&amp;#x6355;&amp;#x83B7;&amp;#x5F02;&amp;#x5E38;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;&amp;#x5E0C;&amp;#x671B;&quot;&gt;&lt;a href=&quot;#&amp;#x5E0C;&amp;#x671B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E0C;&amp;#x671B;&quot;&gt;&lt;/a&gt;&amp;#x5E0C;&amp;#x671B;&lt;/h2&gt;&lt;p&gt;&amp;#x6709;&amp;#x5F88;&amp;#x591A;bluebird&amp;#x7684;api,&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x5E72;&amp;#x5565;&amp;#x7684;,&amp;#x5927;&amp;#x81F4;&amp;#x770B;&amp;#x4E86;&amp;#x4E0B;,&amp;#x4E5F;&amp;#x6CA1;&amp;#x770B;&amp;#x61C2;,&amp;#x5982;&amp;#x679C;&amp;#x60A8;&amp;#x6709;&amp;#x5206;&amp;#x4EAB;,&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;,&amp;#x4E07;&amp;#x5206;&amp;#x611F;&amp;#x8C22;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;a href=&quot;#&amp;#x80CC;&amp;#x666F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;/a&gt;&amp;#x80CC;&amp;#x666F;&lt;/h2&gt;&lt;p&gt;&amp;#x7528;&lt;a hre
    
    </summary>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="Promise" scheme="http://yoursite.com/tags/Promise/"/>
    
      <category term="bluebird" scheme="http://yoursite.com/tags/bluebird/"/>
    
  </entry>
  
  <entry>
    <title>Clojure的sequence抽象</title>
    <link href="http://yoursite.com/2016/03/11/clojure-abstraction-seq-collection/"/>
    <id>http://yoursite.com/2016/03/11/clojure-abstraction-seq-collection/</id>
    <published>2016-03-11T10:02:04.000Z</published>
    <updated>2016-03-11T10:20:23.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x6765;&amp;#x6E90;:&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Programming_to_Abstractions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure for the brave and true&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming-to-Abstractions&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming-to-Abstractions&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming to Abstractions?&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming to Abstractions?&lt;/h2&gt;&lt;p&gt;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x8BBE;&amp;#x8BA1;&amp;#x51FD;&amp;#x6570;&amp;#x5E93;&amp;#x7684;&amp;#x539F;&amp;#x5219;,Clojure&amp;#x91C7;&amp;#x7528;&amp;#x4E86;&amp;#x8FD9;&amp;#x79CD;&amp;#x539F;&amp;#x5219;.&lt;br&gt;&amp;#x5373;&amp;#x628A;&amp;#x5177;&amp;#x6709;&amp;#x76F8;&amp;#x4F3C;&amp;#x7279;&amp;#x5F81;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x62BD;&amp;#x8C61;&amp;#x6210;&amp;#x67D0;&amp;#x4E2A;&amp;#x6982;&amp;#x5FF5;,&amp;#x6BD4;&amp;#x5982;&lt;code&gt;sequence&lt;/code&gt;.&amp;#x4E4B;&amp;#x540E;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7C7B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x64CD;&amp;#x4F5C;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;a href=&quot;#&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;/a&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&lt;/h2&gt;&lt;p&gt;Javascript&amp;#x7684;&lt;code&gt;Lodash&lt;/code&gt;&amp;#x5E93;&amp;#x7684;&lt;a href=&quot;https://lodash.com/docs#map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;map&lt;/a&gt;&amp;#x548C;&lt;a href=&quot;https://lodash.com/docs#reduce&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reduce&lt;/a&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x540C;&amp;#x65F6;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x7EC4;&amp;#x548C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot;&gt;&lt;a href=&quot;#&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot;&gt;&lt;/a&gt;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&lt;/h2&gt;&lt;p&gt;&amp;#x8BA9;&amp;#x4F60;&amp;#x5199;&amp;#x7A0B;&amp;#x5E8F;&amp;#x65F6;&amp;#x5019;,&amp;#x4E13;&amp;#x6CE8;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x80FD;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;,&amp;#x540C;&amp;#x65F6;&amp;#x5C3D;&amp;#x53EF;&amp;#x80FD;&amp;#x5730;&amp;#x5FFD;&amp;#x7565;&amp;#x5B83;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;.&lt;/p&gt;
&lt;h2 id=&quot;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot;&gt;&lt;a href=&quot;#map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot; class=&quot;headerlink&quot; title=&quot;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot;&gt;&lt;/a&gt;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defn titleize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [topic]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (str topic &amp;quot; for the Brave and True&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize [&amp;quot;Hamsters&amp;quot; &amp;quot;Ragnarok&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Hamsters for the Brave and True&amp;quot; &amp;quot;Ragnarok for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize &amp;apos;(&amp;quot;Empathy&amp;quot; &amp;quot;Decorating&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Empathy for the Brave and True&amp;quot; &amp;quot;Decorating for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize #{&amp;quot;Elbows&amp;quot; &amp;quot;Soap Carving&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Elbows for the Brave and True&amp;quot; &amp;quot;Soap Carving for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var list = [&amp;quot;Transylvania&amp;quot;, &amp;quot;Forks, WA&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map(list, function (val) { return val + &amp;quot; mapped!&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// =&amp;gt; [&amp;quot;Transylvania mapped!&amp;quot;, &amp;quot;Forks, WA mapped!&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;,Clojure&amp;#x7684;&lt;code&gt;map&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x53D7;&amp;#x591A;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;,&amp;#x5305;&amp;#x62EC;List,Vector,Set,Map.&lt;code&gt;map&lt;/code&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x57FA;&amp;#x4E8E;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;,&amp;#x800C;&amp;#x662F;&amp;#x57FA;&amp;#x4E8E;&lt;code&gt;sequence&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;.&lt;/p&gt;
&lt;h2 id=&quot;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sequence&lt;/code&gt;&amp;#x662F;Clojure&amp;#x5BF9;&amp;#x67D0;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x62BD;&amp;#x8C61;,&amp;#x5373;&amp;#x5E8F;&amp;#x5217;&amp;#x7ED3;&amp;#x6784;.&lt;code&gt;sequence&lt;/code&gt;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;first&lt;/code&gt;: &amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x5E8F;&amp;#x5217;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/first&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;: &amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x9664;&amp;#x4E86;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x6784;&amp;#x6210;&amp;#x7684;&amp;#x5E8F;&amp;#x5217; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/rest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cons&lt;/code&gt;: &amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;)&amp;#x548C;&amp;#x7B2C;2&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x65B0;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x5E8F;&amp;#x5217; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/cons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x8981;&amp;#x67D0;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x652F;&amp;#x6301;&amp;#x4E0A;&amp;#x9762;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;,&amp;#x5C31;&amp;#x80FD;&amp;#x628A;&amp;#x5B83;&amp;#x89C6;&amp;#x4E3A;&lt;code&gt;sequence&lt;/code&gt;,&amp;#x56E0;&amp;#x6B64;&amp;#x5C31;&amp;#x80FD;&amp;#x5BF9;&amp;#x5B83;&amp;#x8FDB;&amp;#x884C;map(&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x57FA;&amp;#x4E8E;&lt;code&gt;sequence&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x51FD;&amp;#x6570;,&amp;#x5305;&amp;#x62EC;&lt;code&gt;filter&lt;/code&gt;,&lt;code&gt;reduce&lt;/code&gt;,&lt;code&gt;group-by&lt;/code&gt;&amp;#x7B49;)&amp;#x64CD;&amp;#x4F5C;.&lt;/p&gt;
&lt;h2 id=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;/a&gt;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&lt;/h2&gt;&lt;p&gt;&amp;#x5F53;&amp;#x67D0;&amp;#x4E2A;&lt;code&gt;sequence&lt;/code&gt;&amp;#x51FD;&amp;#x6570;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;map&lt;/code&gt;)&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;,&amp;#x4F1A;&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;seq&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x7C7B;&amp;#x4F3C;List&amp;#x7684;,&amp;#x652F;&amp;#x6301;&amp;#x4E0A;&amp;#x8FF0;&lt;code&gt;sequence&lt;/code&gt;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;.&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x7528;&amp;#x5B83;&amp;#x8FDB;&amp;#x884C;&amp;#x76F8;&amp;#x5173;&amp;#x8BA1;&amp;#x7B97;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(seq &amp;apos;(1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq [1 2 3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq #{1 2 3})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq {:name &amp;quot;Bill Compton&amp;quot; :occupation &amp;quot;Dead mopey guy&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; ([:name &amp;quot;Bill Compton&amp;quot;] [:occupation &amp;quot;Dead mopey guy&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot;&gt;&lt;/a&gt;&lt;code&gt;sequence&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Seq_Function_Examples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6765;&amp;#x6E90;:&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Programming_to_Abstractions&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
  </entry>
  
  <entry>
    <title>今天听了陈天老师的函数式编程的分享</title>
    <link href="http://yoursite.com/2016/02/27/compose-monad/"/>
    <id>http://yoursite.com/2016/02/27/compose-monad/</id>
    <published>2016-02-27T14:10:32.000Z</published>
    <updated>2016-03-04T14:15:23.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&lt;/h3&gt;&lt;p&gt;FP&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x662F;&amp;#x7EC4;&amp;#x5408;,&amp;#x4E00;&amp;#x4E9B;&amp;#x6BD4;&amp;#x8F83;&amp;#x96BE;&amp;#x61C2;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;(&amp;#x6BD4;&amp;#x5982;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(functional_programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;monad&lt;/a&gt;), &lt;a href=&quot;https://en.wikipedia.org/wiki/Functor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;functor&lt;/a&gt;),&amp;#x90FD;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x5F3A;&amp;#x5316;FP&amp;#x7684;&amp;#x7EC4;&amp;#x5408;&amp;#x529F;&amp;#x80FD;.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&lt;/h3&gt;&lt;p&gt;FP&amp;#x975E;&amp;#x5E38;&amp;#x6709;&amp;#x5229;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;OpenClose&amp;#x539F;&amp;#x5219;,&amp;#x65E2;Open to extension, close to modification.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&lt;/h3&gt;&lt;p&gt;Javascript&amp;#x7684;&lt;code&gt;Promise&lt;/code&gt;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&lt;code&gt;monad&lt;/code&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B
    
    </summary>
    
    
      <category term="Functional Programming" scheme="http://yoursite.com/tags/Functional-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Rails Many to Many Associations</title>
    <link href="http://yoursite.com/2013/10/20/rails-many-to-many-associations/"/>
    <id>http://yoursite.com/2013/10/20/rails-many-to-many-associations/</id>
    <published>2013-10-19T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:59.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;has_many through&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires a join model&lt;/li&gt;
&lt;li&gt;name your join table anything&lt;ul&gt;
&lt;li&gt;ex: memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;more flexible, can add additional attributes(solumns) to join table&lt;br&gt;Cons:&lt;/li&gt;
&lt;li&gt;additional join model required&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;has_and_belongs_to_many&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no join model necesary&lt;/li&gt;
&lt;li&gt;assumes join table based on convention&lt;ul&gt;
&lt;li&gt;ex: groups_users&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easier, no join model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;not as flexible, can&amp;#x2019;t add additional attributes(solumns) to join table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;has_many through&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires a join model&lt;/li&gt;
&lt;li&gt;name your join table anything&lt;ul&gt;
&lt;li&gt;ex: memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deployment Options</title>
    <link href="http://yoursite.com/2013/09/27/deployment-options/"/>
    <id>http://yoursite.com/2013/09/27/deployment-options/</id>
    <published>2013-09-26T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:48.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;Managed&lt;ul&gt;
&lt;li&gt;Google App Engine&lt;/li&gt;
&lt;li&gt;Heroku&lt;ul&gt;
&lt;li&gt;cons: no server access, constrained enviroment&lt;/li&gt;
&lt;li&gt;pros: don&amp;#x2019;t need devops skills&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Self Service&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPS&lt;ul&gt;
&lt;li&gt;pros: your own virtualized environment/server&lt;/li&gt;
&lt;li&gt;cons: need devop/sysadmin skills&lt;/li&gt;
&lt;li&gt;AWS, Rackspace, Digital Ocean, Linode&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical Machines&lt;ul&gt;
&lt;li&gt;colocation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Shared host&lt;ul&gt;
&lt;li&gt;your app in a dir, other apps in other dir&lt;/li&gt;
&lt;li&gt;roomates&lt;/li&gt;
&lt;li&gt;pro: very cheap&lt;/li&gt;
&lt;li&gt;cons: too many to list&lt;/li&gt;
&lt;li&gt;Vendors&lt;ul&gt;
&lt;li&gt;Dreamhost&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Managed&lt;ul&gt;
&lt;li&gt;Google App Engine&lt;/li&gt;
&lt;li&gt;Heroku&lt;ul&gt;
&lt;li&gt;cons: no server access, constrained enviroment&lt;/li&gt;
&lt;li&gt;pros: don&amp;#x2019;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Porcess of Building Web App using Rails</title>
    <link href="http://yoursite.com/2013/09/17/porcess-of-building-web-app-using-rails/"/>
    <id>http://yoursite.com/2013/09/17/porcess-of-building-web-app-using-rails/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:13.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;build mock up&lt;/li&gt;
&lt;li&gt;build domain model&lt;/li&gt;
&lt;li&gt;build relation DB that support all business logic&lt;/li&gt;
&lt;li&gt;build url points, control actions, template&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;build mock up&lt;/li&gt;
&lt;li&gt;build domain model&lt;/li&gt;
&lt;li&gt;build relation DB that support all business logic&lt;/li&gt;
&lt;li&gt;build url points, con
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tools of Modern Web Development</title>
    <link href="http://yoursite.com/2013/09/17/tools-of-modern-web-development/"/>
    <id>http://yoursite.com/2013/09/17/tools-of-modern-web-development/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot;&gt;&lt;a href=&quot;#juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot; class=&quot;headerlink&quot; title=&quot;juggle many layers of technologies, all with different syntax &amp;amp; behaviors, and understand how they integrate with each other&quot;&gt;&lt;/a&gt;juggle many layers of technologies, all with different syntax &amp;amp; behaviors, and understand how they integrate with each other&lt;/h2&gt;&lt;h2 id=&quot;Other-things-web-developers-must-be-aware-of&quot;&gt;&lt;a href=&quot;#Other-things-web-developers-must-be-aware-of&quot; class=&quot;headerlink&quot; title=&quot;Other things web developers must be aware of:&quot;&gt;&lt;/a&gt;Other things web developers must be aware of:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;best practices&lt;/li&gt;
&lt;li&gt;security concerns&lt;/li&gt;
&lt;li&gt;browser compatibility&lt;/li&gt;
&lt;li&gt;mobile operating systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;FrontEnd&quot;&gt;&lt;a href=&quot;#FrontEnd&quot; class=&quot;headerlink&quot; title=&quot;FrontEnd&quot;&gt;&lt;/a&gt;FrontEnd&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Javascript&lt;ul&gt;
&lt;li&gt;frameworks&lt;ul&gt;
&lt;li&gt;jquery&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MVC&lt;ul&gt;
&lt;li&gt;backbone.js&lt;/li&gt;
&lt;li&gt;Ember.js&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ajax&lt;/li&gt;
&lt;li&gt;coffeesript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTML&lt;ul&gt;
&lt;li&gt;erb&lt;/li&gt;
&lt;li&gt;haml&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS&lt;ul&gt;
&lt;li&gt;sass&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mobile&lt;ul&gt;
&lt;li&gt;responsive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MiddleWare&quot;&gt;&lt;a href=&quot;#MiddleWare&quot; class=&quot;headerlink&quot; title=&quot;MiddleWare&quot;&gt;&lt;/a&gt;MiddleWare&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;APIs&lt;/li&gt;
&lt;li&gt;URLs&lt;/li&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;request/response processing&lt;/li&gt;
&lt;li&gt;security&lt;ul&gt;
&lt;li&gt;xss, crsf, code injection, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;BackEnd&quot;&gt;&lt;a href=&quot;#BackEnd&quot; class=&quot;headerlink&quot; title=&quot;BackEnd&quot;&gt;&lt;/a&gt;BackEnd&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;database&lt;ul&gt;
&lt;li&gt;relational&lt;ul&gt;
&lt;li&gt;MySql&lt;/li&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NoSql&lt;ul&gt;
&lt;li&gt;document&lt;ul&gt;
&lt;li&gt;MangoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;web services&lt;/li&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;SOAP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;deployment&lt;/li&gt;
&lt;li&gt;background processing&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;bundler&lt;/li&gt;
&lt;li&gt;rvm&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot;&gt;&lt;a hre
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP and MVC</title>
    <link href="http://yoursite.com/2013/09/17/http-and-mvc/"/>
    <id>http://yoursite.com/2013/09/17/http-and-mvc/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:01.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP:&quot;&gt;&lt;/a&gt;HTTP:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;verb/method (GET or POST)&lt;/li&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Response&lt;ul&gt;
&lt;li&gt;status code (200, 301, 404, 500)&lt;/li&gt;
&lt;li&gt;payload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stateless: we have to rebuild the world at every request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MVC&quot;&gt;&lt;a href=&quot;#MVC&quot; class=&quot;headerlink&quot; title=&quot;MVC:&quot;&gt;&lt;/a&gt;MVC:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Model, View, Controller&lt;/li&gt;
&lt;li&gt;Controller&lt;ul&gt;
&lt;li&gt;routes to appropriate action based on request&lt;/li&gt;
&lt;li&gt;action my talk to model, and then either redirect (301) or render view (200) as the response&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Important-Sinatra-concepts&quot;&gt;&lt;a href=&quot;#Important-Sinatra-concepts&quot; class=&quot;headerlink&quot; title=&quot;Important Sinatra concepts:&quot;&gt;&lt;/a&gt;Important Sinatra concepts:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Rendering template allows access by template to ivars set up in action&lt;/li&gt;
&lt;li&gt;Template have access seeeion hash&lt;/li&gt;
&lt;li&gt;session&lt;/li&gt;
&lt;li&gt;params&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP:&quot;&gt;&lt;/a&gt;HTTP:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;verb/method (GET or POST)&lt;/li&gt;
&lt;li&gt;url
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby&#39;s inheritance</title>
    <link href="http://yoursite.com/2013/09/12/rubys-inheritance/"/>
    <id>http://yoursite.com/2013/09/12/rubys-inheritance/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:43.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;quot;
  end
end

class Dog &amp;lt; Animal
  def speak
    &amp;quot;#{ name } is barking!&amp;quot;
  end
end

class Cat &amp;lt; Animal
end

fido = Dog.new(&amp;apos;fido&amp;apos;)
puts fido.name
puts fido.speak

kitty = Cat.new(&amp;apos;kitty&amp;apos;)
puts kitty.name
puts kitty.speak

puts Dog.ancestors
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;produce&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fido
fido is barking!
kitty
kitty is speaking!
Dog
Animal
Object
Kernel
BasicObject
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;q
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby&#39;s composition</title>
    <link href="http://yoursite.com/2013/09/12/rubys-composition/"/>
    <id>http://yoursite.com/2013/09/12/rubys-composition/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:27.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;module Swimmable
  def swim
    &amp;quot;#{ name } is swimming!&amp;quot;
  end
end

module Fetchable
  def fetch
    &amp;quot;#{ name } is fetching!&amp;quot;
  end
end    

class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;quot;
  end
end

class Mammal &amp;lt; Animal
  def warm_blooded?
    true
  end
end

class Dog &amp;lt; Mammal
  include Swimmable
  include Fetchable

  def speak
    &amp;quot;#{ name } is barking!&amp;quot;
  end
end

fido = Dog.new(&amp;apos;fido&amp;apos;)
puts fido.swim
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;produce&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fido is swimming!
Dog
Fetchable
Swimmable
Mammal
Animal
Object
Kernel
BasicObject
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;module Swimmable
  def swim
    &amp;quot;#{ name } is swimming!&amp;quot;
  end
end

module Fetchable
  def fetch
    &amp;quot;#{ name } is
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>process of design app&#39;s class and module</title>
    <link href="http://yoursite.com/2013/09/12/process-of-design-apps-class-and-module/"/>
    <id>http://yoursite.com/2013/09/12/process-of-design-apps-class-and-module/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:09.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;Write out the detailed specs&lt;/li&gt;
&lt;li&gt;Extract out major nouns; these are your classes.&lt;/li&gt;
&lt;li&gt;Extract out major verbs; these are your behaviors/methods.&lt;/li&gt;
&lt;li&gt;Create objects out of those classes; these are your actors in your program.&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;Write out the detailed specs&lt;/li&gt;
&lt;li&gt;Extract out major nouns; these are your classes.&lt;/li&gt;
&lt;li&gt;Extract out major verbs; these are 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby method scope</title>
    <link href="http://yoursite.com/2013/09/11/ruby-method-scope/"/>
    <id>http://yoursite.com/2013/09/11/ruby-method-scope/</id>
    <published>2013-09-10T16:00:00.000Z</published>
    <updated>2016-02-27T09:46:44.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Ruby-method-scope-convention&quot;&gt;&lt;a href=&quot;#Ruby-method-scope-convention&quot; class=&quot;headerlink&quot; title=&quot;Ruby method scope convention&quot;&gt;&lt;/a&gt;Ruby method scope convention&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ruby method not have a strict pass by value or pass by reference.&lt;/li&gt;
&lt;li&gt;if you passing an argument, and the argument calls a method that mutates the caller which may or may not have a &lt;code&gt;!&lt;/code&gt;, then it&amp;#x2019;s going to change that object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very common source bug.&lt;/p&gt;
&lt;h2 id=&quot;example&quot;&gt;&lt;a href=&quot;#example&quot; class=&quot;headerlink&quot; title=&quot;example&quot;&gt;&lt;/a&gt;example&lt;/h2&gt;&lt;h3 id=&quot;pass-by-value-not-mutate-argument-in-method&quot;&gt;&lt;a href=&quot;#pass-by-value-not-mutate-argument-in-method&quot; class=&quot;headerlink&quot; title=&quot;pass by value(not mutate argument in method):&quot;&gt;&lt;/a&gt;pass by value(not mutate argument in method):&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;a = [1, 2, 1]
def my_method(a)
  a.uniq
end
puts a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pass-by-reference-mutate-argument-in-method&quot;&gt;&lt;a href=&quot;#pass-by-reference-mutate-argument-in-method&quot; class=&quot;headerlink&quot; title=&quot;pass by reference(mutate argument in method):&quot;&gt;&lt;/a&gt;pass by reference(mutate argument in method):&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;a = [1, 2, 1]
def my_method(a)
  a.uniq!
end
puts a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1
2
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ruby-method-scope-convention&quot;&gt;&lt;a href=&quot;#Ruby-method-scope-convention&quot; class=&quot;headerlink&quot; title=&quot;Ruby method scope convention&quot;&gt;&lt;/a&gt;Ru
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby class template</title>
    <link href="http://yoursite.com/2013/09/11/ruby-class-template/"/>
    <id>http://yoursite.com/2013/09/11/ruby-class-template/</id>
    <published>2013-09-10T16:00:00.000Z</published>
    <updated>2016-02-27T09:46:30.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;class Dog
  attr_accessor :name, :height, :weight

  @@count = 0

  def initialize(name, height, weight)
    @name = name
    @height = height
    @weight = weight
    @@count += 1
  end

  def bark
    &amp;quot;#{ name } bark!&amp;quot;
  end

  def info
    &amp;quot;#{ name } weights #{ weight } lbs and is #{ height } feet tall&amp;quot;
  end

  def update_info(n, h, w)
    self.name = n
    self.height = h
    self.weight = w
  end

end

teddy = Dog.new(&amp;apos;teddy&amp;apos;, 3, 100)
fido = Dog.new(&amp;apos;fido&amp;apos;, 1.5, 150)

puts teddy.info
teddy.update_info(&amp;apos;ted&amp;apos;, 2, 90)
puts teddy.info
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;class Dog
  attr_accessor :name, :height, :weight

  @@count = 0

  def initialize(name, height, weight)
    @name = name
    @he
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>use vpn for git</title>
    <link href="http://yoursite.com/2013/09/10/use-vpn-for-git/"/>
    <id>http://yoursite.com/2013/09/10/use-vpn-for-git/</id>
    <published>2013-09-09T16:00:00.000Z</published>
    <updated>2016-03-10T13:37:38.000Z</updated>
    
    <content type="html">&lt;p&gt;In China, if you git command can&amp;#x2019;t connect to github, get this tip:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh: connect to host github.com port 22: Operation timed out
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;maybe(and very possible) beacuse of &lt;a href=&quot;http://en.wikipedia.org/wiki/Great_Firewall_of_China&quot; target=&quot;_blank&quot;&gt;GFW&lt;/a&gt;, use VPN can solve this problem.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;In China, if you git command can&amp;#x2019;t connect to github, get this tip:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh: connect to host github.com port 22: Operat
    
    </summary>
    
    
  </entry>
  
</feed>
