<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡军的网络日志</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-15T23:14:57.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>胡军</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【译】并发与并行编程</title>
    <link href="http://yoursite.com/2016/07/15/braveclojure-concurrency/"/>
    <id>http://yoursite.com/2016/07/15/braveclojure-concurrency/</id>
    <published>2016-07-15T14:37:55.000Z</published>
    <updated>2016-07-15T23:14:57.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x4E5D;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/concurrency/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Sacred Art of Concurrent and Parallel Programming&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;If I were the lord of a manor and you were my heir, I would sit you down on your 13th name day and tell you, &amp;#x201C;The world of computing is changing, lass, and ye must be prepared for the new world of multi-core processors lest ye be trampled by it.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Listen well: In recent years, CPU clock speeds have barely increased, but dual-core and quad-core computers have become common. The laws of physics are cruel and absolute, and they demand that increasing clock speed requires exponentially more power. The realm&amp;#x2019;s best engineers are unlikely to overcome this limitation anytime soon, if ever. Therefore, you can expect the trend of increasing cores on a single machine to continue&amp;#x2014;as will the expectation that you as a programmer will know how to make the most of modern hardware.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Learning to program in this new paradigm will be fun and fascinating, verily. But beware: it is also fraught with peril. You must learn &lt;em&gt;concurrent and parallel programming&lt;/em&gt;, which is the sacred art of structuring your application to safely manage multiple, simultaneously executing tasks.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;You begin your instruction in this art with an overview of concurrency and parallelism concepts. You&amp;#x2019;ll then study the three goblins that harry every practitioner: reference cells, mutual exclusion, and dwarven berserkers. And you&amp;#x2019;ll learn three tools that will aid you: futures, promises, and delays.&amp;#x201D;&lt;/p&gt;
&lt;p&gt;And then I&amp;#x2019;d tap you on the shoulder with a keyboard, signaling that you were ready to begin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x5148;&amp;#x8BB2;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x5B66;&amp;#x4E60;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4ECE;&amp;#x4E1A;&amp;#x8005;&amp;#x90FD;&amp;#x4F1A;&amp;#x9047;&amp;#x5230;&amp;#x7684;&amp;#x4E09;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;(reference cells),&amp;#x4E92;&amp;#x65A5;(mutual exclusion),&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&amp;#x95EE;&amp;#x9898;(dwarven berserkers)&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x5B66;&amp;#x4E60;&amp;#x4E09;&amp;#x4E2A;&amp;#x8F85;&amp;#x52A9;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x672A;&amp;#x6765;(futures),&amp;#x627F;&amp;#x8BFA;(promises),&amp;#x5EF6;&amp;#x671F;(delays)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrency and Parallelism Concepts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&quot;&gt;&lt;a href=&quot;#&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&quot;&gt;&lt;/a&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Concurrent and parallel programming involves a lot of messy details at all levels of program execution, from the hardware to the operating system to programming language libraries to the code that springs from your heart and lands in your editor. But before you worry your head with any of those details, in this section I&amp;#x2019;ll walk through the high-level concepts that surround concurrency and parallelism.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#x5728;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5C42;&amp;#x6B21;&amp;#x4E0A;&amp;#x90FD;&amp;#x6D89;&amp;#x53CA;&amp;#x5927;&amp;#x91CF;&amp;#x4E71;&amp;#x4E03;&amp;#x516B;&amp;#x7CDF;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF1A;&amp;#x4ECE;&amp;#x786C;&amp;#x4EF6;&amp;#x5230;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#xFF0C;&amp;#x5230;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x5E93;&amp;#xFF0C;&amp;#x5230;&amp;#x4F60;&amp;#x7F16;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x5728;&amp;#x8003;&amp;#x8651;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC6;&amp;#x8282;&amp;#x524D;&amp;#xFF0C;&amp;#x5148;&amp;#x9886;&amp;#x7565;&amp;#x4E00;&amp;#x4E0B;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x9AD8;&amp;#x5C42;&amp;#x6B21;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Managing Multiple Tasks vs. Executing Tasks Simultaneously&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;a href=&quot;#&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;/a&gt;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Concurrency&lt;/em&gt; refers to managing more than one task at the same time. &lt;em&gt;Task&lt;/em&gt; just means &amp;#x201C;something that needs to get done,&amp;#x201D; and it doesn&amp;#x2019;t imply anything regarding implementation in your hardware or software. We can illustrate concurrency with the song &amp;#x201C;Telephone&amp;#x201D; by Lady Gaga. Gaga sings,&lt;br&gt;I will put down this drink to text you, then put my phone away and continue drinking, eh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x5E76;&amp;#x53D1;&lt;/em&gt; &amp;#x6307;&amp;#x540C;&amp;#x65F6;&amp;#x7BA1;&amp;#x7406;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;em&gt;&amp;#x4EFB;&amp;#x52A1;&lt;/em&gt; &amp;#x6307;&amp;#x201C;&amp;#x9700;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x201D;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E0D;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x4EFB;&amp;#x4F55;&amp;#x8F6F;&amp;#x4EF6;&amp;#x6216;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x76F8;&amp;#x5173;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;Lady Gaga&amp;#x7684;&amp;#x6B4C;&amp;#x201C;Telephone&amp;#x201D;&amp;#x6F14;&amp;#x793A;&amp;#x5E76;&amp;#x53D1;&amp;#x3002;&amp;#x5979;&amp;#x5531;&amp;#x5230;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x5C06;&amp;#x653E;&amp;#x4E0B;&amp;#x996E;&amp;#x6599;&amp;#xFF0C;&amp;#x7ED9;&amp;#x4F60;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x653E;&amp;#x4E0B;&amp;#x7535;&amp;#x8BDD;&amp;#xFF0C;&amp;#x7EE7;&amp;#x7EED;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this hypothetical universe, Lady Gaga is managing two tasks: drinking and texting. However, she is not executing both tasks at the same time. Instead, she&amp;#x2019;s switching between the two, or &lt;em&gt;interleaving&lt;/em&gt;. Note that, while interleaving, you don&amp;#x2019;t have to fully complete a task before switching: Gaga could type one word, put down her phone, pick up her drink and take a sip, and then switch back to her phone and type another word.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5047;&amp;#x60F3;&amp;#x7684;&amp;#x4E16;&amp;#x754C;&amp;#x91CC;&amp;#xFF0C;Lady Gaga&amp;#x6B63;&amp;#x5728;&amp;#x7BA1;&amp;#x7406;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x548C;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x3002;&amp;#x4F46;&amp;#x5979;&amp;#x4E0D;&amp;#x662F;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x800C;&amp;#x662F;&amp;#x5728;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x95F4;&amp;#x5207;&amp;#x6362;&amp;#x6216; &lt;em&gt;&amp;#x4EA4;&amp;#x66FF;&lt;/em&gt;&amp;#x3002;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x4EA4;&amp;#x66FF;&amp;#x8FDB;&amp;#x884C;&amp;#x65F6;&amp;#xFF0C;&amp;#x5207;&amp;#x6362;&amp;#x524D;&amp;#x4E0D;&amp;#x5FC5;&amp;#x5B8C;&amp;#x5168;&amp;#x5B8C;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;Gaga&amp;#x53EF;&amp;#x4EE5;&amp;#x8F93;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x8BCD;&amp;#xFF0C;&amp;#x653E;&amp;#x4E0B;&amp;#x7535;&amp;#x8BDD;&amp;#xFF0C;&amp;#x62FF;&amp;#x8D77;&amp;#x996E;&amp;#x6599;&amp;#x559D;&amp;#x4E00;&amp;#x53E3;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x62FF;&amp;#x8D77;&amp;#x7535;&amp;#x8BDD;&amp;#x8F93;&amp;#x5165;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x8BCD;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Parallelism&lt;/em&gt; refers to executing more than one task at the same time. If Madame Gaga were to execute her two tasks in parallel, she would sing,&lt;/p&gt;
&lt;p&gt;I can text you with one hand while I use the other to drink, eh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x5E76;&amp;#x884C;&lt;/em&gt; &amp;#x6307;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x5982;&amp;#x679C;Gaga&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5979;&amp;#x5C06;&amp;#x5531;&amp;#x5230;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x80FD;&amp;#x7528;&amp;#x4E00;&amp;#x53EA;&amp;#x624B;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x7528;&amp;#x53E6;&amp;#x4E00;&amp;#x53EA;&amp;#x624B;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Parallelism is a subclass of concurrency: before you execute multiple tasks simultaneously, you first have to manage multiple tasks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x884C;&amp;#x662F;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B50;&amp;#x7C7B;&amp;#xFF1A;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure has many features that allow you to achieve parallelism easily. While the Lady Gaga system achieves parallelism by simultaneously executing tasks on multiple hands, computer systems generally achieve parallelism by simultaneously executing tasks on multiple processors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x7279;&amp;#x6027;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x5BB9;&amp;#x6613;&amp;#x5730;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x884C;&amp;#x3002;Lady Gaga&amp;#x5728;&amp;#x4E24;&amp;#x53EA;&amp;#x624B;&amp;#x4E0A;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x5E76;&amp;#x884C;&amp;#x3002;&amp;#x4E0E;&amp;#x6B64;&amp;#x76F8;&amp;#x6BD4;&amp;#xFF0C;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x901A;&amp;#x5E38;&amp;#x662F;&amp;#xFF1A;&amp;#x5728;&amp;#x591A;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s important to distinguish parallelism from distribution. Distributed computing is a special version of parallel computing where the processors are in different computers and tasks are distributed to computers over a network. It&amp;#x2019;d be like Lady Gaga asking Beyonc&amp;#xE9;, &amp;#x201C;Please text this guy while I drink.&amp;#x201D; Although you can do distributed programming in Clojure with the aid of libraries, this book covers only parallel programming, and here I&amp;#x2019;ll use &lt;em&gt;parallel&lt;/em&gt; to refer only to cohabiting processors. If you&amp;#x2019;re interested in distributed programming, check out Kyle Kingsbury&amp;#x2019;s Call Me Maybe series at &lt;a href=&quot;https://aphyr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aphyr.com/&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x533A;&amp;#x5206;&amp;#x5E76;&amp;#x884C;&amp;#x4E0E;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x8BA1;&amp;#x7B97;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x3002;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x8BA1;&amp;#x7B97;&amp;#x662F;&amp;#x5E76;&amp;#x884C;&amp;#x8BA1;&amp;#x7B97;&amp;#x7684;&amp;#x7279;&amp;#x6B8A;&amp;#x7248;&amp;#x672C;&amp;#xFF0C;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x8BA1;&amp;#x7B97;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5904;&amp;#x4E8E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4EFB;&amp;#x52A1;&amp;#x88AB;&amp;#x5206;&amp;#x914D;&amp;#x5230;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E0A;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x4E0A;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;Lady Gaga&amp;#x8BF7;&amp;#x6C42;Beyonc&amp;#xE9;&amp;#xFF0C;&amp;#x201C;&amp;#x6211;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x8BF7;&amp;#x7ED9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EBA;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x201D;&amp;#x3002;&amp;#x867D;&amp;#x7136;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5E93;&amp;#x5728;Clojure&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x7F16;&amp;#x7A0B;&amp;#xFF0C;&amp;#x672C;&amp;#x4E66;&amp;#x53EA;&amp;#x8986;&amp;#x76D6;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14; &lt;em&gt;&amp;#x5E76;&amp;#x884C;&lt;/em&gt; &amp;#x53EA;&amp;#x7528;&amp;#x6765;&amp;#x6307;&amp;#x540C;&amp;#x4E00;&amp;#x53F0;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x5185;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x7F16;&amp;#x7A0B;&amp;#x611F;&amp;#x5174;&amp;#x8DA3;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x53BB;&amp;#x770B; &lt;a href=&quot;https://aphyr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aphyr.com/&lt;/a&gt; &amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blocking and Asynchronous Tasks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;a href=&quot;#&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;/a&gt;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One of the major use cases for concurrent programming is for blocking operations. Blocking really just means waiting for an operation to finish. You&amp;#x2019;ll most often hear it used in relation to I/O operations, like reading a file or waiting for an HTTP request to finish. Let&amp;#x2019;s examine this using the concurrent Lady Gaga example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3B;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x5408;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x963B;&amp;#x585E;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#x662F;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&amp;#x5728;I/O&amp;#x76F8;&amp;#x5173;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6587;&amp;#x4EF6;&amp;#x8BFB;&amp;#x53D6;&amp;#x6216;&amp;#x7B49;&amp;#x5F85;HTTP&amp;#x8BF7;&amp;#x6C42;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x7ECF;&amp;#x5E38;&amp;#x542C;&amp;#x8BF4;&amp;#x963B;&amp;#x585E;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x7528;&amp;#x5E76;&amp;#x884C;Lady Gaga&amp;#x4E3E;&amp;#x4F8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If Lady Gaga texts her interlocutor and then stands there with her phone in her hand, staring at the screen for a response and not drinking, then you would say that the &lt;em&gt;read next text message&lt;/em&gt; operation is blocking and that these tasks are executing &lt;em&gt;synchronously&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;Lady Gaga&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x7ED9;&amp;#x5BF9;&amp;#x8BDD;&amp;#x8005;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7AD9;&amp;#x5728;&amp;#x90A3;&amp;#xFF0C;&amp;#x624B;&amp;#x91CC;&amp;#x62FF;&amp;#x7740;&amp;#x624B;&amp;#x673A;&amp;#xFF0C;&amp;#x76EF;&amp;#x7740;&amp;#x5C4F;&amp;#x5E55;&amp;#x7B49;&amp;#x54CD;&amp;#x5E94;&amp;#xFF0C;&amp;#x4E0D;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF4; &lt;em&gt;&amp;#x8BFB;&amp;#x4E0B;&amp;#x4E00;&amp;#x6761;&amp;#x77ED;&amp;#x4FE1;&lt;/em&gt; &amp;#x64CD;&amp;#x4F5C;&amp;#x662F;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F; &lt;em&gt;&amp;#x540C;&amp;#x6B65;&lt;/em&gt; &amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If, instead, she tucks her phone away so she can drink until it alerts her by beeping or vibrating, then the &lt;em&gt;read next text message&lt;/em&gt; task is not blocking and you would say she&amp;#x2019;s handling the task &lt;em&gt;asynchronously&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E3A;&amp;#x4E86;&amp;#x80FD;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#xFF0C;&amp;#x5979;&amp;#x628A;&amp;#x624B;&amp;#x673A;&amp;#x653E;&amp;#x5728;&amp;#x4E00;&amp;#x8FB9;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x624B;&amp;#x673A;&amp;#x54CD;&amp;#x94C3;&amp;#x6216;&amp;#x9707;&amp;#x52A8;&amp;#x63D0;&amp;#x9192;&amp;#x5979;&amp;#x3002;&amp;#x90A3;&amp;#x4E48; &lt;em&gt;&amp;#x8BFB;&amp;#x4E0B;&amp;#x4E00;&amp;#x6761;&amp;#x77ED;&amp;#x4FE1;&lt;/em&gt; &amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x975E;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F; &lt;em&gt;&amp;#x5F02;&amp;#x6B65;&lt;/em&gt; &amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrent Programming and Parallel Programming&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Concurrent programming and parallel programming refer to techniques for decomposing a task into subtasks that can execute in parallel and managing the risks that arise when your program executes more than one task at the same time. For the rest of the chapter, I&amp;#x2019;ll use the two terms interchangeably because the risks are pretty much the same for both.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#x6307;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6280;&amp;#x672F;(&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x53EF;&amp;#x4EE5;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x5B50;&amp;#x4EFB;&amp;#x52A1;)&amp;#xFF0C;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x98CE;&amp;#x9669;&amp;#x6280;&amp;#x672F;(&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x65F6;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x98CE;&amp;#x9669;)&amp;#x3002;&amp;#x672C;&amp;#x7AE0;&amp;#x7684;&amp;#x5269;&amp;#x4F59;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C5E;&amp;#x4E8E;&amp;#x53EF;&amp;#x4EE5;&amp;#x4EA4;&amp;#x6362;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F7F;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&amp;#x98CE;&amp;#x9669;&amp;#x51E0;&amp;#x4E4E;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To better understand those risks and how Clojure helps you avoid them, let&amp;#x2019;s examine how concurrency and parallelism are implemented in Clojure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x66F4;&amp;#x597D;&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#x548C;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x770B;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure Implementation: JVM Threads&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ve been using the term task in an abstract sense to refer to a series of related operations without regard for how a computer might implement the task concept. For example, texting is a task that consists of a series of related operations that are totally separate from the operations involved in pouring a drink into your face.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x4E3A;&amp;#x6B62;&amp;#xFF0C;&amp;#x6211;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x4EE5;&amp;#x4E00;&amp;#x79CD;&amp;#x62BD;&amp;#x8C61;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x52A1;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BCD;&amp;#xFF0C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x6307;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x76F8;&amp;#x5173;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x4E0E;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x65E0;&amp;#x5173;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7531;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x76F8;&amp;#x5173;&amp;#x64CD;&amp;#x4F5C;&amp;#x6784;&amp;#x6210;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E0E;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x7684;&amp;#x90A3;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#x5B8C;&amp;#x5168;&amp;#x5206;&amp;#x5F00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Clojure, you can think of your normal, &lt;em&gt;serial&lt;/em&gt; code as a sequence of tasks. You indicate that tasks can be performed concurrently by placing them on JVM &lt;em&gt;threads&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;Clojure&amp;#x91CC;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FDE;&amp;#x7EED;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F53;&amp;#x6210;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x653E;&amp;#x5728;JVM&amp;#x7EBF;&amp;#x7A0B;&amp;#x91CC;&amp;#xFF0C;&amp;#x8868;&amp;#x660E;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EFB;&amp;#x52A1;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What&amp;#x2019;s a Thread?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;m glad you asked! A thread is a subprogram. A program can have many threads, and each thread executes its own set of instructions while enjoying shared access to the program&amp;#x2019;s state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x9AD8;&amp;#x5174;&amp;#x4F60;&amp;#x95EE;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF01;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x5B50;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x7A0B;&amp;#x5E8F;&amp;#x80FD;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x96C6;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x62E5;&amp;#x6709;&amp;#x5BF9;&amp;#x7A0B;&amp;#x5E8F;&amp;#x72B6;&amp;#x6001;&amp;#x5171;&amp;#x540C;&amp;#x7684;&amp;#x8BBF;&amp;#x95EE;&amp;#x6743;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread management functionality can exist at multiple levels in a computer. For example, the operating system kernel typically provides system calls to create and manage threads. The JVM provides its own platform-independent thread management functionality, and since Clojure programs run in the JVM, they use JVM threads. You&amp;#x2019;ll learn more about the JVM in Chapter 12.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7684;&amp;#x5F88;&amp;#x591A;&amp;#x5C42;&amp;#x6B21;&amp;#x90FD;&amp;#x6709;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7BA1;&amp;#x7406;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5185;&amp;#x6838;&amp;#x901A;&amp;#x5E38;&amp;#x63D0;&amp;#x4F9B;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8C03;&amp;#x7528;&amp;#x7528;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;JVM&amp;#x63D0;&amp;#x4F9B;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x72EC;&amp;#x7ACB;&amp;#x4E8E;&amp;#x5E73;&amp;#x53F0;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7BA1;&amp;#x7406;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;Clojure&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#x5728;JVM&amp;#x91CC;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can think of a thread as an actual, physical piece of thread that strings together a sequence of instructions. In my mind, the instructions are marshmallows, because marshmallows are delicious. The processor executes these instructions in order. I picture this as an alligator consuming the instructions, because alligators love marsh&amp;#xAD;mallows (true fact!). So executing a program looks like a bunch of marshmallows strung out on a line with an alligator traveling down the line and eating them one by one. Figure 9-1 shows this model for a single-core processor executing a single-threaded program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x60F3;&amp;#x8C61;&amp;#x6210;&amp;#x4E00;&amp;#x6839;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x7EBF;&amp;#xFF0C;&amp;#x628A;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x6307;&amp;#x4EE4;&amp;#x4E32;&amp;#x4E86;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x5728;&amp;#x6211;&amp;#x7684;&amp;#x8111;&amp;#x6D77;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6307;&amp;#x4EE4;&amp;#x662F;&amp;#x8F6F;&amp;#x7CD6;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8F6F;&amp;#x7CD6;&amp;#x5F88;&amp;#x7F8E;&amp;#x5473;&amp;#x3002;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x9CC4;&amp;#x9C7C;&amp;#x6328;&amp;#x4E2A;&amp;#x5403;&amp;#x6389;&amp;#x4E32;&amp;#x6210;&amp;#x4E00;&amp;#x4E32;&amp;#x7684;&amp;#x8F6F;&amp;#x7CD6;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x56FE;9-1&amp;#x663E;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5355;&amp;#x6838;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6267;&amp;#x884C;&amp;#x5355;&amp;#x4E00;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6A21;&amp;#x578B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-1&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-1.png&quot; alt=&quot;9-1&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A thread can &lt;em&gt;spawn&lt;/em&gt; a new thread to execute tasks concurrently. In a single-processor system, the processor switches back and forth between the threads (interleaving). Here&amp;#x2019;s where potential concurrency issues get introduced. Although the processor executes the instructions on each thread in order, it makes no guarantees about when it will switch back and forth between threads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD; &lt;em&gt;&amp;#x751F;&amp;#x4EA7;&lt;/em&gt; &amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7528;&amp;#x4E8E;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x5728;&amp;#x5355;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5728;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6765;&amp;#x56DE;&amp;#x5207;&amp;#x6362;&amp;#x3002;&amp;#x6F5C;&amp;#x5728;&amp;#x7684;&amp;#x5E76;&amp;#x884C;&amp;#x95EE;&amp;#x9898;&amp;#x7531;&amp;#x6B64;&amp;#x4EA7;&amp;#x751F;&amp;#x3002;&amp;#x5C3D;&amp;#x7BA1;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x4FDD;&amp;#x8BC1;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x8FDB;&amp;#x884C;&amp;#x5207;&amp;#x6362;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 9-2 shows an illustration of two threads, A and B, and a timeline of how their instructions could be executed. I&amp;#x2019;ve shaded the instructions on thread B to help distinguish them from the instructions on thread A.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;9-2&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;A&amp;#x548C;B&amp;#xFF0C;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x7EBF;&amp;#x3002;&amp;#x7EBF;&amp;#x7A0B;B&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x753B;&amp;#x4E0A;&amp;#x4E86;&amp;#x9634;&amp;#x5F71;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E0E;A&amp;#x533A;&amp;#x5206;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-2&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-2.png&quot; alt=&quot;&amp;#x56FE;9-2&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this is just one possible order of instruction execution. The processor could also have executed the instructions in the order A1, A2, A3, B1, A4, B2, B3 for example. This makes the program &lt;em&gt;nondeterministic&lt;/em&gt;. You can&amp;#x2019;t know beforehand what the result will be because you can&amp;#x2019;t know the execution order, and different execution orders can yield different results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x4E5F;&amp;#x53EF;&amp;#x80FD;&amp;#x6309;&amp;#x7167;&amp;#xFF0C;A1, A2, A3, B1, A4, B2, B3&amp;#xFF0C;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&amp;#x8FD9;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53D8;&amp;#x5F97; &lt;em&gt;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&lt;/em&gt; &amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E0D;&amp;#x80FD;&amp;#x786E;&amp;#x5B9A;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x65E0;&amp;#x6CD5;&amp;#x9884;&amp;#x5148;&amp;#x77E5;&amp;#x9053;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x53EF;&amp;#x80FD;&amp;#x4EA7;&amp;#x751F;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This example shows concurrent execution on a single processor through interleaving, whereas a multi-core system assigns a thread to each core, allowing the computer to execute more than one thread simultaneously. Each core executes its thread&amp;#x2019;s instructions in order, as shown in Figure 9-3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x5355;&amp;#x6838;&amp;#x7CFB;&amp;#x7EDF;&amp;#x901A;&amp;#x8FC7;&amp;#x7A7F;&amp;#x63D2;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x800C;&amp;#x591A;&amp;#x6838;&amp;#x7CFB;&amp;#x7EDF;&amp;#x628A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5206;&amp;#x914D;&amp;#x5230;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x4E0A;&amp;#x4F7F;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x80FD;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&amp;#x5982;&amp;#x56FE;9-3&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-3&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-3.png&quot; alt=&quot;9-3&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As with interleaving on a single core, there are no guarantees for the overall execution order, so the program is nondeterministic. When you add a second thread to a program, it becomes nondeterministic, and this makes it possible for your program to fall prey to three kinds of problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x540C;&amp;#x5355;&amp;#x6838;&amp;#x4E0A;&amp;#x7A7F;&amp;#x63D2;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x6574;&amp;#x4F53;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x4E0D;&amp;#x80FD;&amp;#x786E;&amp;#x5B9A;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7A0B;&amp;#x5E8F;&amp;#x662F;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x7684;&amp;#x3002;&amp;#x5F53;&amp;#x5F80;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x52A0;&amp;#x5165;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53D8;&amp;#x7684;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x4E86;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BB9;&amp;#x6613;&amp;#x53D7;&amp;#x5230;&amp;#x4E09;&amp;#x7C7B;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x5F71;&amp;#x54CD;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Three Goblins: Reference Cells, Mutual Exclusion, and Dwarven Berserkers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot;&gt;&lt;a href=&quot;#&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot;&gt;&lt;/a&gt;&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;There are three central challenges in concurrent programming, also known as the &lt;em&gt;The Three Concurrency Goblins&lt;/em&gt;. To see why these are scary, imagine that the program in the image in Figure 9-3 includes the pseudo&amp;#xAD;instructions in Table 9-1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x4E3B;&amp;#x8981;&amp;#x6311;&amp;#x6218;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EB; &lt;em&gt;&amp;#x4E09;&amp;#x53EA;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&lt;/em&gt; &amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BF4;&amp;#x660E;&amp;#x5176;&amp;#x4EE4;&amp;#x4EBA;&amp;#x56F0;&amp;#x6270;&amp;#x4E4B;&amp;#x5904;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x56FE;9-3&amp;#x5305;&amp;#x542B;&amp;#x8868;9-1&amp;#x7684;&amp;#x4F2A;&amp;#x6307;&amp;#x4EE4;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x8868;9-1&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;instruction&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A1&lt;/td&gt;
&lt;td&gt;WRITE X = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A2&lt;/td&gt;
&lt;td&gt;READ X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A3&lt;/td&gt;
&lt;td&gt;WRITE X = X + 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B1&lt;/td&gt;
&lt;td&gt;READ X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B2&lt;/td&gt;
&lt;td&gt;WRITE X = X + 1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;If the processor follows the order A1, A2, A3, B1, B2, then &lt;code&gt;X&lt;/code&gt; will have a value of &lt;code&gt;2&lt;/code&gt;, as you&amp;#x2019;d expect. But if it follows the order A1, A2, B1, A3, B2, &lt;code&gt;X&lt;/code&gt;&amp;#x2019;s value will be &lt;code&gt;1&lt;/code&gt;, as you can see in Figure 9-4.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x662F;:A1, A2, A3, B1, B2,&amp;#x90A3;&amp;#x4E48;&lt;code&gt;x&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#x5C06;&amp;#x662F;&lt;code&gt;2&lt;/code&gt;,&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x613F;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x987A;&amp;#x5E8F;&amp;#x662F;:A1, A2, B1, A3, B2,&lt;code&gt;x&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#x5C06;&amp;#x662F;&lt;code&gt;1&lt;/code&gt;,&amp;#x5982;&amp;#x56FE;9-4&amp;#x6240;&amp;#x793A;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-4 &amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x4EA4;&amp;#x4E92;&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-4.png&quot; alt=&quot;9-4&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&amp;#x2019;ll call this the &lt;em&gt;reference cell&lt;/em&gt; problem (the first Concurrency Goblin). The reference cell problem occurs when two threads can read and write to the same location, and the value at the location depends on the order of the reads and writes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x7BA1;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53EB; &lt;em&gt;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&lt;/em&gt; &amp;#x95EE;&amp;#x9898;(&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;)&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x95EE;&amp;#x9898;&amp;#x53D1;&amp;#x751F;&amp;#x5728;&amp;#xFF1A;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x8BFB;&amp;#x5199;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7684;&amp;#x503C;&amp;#x53D6;&amp;#x51B3;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5199;&amp;#x987A;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The second Concurrency Goblin is mutual exclusion. Imagine two threads, each trying to write a spell to a file. Without any way to claim exclusive write access to the file, the spell will end up garbled because the write instructions will be interleaved. Consider the following two spells:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#x662F;&amp;#x4E92;&amp;#x65A5;&amp;#x3002;&amp;#x5047;&amp;#x8BBE;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x90FD;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5411;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x5199;&amp;#x5165;&amp;#x5185;&amp;#x5BB9;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x65B9;&amp;#x6CD5;&amp;#x83B7;&amp;#x5F97;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x72EC;&amp;#x5360;&amp;#x5199;&amp;#x6743;&amp;#x9650;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x5199;&amp;#x6307;&amp;#x4EE4;&amp;#x7A7F;&amp;#x63D2;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x6587;&amp;#x4EF6;&amp;#x5185;&amp;#x5BB9;&amp;#x5C06;&amp;#x662F;&amp;#x6DF7;&amp;#x4E71;&amp;#x7684;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x4E24;&amp;#x6BB5;&amp;#x6587;&amp;#x5B57;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the power invested in me&lt;br&gt;by the state of California,&lt;br&gt;I now pronounce you man and wife&lt;/p&gt;
&lt;p&gt;Thunder, lightning, wind, and rain,&lt;br&gt;a delicious sandwich, I summon again&lt;/p&gt;
&lt;p&gt;If you write these to a file without mutual exclusion, you could end up with this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5E26;&amp;#x4E92;&amp;#x65A5;&amp;#x5730;&amp;#x5199;&amp;#x5165;&amp;#xFF0C;&amp;#x6700;&amp;#x7EC8;&amp;#x53EF;&amp;#x80FD;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the power invested in me&lt;br&gt;by Thunder, lightning, wind, and rain,&lt;br&gt;the state of California,&lt;br&gt;I now pronounce you a delicious man sandwich, and wife&lt;br&gt;I summon again&lt;/p&gt;
&lt;p&gt;The third Concurrency Goblin is what I&amp;#x2019;ll call the dwarven berserker problem (aka deadlock). Imagine four berserkers sitting around a rough-hewn, circular wooden table comforting each other. &amp;#x201C;I know I&amp;#x2019;m distant toward my children, but I just don&amp;#x2019;t know how to communicate with them,&amp;#x201D; one growls. The rest sip their coffee and nod knowingly, care lines creasing their eye places.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#x662F;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&amp;#x95EE;&amp;#x9898;(&amp;#x5373;&amp;#x6B7B;&amp;#x9501;)&amp;#x3002;&amp;#x60F3;&amp;#x8C61;&amp;#x4E00;&amp;#x4E0B;&amp;#x56DB;&amp;#x4E2A;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&amp;#x56F4;&amp;#x7740;&amp;#x4E00;&amp;#x4E2A;&amp;#x6728;&amp;#x5934;&amp;#x684C;&amp;#x5B50;&amp;#x804A;&amp;#x5929;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, as everyone knows, the dwarven berserker ritual for ending a comforting coffee klatch is to pick up their &amp;#x201C;comfort sticks&amp;#x201D; (double-bladed war axes) and scratch each other&amp;#x2019;s backs. One war axe is placed between each pair of dwarves, as shown in Figure 9-5.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x5BF9;&amp;#x77EE;&amp;#x4EBA;&amp;#x4E4B;&amp;#x95F4;&amp;#x90FD;&amp;#x653E;&amp;#x6709;&amp;#x4E00;&amp;#x628A;&amp;#x65A7;&amp;#x5934;&amp;#x3002;&amp;#x5982;&amp;#x56FE;9-5&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-5&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-5.png&quot; alt=&quot;&amp;#x56FE;9-5&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Their ritual proceeds thusly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pick up the left war axe, when available.&lt;/li&gt;
&lt;li&gt;Pick up the right war axe, when available.&lt;/li&gt;
&lt;li&gt;Comfort your neighbor with vigorous swings of your &amp;#x201C;comfort sticks.&amp;#x201D;&lt;/li&gt;
&lt;li&gt;Release both war axes.&lt;/li&gt;
&lt;li&gt;Repeat.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EEA;&amp;#x5F0F;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x53EF;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x62FF;&amp;#x8D77;&amp;#x5DE6;&amp;#x8FB9;&amp;#x7684;&amp;#x6218;&amp;#x65A7;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x53EF;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x62FF;&amp;#x8D77;&amp;#x53F3;&amp;#x8FB9;&amp;#x7684;&amp;#x6218;&amp;#x65A7;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&amp;#x7ED9;&amp;#x90BB;&amp;#x5C45;&amp;#x6320;&amp;#x75D2;&amp;#x75D2;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x653E;&amp;#x4E0B;&amp;#x4E24;&amp;#x628A;&amp;#x65A7;&amp;#x5934;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x91CD;&amp;#x590D;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Following this ritual, it&amp;#x2019;s entirely possible that all the dwarven berserkers will pick up their left comfort stick and then block indefinitely while waiting for the comfort stick to their right to become available, resulting in deadlock. (By the way, if you want to look into this phenomenon further, it&amp;#x2019;s usually referred to as the dining philosophers problem, but that&amp;#x2019;s a more boring scenario.) This book doesn&amp;#x2019;t discuss deadlock in much detail, but it&amp;#x2019;s good to know the concept and its terminology.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6309;&amp;#x7167;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EEA;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5B8C;&amp;#x5168;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x6240;&amp;#x6709;&amp;#x77EE;&amp;#x4EBA;&amp;#x90FD;&amp;#x4E3E;&amp;#x7740;&amp;#x5DE6;&amp;#x624B;&amp;#x65A7;&amp;#x5934;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7B49;&amp;#x7740;&amp;#x53F3;&amp;#x8FB9;&amp;#x7684;&amp;#x65A7;&amp;#x5934;&amp;#xFF0C;&amp;#x9677;&amp;#x5165;&amp;#x65E0;&amp;#x9650;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x5BFC;&amp;#x81F4;&amp;#x6B7B;&amp;#x9501;&amp;#x3002;(&amp;#x987A;&amp;#x4FBF;&amp;#x63D0;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x7814;&amp;#x7A76;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x901A;&amp;#x5E38;&amp;#x53EB;&amp;#x8FDB;&amp;#x9910;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x5BB6;&amp;#x95EE;&amp;#x9898;)&amp;#x3002;&amp;#x672C;&amp;#x4E66;&amp;#x4E0D;&amp;#x5BF9;&amp;#x6B7B;&amp;#x9501;&amp;#x8FDB;&amp;#x884C;&amp;#x7EC6;&amp;#x8282;&amp;#x8BA8;&amp;#x8BBA;&amp;#xFF0C;&amp;#x4F46;&amp;#x77E5;&amp;#x9053;&amp;#x6982;&amp;#x5FF5;&amp;#x548C;&amp;#x672F;&amp;#x8BED;&amp;#x662F;&amp;#x4EF6;&amp;#x597D;&amp;#x4E8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrent programming has its goblins, but with the right tools, it&amp;#x2019;s manageable and even fun. Let&amp;#x2019;s start looking at the right tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x6709;&amp;#x8FD9;&amp;#x4E9B;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF0C;&amp;#x4F46;&amp;#x7528;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x662F;&amp;#x53EF;&amp;#x7BA1;&amp;#x7406;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x3002;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x5F00;&amp;#x59CB;&amp;#x67E5;&amp;#x770B;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures, Delays, and Promises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x672A;&amp;#x6765;-future-&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;-delay-&amp;#x548C;&amp;#x627F;&amp;#x8BFA;-promise&quot;&gt;&lt;a href=&quot;#&amp;#x672A;&amp;#x6765;-future-&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;-delay-&amp;#x548C;&amp;#x627F;&amp;#x8BFA;-promise&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x672A;&amp;#x6765;(future)&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;(delay)&amp;#x548C;&amp;#x627F;&amp;#x8BFA;(promise)&quot;&gt;&lt;/a&gt;&amp;#x672A;&amp;#x6765;(future)&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;(delay)&amp;#x548C;&amp;#x627F;&amp;#x8BFA;(promise)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Futures, delays, and promises are easy, lightweight tools for concurrent programming. In this section, you&amp;#x2019;ll learn how each one works and how to use them together to defend against the reference cell Concurrency Goblin and the mutual exclusion Concurrency Goblin. You&amp;#x2019;ll discover that, although simple, these tools go a long way toward meeting your concurrency needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x8F7B;&amp;#x91CF;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C06;&amp;#x4E86;&amp;#x89E3;&amp;#x4ED6;&amp;#x4EEC;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B66;&amp;#x4E60;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x9632;&amp;#x6B62;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x95EE;&amp;#x9898;&amp;#x548C;&amp;#x4E92;&amp;#x65A5;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5DE5;&amp;#x5177;&amp;#x867D;&amp;#x7136;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x4F46;&amp;#x5BF9;&amp;#x4F60;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x6709;&amp;#x5F88;&amp;#x5927;&amp;#x5E2E;&amp;#x52A9;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They do this by giving you more flexibility than is possible with serial code. When you write serial code, you bind together these three events:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x76F8;&amp;#x6BD4;&amp;#x8FDE;&amp;#x7EED;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E3A;&amp;#x4F60;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x7075;&amp;#x6D3B;&amp;#x6027;&amp;#x3002;&amp;#x5199;&amp;#x8FDE;&amp;#x7EED;&amp;#x4EE3;&amp;#x7801;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x628A;&amp;#x8FD9;&amp;#x4E09;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;&amp;#x4E86;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Task definition&lt;/li&gt;
&lt;li&gt;Task execution&lt;/li&gt;
&lt;li&gt;Requiring the task&amp;#x2019;s result&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&lt;/li&gt;
&lt;li&gt;&amp;#x4EFB;&amp;#x52A1;&amp;#x6267;&amp;#x884C;&lt;/li&gt;
&lt;li&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x679C;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;As an example, look at this hypothetical code, which defines a simple API call task:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5047;&amp;#x5B9A;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x5355;&amp;#x7684;API&amp;#x8C03;&amp;#x7528;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;web-api/get&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:dwarven-beard-waxes&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As soon as Clojure encounters this task definition, it executes it. It also requires the result right now, blocking until the API call finishes. Part of learning concurrent programming is learning to identify when these chronological couplings aren&amp;#x2019;t necessary. Futures, delays, and promises allow you to separate task definition, task execution, and requiring the result. Onward!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x65E6;Clojure&amp;#x9047;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ACB;&amp;#x523B;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4E00;&amp;#x76F4;&amp;#x7B49;&amp;#x5F85;&amp;#x76F4;&amp;#x5230;API&amp;#x8C03;&amp;#x7528;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&amp;#x5B66;&amp;#x4E60;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x9700;&amp;#x8981;&amp;#x5B66;&amp;#x4F1A;&amp;#x8BC6;&amp;#x522B;&amp;#x8FD9;&amp;#x4E9B;&amp;#x65F6;&amp;#x95F4;&amp;#x4E0A;&amp;#x7684;&amp;#x85D5;&amp;#x5408;&amp;#x4F55;&amp;#x65F6;&amp;#x4E0D;&amp;#x662F;&amp;#x5FC5;&amp;#x987B;&amp;#x7684;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x5206;&amp;#x79BB;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x4EFB;&amp;#x52A1;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x548C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x672A;&amp;#x6765;&quot;&gt;&lt;a href=&quot;#&amp;#x672A;&amp;#x6765;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x672A;&amp;#x6765;&quot;&gt;&lt;/a&gt;&amp;#x672A;&amp;#x6765;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;In Clojure, you can use futures to define a task and place it on another thread without requiring the result immediately. You can create a &lt;code&gt;future&lt;/code&gt; with the future macro. Try this in a REPL:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;Clojure&amp;#x4E2D;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x672A;&amp;#x6765;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x628A;&amp;#x5B83;&amp;#x653E;&amp;#x8FDB;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4E0D;&amp;#x7528;&amp;#x9A6C;&amp;#x4E0A;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x7528;&lt;code&gt;future&lt;/code&gt;&amp;#x5B8F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x672A;&amp;#x6765;&amp;#x3002;&amp;#x5728;REPL&amp;#x91CC;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;apos;ll print after 4 seconds&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;apos;ll print immediately&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Thread/sleep&lt;/code&gt; tells the current thread to just sit on its bum and do nothing for the specified number of milliseconds. Normally, if you evaluated &lt;code&gt;Thread/sleep&lt;/code&gt; in your REPL, you wouldn&amp;#x2019;t be able to evaluate any other statements until the REPL was done sleeping; the thread executing your REPL would be blocked. However, &lt;code&gt;future&lt;/code&gt; creates a new thread and places each expression you pass it on the new thread, including &lt;code&gt;Thread/sleep&lt;/code&gt;, allowing the REPL&amp;#x2019;s thread to continue, unblocked.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Thread/sleep&lt;/code&gt;&amp;#x544A;&amp;#x8BC9;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5728;&amp;#x6307;&amp;#x5B9A;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x5185;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x4E0D;&amp;#x5E72;&amp;#x3002;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5728;&amp;#x4F60;&amp;#x7684;REPL&amp;#x91CC;&amp;#x6267;&amp;#x884C;&lt;code&gt;Thread/sleep&lt;/code&gt;,&amp;#x4F60;&amp;#x5C06;&amp;#x65E0;&amp;#x6CD5;&amp;#x6C42;&amp;#x503C;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x53E5;&amp;#xFF0C;sleep&amp;#x7ED3;&amp;#x675F;&amp;#x524D;&amp;#x4F60;&amp;#x7684;REPL&amp;#x90FD;&amp;#x5C06;&amp;#x5904;&amp;#x4E8E;&amp;#x963B;&amp;#x585E;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x4F46;&lt;code&gt;future&lt;/code&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x628A;&amp;#x4F20;&amp;#x7ED9;future&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x90FD;&amp;#x653E;&amp;#x5728;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&lt;code&gt;Thread/sleep&lt;/code&gt;,&amp;#x8FD9;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;REPL&amp;#x7EBF;&amp;#x7A0B;&amp;#x7EE7;&amp;#x7EED;&amp;#xFF0C;&amp;#x4FDD;&amp;#x6301;&amp;#x975E;&amp;#x963B;&amp;#x585E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can use futures to run tasks on a separate thread and then forget about them, but often you&amp;#x2019;ll want to use the result of the task. The &lt;code&gt;future&lt;/code&gt; function returns a reference value that you can use to request the result. The reference is like the ticket that a dry cleaner gives you: at any time you can use it to request your clean dress, but if your dress isn&amp;#x2019;t clean yet, you&amp;#x2019;ll have to wait. Similarly, you can use the reference value to request a future&amp;#x2019;s result, but if the future isn&amp;#x2019;t done computing the result, you&amp;#x2019;ll have to wait.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x672A;&amp;#x6765;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x653E;&amp;#x5728;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4E0D;&amp;#x518D;&amp;#x7BA1;&amp;#x5B83;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x4EFB;&amp;#x52A1;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;code&gt;future&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x50CF;&amp;#x5E72;&amp;#x6D17;&amp;#x5E97;&amp;#x5458;&amp;#x53D1;&amp;#x7ED9;&amp;#x4F60;&amp;#x7684;&amp;#x7968;&amp;#x636E;&amp;#xFF1A;&amp;#x4EFB;&amp;#x4F55;&amp;#x65F6;&amp;#x5019;&amp;#x4F60;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5B83;&amp;#x6765;&amp;#x53D6;&amp;#x56DE;&amp;#x4F60;&amp;#x7684;&amp;#x5E72;&amp;#x51C0;&amp;#x8863;&amp;#x670D;&amp;#xFF0C;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x8863;&amp;#x670D;&amp;#x8FD8;&amp;#x6CA1;&amp;#x6D17;&amp;#x597D;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x7B49;&amp;#x5F85;&amp;#x3002;&amp;#x7C7B;&amp;#x4F3C;&amp;#x5730;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x503C;&amp;#x6765;&amp;#x8BF7;&amp;#x6C42;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x8FD8;&amp;#x6CA1;&amp;#x8BA1;&amp;#x7B97;&amp;#x51FA;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x7B49;&amp;#x5F85;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Requesting a future&amp;#x2019;s result is called dereferencing the future, and you do it with either the &lt;code&gt;deref&lt;/code&gt; function or the &lt;code&gt;@&lt;/code&gt; reader macro. A future&amp;#x2019;s result value is the value of the last expression evaluated in its body. A future&amp;#x2019;s body executes only once, and its value gets cached. Try the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x53EB;&amp;#x505A;&amp;#x5BF9;&amp;#x672A;&amp;#x6765;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;defef&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&lt;code&gt;@&lt;/code&gt;&amp;#x8BFB;&amp;#x53D6;&amp;#x5B8F;&amp;#x53D6;&amp;#x503C;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x662F;&amp;#x5176;&amp;#x4E3B;&amp;#x4F53;&amp;#x91CC;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x53EA;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5176;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x8BD5;&amp;#x8BD5;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;this prints once&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;deref: &amp;quot;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;@: &amp;quot;&lt;/span&gt; @result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;this prints once&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; deref: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; @: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that the string &lt;code&gt;&amp;quot;this prints once&amp;quot;&lt;/code&gt; indeed prints only once, even though you dereference the future twice. This shows that the future&amp;#x2019;s body ran only once and the result, &lt;code&gt;2&lt;/code&gt;, got cached.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;this prints once&amp;quot;&lt;/code&gt;&amp;#x786E;&amp;#x5B9E;&amp;#x53EA;&amp;#x6253;&amp;#x5370;&amp;#x4E86;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x4F60;&amp;#x53D6;&amp;#x503C;&amp;#x4E86;&amp;#x4E24;&amp;#x6B21;&amp;#x3002;&amp;#x8FD9;&amp;#x8BF4;&amp;#x660E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x53EA;&amp;#x8FD0;&amp;#x884C;&amp;#x4E86;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x7ED3;&amp;#x679C;,&lt;code&gt;2&lt;/code&gt;&amp;#x88AB;&amp;#x7F13;&amp;#x5B58;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dereferencing a future will block if the future hasn&amp;#x2019;t finished running, like so:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53D6;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x8FD0;&amp;#x884C;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The result is: &amp;quot;&lt;/span&gt; @result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;It will be at least 3 seconds before I print&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; The result is: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; It will be at least 3 seconds before I print&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes you want to place a time limit on how long to wait for a future. To do that, you can pass &lt;code&gt;deref&lt;/code&gt; a number of milliseconds to wait along with the value to return if the &lt;code&gt;deref&lt;/code&gt; times out:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x65F6;&amp;#x95F4;&amp;#x9650;&amp;#x5236;&amp;#xFF0C;&amp;#x9650;&amp;#x5236;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x4E0A;&amp;#x9650;&amp;#x3002;&amp;#x7ED9;&lt;code&gt;defef&lt;/code&gt;&amp;#x4F20;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B49;&amp;#x5F85;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x5373;&amp;#x53EF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code tells &lt;code&gt;deref&lt;/code&gt; to return the value &lt;code&gt;5&lt;/code&gt; if the future doesn&amp;#x2019;t return a value within 10 milliseconds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x4E3A;&lt;code&gt;defef&lt;/code&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;10&amp;#x6BEB;&amp;#x79D2;&amp;#x7684;&amp;#x7B49;&amp;#x5F85;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x548C;&lt;code&gt;5&lt;/code&gt;&amp;#xFF0C;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5230;&amp;#x671F;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, you can interrogate a future using &lt;code&gt;realized?&lt;/code&gt; to see if it&amp;#x2019;s done running:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;realized?&lt;/code&gt;&amp;#x67E5;&amp;#x8BE2;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x662F;&amp;#x5426;&amp;#x8FD0;&amp;#x884C;&amp;#x5B8C;&amp;#x6210;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;realized?&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [f (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  @f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;realized?&lt;/span&gt; f))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures are a dead-simple way to sprinkle some concurrency on your program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#x662F;&amp;#x8D85;&amp;#x7EA7;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On their own, they give you the power to chuck tasks onto other threads, which can make your program more efficient. They also let your program behave more flexibly by giving you control over when a task&amp;#x2019;s result is required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C31;&amp;#x5176;&amp;#x672C;&amp;#x8EAB;&amp;#x800C;&amp;#x8A00;&amp;#xFF0C;&amp;#x4ED6;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x653E;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x66F4;&amp;#x9AD8;&amp;#x6548;&amp;#x3002;&amp;#x4E5F;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x63A7;&amp;#x5236;&amp;#x4F55;&amp;#x65F6;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x66F4;&amp;#x52A0;&amp;#x7075;&amp;#x6D3B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you dereference a future, you indicate that the result is required right now and that evaluation should stop until the result is obtained. You&amp;#x2019;ll see how this can help you deal with the mutual exclusion problem in just a bit.  Alternatively, you can ignore the result. For example, you can use futures to write to a log file asynchronously, in which case you don&amp;#x2019;t need to dereference the future to get any value back.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x53D6;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x73B0;&amp;#x5728;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&amp;#x6C42;&amp;#x503C;&amp;#x4F1A;&amp;#x505C;&amp;#x6B62;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x83B7;&amp;#x5F97;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x4ED6;&amp;#x5982;&amp;#x4F55;&amp;#x5E2E;&amp;#x4F60;&amp;#x5904;&amp;#x7406;&amp;#x4E92;&amp;#x65A5;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5FFD;&amp;#x7565;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x672A;&amp;#x6765;&amp;#x5F02;&amp;#x6B65;&amp;#x5730;&amp;#x5199;&amp;#x65E5;&amp;#x5FD7;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x53D6;&amp;#x56DE;&amp;#x4EFB;&amp;#x4F55;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The flexibility that futures give you is very cool. Clojure also allows you to treat task definition and requiring the result independently with delays and promises.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x7684;&amp;#x7075;&amp;#x6D3B;&amp;#x6027;&amp;#x5F88;&amp;#x9177;&amp;#x3002;Clojure&amp;#x4E5F;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7528;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x5206;&amp;#x522B;&amp;#x5904;&amp;#x7406;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&amp;#x548C;&amp;#x7ED3;&amp;#x679C;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Delays&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5EF6;&amp;#x671F;&quot;&gt;&lt;a href=&quot;#&amp;#x5EF6;&amp;#x671F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EF6;&amp;#x671F;&quot;&gt;&lt;/a&gt;&amp;#x5EF6;&amp;#x671F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Delays&lt;/code&gt; allow you to define a task without having to execute it or require the result immediately. You can create a delay using &lt;code&gt;delay&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Delays&lt;/code&gt;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x7528;&amp;#x7ACB;&amp;#x523B;&amp;#x6267;&amp;#x884C;&amp;#x5E76;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x7528;&lt;code&gt;delay&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x5EF6;&amp;#x671F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; jackson-5-delay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;delay&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [message &lt;span class=&quot;string&quot;&gt;&amp;quot;Just call my name and I&amp;apos;ll be there&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;First deref:&amp;quot;&lt;/span&gt; message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           message)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, nothing is printed, because we haven&amp;#x2019;t yet asked the &lt;code&gt;let&lt;/code&gt; form to be evaluated. You can evaluate the delay and get its result by dereferencing it or by using &lt;code&gt;force&lt;/code&gt;. &lt;code&gt;force&lt;/code&gt; behaves identically to &lt;code&gt;deref&lt;/code&gt; in that it communicates more clearly that you&amp;#x2019;re causing a task to start as opposed to waiting for a task to finish:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x6CA1;&amp;#x6253;&amp;#x5370;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x6CA1;&amp;#x8BA9;&lt;code&gt;let&lt;/code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x6216;&amp;#x7528;&lt;code&gt;force&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x5EF6;&amp;#x671F;&amp;#x6C42;&amp;#x503C;&amp;#x5E76;&amp;#x5F97;&amp;#x5230;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;code&gt;force&lt;/code&gt;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x4E0E;&lt;code&gt;defef&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x5730;&amp;#x8868;&amp;#x660E;&amp;#x4F60;&amp;#x4F7F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B8C;&amp;#x6210;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;force&lt;/span&gt;&lt;/span&gt; jackson-5-delay)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; First deref: Just call my name and I&amp;apos;ll be there&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Just call my name and I&amp;apos;ll be there&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Like futures, a delay is run only once and its result is cached. Subsequent dereferencing will return the Jackson 5 message without printing anything:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x672A;&amp;#x6765;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x53EA;&amp;#x8FD0;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x51B0;&amp;#x978B;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x53D6;&amp;#x503C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6253;&amp;#x5370;&amp;#x4EFB;&amp;#x4F55;&amp;#x4E1C;&amp;#x897F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@jackson-5-delay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; &amp;quot;Just call my name and I&amp;apos;ll be there&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;One way you can use a delay is to fire off a statement the first time one future out of a group of related futures finishes. For example, pretend your app uploads a set of headshots to a headshot-sharing site and notifies the owner as soon as the first one is up, as in the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5EF6;&amp;#x671F;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x6CD5;&amp;#x662F;&amp;#xFF1A;&amp;#x5F53;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x4E00;&amp;#x7EC4;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#x4E2D;&amp;#x7684;&amp;#x67D0;&amp;#x4E2A;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#xFF0C;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x7684;app&amp;#x4E0A;&amp;#x4F20;&amp;#x4E00;&amp;#x7EC4;&amp;#x5934;&amp;#x50CF;&amp;#x7167;&amp;#x7247;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x5934;&amp;#x50CF;&amp;#x7167;&amp;#x7247;&amp;#x5206;&amp;#x4EAB;&amp;#x7F51;&amp;#x7AD9;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&amp;#x5F53;&amp;#x7B2C;&amp;#x4E00;&amp;#x5F20;&amp;#x4E0A;&amp;#x4F20;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#x901A;&amp;#x77E5;&amp;#x7528;&amp;#x6237;&amp;#xFF0C;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; gimli-headshots [&lt;span class=&quot;string&quot;&gt;&amp;quot;serious.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;fun.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;playful.jpg&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; email-user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [email-address]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sending headshot notification to&amp;quot;&lt;/span&gt; email-address))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; upload-document&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Needs to be implemented&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [headshot]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [notify (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;delay&lt;/span&gt;&lt;/span&gt; &amp;#x278A;(&lt;span class=&quot;name&quot;&gt;email-user&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;and-my-axe@gmail.com&amp;quot;&lt;/span&gt;))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [headshot gimli-headshots]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;upload-document&lt;/span&gt; headshot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#x278B;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;force&lt;/span&gt;&lt;/span&gt; notify))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you define a vector of headshots to upload (&lt;code&gt;gimli-headshots&lt;/code&gt;) and two functions (&lt;code&gt;email-user&lt;/code&gt; and &lt;code&gt;upload-document&lt;/code&gt;) to pretend-perform the two operations. Then you use &lt;code&gt;let&lt;/code&gt; to bind &lt;code&gt;notify&lt;/code&gt; to a delay. The body of the delay, &lt;code&gt;(email-user &amp;quot;and-my-axe@gmail.com&amp;quot;)&lt;/code&gt; &amp;#x278A;, isn&amp;#x2019;t evaluated when the delay is created. Instead, it gets evaluated the first time one of the futures created by the &lt;code&gt;doseq&lt;/code&gt; form evaluates (&lt;code&gt;force notify&lt;/code&gt;) &amp;#x278B;. Even though &lt;code&gt;(force notify)&lt;/code&gt; will be evaluated three times, the delay body is evaluated only once. Gimli will be grateful to know when the first headshot is available so he can begin tweaking it and sharing it. He&amp;#x2019;ll also appreciate not being spammed, and you&amp;#x2019;ll appreciate not facing his dwarven wrath.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5B50;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x7EC4;&amp;#x8981;&amp;#x4E0A;&amp;#x4F20;&amp;#x7684;&amp;#x5934;&amp;#x50CF;(&lt;code&gt;gimli-headshots&lt;/code&gt;)&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;(&lt;code&gt;email-user&lt;/code&gt; &amp;#x548C; &lt;code&gt;upload-document&lt;/code&gt;)&amp;#x6A21;&amp;#x62DF;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x7528;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&lt;code&gt;nodify&lt;/code&gt;&amp;#x81F3;&amp;#x4E00;&amp;#x4E2A;&amp;#x5EF6;&amp;#x671F;&amp;#x3002;&amp;#x5EF6;&amp;#x671F;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;,&lt;code&gt;(email-user &amp;quot;and-my-axe@gmail.com&amp;quot;)&lt;/code&gt;&amp;#x278A;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x6CA1;&amp;#x6709;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x53D1;&amp;#x751F;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x662F;&amp;#xFF1A;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&lt;code&gt;doseq&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x67D0;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x6C42;&amp;#x503C;&lt;code&gt;(force notify)&lt;/code&gt;&amp;#x278B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x3002;&amp;#x867D;&amp;#x7136;&lt;code&gt;(force notify)&lt;/code&gt;&amp;#x5C06;&amp;#x6C42;&amp;#x503C;&amp;#x4E09;&amp;#x6B21;&amp;#xFF0C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5EF6;&amp;#x671F;&amp;#x4E3B;&amp;#x4F53;&amp;#x53EA;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x6B21;&amp;#x3002;&amp;#x4E0A;&amp;#x4F20;&amp;#x8005;&amp;#x77E5;&amp;#x9053;&amp;#x7B2C;&amp;#x4E00;&amp;#x5F20;&amp;#x7167;&amp;#x7247;&amp;#x4E0A;&amp;#x4F20;&amp;#x5B8C;&amp;#x6210;&amp;#x4F1A;&amp;#x5F88;&amp;#x9AD8;&amp;#x5174;&amp;#xFF0C;&amp;#x4ED6;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F00;&amp;#x59CB;&amp;#x7F16;&amp;#x8F91;&amp;#x7167;&amp;#x7247;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4E5F;&amp;#x56E0;&amp;#x4E3A;&amp;#x6CA1;&amp;#x6536;&amp;#x5230;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#x5783;&amp;#x573E;&amp;#x90AE;&amp;#x4EF6;&amp;#x800C;&amp;#x9AD8;&amp;#x5174;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This technique can help protect you from the mutual exclusion Concurrency Goblin&amp;#x2014;the problem of making sure that only one thread can access a particular resource at a time. In this example, the delay guards the email server resource. Because the body of a delay is guaranteed to fire only once, you can be sure that you will never run into a situation where two threads send the same email. Of course, no thread will ever be able to use the delay to send an email again. That might be too drastic a constraint for most situations, but in cases like this example, it works perfectly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6280;&amp;#x5DE7;&amp;#x53EF;&amp;#x4EE5;&amp;#x9632;&amp;#x6B62;&amp;#x4E92;&amp;#x65A5;&amp;#x5E76;&amp;#x53D1;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x786E;&amp;#x4FDD;&amp;#x4E00;&amp;#x4E2A;&amp;#x65F6;&amp;#x95F4;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E00;&amp;#x4E2A;&amp;#x7279;&amp;#x5B9A;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x4FDD;&amp;#x62A4;&amp;#x4E86;&amp;#x90AE;&amp;#x4EF6;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x5EF6;&amp;#x671F;&amp;#x4E3B;&amp;#x4F53;&amp;#x4FDD;&amp;#x8BC1;&amp;#x53EA;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x4F60;&amp;#x80FD;&amp;#x786E;&amp;#x4FE1;&amp;#x7EDD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53D1;&amp;#x9001;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&amp;#x5F53;&amp;#x7136;&amp;#xFF0C;&amp;#x6CA1;&amp;#x6709;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x518D;&amp;#x6B21;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5EF6;&amp;#x671F;&amp;#x53D1;&amp;#x9001;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9650;&amp;#x5236;&amp;#x53EF;&amp;#x80FD;&amp;#x592A;&amp;#x6FC0;&amp;#x8FDB;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9650;&amp;#x5236;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5F88;&amp;#x5B8C;&amp;#x7F8E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Promise&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x627F;&amp;#x8BFA;&quot;&gt;&lt;a href=&quot;#&amp;#x627F;&amp;#x8BFA;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x627F;&amp;#x8BFA;&quot;&gt;&lt;/a&gt;&amp;#x627F;&amp;#x8BFA;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Promises&lt;/em&gt; allow you to express that you expect a result without having to define the task that should produce it or when that task should run. You create promises using &lt;code&gt;promise&lt;/code&gt; and deliver a result to them using &lt;code&gt;deliver&lt;/code&gt;. You obtain the result by dereferencing:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x627F;&amp;#x8BFA;&lt;/em&gt; &amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x8868;&amp;#x8FBE;&amp;#xFF1A;&amp;#x671F;&amp;#x671B;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x7528;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x6216;&amp;#x4E0D;&amp;#x7528;&amp;#x6307;&amp;#x5B9A;&amp;#x90A3;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5E94;&amp;#x8BE5;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&amp;#x7528;&lt;code&gt;promise&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;deliver&lt;/code&gt;&amp;#x4EA4;&amp;#x4ED8;&amp;#x627F;&amp;#x8BFA;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x83B7;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(def my-promise (promise))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(deliver my-promise (+ 1 2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@my-promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, you create a promise and then deliver a value to it. Finally, you obtain the value by dereferencing the promise. Dereferencing is how you express that you expect a result, and if you had tried to dereference &lt;code&gt;my-promise&lt;/code&gt; without first delivering a value, the program would block until a promise was delivered, just like with futures and delays. You can only deliver a result to a promise once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&amp;#x5B83;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x83B7;&amp;#x5F97;&amp;#x4E86;&amp;#x90A3;&amp;#x4E2A;&amp;#x503C;&amp;#x3002;&amp;#x53D6;&amp;#x503C;&amp;#x662F;&amp;#x8868;&amp;#x8FBE;&amp;#x4E86;&amp;#x4F60;&amp;#x671F;&amp;#x671B;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5148;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#xFF0C;&amp;#x5C31;&amp;#x5BF9;&lt;code&gt;my-promise&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C06;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x76F4;&amp;#x81F3;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x88AB;&amp;#x4EA4;&amp;#x4ED8;&amp;#xFF0C;&amp;#x4E0E;&amp;#x672A;&amp;#x6765;(futures)&amp;#x548C;&amp;#x5EF6;&amp;#x671F;(delay)&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x53EA;&amp;#x80FD;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x6B21;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One use for promises is to find the first satisfactory element in a collection of data. Suppose, for example, that you&amp;#x2019;re gathering ingredients to make your parrot sound like James Earl Jones. Because James Earl Jones has the smoothest voice on earth, one of the ingredients is premium yak butter with a smoothness rating of 97 or greater. You have a budget of $100 for one pound.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x627F;&amp;#x8BFA;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x5904;&amp;#x662F;&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x5408;&amp;#x91CC;&amp;#x627E;&amp;#x5230;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6EE1;&amp;#x8DB3;&amp;#x6761;&amp;#x4EF6;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x6B63;&amp;#x5728;&amp;#x6536;&amp;#x96C6;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;&amp;#x9E66;&amp;#x9E49;&amp;#x53D1;&amp;#x51FA;&amp;#x540C;James Earl Jones&amp;#x58F0;&amp;#x97F3;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x58F0;&amp;#x97F3;&amp;#x7684;&amp;#x914D;&amp;#x65B9;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x914D;&amp;#x65B9;&amp;#x662F;&amp;#x5149;&amp;#x6ED1;&amp;#x5EA6;&amp;#x4E3A;97%&amp;#x6216;&amp;#x66F4;&amp;#x9AD8;&amp;#x7684;&amp;#x4F18;&amp;#x8D28;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#x3002;&amp;#x4F60;&amp;#x6709;100&amp;#x7F8E;&amp;#x5143;&amp;#x7684;&amp;#x9884;&amp;#x7B97;&amp;#x7528;&amp;#x4E8E;&amp;#x8D2D;&amp;#x4E70;&amp;#x4E00;&amp;#x78C5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are a modern practitioner of the magico-ornithological arts, so rather than tediously navigating each yak butter retail site, you create a script to give you the URL of the first yak butter that meets your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x51B3;&amp;#x5B9A;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x811A;&amp;#x672C;&amp;#x7528;&amp;#x6765;&amp;#x83B7;&amp;#x5F97;&amp;#x7B26;&amp;#x5408;&amp;#x9700;&amp;#x6C42;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7266;&amp;#x725B;&amp;#x6CB9;&amp;#x7684;URL&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following code defines some yak butter products, creates a function to mock up an API call, and creates another function to test whether a product is satisfactory:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#x4EA7;&amp;#x54C1;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7528;&amp;#x6765;&amp;#x6A21;&amp;#x62DF;API&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6D4B;&amp;#x8BD5;&amp;#x4EA7;&amp;#x54C1;&amp;#x662F;&amp;#x5426;&amp;#x6EE1;&amp;#x8DB3;&amp;#x9700;&amp;#x8981;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; yak-butter-international&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:store&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Yak Butter International&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; butter-than-nothing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:store&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Butter Than Nothing&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; This is the butter that meets our requirements&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; baby-got-yak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:store&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Baby Got Yak&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; mock-api-call&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [result]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; satisfactory?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;If the butter meets our criteria, return the butter, else return false&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [butter]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;and&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; butter) &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; butter) &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       butter))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The API call waits one second before returning a result to simulate the time it would take to perform an actual call.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;API&amp;#x8C03;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x524D;&amp;#x7B49;&amp;#x5F85;&amp;#x4E86;&amp;#x4E00;&amp;#x79D2;&amp;#xFF0C;&amp;#x7528;&amp;#x6765;&amp;#x6A21;&amp;#x62DF;&amp;#x5B9E;&amp;#x9645;&amp;#x8C03;&amp;#x7528;&amp;#x82B1;&amp;#x8D39;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To show how long it will take to check the sites synchronously, we&amp;#x2019;ll use &lt;code&gt;some&lt;/code&gt; to apply the &lt;code&gt;satisfactory?&lt;/code&gt; function to each element of the collection and return the first truthy result, or nil if there are none. When you check each site synchronously, it could take more than one second per site to obtain a result, as the following code shows:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x663E;&amp;#x793A;&amp;#x540C;&amp;#x6B65;&amp;#x68C0;&amp;#x67E5;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7F51;&amp;#x7AD9;&amp;#x9700;&amp;#x8981;&amp;#x591A;&amp;#x4E45;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;&amp;#x4EA7;&amp;#x54C1;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x6BCF;&amp;#x9879;&amp;#x4EA7;&amp;#x54C1;&amp;#x6A21;&amp;#x62DF;api&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x53D6;&amp;#x5F97;&amp;#x4EA7;&amp;#x54C1;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x7B26;&amp;#x5408;&amp;#x8981;&amp;#x6C42;&amp;#x3002;&amp;#x5E76;&amp;#x7528;&lt;code&gt;some&lt;/code&gt;&amp;#x53D6;&amp;#x51FA;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x5408;&amp;#x8981;&amp;#x6C42;&amp;#x7684;&amp;#x4EA7;&amp;#x54C1;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x7B26;&amp;#x5408;&amp;#x7684;&amp;#x4EA7;&amp;#x54C1;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;nil&amp;#x3002;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;some&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;comp&lt;/span&gt;&lt;/span&gt; satisfactory? mock-api-call)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [yak-butter-international butter-than-nothing baby-got-yak]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 3002.132 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:store &amp;quot;Baby Got Yak&amp;quot;, :smoothness 99, :price 94}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here I&amp;#x2019;ve used &lt;code&gt;comp&lt;/code&gt; to compose functions, and I&amp;#x2019;ve used &lt;code&gt;time&lt;/code&gt; to print the time taken to evaluate a form. You can use a promise and futures to perform each check on a separate thread. If your computer has multiple cores, this could reduce the time it takes to about one second:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&lt;code&gt;comp&lt;/code&gt;&amp;#x7EC4;&amp;#x5408;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&lt;code&gt;time&lt;/code&gt;&amp;#x6253;&amp;#x5370;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x548C;&amp;#x672A;&amp;#x6765;&amp;#x5728;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x68C0;&amp;#x67E5;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x662F;&amp;#x591A;&amp;#x6838;&amp;#x7684;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x82B1;&amp;#x8D39;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x51CF;&amp;#x5C11;&amp;#x5230;&amp;#x5927;&amp;#x7EA6;&amp;#x4E00;&amp;#x79D2;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [butter-promise (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [butter [yak-butter-international butter-than-nothing baby-got-yak]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if-let&lt;/span&gt;&lt;/span&gt; [satisfactory-butter (&lt;span class=&quot;name&quot;&gt;satisfactory?&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;mock-api-call&lt;/span&gt; butter))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; butter-promise satisfactory-butter))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;And the winner is:&amp;quot;&lt;/span&gt; @butter-promise)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 1002.652 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; And the winner is: {:store Baby Got Yak, :smoothness 99, :price 94}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you first create a promise, &lt;code&gt;butter-promise&lt;/code&gt;, and then create three futures with access to that promise. Each future&amp;#x2019;s task is to evaluate a yak butter site and to deliver the site&amp;#x2019;s data to the promise if it&amp;#x2019;s satisfactory. Finally, you dereference &lt;code&gt;butter-promise&lt;/code&gt;, causing the program to block until the site data is delivered. This takes about one second instead of three because the site evaluations happen in parallel. By decoupling the requirement for a result from how the result is actually computed, you can perform multiple computations in parallel and save some time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;,&lt;code&gt;butter-promise&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E09;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7528;&amp;#x4E8E;&amp;#x8BBF;&amp;#x95EE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x5E72;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x662F;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7AD9;&amp;#x7684;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5982;&amp;#x679C;&amp;#x6EE1;&amp;#x8DB3;&amp;#x9700;&amp;#x8981;&amp;#xFF0C;&amp;#x5C31;&amp;#x628A;&amp;#x5B83;&amp;#x4EA4;&amp;#x4ED8;&amp;#x7ED9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x5BF9;&lt;code&gt;butter-promise&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x6709;&amp;#x6570;&amp;#x636E;&amp;#x4EA4;&amp;#x4ED8;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#x5E76;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x82B1;&amp;#x8D39;&amp;#x4E86;&amp;#x4E00;&amp;#x79D2;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x4E09;&amp;#x79D2;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&amp;#x7ED3;&amp;#x679C;&amp;#x8BA1;&amp;#x7B97;&amp;#x548C;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x5206;&amp;#x79BB;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x8BA1;&amp;#x7B97;&amp;#x5E76;&amp;#x8282;&amp;#x7EA6;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can view this as a way to protect yourself from the reference cell Concurrency Goblin. Because promises can be written to only once, you prevent the kind of inconsistent state that arises from nondeterministic reads and writes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F53;&amp;#x4F5C;&amp;#x9632;&amp;#x6B62;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x627F;&amp;#x8BFA;&amp;#x53EA;&amp;#x80FD;&amp;#x88AB;&amp;#x5199;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x9632;&amp;#x6B62;&amp;#x4E86;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x7684;&amp;#x8BFB;&amp;#x5199;&amp;#x4E2D;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You might be wondering what happens if none of the yak butter is satisfactory. If that happens, the dereference would block forever and tie up the thread. To avoid that, you can include a timeout:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x60F3;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x7B26;&amp;#x5408;&amp;#x8981;&amp;#x6C42;&amp;#x7684;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#x600E;&amp;#x4E48;&amp;#x529E;&amp;#xFF1F;&amp;#x5982;&amp;#x679C;&amp;#x53D1;&amp;#x751F;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x53D6;&amp;#x503C;&amp;#x5C06;&amp;#x6C38;&amp;#x4E45;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x5E76;&amp;#x5360;&amp;#x7528;&amp;#x90A3;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x4E3A;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x589E;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x8D85;&amp;#x65F6;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [p (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; p &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;timed out&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This creates a promise, &lt;code&gt;p&lt;/code&gt;, and tries to dereference it. The number 100 tells &lt;code&gt;deref&lt;/code&gt; to wait 100 milliseconds, and if no value is available by then, to use the timeout value, &lt;code&gt;&amp;quot;timed out&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&lt;code&gt;p&lt;/code&gt;,&amp;#x5E76;&amp;#x4E14;&amp;#x5BF9;&amp;#x5B83;&amp;#x53D6;&amp;#x503C;&amp;#x3002;&amp;#x6570;&amp;#x5B57;100&amp;#x544A;&amp;#x8BC9;&lt;code&gt;deref&lt;/code&gt;&amp;#x7B49;&amp;#x5F85;100&amp;#x6BEB;&amp;#x79D2;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E4B;&amp;#x540E;&amp;#x6CA1;&amp;#x6709;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x5C31;&amp;#x7528;&amp;#x8D85;&amp;#x65F6;&amp;#x503C;&lt;code&gt;&amp;quot;timeed out&amp;quot;&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The last detail I should mention is that you can also use promises to register callbacks, achieving the same functionality that you might be used to in JavaScript. JavaScript callbacks are a way of defining code that should execute asynchronously once some other code finishes. Here&amp;#x2019;s how to do it in Clojure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EC6;&amp;#x8282;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x627F;&amp;#x8BFA;&amp;#x6CE8;&amp;#x518C;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x83B7;&amp;#x5F97;&amp;#x4E0E;JavaScript&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x76F8;&amp;#x540C;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x3002;JavaScript&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&amp;#x4E00;&amp;#x65E6;&amp;#x67D0;&amp;#x4E9B;&amp;#x5176;&amp;#x4ED6;&amp;#x4EE3;&amp;#x7801;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4F1A;&amp;#x5F02;&amp;#x6B65;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x5728;Clojure&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [ferengi-wisdom-promise (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s some Ferengi wisdom:&amp;quot;&lt;/span&gt; @ferengi-wisdom-promise))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; ferengi-wisdom-promise &lt;span class=&quot;string&quot;&gt;&amp;quot;Whisper your way to success.&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Here&amp;apos;s some Ferengi wisdom: Whisper your way to success.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This example creates a future that begins executing immediately. However, the future&amp;#x2019;s thread is blocking because it&amp;#x2019;s waiting for a value to be delivered to &lt;code&gt;ferengi-wisdom-promise&lt;/code&gt;. After 100 milliseconds, you deliver the value and the &lt;code&gt;println&lt;/code&gt; statement in the future runs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ACB;&amp;#x523B;&amp;#x5F00;&amp;#x59CB;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#x3002;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x4EA4;&amp;#x4ED8;&amp;#x7ED9;&lt;code&gt;ferengi-wisdom-promise&lt;/code&gt;&amp;#x3002;100&amp;#x6BEB;&amp;#x79D2;&amp;#x540E;&amp;#xFF0C;&amp;#x503C;&amp;#x88AB;&amp;#x4EA4;&amp;#x4ED8;&amp;#xFF0C;&amp;#x672A;&amp;#x6765;&amp;#x91CC;&amp;#x7684;&lt;code&gt;println&lt;/code&gt;&amp;#x8BED;&amp;#x53E5;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures, delays, and promises are great, simple ways to manage concurrency in your application. In the next section, we&amp;#x2019;ll look at one more fun way to keep your concurrent applications under control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x662F;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x7BA1;&amp;#x7406;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x597D;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x4E0B;&amp;#x8282;&amp;#x6211;&amp;#x4EEC;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x66F4;&amp;#x591A;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x63A7;&amp;#x5236;&amp;#x5E76;&amp;#x53D1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rolling Your Own Queue&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot;&gt;&lt;a href=&quot;#&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot;&gt;&lt;/a&gt;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;So far you&amp;#x2019;ve looked at some simple ways to combine futures, delays, and promises to make your concurrent programs a little safer. In this section, you&amp;#x2019;ll use a macro to combine futures and promises in a slightly more complex manner. You might not necessarily ever use this code, but it&amp;#x2019;ll show the power of these modest tools a bit more. The macro will require you to hold runtime logic and macro expansion logic in your head at the same time to understand what&amp;#x2019;s going on; if you get stuck, just skip ahead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x770B;&amp;#x5230;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&amp;#x6765;&amp;#x7EC4;&amp;#x5408;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#xFF0C;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5E76;&amp;#x53D1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x66F4;&amp;#x52A0;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C06;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4EE5;&amp;#x66F4;&amp;#x590D;&amp;#x6742;&amp;#x4E9B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x7EC4;&amp;#x5408;&amp;#x672A;&amp;#x6765;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x4F60;&amp;#x4E0D;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x80FD;&amp;#x8BA9;&amp;#x4F60;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6734;&amp;#x7D20;&amp;#x5DE5;&amp;#x5177;&amp;#x7684;&amp;#x529B;&amp;#x91CF;&amp;#x3002;&amp;#x4E3A;&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F60;&amp;#x5934;&amp;#x8111;&amp;#x4E2D;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x60F3;&amp;#x7740;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x548C;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x903B;&amp;#x8F91;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5361;&amp;#x4F4F;&amp;#x4E86;&amp;#xFF0C;&amp;#x8DF3;&amp;#x8FC7;&amp;#x5373;&amp;#x53EF;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One characteristic The Three Concurrency Goblins have in common is that they all involve tasks concurrently accessing a shared resource&amp;#x2014;a variable, a printer, a dwarven war axe&amp;#x2014;in an uncoordinated way. If you want to ensure that only one task will access a resource at a time, you can place the resource access portion of a task on a queue that&amp;#x2019;s executed serially. It&amp;#x2019;s kind of like making a cake: you and a friend can separately retrieve the ingredients (eggs, flour, eye of newt, what have you), but some steps you&amp;#x2019;ll have to perform serially. You have to prepare the batter before you put it in the oven. Figure 9-6 illustrates this strategy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E09;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5171;&amp;#x540C;&amp;#x7279;&amp;#x70B9;&amp;#x662F;&amp;#xFF1A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x90FD;&amp;#x4E0E;&amp;#x4E0D;&amp;#x534F;&amp;#x8C03;&amp;#x5730;&amp;#x8BBF;&amp;#x95EE;&amp;#x5171;&amp;#x4EAB;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x6709;&amp;#x5173;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8D44;&amp;#x6E90;&amp;#x5305;&amp;#x62EC;&amp;#xFF1A;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x6218;&amp;#x65A7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x786E;&amp;#x4FDD;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x8BBF;&amp;#x95EE;&amp;#x67D0;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E2D;&amp;#x8BBF;&amp;#x95EE;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#x3002;&amp;#x8FD9;&amp;#x6709;&amp;#x70B9;&amp;#x60F3;&amp;#x505A;&amp;#x86CB;&amp;#x7CD5;&amp;#xFF1A;&amp;#x4F60;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x670B;&amp;#x53CB;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x522B;&amp;#x53D6;&amp;#x5F97;&amp;#x5236;&amp;#x4F5C;&amp;#x6750;&amp;#x6599;(&amp;#x9E21;&amp;#x86CB;&amp;#xFF0C;&amp;#x9762;&amp;#x7C89;&amp;#xFF0C;&amp;#x877E;&amp;#x8788;&amp;#x773C;&amp;#x775B;&amp;#x7B49;&amp;#x4E1C;&amp;#x897F;)&amp;#xFF0C;&amp;#x4F46;&amp;#x67D0;&amp;#x4E9B;&amp;#x6B65;&amp;#x9AA4;&amp;#x4F60;&amp;#x4EEC;&amp;#x5FC5;&amp;#x987B;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x5148;&amp;#x51C6;&amp;#x5907;&amp;#x597D;&amp;#x9762;&amp;#x7CCA;&amp;#xFF0C;&amp;#x518D;&amp;#x653E;&amp;#x5165;&amp;#x70E4;&amp;#x7BB1;&amp;#x3002;&amp;#x56FE;9-6&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B56;&amp;#x7565;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-6&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-6.png&quot; alt=&quot;Dividing tasks&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To implement the queuing macro, you&amp;#x2019;ll pay homage to the British, because they invented queues. You&amp;#x2019;ll use a queue to ensure that the customary British greeting &amp;#x201C;Ello, gov&amp;#x2019;na! Pip pip! Cheerio!&amp;#x201D; is delivered in the correct order. This demonstration will involve an abundance of &lt;code&gt;sleep&lt;/code&gt;ing, so here&amp;#x2019;s a macro to do that more concisely:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x5C06;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x961F;&amp;#x5217;&amp;#x7528;&amp;#x4EE5;&amp;#x786E;&amp;#x4FDD;&amp;#x95EE;&amp;#x5019;&amp;#x8BED; &amp;#x201C;Ello, gov&amp;#x2019;na! Pip pip! Cheerio!&amp;#x201D; &amp;#x6309;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x88AB;&amp;#x4EA4;&amp;#x4ED8;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x793A;&amp;#x4F8B;&amp;#x91CC;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&lt;code&gt;sleep&lt;/code&gt;,&amp;#x6240;&amp;#x4EE5;&amp;#x7528;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; wait&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Sleep `timeout` seconds before evaluating body&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [timeout &amp;amp; body]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; ~timeout) ~@body))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;All this code does is take whatever forms you give it and insert a call to &lt;code&gt;Thread/sleep&lt;/code&gt; before them, all wrapped up in &lt;code&gt;do&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x5168;&amp;#x90E8;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x5728;&amp;#x6240;&amp;#x6709;&amp;#x5F62;&amp;#x5F0F;&amp;#x524D;&amp;#x63D2;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528; &lt;code&gt;Thread/sleep&lt;/code&gt;,&amp;#x5E76;&amp;#x5168;&amp;#x90E8;&amp;#x7528;&lt;code&gt;do&lt;/code&gt;&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The code in Listing 9-1 splits up tasks into a concurrent portion and a serialized portion:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;9-1&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x6210;&amp;#x5E76;&amp;#x884C;&amp;#x90E8;&amp;#x5206;&amp;#x548C;&amp;#x4E32;&amp;#x884C;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Listing 9-1. The expansion of an enqueue macro call&amp;#xFF1A;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5217;&amp;#x8868; 9-1&amp;#x3002;enqueue&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x5C55;&amp;#x5F00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [saying3 (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; saying3 (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cheerio!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  @(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [saying2 (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; saying2 (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Pip pip!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A;      @(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [saying1 (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; saying1 (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saying1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     saying2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  saying3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The overall strategy is to create a promise for each task (in this case, printing part of the greeting) to create a corresponding future that will deliver a concurrently computed value to the promise. This ensures that all of the futures are created before any of the promises are dereferenced, and it ensures that the serialized portions are executed in the correct order. The value of &lt;code&gt;saying1&lt;/code&gt; is printed first&amp;#x2014;&lt;code&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/code&gt;&amp;#x2014;then the value of &lt;code&gt;saying2&lt;/code&gt;, and finally &lt;code&gt;saying3&lt;/code&gt;. Returning &lt;code&gt;saying1&lt;/code&gt; in a &lt;code&gt;let&lt;/code&gt; block and dereferencing the &lt;code&gt;let&lt;/code&gt; block at &amp;#x278A; ensures that you&amp;#x2019;ll be completely finished with &lt;code&gt;saying1&lt;/code&gt; before the code moves on to do anything to &lt;code&gt;saying2&lt;/code&gt;, and this pattern is repeated with &lt;code&gt;saying2&lt;/code&gt; and &lt;code&gt;saying3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x6574;&amp;#x4F53;&amp;#x7B56;&amp;#x7565;&amp;#x662F;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6253;&amp;#x5370;&amp;#x4EFB;&amp;#x52A1;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x5C06;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E76;&amp;#x884C;&amp;#x8BA1;&amp;#x7B97;&amp;#x503C;&amp;#x7ED9;&amp;#x90A3;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x8FD9;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x6240;&amp;#x6709;&amp;#x672A;&amp;#x6765;&amp;#x90FD;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E8E;&amp;#x4EFB;&amp;#x4F55;&amp;#x627F;&amp;#x8BFA;&amp;#x88AB;&amp;#x53D6;&amp;#x503C;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x4E32;&amp;#x884C;&amp;#x90E8;&amp;#x5206;&amp;#x6309;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;code&gt;saying1&lt;/code&gt;&amp;#x7684;&amp;#x503C;&lt;code&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/code&gt;&amp;#x88AB;&amp;#x9996;&amp;#x5148;&amp;#x6253;&amp;#x5370;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x662F;&lt;code&gt;saying2&lt;/code&gt;,&lt;code&gt;saying3&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x5728;&amp;#x278A;&amp;#x5904;&amp;#xFF0C;&lt;code&gt;let&lt;/code&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;saying1&lt;/code&gt;,&amp;#x5E76;&amp;#x5BF9;&amp;#x5B83;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x4EE3;&amp;#x7801;&amp;#x524D;&amp;#x8FDB;&amp;#x5230;&lt;code&gt;saying2&lt;/code&gt;&amp;#x524D;&amp;#xFF0C;&lt;code&gt;saying1&lt;/code&gt;&amp;#x5C06;&amp;#x5B8C;&amp;#x5168;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#xFF0C;&lt;code&gt;saying2&lt;/code&gt;&amp;#x548C;&lt;code&gt;saying3&lt;/code&gt;&amp;#x4E5F;&amp;#x91CD;&amp;#x590D;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might seem silly to dereference the &lt;code&gt;let&lt;/code&gt; block, but doing so lets you abstract this code with a macro. And you will definitely want to use a macro, because writing out code like the previous example would drive you mental (as the British would say). Ideally, the macro would work as shown in Listing 9-2:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&lt;code&gt;let&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#x53EF;&amp;#x80FD;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x5F88;&amp;#x50BB;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x7528;&amp;#x5B8F;&amp;#x62BD;&amp;#x8C61;&amp;#x8FD9;&amp;#x5757;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x800C;&amp;#x4E14;&amp;#x4F60;&amp;#x80AF;&amp;#x5B9A;&amp;#x60F3;&amp;#x7528;&amp;#x5B8F;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x50CF;&amp;#x524D;&amp;#x9762;&amp;#x90A3;&amp;#x6837;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x4F1A;&amp;#x4F7F;&amp;#x4F60;&amp;#x5934;&amp;#x8111;&amp;#x53D1;&amp;#x75AF;&amp;#x3002;&amp;#x7406;&amp;#x60F3;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E48;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;Listing 9-2:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; &amp;#x278A;saying &amp;#x278B;(&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/span&gt;) &amp;#x278C;(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#x278D;(&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Pip pip!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cheerio!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The macro lets you name the promise that gets created &amp;#x278A;, define how to derive the value to deliver that promise &amp;#x278B;, and define what to do with the promise &amp;#x278C;. The macro can also take another &lt;code&gt;enqueue&lt;/code&gt; macro call as its first argument, which lets you thread it &amp;#x278D;. Listing 9-3 shows how you can define the &lt;code&gt;enqueue&lt;/code&gt; macro. After defining &lt;code&gt;enqueue&lt;/code&gt;, the code in Listing 9-2 will expand into the code in Listing 9-1, with all the nested &lt;code&gt;let&lt;/code&gt; expressions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F4D;&amp;#x7F6E;&amp;#x278A;&amp;#xFF1A;&amp;#x547D;&amp;#x540D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x278B;&amp;#xFF1A;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4F55;&amp;#x5F97;&amp;#x5230;&amp;#x4EA4;&amp;#x4ED8;&amp;#x7ED9;&amp;#x627F;&amp;#x8BFA;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x278C;:&amp;#x5B9A;&amp;#x4E49;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x5E72;&amp;#x4EC0;&amp;#x4E48;&amp;#x3002;&amp;#x278D;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E5F;&amp;#x80FD;&amp;#x63A5;&amp;#x53D7;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5176;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E8E;&amp;#x628A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x5217;&amp;#x8868;9-3&amp;#x5C55;&amp;#x793A;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x5217;&amp;#x8868;9-2&amp;#x5C06;&amp;#x88AB;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x5217;&amp;#x8868;9-1&amp;#xFF0C;&amp;#x5E26;&amp;#x7740;&amp;#x6240;&amp;#x6709;&amp;#x5F97;&amp;#x5D4C;&amp;#x5957;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;Listing 9-3:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; enqueue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A;   ([q concurrent-promise-name concurrent serialized]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B;    `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [~concurrent-promise-name (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; ~concurrent-promise-name ~concurrent))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278C;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; ~q)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ~serialized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ~concurrent-promise-name))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278D;   ([concurrent-promise-name concurrent serialized]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   `(&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt;) ~concurrent-promise-name ~concurrent ~serialized)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice first that this macro has two arities in order to supply a default value. The first arity &amp;#x278A; is where the real work is done. It has the parameter &lt;code&gt;q&lt;/code&gt;, and the second arity does not. The second arity &amp;#x278D; calls the first with value &lt;code&gt;(future)&lt;/code&gt; supplied for &lt;code&gt;q&lt;/code&gt;; you&amp;#x2019;ll see why in a minute. At &amp;#x278B;, the macro returns a form that creates a promise, delivers its value in a future, dereferences whatever form is supplied for &lt;code&gt;q&lt;/code&gt;, evaluates the serialized code, and finally returns the promise. &lt;code&gt;q&lt;/code&gt; will usually be a nested &lt;code&gt;let&lt;/code&gt; expression returned by another call to &lt;code&gt;enqueue&lt;/code&gt;, like in Listing 9-2. If no value is supplied for &lt;code&gt;q&lt;/code&gt;, the macro supplies a future so that the &lt;code&gt;deref&lt;/code&gt; at &amp;#x278C; doesn&amp;#x2019;t cause an exception.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x6709;&amp;#x4E24;&amp;#x5957;&amp;#x53C2;&amp;#x6570;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E8E;&amp;#x63D0;&amp;#x4F9B;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x5957;&amp;#x53C2;&amp;#x6570;(&amp;#x278A;&amp;#x5904;)&amp;#x505A;&amp;#x4E86;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x3002;&amp;#x4ED6;&amp;#x6709;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&lt;code&gt;q&lt;/code&gt;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x5957;&amp;#x6CA1;&amp;#x6709;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x5957;&amp;#x53C2;&amp;#x6570;(&amp;#x278D;&amp;#x5904;)&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&amp;#x7B2C;&amp;#x4E00;&amp;#x5957;&amp;#xFF0C;&amp;#x4E3A;&lt;code&gt;q&lt;/code&gt;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x503C;&lt;code&gt;(future)&lt;/code&gt;&amp;#xFF0C;&amp;#x9A6C;&amp;#x4E0A;&amp;#x5C31;&amp;#x4F1A;&amp;#x89E3;&amp;#x91CA;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x3002;&amp;#x5728;&amp;#x278B;&amp;#x5904;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x91CC;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x5BF9;&lt;code&gt;q&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x4E32;&amp;#x884C;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x901A;&amp;#x5E38;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&lt;code&gt;q&lt;/code&gt;&amp;#x5C06;&amp;#x662F;&amp;#x4E2A;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x50CF;&amp;#x5217;&amp;#x8868;9-2&amp;#x90A3;&amp;#x6837;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x503C;&amp;#x63D0;&amp;#x4F9B;&amp;#x7ED9;&lt;code&gt;q&lt;/code&gt;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x4F7F;&amp;#x278C;&amp;#x5904;&amp;#x7684;&lt;code&gt;deref&lt;/code&gt;&amp;#x4E0D;&amp;#x4F1A;&amp;#x9020;&amp;#x6210;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that we&amp;#x2019;ve written the &lt;code&gt;enqueue&lt;/code&gt; macro, let&amp;#x2019;s try it out to see whether it reduces the execution time!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6709;&amp;#x4E86;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#x5B83;&amp;#x80FD;&amp;#x5426;&amp;#x51CF;&amp;#x5C11;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#xFF01;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; @(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Pip pip!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cheerio!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;apos;Ello, gov&amp;apos;na!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Pip pip!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Cheerio!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 401.635 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Blimey! The greeting is delivered in the correct order, and you can see by the elapsed time that the &amp;#x201C;work&amp;#x201D; of sleeping was handled concurrently.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x554A;&amp;#xFF01;&amp;#x7ED3;&amp;#x679C;&amp;#x6B63;&amp;#x786E;&amp;#xFF0C;&amp;#x4ECE;&amp;#x65F6;&amp;#x95F4;&amp;#x770B;&amp;#x90A3;&amp;#x4E9B;&amp;#x4F11;&amp;#x7720;&amp;#x90E8;&amp;#x5206;&amp;#x4E5F;&amp;#x662F;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s important for programmers like you to learn concurrent and parallel programming techniques so you can design programs that run efficiently on modern hardware. Concurrency refers to a program&amp;#x2019;s ability to carry out more than one task, and in Clojure you achieve this by placing tasks on separate threads. Programs execute in parallel when a computer has more than one CPU, which allows more than one thread to be executed at the same time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B66;&amp;#x4E60;&amp;#x5E76;&amp;#x53D1;&amp;#x548C;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#x6280;&amp;#x672F;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x8BBE;&amp;#x8BA1;&amp;#x51FA;&amp;#x80FD;&amp;#x5728;&amp;#x73B0;&amp;#x4EE3;&amp;#x786C;&amp;#x4EF6;&amp;#x4E0A;&amp;#x9AD8;&amp;#x6548;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x4F60;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x662F;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&amp;#x5E76;&amp;#x53D1;&amp;#x6307;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x5728;Clojure&amp;#x91CC;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x653E;&amp;#x5728;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x83B7;&amp;#x5F97;&amp;#x8FD9;&amp;#x79CD;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&amp;#x5F53;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x6709;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;CPU&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x540C;&amp;#x4E00;&amp;#x65F6;&amp;#x95F4;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrent programming refers to the techniques used to manage three concurrency risks: reference cells, mutual exclusion, and deadlock. Clojure gives you three basic tools that help you mitigate those risks: futures, delays, and promises. Each tool lets you decouple the three events of defining a task, executing a task, and requiring a task&amp;#x2019;s result. Futures let you define a task and execute it immediately, allowing you to require the result later or never. Futures also cache their results. Delays let you define a task that doesn&amp;#x2019;t get executed until later, and a delay&amp;#x2019;s result gets cached. Promises let you express that you require a result without having to know about the task that produces that result. You can only deliver a value to a promise once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x6307;&amp;#x7528;&amp;#x4E8E;&amp;#x7BA1;&amp;#x7406;&amp;#x4E09;&amp;#x79CD;&amp;#x5E76;&amp;#x53D1;&amp;#x98CE;&amp;#x9669;(&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x6B7B;&amp;#x9501;)&amp;#x7684;&amp;#x6280;&amp;#x672F;&amp;#x3002;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E09;&amp;#x4E2A;&amp;#x57FA;&amp;#x672C;&amp;#x5DE5;&amp;#x5177;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x51CF;&amp;#x5C11;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#xFF1A;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#xFF0C;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x89E3;&amp;#x8026;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x83B7;&amp;#x53D6;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#x5B9A;&amp;#x4E49;&amp;#x5E76;&amp;#x7ACB;&amp;#x523B;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x6216;&amp;#x4E0D;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#x4E5F;&amp;#x7F13;&amp;#x5B58;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x5EF6;&amp;#x671F;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EE5;&amp;#x540E;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x4E5F;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x627F;&amp;#x8BFA;&amp;#x8BA9;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x7528;&amp;#x5FC5;&amp;#x987B;&amp;#x77E5;&amp;#x9053;&amp;#x5982;&amp;#x4F55;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x53EA;&amp;#x80FD;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x6B21;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the next chapter, you&amp;#x2019;ll explore the philosophical side of concurrent programming and learn more sophisticated tools for managing the risks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x7AE0;&amp;#x5C06;&amp;#x63A2;&amp;#x7D22;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x65B9;&amp;#x9762;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5B66;&amp;#x4E60;&amp;#x66F4;&amp;#x591A;&amp;#x7BA1;&amp;#x7406;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#x590D;&amp;#x6742;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Write a function that takes a string as an argument and searches for it on Bing and Google using the &lt;code&gt;slurp&lt;/code&gt; function. Your function should return the HTML of the first page returned by the search.&lt;/li&gt;
&lt;li&gt;Update your function so it takes a second argument consisting of the search engines to use.&lt;/li&gt;
&lt;li&gt;Create a new function that takes a search term and search engines as arguments, and returns a vector of the URLs from the first page of search results from each search engine.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;slurp&lt;/code&gt;&amp;#x5728;Google&amp;#x548C;Bing&amp;#x4E0A;&amp;#x641C;&amp;#x7D22;&amp;#x5B83;&amp;#x3002;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x641C;&amp;#x7D22;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;HTML&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x641C;&amp;#x7D22;&amp;#x5F15;&amp;#x64CE;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x641C;&amp;#x7D22;&amp;#x9879;&amp;#x548C;&amp;#x591A;&amp;#x4E2A;&amp;#x5F15;&amp;#x64CE;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x6BCF;&amp;#x4E2A;&amp;#x641C;&amp;#x7D22;&amp;#x5F15;&amp;#x64CE;&amp;#x7B2C;&amp;#x4E00;&amp;#x9875;&amp;#x641C;&amp;#x7D22;&amp;#x7ED3;&amp;#x679C;&amp;#x91CC;&amp;#x7684;URL&amp;#x7EC4;&amp;#x6210;&amp;#x7684;vector&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>用Express搭建Api演示</title>
    <link href="http://yoursite.com/2016/06/03/express-demo/"/>
    <id>http://yoursite.com/2016/06/03/express-demo/</id>
    <published>2016-06-03T10:07:47.000Z</published>
    <updated>2016-06-03T13:24:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x6F14;&amp;#x793A;&amp;#x7528;Express&amp;#x642D;&amp;#x5EFA;Api&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5185;&amp;#x5BB9;&amp;#x6D89;&amp;#x53CA;&amp;#xFF1A;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;Promise,&amp;#x7528;bluebird&amp;#x8BBF;&amp;#x95EE;MySQL,&amp;#x7528;Express&amp;#x5B9E;&amp;#x73B0;&amp;#x975E;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x548C;RESTful&amp;#x98CE;&amp;#x683C;api&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x5305;&amp;#x542B;&amp;#x4E00;&amp;#x4E2A;demo&amp;#x9879;&amp;#x76EE;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x5730;&amp;#x5740;&amp;#xFF1A;&lt;a href=&quot;https://github.com/morrxy/express-demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;express-demo&lt;/a&gt;&amp;#x3002;&amp;#x8FD0;&amp;#x884C;&amp;#x9879;&amp;#x76EE;&amp;#x9700;&amp;#x8981;&amp;#x672C;&amp;#x5730;&amp;#x5B89;&amp;#x88C5;Node.js,MySQL,&amp;#x4E00;&amp;#x4E2A;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7BA1;&amp;#x7406;&amp;#x5DE5;&amp;#x5177;(&amp;#x6211;&amp;#x7528;&amp;#x7684;&amp;#x662F;Sequel Pro),postman&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x4EE4;&amp;#x514B;&amp;#x9686;&amp;#x5230;&amp;#x672C;&amp;#x5730;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/morrxy/express-demo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;demo&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x6587;&amp;#x7AE0;&amp;#x91CC;&amp;#x7684;&amp;#x6B65;&amp;#x9AA4;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;step1-npm-init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step2-hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step3-module-route&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step4-middleware&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step5-db-access&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step6-db-more&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step7-restful-todos&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x67E5;&amp;#x770B;&amp;#x67D0;&amp;#x6B65;&amp;#x9AA4;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step1-npm-init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&quot;&gt;&lt;a href=&quot;#&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&quot;&gt;&lt;/a&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step1-npm-init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir express-todolist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd express-todolist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt;&amp;#x540E;&amp;#x4E00;&amp;#x8DEF;&amp;#x56DE;&amp;#x8F66;&amp;#xFF0C;&amp;#x751F;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;package.json&lt;/code&gt;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7528;&amp;#x4E0E;&amp;#x4FDD;&amp;#x5B58;&amp;#x9879;&amp;#x76EE;&amp;#x4F9D;&amp;#x8D56;&amp;#xFF0C;&amp;#x9879;&amp;#x76EE;&amp;#x63CF;&amp;#x8FF0;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5B89;&amp;#x88C5;Express&quot;&gt;&lt;a href=&quot;#&amp;#x5B89;&amp;#x88C5;Express&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B89;&amp;#x88C5;Express&quot;&gt;&lt;/a&gt;&amp;#x5B89;&amp;#x88C5;Express&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save express&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&quot;&gt;&lt;a href=&quot;#&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&quot;&gt;&lt;/a&gt;&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-1&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-1&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step2-hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-1&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-1&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x6587;&amp;#x4EF6;&lt;code&gt;app.js&lt;/code&gt;,&amp;#x4F5C;&amp;#x4E3A;&amp;#x9879;&amp;#x76EE;&amp;#x542F;&amp;#x52A8;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5E76;&amp;#x7F16;&amp;#x8F91;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;express&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&amp;apos;Hello World!&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;Example app listening on port 3000!&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x7528;&lt;code&gt;express()&lt;/code&gt;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;app&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x7684;&lt;code&gt;get&lt;/code&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;app.listen()&lt;/code&gt;&amp;#x542F;&amp;#x52A8;app&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x5728;&amp;#x547D;&amp;#x4EE4;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;,&amp;#x542F;&amp;#x52A8;Node&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x7528;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x8BBF;&amp;#x95EE;&lt;code&gt;http://localhost:3000/&lt;/code&gt;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x54CD;&amp;#x5E94;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/hello.png&quot; alt=&quot;&amp;#x54CD;&amp;#x5E94;&amp;#x7ED3;&amp;#x679C;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5907;&amp;#x6CE8;&amp;#xFF1A;&amp;#x60F3;&amp;#x770B;&amp;#x5230;&amp;#x6574;&amp;#x9F50;&amp;#x7684;json&amp;#x7ED3;&amp;#x679C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B89;&amp;#x88C5;&lt;a href=&quot;https://chrome.google.com/webstore/detail/json-handle/iahnhfdhidomcpggpaimmmahffihkfnj&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8FD9;&amp;#x4E2A;chrom&amp;#x63D2;&amp;#x4EF6;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&quot;&gt;&lt;a href=&quot;#&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&quot;&gt;&lt;/a&gt;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-2&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-2&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step3-module-route&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-2&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-2&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x5B9E;&amp;#x9645;&amp;#x9879;&amp;#x76EE;&amp;#x4F1A;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x4E0D;&amp;#x628A;&amp;#x8DEF;&amp;#x7531;&amp;#x76F4;&amp;#x63A5;&amp;#x653E;&amp;#x5728;&amp;#x542F;&amp;#x52A8;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x6839;&amp;#x636E;&amp;#x9700;&amp;#x8981;&amp;#x5212;&amp;#x5206;&amp;#x6210;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5177;&amp;#x4F53;&amp;#x8DEF;&amp;#x7531;&amp;#x653E;&amp;#x5728;&amp;#x5404;&amp;#x81EA;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4ECE;&amp;#x542F;&amp;#x52A8;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x52A0;&amp;#x8F7D;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x9700;&amp;#x8981;&amp;#x4E24;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&lt;code&gt;user&lt;/code&gt;&amp;#x548C;&lt;code&gt;mission&lt;/code&gt;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x4E0B;&amp;#x5404;&amp;#x81EA;&amp;#x9700;&amp;#x8981;&lt;code&gt;r1&lt;/code&gt;,&lt;code&gt;r2&lt;/code&gt;&amp;#x4E24;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x5373;&amp;#x9700;&amp;#x8981;&amp;#x8FD9;4&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&lt;code&gt;/user/r1&lt;/code&gt;&amp;#xFF0C;&lt;code&gt;/user/r2&lt;/code&gt;,&lt;code&gt;/mission/r1&lt;/code&gt;,&lt;code&gt;/mission/r2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7528;&lt;code&gt;user&lt;/code&gt;&amp;#x5F53;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6A21;&amp;#x5757;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;&lt;code&gt;route&lt;/code&gt;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;s&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x548C;&amp;#x7D22;&amp;#x5F15;&amp;#x5404;&amp;#x81EA;&amp;#x7684;&amp;#x76EE;&amp;#x5F55;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;route&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x6587;&amp;#x4EF6;&lt;code&gt;user.js&lt;/code&gt;,&amp;#x4F5C;&amp;#x4E3A;user&amp;#x6A21;&amp;#x5757;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;route&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;user&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6240;&amp;#x6709;user&amp;#x6A21;&amp;#x5757;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x6587;&amp;#x4EF6;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;/route/user&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;r1.js&lt;/code&gt;&amp;#x548C;&lt;code&gt;r2.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;app.js&amp;#x5F15;&amp;#x5165;user&amp;#x6A21;&amp;#x5757;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;user.js&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = router;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;/r1&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./user/r1&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;/r2&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./user/r2&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;,&amp;#x7528;&lt;code&gt;Express.Router()&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B50;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5BB9;&amp;#x7EB3;&amp;#x6240;&amp;#x6709;&lt;code&gt;/user&lt;/code&gt;&amp;#x4E0B;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5F80;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;get&amp;#x8DEF;&amp;#x7531;&lt;code&gt;/user/r1&lt;/code&gt;&amp;#x548C;&lt;code&gt;/user/r2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;/route/user/r1.js,&amp;#x5B9A;&amp;#x4E49;&amp;#x5177;&amp;#x4F53;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (req, res) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&amp;apos;GET /user/r1 result&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;app.js&amp;#x6DFB;&amp;#x52A0;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5F15;&amp;#x5165;user&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/user&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/user&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6309;&amp;#x4E0A;&amp;#x8FF0;&amp;#x6B65;&amp;#x9AA4;&amp;#x5EFA;&amp;#x7ACB;mission&amp;#x6A21;&amp;#x5757;&amp;#xFF0C;&amp;#x53E6;&amp;#x5916;&amp;#x987A;&amp;#x624B;&amp;#x628A;&amp;#x524D;&amp;#x9762;&amp;#x5BF9;&lt;code&gt;/&lt;/code&gt;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E5F;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x3002;app.js&amp;#x6539;&amp;#x6210;&amp;#x4E86;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;express&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/index&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/user&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/user&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/mission&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/mission&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;Example app listening on port 3000!&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x91CD;&amp;#x542F;app&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;/user/r1,/mission/r1&amp;#x7B49;4&amp;#x4E2A;&amp;#x65B0;&amp;#x8DEF;&amp;#x7531;&amp;#x4E86;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/user-r1.png&quot; alt=&quot;user/r1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&quot;&gt;&lt;a href=&quot;#&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&quot;&gt;&lt;/a&gt;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;a href=&quot;#&amp;#x7B80;&amp;#x4ECB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x4ECB;&lt;/h3&gt;&lt;p&gt;&amp;#x5B98;&amp;#x65B9;&amp;#x4ECB;&amp;#x7ECD;: &lt;a href=&quot;http://expressjs.com/en/guide/using-middleware.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/a&gt;,&lt;a href=&quot;http://expressjs.com/en/guide/writing-middleware.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5199;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5177;&amp;#x4F53;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x90FD;&amp;#x5904;&amp;#x7406;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#xFF0C;&amp;#x4F46;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x6216;&amp;#x67D0;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x4E0B;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x90FD;&amp;#x8FDB;&amp;#x884C;&amp;#x67D0;&amp;#x4E9B;&amp;#x4E1A;&amp;#x52A1;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#x3002;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4E4B;&amp;#x6240;&amp;#x4EE5;&amp;#x53EB;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5176;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x5904;&amp;#x4E8E;&amp;#x63A5;&amp;#x53D7;&amp;#x8BF7;&amp;#x6C42;&amp;#x81F3;&amp;#x8FD4;&amp;#x56DE;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#x4E2D;&amp;#x95F4;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x80FD;&amp;#x8BBF;&amp;#x95EE;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x54CD;&amp;#x5E94;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x548C;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x3002;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x80FD;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x4F55;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1B;&amp;#x80FD;&amp;#x4FEE;&amp;#x6539;&amp;#x8BF7;&amp;#x6C42;&amp;#x548C;&amp;#x54CD;&amp;#x5E94;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF1B;&amp;#x80FD;&amp;#x7ED3;&amp;#x675F;&amp;#x8BF7;&amp;#x6C42;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#xFF1B;&amp;#x80FD;&amp;#x8C03;&amp;#x7528;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x3002;Express&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x548C;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;web&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;Express app&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x8FD9;&amp;#x4E2A;app&amp;#x6709;&amp;#x4E9B;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x5305;&amp;#x62EC;&lt;code&gt;/secret&lt;/code&gt;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8DEF;&amp;#x7531;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x3002;&amp;#x7528;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9700;&amp;#x6C42;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x68C0;&amp;#x6D4B;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8DEF;&amp;#x7531;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF0C;&amp;#x8DF3;&amp;#x8FC7;&amp;#x540E;&amp;#x7EED;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4EA4;&amp;#x51FA;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x6267;&amp;#x884C;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x6210;&amp;#x529F;&amp;#x5219;&amp;#x4EA4;&amp;#x51FA;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#xFF0C;secret&amp;#x8DEF;&amp;#x7531;&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x7ED3;&amp;#x675F;&amp;#x8BF7;&amp;#x6C42;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5931;&amp;#x8D25;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-3&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-3&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step4-middleware&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-3&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-3&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;1&amp;#xFF1A;&amp;#x6309;&amp;#x4E0A;&amp;#x9762;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;secret&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&lt;/li&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;2&amp;#xFF1A;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;middleware&amp;#x76EE;&amp;#x5F55;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6240;&amp;#x6709;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/li&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;3&amp;#xFF1A;&amp;#x5728;middleware&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E24;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&lt;code&gt;route-test.js&lt;/code&gt;&amp;#x548C;&lt;code&gt;session-test.js&lt;/code&gt;,&amp;#x7528;&amp;#x4E8E;&amp;#x68C0;&amp;#x6D4B;&amp;#x8DEF;&amp;#x7531;&amp;#x548C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8EAB;&amp;#x4EFD;&lt;/li&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;4&amp;#xFF1A;&amp;#x5728;app.js&amp;#x91CC;&amp;#x5F15;&amp;#x5165;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3&amp;#x7684;route-test.js:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; url = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;url&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; pathname = url.parse(req.originalUrl).pathname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pathname === &lt;span class=&quot;string&quot;&gt;&amp;apos;/secret&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    next(&lt;span class=&quot;string&quot;&gt;&amp;apos;route&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x4ECE;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x83B7;&amp;#x5F97;&amp;#x8BF7;&amp;#x6C42;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;&amp;#x4E0E;&amp;#x9700;&amp;#x8981;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&amp;#x5BF9;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x5219;&amp;#x7528;&lt;code&gt;next()&lt;/code&gt;&amp;#x628A;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#x8F6C;&amp;#x4EA4;&amp;#x7ED9;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;next(&amp;apos;route&amp;apos;)&lt;/code&gt;&amp;#x8DF3;&amp;#x8FC7;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8F6C;&amp;#x4EA4;&amp;#x5176;&amp;#x4ED6;&amp;#x8DEF;&amp;#x7531;&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3&amp;#x7684;&lt;code&gt;session-test.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; key = req.query.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (key === &lt;span class=&quot;string&quot;&gt;&amp;apos;secretkey&amp;apos;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&amp;apos;access deny!&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x4ECE;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x83B7;&amp;#x53D6;&amp;#x7528;&amp;#x6237;&amp;#x63D0;&amp;#x4EA4;&amp;#x7684;key&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;key&amp;#x5BF9;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6210;&amp;#x529F;&amp;#xFF0C;&amp;#x5219;&amp;#x7528;&lt;code&gt;next()&lt;/code&gt;&amp;#x4EA4;&amp;#x51FA;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#xFF0C;&amp;#x8F6C;&amp;#x4EA4;/secret&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x4E2D;&amp;#x6B62;&amp;#x8BF7;&amp;#x6C42;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5931;&amp;#x8D25;&amp;#x4FE1;&amp;#x606F;&amp;#x2019;access deny!&amp;#x2019;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;4&amp;#x4E4B;&amp;#x540E;&amp;#x7684;app.js:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;express&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.all(&lt;span class=&quot;string&quot;&gt;&amp;apos;*&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./middleware/route-test&amp;apos;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./middleware/session-test&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/index&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/user&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/user&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/mission&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/mission&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/secret&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/secret&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;Example app listening on port 3000!&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;app.all()&lt;/code&gt;&amp;#x4E0E;&lt;code&gt;app.get()&lt;/code&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5339;&amp;#x914D;&amp;#x6240;&amp;#x6709;&amp;#x5F97;http&amp;#x52A8;&amp;#x8BCD;&amp;#x3002;&lt;code&gt;*&lt;/code&gt;&amp;#x5339;&amp;#x914D;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x3002;&amp;#x628A;&amp;#x8FD9;&amp;#x884C;&amp;#x653E;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x4E0A;&amp;#x9762;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x8BF7;&amp;#x6C42;&amp;#x5C31;&amp;#x4F1A;&amp;#x5148;&amp;#x88AB;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x91CD;&amp;#x542F;app&amp;#xFF0C;&amp;#x5728;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x6D4B;&amp;#x8BD5;/secret&amp;#x8DEF;&amp;#x7531;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/secret-fail.png&quot; alt=&quot;fail&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/secret-success.png&quot; alt=&quot;success&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Promise&quot;&gt;&lt;a href=&quot;#Promise&quot; class=&quot;headerlink&quot; title=&quot;Promise&quot;&gt;&lt;/a&gt;Promise&lt;/h2&gt;&lt;p&gt;Promise&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x5904;&amp;#x7406;&amp;#x5F02;&amp;#x6B65;io&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x6765;&amp;#x89E3;&amp;#x51B3;Node&amp;#x7684;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x7F16;&amp;#x5199;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#x90FD;&amp;#x5BB9;&amp;#x6613;&amp;#x5F88;&amp;#x591A;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E2A;&amp;#x4ECB;&amp;#x7ECD;&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-promises-and-asynchronous-programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Promises and Asynchronous Programming&lt;/a&gt;&amp;#x3002;bluebird&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;Promise&amp;#x5E93;&amp;#xFF0C;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x5199;&amp;#x8FC7;&amp;#x4E00;&amp;#x7BC7;&amp;#x4F7F;&amp;#x7528;&amp;#x611F;&amp;#x53D7;&amp;#xFF0C;&lt;a href=&quot;http://morrxy.github.io/2016/03/13/bluebird-serendipity/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluebird&amp;#x5E26;&amp;#x7ED9;&amp;#x6211;&amp;#x7684;&amp;#x60CA;&amp;#x559C;&lt;/a&gt;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;demo&amp;#x5C31;&amp;#x7528;bluebird&amp;#x6F14;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8BBF;&amp;#x95EE;&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&quot;&gt;&lt;a href=&quot;#&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&quot;&gt;&lt;/a&gt;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&lt;/h2&gt;&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x8FD9;&amp;#x4E2A;app&amp;#x662F;&amp;#x4E2A;todolist&amp;#x7BA1;&amp;#x7406;app&amp;#xFF0C;&amp;#x7528;mysql&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x63D0;&amp;#x4F9B;&amp;#x5BF9;todo&amp;#x8868;&amp;#x7684;&amp;#x8BFB;&amp;#x53D6;&amp;#xFF0C;&amp;#x65B0;&amp;#x589E;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#x914D;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF0C;&amp;#x5E76;&amp;#x7528;/todo/list&amp;#x6D4B;&amp;#x8BD5;&amp;#x3002;&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-4&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-4&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step5-db-access&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-4&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-4&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x5B89;&amp;#x88C5;mysql&amp;#xFF0C;&amp;#x5E76;&amp;#x521B;&amp;#x5EFA;&amp;#x597D;todo&amp;#x8868;&lt;/li&gt;
&lt;li&gt;2.&amp;#x5B89;&amp;#x88C5;bluebird&amp;#x548C;mysql&amp;#xFF0C;bluebird&amp;#x7528;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;Promise&amp;#x8BED;&amp;#x6CD5;&amp;#xFF0C;mysql&amp;#x7528;&amp;#x4E8E;&amp;#x8FDE;&amp;#x63A5;mysql&lt;/li&gt;
&lt;li&gt;3.&amp;#x914D;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;,&amp;#x5E76;&amp;#x7528;/todo/list&amp;#x6D4B;&amp;#x8BD5;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;1:&lt;/p&gt;
&lt;p&gt;&amp;#x672C;&amp;#x5730;&amp;#x5B89;&amp;#x88C5;&amp;#x597D;mysql&amp;#xFF0C;&amp;#x5E76;&amp;#x7528;&amp;#x5982;&amp;#x4E0B;&amp;#x547D;&amp;#x4EE4;&amp;#x542F;&amp;#x52A8;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql.server start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x542F;&amp;#x52A8;&amp;#x6210;&amp;#x529F;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Starting MySQL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. SUCCESS!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E4B;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x4F55;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7BA1;&amp;#x7406;&amp;#x5DE5;&amp;#x5177;(&amp;#x6211;&amp;#x7528;&amp;#x7684;&amp;#x662F;Sequel Pro)&amp;#xFF0C;&amp;#x8FDE;&amp;#x4E0A;&amp;#x672C;&amp;#x5730;mysql&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/connect-local-db.png&quot; alt=&quot;conncet to local db&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x53EB;&lt;code&gt;todolit&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/add-db.png&quot; alt=&quot;add db&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#xFF0C;&amp;#x53EB;&lt;code&gt;todo&lt;/code&gt;&amp;#x3002;&amp;#x8868;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`todo`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`title`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x6807;&amp;#x9898;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`done`&lt;/span&gt; tinyint(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;0&amp;apos;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;1&amp;#x5B8C;&amp;#x6210; 0&amp;#x672A;&amp;#x5B8C;&amp;#x6210;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5F80;&amp;#x91CC;&amp;#x9762;&amp;#x624B;&amp;#x52A8;&amp;#x63D2;&amp;#x5165;&amp;#x4E24;&amp;#x6761;&amp;#x6570;&amp;#x636E;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-table.png&quot; alt=&quot;todo table&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;2:&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x9879;&amp;#x76EE;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x6267;&amp;#x884C;&amp;#x5982;&amp;#x4E0B;&amp;#x547D;&amp;#x4EE4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save bluebird mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3-&amp;#x914D;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;:&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x65B0;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;&lt;code&gt;config&lt;/code&gt;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x914D;&amp;#x7F6E;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5728;config&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&lt;code&gt;db.js&lt;/code&gt;&amp;#x7528;&amp;#x4E8E;&amp;#x8FDE;&amp;#x63A5;mysql&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; mysql = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;mysql&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;bluebird&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.promisifyAll(mysql);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.promisifyAll(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;mysql/lib/Connection&amp;apos;&lt;/span&gt;).prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.promisifyAll(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;mysql/lib/Pool&amp;apos;&lt;/span&gt;).prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; local = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host: &lt;span class=&quot;string&quot;&gt;&amp;apos;127.0.0.1&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  user: &lt;span class=&quot;string&quot;&gt;&amp;apos;root&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  password: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  database: &lt;span class=&quot;string&quot;&gt;&amp;apos;todolist&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port: &lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  charset: &lt;span class=&quot;string&quot;&gt;&amp;apos;utf8mb4&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; pool = mysql.createPool(local);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pool.getConnectionAsync().disposer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;connection&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection.release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mysql&amp;#x81EA;&amp;#x5E26;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#x662F;&amp;#x56DE;&amp;#x8C03;&amp;#x5F0F;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDE;&amp;#x63A5;&amp;#x7528;&amp;#x5B8C;&amp;#x4EE5;&amp;#x540E;&amp;#x90FD;&amp;#x6709;&amp;#x624B;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#x3002;&amp;#x53EF;&amp;#x53BB;&lt;a href=&quot;https://www.npmjs.com/package/mysql&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5B98;&amp;#x7F51;&lt;/a&gt;&amp;#x4E86;&amp;#x89E3;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0E;&amp;#x4E0B;&amp;#x8FF0;&amp;#x7684;db&amp;#x8BBF;&amp;#x95EE;&amp;#x65B9;&amp;#x5F0F;&amp;#x5BF9;&amp;#x6BD4;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E00;&amp;#x4E9B;&amp;#x7528;bluebird&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;mysql&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;bluebird&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;Promisify&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x628A;mysql&amp;#x5305;&amp;#x81EA;&amp;#x5E26;&amp;#x7684;callback&amp;#x65B9;&amp;#x5F0F;&amp;#x8F6C;&amp;#x6210;&amp;#x4E86;promise&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8BBF;&amp;#x95EE;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x5165;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;Promise&amp;#x94FE;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;bluebird&amp;#x8D44;&amp;#x6E90;&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x5BFC;&amp;#x51FA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDE;&amp;#x63A5;mysql&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F9B;&amp;#x6240;&amp;#x6709;db&amp;#x8BBF;&amp;#x95EE;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&amp;#x65F6;&amp;#x5019;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;Promise.using()&lt;/code&gt;&amp;#x5373;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FDE;&amp;#x5E93;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x7528;&amp;#x7BA1;&amp;#x91CA;&amp;#x653E;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF0C;&amp;#x8FDE;&amp;#x63A5;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x65B9;&amp;#x4FBF;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x7EC6;&amp;#x8282;&amp;#x53EF;&amp;#x53C2;&amp;#x8003;bluebird&amp;#x5B98;&amp;#x65B9;&amp;#x53C2;&amp;#x8003;&amp;#xFF1A;&lt;a href=&quot;http://bluebirdjs.com/docs/api/promise.promisifyall.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;promisifyAll&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/disposer.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8FDE;&amp;#x5E93;&amp;#x4E0E;&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/promise.using.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8D44;&amp;#x6E90;&amp;#x4F7F;&amp;#x7528;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3-&amp;#x7528;/todo/list&amp;#x6D4B;&amp;#x8BD5;db&amp;#x8BBF;&amp;#x95EE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x7528;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x65B0;&amp;#x5EFA;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&lt;code&gt;todo&lt;/code&gt;&amp;#xFF0C;&amp;#x548C;/todo/list&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x8FD4;&amp;#x56DE;&amp;#x6240;&amp;#x6709;todo&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;bluebird&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; todoDao = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;../../model/todo&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sendError = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;../../helper/sendError&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (req, res) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getTodoList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then((data) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      data: data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      status: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;ok&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendError(res, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTodoList&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; todoDao.list();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;Promise&amp;#x94FE;&amp;#x63A7;&amp;#x5236;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6D41;&amp;#xFF0C;&amp;#x4F7F;&amp;#x8DEF;&amp;#x7531;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E00;&amp;#x76EE;&amp;#x4E86;&amp;#x7136;&amp;#xFF0C;&amp;#x65B9;&amp;#x4FBF;&amp;#x5F00;&amp;#x53D1;&amp;#x548C;&amp;#x4FEE;&amp;#x6539;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x72EC;&amp;#x7ACB;&amp;#x5230;&amp;#x5355;&amp;#x72EC;&amp;#x7684;model&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#xFF0C;&amp;#x7ED3;&amp;#x6784;&amp;#x4E0E;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x91CD;&amp;#x590D;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x6570;&amp;#x636E;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;/model/todo/list.js:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;bluebird&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; db = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;../../config/db&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.using(db(), conn =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sql = &lt;span class=&quot;string&quot;&gt;`select * from todo`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; conn.queryAsync(sql, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;bluebird&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x4F7F;&amp;#x7528;api:&lt;code&gt;using()&lt;/code&gt;,&amp;#x8FD9;&amp;#x91CC;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7684;Promise(using&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;promise),&amp;#x4F7F;&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x878D;&amp;#x5165;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;Promise&amp;#x94FE;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x67E5;&amp;#x5E93;&amp;#x6570;&amp;#x636E;&amp;#x65E0;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x5230;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x591A;&amp;#x4E2A;db&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;&amp;#x53EF;&amp;#x5728;using&amp;#x540E;&amp;#x589E;&amp;#x52A0;&lt;code&gt;.then()&lt;/code&gt;&amp;#x7EE7;&amp;#x7EED;&amp;#x5176;&amp;#x4ED6;io&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.using(db(), conn =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sql = &lt;span class=&quot;string&quot;&gt;`select * from todo`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; conn.queryAsync(sql, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7528;data&amp;#x7EE7;&amp;#x7EED;&amp;#x5176;&amp;#x4ED6;io&amp;#x64CD;&amp;#x4F5C;,&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Promise&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x597D;&amp;#x5904;&amp;#x662F;&amp;#xFF0C;Promise&amp;#x94FE;&amp;#x4E2D;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#x90FD;&amp;#x80FD;&amp;#x4F20;&amp;#x7ED9;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x4E00;&amp;#x4E2A;Promise&amp;#x94FE;&amp;#x91CC;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E2A;&amp;#x6700;&amp;#x540E;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x51FD;&amp;#x6570;&amp;#x5C31;&amp;#x884C;&amp;#x4E86;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;sendError&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x628A;&amp;#x5B83;&amp;#x653E;&amp;#x8FDB;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x7684;helper&amp;#x76EE;&amp;#x5F55;(&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6240;&amp;#x6709;&amp;#x5F97;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;)&amp;#xFF0C;&amp;#x907F;&amp;#x514D;&amp;#x91CD;&amp;#x590D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x91CD;&amp;#x542F;app&amp;#xFF0C;&amp;#x5728;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x8BBF;&amp;#x95EE;&lt;code&gt;http://localhost:3000/todo/list&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-list.png&quot; alt=&quot;todo list&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&quot;&gt;&lt;a href=&quot;#&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&quot;&gt;&lt;/a&gt;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&lt;/h2&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x6B65;&amp;#x9700;&amp;#x8981;&amp;#x7528;POST&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x63D0;&amp;#x4EA4;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x8981;&amp;#x5B89;&amp;#x88C5;npm&amp;#x5305;&lt;code&gt;body-parser&lt;/code&gt;&amp;#x7528;&amp;#x6765;&amp;#x89E3;&amp;#x6790;&amp;#x6570;&amp;#x636E;,&amp;#x5728;&amp;#x9879;&amp;#x76EE;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x6267;&amp;#x884C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save body-parser&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-5&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-5&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step6-db-more&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-5&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-5&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x6309;&amp;#x7167;&amp;#x4E0A;&amp;#x4E00;&amp;#x6B65;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&lt;code&gt;/todo/list&lt;/code&gt;&amp;#x6DFB;&amp;#x52A0;todo&amp;#x65B0;&amp;#x589E;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;api&amp;#xFF0C;&amp;#x5206;&amp;#x522B;&amp;#x662F;&lt;code&gt;/todo/add&lt;/code&gt;,&lt;code&gt;/todo/update&lt;/code&gt;,&lt;code&gt;/todo/remove&lt;/code&gt;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x4E9B;&amp;#x63A5;&amp;#x53E3;&amp;#x7684;method&amp;#x4E0D;&amp;#x662F;get&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7528;&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?utm_source=chrome-ntp-launcher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;postman&lt;/a&gt;&amp;#x4EE3;&amp;#x66FF;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x6D4B;&amp;#x8BD5;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x53C2;&amp;#x6570;&amp;#x548C;&amp;#x6D4B;&amp;#x8BD5;&amp;#x7ED3;&amp;#x679C;&amp;#x5206;&amp;#x522B;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-add-result.png&quot; alt=&quot;add&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-update-result.png&quot; alt=&quot;update&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-remove-result.png&quot; alt=&quot;remove&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;&amp;#x6240;&amp;#x6709;todo&amp;#x7684;api&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;a href=&quot;#RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&quot; class=&quot;headerlink&quot; title=&quot;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;/a&gt;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&lt;/h2&gt;&lt;p&gt;&amp;#x4E0A;&amp;#x8FF0;todo&amp;#x63A5;&amp;#x53E3;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5217;&amp;#x8868;&amp;#xFF1A;GET &lt;code&gt;/todos&lt;/code&gt;, &amp;#x663E;&amp;#x793A;&amp;#x6240;&amp;#x6709;todo&lt;br&gt;&amp;#x589E;&amp;#x52A0;&amp;#xFF1A;POST &lt;code&gt;/todos&lt;/code&gt;, &amp;#x65B0;&amp;#x589E;todo&lt;br&gt;&amp;#x5355;&amp;#x4E2A;&amp;#xFF1A;GET &lt;code&gt;/todos/:todo_id&lt;/code&gt;, &amp;#x663E;&amp;#x793A;&amp;#x67D0;&amp;#x4E2A;todo&lt;br&gt;&amp;#x4FEE;&amp;#x6539;&amp;#xFF1A;PUT &lt;code&gt;/todos/:todo_id&lt;/code&gt;, &amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;todo&lt;br&gt;&amp;#x5220;&amp;#x9664;&amp;#xFF1A;DELETE &lt;code&gt;/todos/:todo_id&lt;/code&gt;, &amp;#x5220;&amp;#x9664;&amp;#x67D0;&amp;#x4E2A;todo&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-6&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-6&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step7-restful-todos&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-6&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-6&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x4E0E;&amp;#x4E0A;&amp;#x9762;&amp;#x975E;restful&amp;#x5B9E;&amp;#x73B0;&amp;#x76F8;&amp;#x6BD4;&amp;#xFF0C;model&amp;#x91CC;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8BBF;&amp;#x95EE;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x590D;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x4E0D;&amp;#x540C;&amp;#x4E4B;&amp;#x5904;&amp;#xFF1A;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7D22;&amp;#x5F15;&amp;#xFF1B;&amp;#x8DEF;&amp;#x7531;&amp;#x53C2;&amp;#x6570;&amp;#x83B7;&amp;#x53D6;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7D22;&amp;#x5F15;&lt;code&gt;todos.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = router;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;).get(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/list&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;).post(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/add&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/:todo_id&amp;apos;&lt;/span&gt;).get(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/single&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/:todo_id&amp;apos;&lt;/span&gt;).put(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/update&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/:todo_id&amp;apos;&lt;/span&gt;).delete(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/remove&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;route&lt;/code&gt;&amp;#x662F;Express&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;api&amp;#xFF0C;&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A0;&amp;#x4E0A;&amp;#x5192;&amp;#x53F7;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x52A8;&amp;#x6001;&amp;#x8DEF;&amp;#x7531;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&lt;code&gt;/:todo_id&lt;/code&gt;&amp;#xFF0C;&amp;#x540E;&amp;#x9762;&amp;#x518D;&amp;#x8DDF;&amp;#x7740;&amp;#x52A8;&amp;#x8BCD;&amp;#x548C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x52A8;&amp;#x6001;&amp;#x8DEF;&amp;#x7531;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;req.params.todo_id&lt;/code&gt;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; todoId = req.params.todo_id;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x770B;&amp;#x4E0B;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;postman&amp;#x53C2;&amp;#x6570;&amp;#x5F62;&amp;#x5F0F;&amp;#x548C;&amp;#x6D4B;&amp;#x8BD5;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-list.png&quot; alt=&quot;list&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-add.png&quot; alt=&quot;add&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-single.png&quot; alt=&quot;single&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-update.png&quot; alt=&quot;update&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-delete.png&quot; alt=&quot;delete&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5168;&amp;#x6587;&amp;#x5B8C;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x6F14;&amp;#x793A;&amp;#x7528;Express&amp;#x642D;&amp;#x5EFA;Api&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5185;&amp;#x5BB9;&amp;#x6D89;&amp;#x53CA;&amp;#xFF1A
    
    </summary>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="Express.js" scheme="http://yoursite.com/tags/Express-js/"/>
    
  </entry>
  
  <entry>
    <title>【译】写宏</title>
    <link href="http://yoursite.com/2016/05/20/braveclojure-writing-macros/"/>
    <id>http://yoursite.com/2016/05/20/braveclojure-writing-macros/</id>
    <published>2016-05-20T09:03:14.000Z</published>
    <updated>2016-05-20T09:12:10.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x516B;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/writing-macros/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing Macros&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;Clojure&amp;#x5B8F;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6A21;&amp;#x578B;(&amp;#x7279;&amp;#x522B;&amp;#x662F;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;)&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x770B;&lt;a href=&quot;http://www.braveclojure.com/read-and-eval&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x539F;&amp;#x6587;&amp;#x7B2C;&amp;#x4E03;&amp;#x7AE0;&lt;/a&gt;,&amp;#x6216;&lt;a href=&quot;http://morrxy.github.io/2016/05/11/braveclojure-read-and-eval/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x82F1;&amp;#x4E2D;&amp;#x5BF9;&amp;#x7167;&amp;#x7FFB;&amp;#x8BD1;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;Clojure&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x7B2C;3&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/do-things/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Clojure Crash Course&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x67D0;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&lt;a href=&quot;http://clojuredocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coojuredocs&lt;/a&gt;&amp;#x7684;&amp;#x53C2;&amp;#x8003;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6587;&amp;#x6863;&amp;#x90FD;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;When I was 18, I got a job as a night auditor at a hotel in Santa Fe, New Mexico, working four nights a week from 11 pm till 7 am. After a few months of this sleepless schedule, my emotions took on a life of their own. One night, at about 3 am, I was watching an infomercial for a product claiming to restore men&amp;#x2019;s hair. As I watched the story of a formerly bald individual, I became overwhelmed with sincere joy. &amp;#x201C;At last!&amp;#x201D; my brain gushed. &amp;#x201C;This man has gotten the love and success he deserves! What an incredible product, giving hope to the hopeless!&amp;#x201D;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;18&amp;#x5C81;&amp;#x7684;&amp;#x4E8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just as a potion would allow me to temporarily alter my fundamental nature, macros allow you to modify Clojure in ways that just aren&amp;#x2019;t possible with other languages. With macros, you can extend Clojure to suit your problem space, building up the language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x7528;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4FEE;&amp;#x6539;Clojure&amp;#x3002;&amp;#x6709;&amp;#x4E86;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x6269;&amp;#x5C55;Clojure&amp;#x4F7F;&amp;#x5176;&amp;#x7B26;&amp;#x5408;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x589E;&amp;#x5F3A;&amp;#x8FD9;&amp;#x95E8;&amp;#x8BED;&amp;#x8A00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this chapter, you&amp;#x2019;ll thoroughly examine how to write macros, starting with basic examples and moving up in complexity. You&amp;#x2019;ll close by donning your make-believe cap and using macros to validate customer orders in your imaginary online potion store.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x4F1A;&amp;#x900F;&amp;#x5F7B;&amp;#x8BB2;&amp;#x89E3;&amp;#x5199;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4F1A;&amp;#x7528;&amp;#x5B8F;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5BA2;&amp;#x6237;&amp;#x8BA2;&amp;#x5355;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the end of the chapter, you&amp;#x2019;ll understand all the tools you&amp;#x2019;ll use to write macros: quote, syntax quote, unquote, unquote splicing (aka the pi&amp;#xF1;ata tool), and gensym. You&amp;#x2019;ll also learn about the dangers lying in wait for unsuspecting macro authors: double evaluation, variable capture, and macro infection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B66;&amp;#x4E60;&amp;#x5B8C;&amp;#x8FD9;&amp;#x7AE0;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x7406;&amp;#x89E3;&amp;#x6240;&amp;#x6709;&amp;#x5199;&amp;#x5B8F;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;(quote),&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;(syntax quote),&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;(unquote),&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;(unquote splicing)&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;(gensym)&amp;#x3002;&amp;#x4F60;&amp;#x4E5F;&amp;#x4F1A;&amp;#x4E86;&amp;#x89E3;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x5019;&amp;#x9047;&amp;#x5230;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4F20;&amp;#x67D3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros Are Essential&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Before you start writing macros, I want to help you put them in the proper context. Yes, macros are cooler than a polar bear&amp;#x2019;s toenails, but you shouldn&amp;#x2019;t think of macros as some esoteric tool you pull out when you feel like getting extra fancy with your code. In fact, macros allow Clojure to derive a lot of its built-in functionality from a tiny core of functions and special forms. Take &lt;code&gt;when&lt;/code&gt;, for example. &lt;code&gt;when&lt;/code&gt; has this general form:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x5199;&amp;#x5B8F;&amp;#x524D;&amp;#xFF0C;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x5BF9;&amp;#x5B8F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#x6709;&amp;#x4E2A;&amp;#x6070;&amp;#x5F53;&amp;#x7684;&amp;#x8BA4;&amp;#x8BC6;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x9177;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x5E94;&amp;#x8BE5;&amp;#x628A;&amp;#x5B83;&amp;#x5F53;&amp;#x6210;&amp;#x4EC0;&amp;#x4E48;&amp;#x6DF1;&amp;#x5965;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5229;&amp;#x7528;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7528;&amp;#x975E;&amp;#x5E38;&amp;#x5C11;&amp;#x91CF;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5C31;&amp;#x80FD;&amp;#x5F97;&amp;#x5230;&amp;#x8BB8;&amp;#x591A;Clojure&amp;#x5185;&amp;#x7F6E;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;when&lt;/code&gt;&amp;#x901A;&amp;#x5E38;&amp;#x662F;&amp;#x8FD9;&amp;#x79CD;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;when&lt;/span&gt;&lt;/span&gt; boolean-expression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You might think that &lt;code&gt;when&lt;/code&gt; is a special form like &lt;code&gt;if&lt;/code&gt;. Well guess what? It&amp;#x2019;s not! In most other languages, you can only create conditional expressions using special keywords, and there&amp;#x2019;s no way to create your own conditional operators. However, &lt;code&gt;when&lt;/code&gt; is actually a macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x8BB8;&amp;#x4F60;&amp;#x89C9;&amp;#x5F97;&lt;code&gt;when&lt;/code&gt;&amp;#x50CF;&lt;code&gt;if&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x662F;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x5B83;&amp;#x4E0D;&amp;#x662F;&amp;#x3002;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EA;&amp;#x80FD;&amp;#x7528;&amp;#x4E13;&amp;#x95E8;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#x521B;&amp;#x5EFA;&amp;#x6761;&amp;#x4EF6;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x65E0;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x4F60;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x6761;&amp;#x4EF6;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x3002;&amp;#x4F46;&lt;code&gt;when&lt;/code&gt;&amp;#x662F;&amp;#x4E2A;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this macro expansion, you can see that &lt;code&gt;when&lt;/code&gt; is implemented in terms of &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x89C1;&amp;#xFF0C;&lt;code&gt;when&lt;/code&gt;&amp;#x662F;&amp;#x7528;&lt;code&gt;if&lt;/code&gt;&amp;#x548C;&lt;code&gt;do&lt;/code&gt;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(macroexpand &amp;apos;(when boolean-expression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                expression-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                expression-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                expression-3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (if boolean-expression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (do expression-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           expression-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           expression-3))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This shows that macros are an integral part of Clojure development&amp;#x2014;they&amp;#x2019;re even used to provide fundamental operations. Macros aren&amp;#x2019;t reserved for exotic special cases; you should think of macro writing as just another tool in your tool satchel. As you learn to write your own macros, you&amp;#x2019;ll see how they allow you to extend the language even further so that it fits the shape of your particular problem domain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8BF4;&amp;#x660E;&amp;#x5B8F;&amp;#x662F;Clojure&amp;#x5F00;&amp;#x53D1;&amp;#x5FC5;&amp;#x4E0D;&amp;#x53EF;&amp;#x5C11;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x2013;&amp;#x751A;&amp;#x81F3;&amp;#x7528;&amp;#x6765;&amp;#x63D0;&amp;#x4F9B;&amp;#x57FA;&amp;#x7840;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x5B8F;&amp;#x4E0D;&amp;#x662F;&amp;#x7559;&amp;#x7ED9;&amp;#x7279;&amp;#x6B8A;&amp;#x60C5;&amp;#x51B5;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x5B8F;&amp;#x53EA;&amp;#x662F;&amp;#x5DE5;&amp;#x5177;&amp;#x888B;&amp;#x91CC;&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x4F60;&amp;#x81EA;&amp;#x5DF1;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x5B8F;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x6269;&amp;#x5C55;&amp;#x8BED;&amp;#x8A00;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4E4B;&amp;#x7B26;&amp;#x5408;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anatomy of a Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Macro definitions look much like function definitions. They have a name, an optional document string, an argument list, and a body. The body will almost always return a list. This makes sense because macros are a way of transforming a data structure into a form Clojure can evaluate, and Clojure uses lists to represent function calls, special form calls, and macro calls. You can use any function, macro, or special form within the macro body, and you call macros just like you would a function or special form.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x5F88;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x9009;&amp;#x6587;&amp;#x6863;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5217;&amp;#x8868;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3B;&amp;#x4F53;&amp;#x3002;&amp;#x4E3B;&amp;#x4F53;&amp;#x51E0;&amp;#x4E4E;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x6709;&amp;#x610F;&amp;#x4E49;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x628A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x80FD;&amp;#x591F;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;Clojure&amp;#x7528;list&amp;#x4EE3;&amp;#x8868;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x548C;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x5728;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x4F55;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x50CF;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x90A3;&amp;#x6837;&amp;#x8C03;&amp;#x7528;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an example, here&amp;#x2019;s our old friend the &lt;code&gt;infix&lt;/code&gt; macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&lt;code&gt;infix&lt;/code&gt;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Use this macro when you pine for the notation of your childhood&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [infixed]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infixed) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infixed) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infixed)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This macro rearranges a list into the correct order for infix notation. Here&amp;#x2019;s an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x628A;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#x7684;list&amp;#x91CD;&amp;#x65B0;&amp;#x5B89;&amp;#x6392;&amp;#x6210;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;One key difference between functions and macros is that function arguments are fully evaluated before they&amp;#x2019;re passed to the function, whereas macros receive arguments as unevaluated data. You can see this in the example. If you tried evaluating &lt;code&gt;(1 + 1)&lt;/code&gt; on its own, you would get an exception. However, because you&amp;#x2019;re making a macro call, the unevaluated list &lt;code&gt;(1 + 1)&lt;/code&gt; is passed to &lt;code&gt;infix&lt;/code&gt;. Then the macro can use &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;, and &lt;code&gt;last&lt;/code&gt; to rearrange the list so Clojure can evaluate it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x5B8F;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5173;&amp;#x952E;&amp;#x5DEE;&amp;#x522B;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x53C2;&amp;#x6570;&amp;#x88AB;&amp;#x5168;&amp;#x90E8;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x518D;&amp;#x4F20;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x800C;&amp;#x5B8F;&amp;#x53C2;&amp;#x6570;&amp;#x4E0D;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x70B9;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5C1D;&amp;#x8BD5;&amp;#x6C42;&amp;#x503C;&lt;code&gt;(1 + 1)&lt;/code&gt;&amp;#x672C;&amp;#x8EAB;&amp;#xFF0C;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&amp;#x4F46;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FDB;&amp;#x884C;&amp;#x7684;&amp;#x662F;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x672A;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list&lt;code&gt;(1 +  1)&lt;/code&gt;&amp;#x4F20;&amp;#x7ED9;&amp;#x4E86;&lt;code&gt;infxi&lt;/code&gt;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x5B8F;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;&amp;#x91CD;&amp;#x65B0;&amp;#x5B89;&amp;#x6392;list,&amp;#x6240;&amp;#x4EE5;Clojure&amp;#x80FD;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By expanding the macro, you can see that &lt;code&gt;infix&lt;/code&gt; rearranges &lt;code&gt;(1 + 1)&lt;/code&gt; into &lt;code&gt;(+ 1 1)&lt;/code&gt;. Handy!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x4EE5;&amp;#x540E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&lt;code&gt;infix&lt;/code&gt;&amp;#x628A;&lt;code&gt;(1 + 1)&lt;/code&gt;&amp;#x91CD;&amp;#x65B0;&amp;#x5B89;&amp;#x6392;&amp;#x6210;&amp;#x4E86;&lt;code&gt;(+ 1 1)&lt;/code&gt;&amp;#x3002;&amp;#x5F88;&amp;#x65B9;&amp;#x4FBF;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also use argument destructuring in macro definitions, just like you can with functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x91CC;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [[operand1 op operand2]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; op operand1 operand2))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Destructuring arguments lets you succinctly bind values to symbols based on their position in a sequential argument. Here, &lt;code&gt;infix-2&lt;/code&gt; takes a sequential data structure as an argument and destructures by position so the first value is named &lt;code&gt;operand1&lt;/code&gt;, the second value is named &lt;code&gt;op&lt;/code&gt;, and the third value is named &lt;code&gt;operand2&lt;/code&gt; within the macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x57FA;&amp;#x4E8E;&amp;#x503C;&amp;#x5728;&amp;#x5E8F;&amp;#x5217;&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;infix-2&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x57FA;&amp;#x4E8E;&amp;#x4F4D;&amp;#x7F6E;&amp;#x89E3;&amp;#x6784;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x5728;&amp;#x5B8F;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x4E3A;&lt;code&gt;operand1&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x503C;&amp;#x547D;&amp;#x540D;&amp;#x4E3A;&lt;code&gt;op&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x503C;&amp;#x547D;&amp;#x540D;&amp;#x4E3A;&lt;code&gt;operand2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also create multiple-arity macros, and in fact the fundamental Boolean operations &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; are defined as macros. Here&amp;#x2019;s &lt;code&gt;and&lt;/code&gt;&amp;#x2019;s source code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x80FD;&amp;#x521B;&amp;#x5EFA;&amp;#x6709;&amp;#x591A;&amp;#x79CD;&amp;#x53C2;&amp;#x6570;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5B8F;&amp;#xFF0C;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x57FA;&amp;#x7840;&amp;#x5E03;&amp;#x5C14;&amp;#x64CD;&amp;#x4F5C;&lt;code&gt;and&lt;/code&gt;&amp;#x548C;&lt;code&gt;or&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x7528;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&lt;code&gt;and&lt;/code&gt;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defmacro and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;Evaluates exprs one at a time, from left to right. If a form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  returns logical false (nil or false), and returns that value and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  doesn&amp;apos;t evaluate any of the other expressions, otherwise it returns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  the value of the last expr. (and) returns true.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {:added &amp;quot;1.0&amp;quot;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ([] true)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ([x] x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ([x &amp;amp; next]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   `(let [and# ~x]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (if and# (and ~@next) and#))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;There&amp;#x2019;s a lot of stuff going on in this example, including the symbols &lt;code&gt;` &lt;/code&gt; and &lt;code&gt;~@&lt;/code&gt;, which you&amp;#x2019;ll learn about soon. What&amp;#x2019;s important to realize for now is that there are three macro bodies here: a 0-arity macro body that always returns &lt;code&gt;true&lt;/code&gt;, a 1-arity macro body that returns the operand, and an n-arity macro body that recursively calls itself. That&amp;#x2019;s right: macros can be recursive, and they also can use rest args (&lt;code&gt;&amp;amp; next&lt;/code&gt; in the n-arity macro body), just like functions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x540E;&amp;#x9762;&amp;#x4F1A;&amp;#x5B66;&amp;#x4E60;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;` &lt;/code&gt;&amp;#x548C;&lt;code&gt;~@&lt;/code&gt;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x662F;&amp;#x8BA4;&amp;#x8BC6;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#xFF1A;&amp;#x65E0;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;true&lt;/code&gt;&amp;#x7684;&amp;#xFF1B;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1B;n&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x9012;&amp;#xFF0C;&amp;#x5F52;&amp;#x8C03;&amp;#x7528;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x9012;&amp;#x5F52;&amp;#x800C;&amp;#x4E14;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x5269;&amp;#x4F59;&amp;#x53C2;&amp;#x6570;(n&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#x91CC;&amp;#x7684;&lt;code&gt;&amp;amp; next&lt;/code&gt;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that you&amp;#x2019;re comfortable with the anatomy of macros, it&amp;#x2019;s time to strap yourself to your thinking mast Odysseus-style and learn to write macro bodies.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x719F;&amp;#x6089;&amp;#x4E86;&amp;#x5B8F;&amp;#x7684;&amp;#x89E3;&amp;#x6784;&amp;#x540E;&amp;#xFF0C;&amp;#x7EE7;&amp;#x7EED;&amp;#x5B66;&amp;#x4E60;&amp;#x5199;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Building Lists for Evaluation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;a href=&quot;#&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;/a&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Macro writing is all about building a list for Clojure to evaluate, and it requires a kind of inversion to your normal way of thinking. For one, you&amp;#x2019;ll often need to quote expressions to get unevaluated data structures in your final list (we&amp;#x2019;ll get back to that in a moment). More generally, you&amp;#x2019;ll need to be extra careful about the difference between a &lt;em&gt;symbol&lt;/em&gt; and its &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x4E00;&amp;#x5207;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list,&amp;#x8FD9;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x4E00;&amp;#x79CD;&amp;#x4E0E;&amp;#x5E73;&amp;#x5E38;&amp;#x76F8;&amp;#x53CD;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x601D;&amp;#x8003;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;list&amp;#x91CC;&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x5F15;&amp;#x7528;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x66F4;&amp;#x666E;&amp;#x904D;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&amp;#x4E0E;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5DEE;&amp;#x522B;&amp;#x7279;&amp;#x522B;&amp;#x5C0F;&amp;#x5FC3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Distinguishing Symbols and Values&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&quot;&gt;&lt;a href=&quot;#&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&quot;&gt;&lt;/a&gt;&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Say you want to create a macro that takes an expression and both prints and returns its value. (This differs from &lt;code&gt;println&lt;/code&gt; in that &lt;code&gt;println&lt;/code&gt; always returns &lt;code&gt;nil&lt;/code&gt;.) You want your macro to return lists that look like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x4F60;&amp;#x5E0C;&amp;#x671B;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x5176;&amp;#x503C;&amp;#x3002;(&amp;#x4E0E;&lt;code&gt;println&lt;/code&gt;&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x4E4B;&amp;#x5904;&amp;#x662F;&lt;code&gt;println&lt;/code&gt;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;nil&lt;/code&gt;&amp;#x3002;)&amp;#x4F60;&amp;#x60F3;&amp;#x8BA9;&amp;#x4F60;&amp;#x7684;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;list&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Your first version of the macro might look like this, using the &lt;code&gt;list&lt;/code&gt; function to create the list that Clojure should evaluate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x7248;&amp;#x7684;&amp;#x5B8F;&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x521B;&amp;#x5EFA;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; my-print-whoopsie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; let [result expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; println result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; CompilerException java.lang.RuntimeException: Can&amp;apos;t take value of a macro: #&amp;apos;clojure.core/let&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, if you tried this, you&amp;#x2019;d get the exception Can&amp;#x2019;t take the value of a macro: #&amp;#x2019;clojure.core/let. What&amp;#x2019;s going on here?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#x4F60;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;Can&amp;#x2019;t take the value of a macro: #&amp;#x2019;clojure.core/let&amp;#x3002;&amp;#x600E;&amp;#x4E48;&amp;#x56DE;&amp;#x4E8B;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The reason this happens is that your macro body tries to get the &lt;em&gt;value&lt;/em&gt; that the &lt;em&gt;symbol&lt;/em&gt; &lt;code&gt;let&lt;/code&gt; refers to, whereas what you actually want to do is return the &lt;code&gt;let&lt;/code&gt; symbol itself. There are other problems, too: you&amp;#x2019;re trying to get the value of &lt;code&gt;result&lt;/code&gt;, which is unbound, and you&amp;#x2019;re trying to get the value of &lt;code&gt;println&lt;/code&gt; instead of returning its symbol. Here&amp;#x2019;s how you would write the macro to do what you want:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#x91CC;&amp;#x5728;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&lt;code&gt;let&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#xFF0C;&amp;#x800C;&amp;#x4F60;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;let&lt;/code&gt;&amp;#x672C;&amp;#x8EAB;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&lt;code&gt;result&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x672A;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF1B;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&lt;code&gt;println&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4F60;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; my-print-whoopsie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;let [&amp;apos;result expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;println &amp;apos;result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;apos;result))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, you&amp;#x2019;re quoting each symbol you want to use as a symbol by prefixing it with the single quote character, &lt;code&gt;&amp;apos;&lt;/code&gt;. This tells Clojure to &lt;em&gt;turn off&lt;/em&gt; evaluation for whatever follows, in this case preventing Clojure from trying to resolve the symbols and instead just returning the symbols. The ability to use quoting to turn off evaluation is central to writing macros, so let&amp;#x2019;s give the topic its own section.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F15;&amp;#x7528;(quote)&amp;#x4E86;&amp;#x6BCF;&amp;#x4E2A;&amp;#x60F3;&amp;#x7528;&amp;#x4F5C;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5728;&amp;#x5B83;&amp;#x524D;&amp;#x9762;&amp;#x9644;&amp;#x52A0;&amp;#x4E86;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&lt;code&gt;&amp;apos;&lt;/code&gt;&amp;#x3002;&amp;#x65E0;&amp;#x8BBA;&amp;#x5F15;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;Clojure&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x963B;&amp;#x6B62;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#x529F;&amp;#x80FD;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5199;&amp;#x5B8F;&amp;#x975E;&amp;#x5E38;&amp;#x91CD;&amp;#x8981;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x5355;&amp;#x72EC;&amp;#x8BA8;&amp;#x8BBA;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple Quoting&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;You&amp;#x2019;ll almost always use quoting within your macros to obtain an unevaluated symbol. Let&amp;#x2019;s go through a brief refresher on quoting and then see how you might use it in a macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x83B7;&amp;#x5F97;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5B8F;&amp;#x91CC;&amp;#x51E0;&amp;#x4E4E;&amp;#x603B;&amp;#x662F;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x7B80;&amp;#x5355;&amp;#x56DE;&amp;#x987E;&amp;#x4E00;&amp;#x4E0B;&amp;#x5F15;&amp;#x7528;(quote)&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x770B;&amp;#x770B;&amp;#x5B8F;&amp;#x91CC;&amp;#x600E;&amp;#x4E48;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First, here&amp;#x2019;s a simple function call with no quoting:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x6CA1;&amp;#x6709;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If we add quote at the beginning, it returns an unevaluated data structure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x524D;&amp;#x9762;&amp;#x52A0;&amp;#x4E0A;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here in the returned list, &lt;code&gt;+&lt;/code&gt; is a symbol. If we evaluate this plus symbol, it yields the plus function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&lt;code&gt;+&lt;/code&gt;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x662F;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;lt;core$_PLUS_ clojure.core$_PLUS_@47b36583&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Whereas if we quote the plus symbol, it just yields the plus symbol:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F15;&amp;#x7528;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x53EA;&amp;#x751F;&amp;#x6210;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; +)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Evaluating an unbound symbol raises an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x672A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sweating-to-the-oldies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; Unable to resolve symbol: sweating-to-the-oldies in this context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;But quoting the symbol returns a symbol regardless of whether the symbol has a value associated with it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x5F15;&amp;#x7528;&amp;#x7B26;&amp;#x53F7;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8BBA;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x503C;&amp;#x4E0E;&amp;#x5B83;&amp;#x5173;&amp;#x8054;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; sweating-to-the-oldies)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; sweating-to-the-oldies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The single quote character is a reader macro for (quote x):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#x662F;(quote x)&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;dr-jekyll-and-richard-simmons&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; dr-jekyll-and-richard-simmons&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can see quoting at work in the when macro. This is when&amp;#x2019;s actual source code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5B8F;&lt;code&gt;when&lt;/code&gt;&amp;#x91CC;&amp;#xFF0C;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;code&gt;when&lt;/code&gt;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; when&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Evaluates test. If logical true, evaluates body in an implicit do.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:added&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [test &amp;amp; body]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;if test (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;cons&lt;/span&gt;&lt;/span&gt; &amp;apos;do body)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that the macro definition quotes both &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt;. That&amp;#x2019;s because you want these symbols to be in the final list that &lt;code&gt;when&lt;/code&gt; returns for evaluation. Here&amp;#x2019;s an example of what that returned list might look like:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&lt;code&gt;if&lt;/code&gt;&amp;#x548C;&lt;code&gt;do&lt;/code&gt;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F60;&amp;#x5E0C;&amp;#x671B;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7B26;&amp;#x53F7;&amp;#x51FA;&amp;#x73B0;&amp;#x5728;&lt;code&gt;when&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6700;&amp;#x7EC8;list&amp;#x91CC;&amp;#x3002;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;list&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(macroexpand &amp;apos;(when (the-cows-come :home)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (call me :pappy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (slap me :silly)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (if (the-cows-come :home)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (do (call me :pappy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (slap me :silly)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s another example of source code for a built-in macro, this time for &lt;code&gt;unless&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5167;&amp;#x5EFA;&amp;#x5B8F;&lt;code&gt;unless&lt;/code&gt;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; unless&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Inverted &amp;apos;if&amp;apos;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [test &amp;amp; branches]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;conj&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reverse&lt;/span&gt;&lt;/span&gt; branches) test &amp;apos;if))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Again, you have to quote &lt;code&gt;if&lt;/code&gt; because you want the unevaluated symbol to be placed in the resulting list, like this one:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt;&amp;#x8FD8;&amp;#x662F;&amp;#x5FC5;&amp;#x987B;&amp;#x88AB;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;list&amp;#x91CC;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x672A;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(macroexpand &amp;apos;(unless (done-been slapped? me)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (slap me :silly)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (say &amp;quot;I reckon that&amp;apos;ll learn me&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (if (done-been slapped? me)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (say &amp;quot;I reckon that&amp;apos;ll learn me&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (slap me :silly))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In many cases, you&amp;#x2019;ll use simple quoting like this when writing macros, but most often you&amp;#x2019;ll use the more powerful syntax quote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x591A;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5199;&amp;#x5B8F;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F46;&amp;#x66F4;&amp;#x7ECF;&amp;#x5E38;&amp;#x7684;&amp;#x662F;&amp;#x4F7F;&amp;#x7528;&amp;#x66F4;&amp;#x5F3A;&amp;#x5927;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax Quoting&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;So far, you&amp;#x2019;ve seen macros that build up lists by using the &lt;code&gt;list&lt;/code&gt; function to create a list along with &lt;code&gt;&amp;apos;&lt;/code&gt; (quote), and functions that operate on lists like &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, and so on. Indeed, you could write macros that way until the cows come home. Sometimes, though, it leads to tedious and verbose code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x6B64;&amp;#x4E3A;&amp;#x6B62;&amp;#xFF0C;&amp;#x4F60;&amp;#x89C1;&amp;#x5230;&amp;#x7684;&amp;#x5B8F;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#xFF1A;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x52A0;&amp;#x4E0A;&lt;code&gt;&amp;#x2018;&lt;/code&gt;(&amp;#x5F15;&amp;#x7528;)&amp;#x548C;&amp;#x64CD;&amp;#x4F5C;list&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;first&lt;/code&gt;,&lt;code&gt;second&lt;/code&gt;,&lt;code&gt;last&lt;/code&gt;&amp;#x7B49;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#x5B8F;&amp;#x65E2;&amp;#x6162;&amp;#x53C8;&amp;#x7E41;&amp;#x7410;&amp;#x65E0;&amp;#x804A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax quoting returns unevaluated data structures, similar to normal quoting. However, there are two important differences. One difference is that syntax quoting will return the &lt;em&gt;fully qualified&lt;/em&gt; symbols (that is, with the symbol&amp;#x2019;s namespace included). Let&amp;#x2019;s compare quoting and syntax quoting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4E0E;&amp;#x666E;&amp;#x901A;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;&amp;#x4F46;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x533A;&amp;#x522B;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&lt;em&gt;&amp;#x5B8C;&amp;#x5168;&amp;#x89C4;&amp;#x8303;&lt;/em&gt;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;(&amp;#x5373;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;)&amp;#x3002;&amp;#x6BD4;&amp;#x8F83;&amp;#x4E00;&amp;#x4E0B;&amp;#x4E8C;&amp;#x8005;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quoting does not include a namespace if your code doesn&amp;#x2019;t include a namespace:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x6CA1;&amp;#x6709;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x5F15;&amp;#x7528;&amp;#x4E0D;&amp;#x5305;&amp;#x542B;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Write out the namespace, and it&amp;#x2019;ll be returned by normal quote:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x6709;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x666E;&amp;#x901A;&amp;#x5F15;&amp;#x7528;&amp;#x7ED3;&amp;#x679C;&amp;#x91CC;&amp;#x624D;&amp;#x6709;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;clojure.core/+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; clojure.core/+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax quoting will always include the symbol&amp;#x2019;s full namespace:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5B8C;&amp;#x6574;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; clojure.core/+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Quoting a list recursively quotes all the elements:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;list&amp;#x9012;&amp;#x5F52;&amp;#x5730;&amp;#x5F15;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x6210;&amp;#x5458;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax quoting a list recursively syntax quotes all the elements:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;list&amp;#x9012;&amp;#x5F52;&amp;#x5730;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x6210;&amp;#x5458;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The reason syntax quotes include the namespace is to help you avoid name collisions, a topic covered in Chapter 6.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5305;&amp;#x542B;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x907F;&amp;#x514D;&amp;#x547D;&amp;#x540D;&amp;#x51B2;&amp;#x7A81;&amp;#xFF0C;&amp;#x7B2C;6&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FC7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The other difference between quoting and syntax quoting is that the latter allows you to unquote forms using the tilde, &lt;code&gt;~&lt;/code&gt;. It&amp;#x2019;s kind of like kryptonite in that way: whenever Superman is around kryptonite, his powers disappear. Whenever a tilde appears within a syntax-quoted form, the syntax quote&amp;#x2019;s power to return unevaluated, fully namespaced forms disappears. Here&amp;#x2019;s an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#xFF0C;&lt;code&gt;~&lt;/code&gt;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x8D85;&amp;#x4EBA;&amp;#x6328;&amp;#x7740;&amp;#x6C2A;&amp;#x661F;&amp;#x77F3;&amp;#x80FD;&amp;#x529B;&amp;#x5C31;&amp;#x4F1A;&amp;#x6D88;&amp;#x5931;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x53EA;&amp;#x8981;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#x51FA;&amp;#x73B0;&amp;#x5728;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5185;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x672A;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x5B8C;&amp;#x6574;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x80FD;&amp;#x529B;&amp;#x5C31;&amp;#x4F1A;&amp;#x6D88;&amp;#x5931;&amp;#x3002;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 ~(inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Because it comes after the tilde, &lt;code&gt;(inc 1)&lt;/code&gt; is evaluated instead of being quoted. Without the unquote, syntax quoting returns the unevaluated form with fully qualified symbols:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;&lt;code&gt;(inc 1)&lt;/code&gt;&amp;#x5728;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#x540E;&amp;#x9762;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x88AB;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x5B8C;&amp;#x5168;&amp;#x89C4;&amp;#x8303;&amp;#x7684;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 (inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 (clojure.core/inc 1))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;#x2019;re familiar with string interpolation, you can think of syntax quoting/unquoting similarly. In both cases, you&amp;#x2019;re creating a kind of template, placing a few variables within a larger, static structure. For example, in Ruby you can create the string &lt;code&gt;&amp;quot;Churn your butter, Jebediah!&amp;quot;&lt;/code&gt; through concatenation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x719F;&amp;#x6089;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6CE8;&amp;#x5165;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;/&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&amp;#x5176;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x90FD;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x79CD;&amp;#x6A21;&amp;#x7248;&amp;#xFF0C;&amp;#x5728;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#xFF0C;&amp;#x9759;&amp;#x6001;&amp;#x7ED3;&amp;#x6784;&amp;#x91CC;&amp;#x653E;&amp;#x5165;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x7528;Ruby,&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FDE;&amp;#x63A5;&amp;#x521B;&amp;#x5EFA;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;Churn your butter, Jebediah!&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = &lt;span class=&quot;string&quot;&gt;&amp;quot;Jebediah&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;Churn your butter, &amp;quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;or through interpolation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6216;&amp;#x4F7F;&amp;#x7528;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6CE8;&amp;#x5165;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;Churn your butter, &lt;span class=&quot;subst&quot;&gt;#{name}&lt;/span&gt;!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the same way that string interpolation leads to clearer and more concise code, syntax quoting and unquoting allow you to create lists more clearly and concisely. Compare using the &lt;code&gt;list&lt;/code&gt; function, shown first, with using syntax quoting:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6CE8;&amp;#x5165;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#xFF0C;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x4E5F;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x3002;&amp;#x6BD4;&amp;#x8F83;&amp;#x4E00;&amp;#x4E0B;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E0E;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(list &amp;apos;+ 1 (inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 ~(inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, the syntax-quote version is more concise. Also, its visual form is closer to the final form of the list, making it easier to understand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x5176;&amp;#x89C6;&amp;#x89C9;&amp;#x5F62;&amp;#x72B6;&amp;#x66F4;&amp;#x63A5;&amp;#x8FD1;&amp;#x6700;&amp;#x7EC8;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x5B83;&amp;#x66F4;&amp;#x597D;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using Syntax Quoting in a Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Now that you have a good handle on how syntax quoting works, take a look at the &lt;code&gt;code-critic&lt;/code&gt; macro. You&amp;#x2019;re going to write a more concise version using syntax quoting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&lt;code&gt;code-critic&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x4F60;&amp;#x5C06;&amp;#x8981;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Phrases are courtesy Hermes Conrad from Futurama&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;println&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&amp;quot;Great squid of Madrid, this is bad code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;quote bad))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;println&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet gorilla of Manila, this is good code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;quote good))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;code-critic&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Great squid of Madrid, this is bad code: (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Sweet gorilla of Manila, this is good code: (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Just looking at all those tedious repetitions of &lt;code&gt;list&lt;/code&gt; and single quotes makes me cringe. But if you rewrite &lt;code&gt;code-critic&lt;/code&gt; using syntax quoting, you can make it sleek and concise:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x770B;&amp;#x90A3;&amp;#x4E9B;&amp;#x91CD;&amp;#x590D;&amp;#x70E6;&amp;#x4EBA;&amp;#x7684;&lt;code&gt;list&lt;/code&gt;&amp;#x548C;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x91CD;&amp;#x5199;&lt;code&gt;code-critic&lt;/code&gt;,&amp;#x4F1A;&amp;#x66F4;&amp;#x6574;&amp;#x9F50;&amp;#x7B80;&amp;#x6D01;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Phrases are courtesy Hermes Conrad from Futurama&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Great squid of Madrid, this is bad code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~bad))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet gorilla of Manila, this is good code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~good))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, you want to quote everything except for the symbols &lt;code&gt;good&lt;/code&gt; and &lt;code&gt;bad&lt;/code&gt;. In the original version, you have to quote each piece individ&amp;#xAD;ually and explicitly place it in a list in an unwieldy fashion, just to prevent those two symbols from being quoted. With syntax quoting, you can just wrap the entire &lt;code&gt;do&lt;/code&gt; expression in a quote and simply unquote the two symbols that you want to evaluate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8981;&amp;#x5F15;&amp;#x7528;&amp;#x9664;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;good&lt;/code&gt;&amp;#x548C;&lt;code&gt;bad&lt;/code&gt;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x91CC;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5F97;&amp;#x4E0D;&amp;#x5355;&amp;#x72EC;&amp;#x5F15;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5E76;&amp;#x653E;&amp;#x5728;list&amp;#x91CC;&amp;#x3002;&amp;#x6709;&amp;#x4E86;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5427;&amp;#x6574;&amp;#x4E2A;&lt;code&gt;do&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#xFF0C;&amp;#x518D;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x90A3;&amp;#x4E9B;&amp;#x9700;&amp;#x8981;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And thus concludes the introduction to the mechanics of writing a macro! Sweet sacred boa of Western and Eastern Samoa, that was a lot!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x673A;&amp;#x5236;&amp;#x5C31;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E86;&amp;#xFF0C;&amp;#x771F;&amp;#x4E0D;&amp;#x5C11;&amp;#x554A;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To sum up, macros receive unevaluated, arbitrary data structures as arguments and return data structures that Clojure evaluates. When defining your macro, you can use argument destructuring just like you can with functions and &lt;code&gt;let&lt;/code&gt; bindings. You can also write multiple-arity and recursive macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x603B;&amp;#x7ED3;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5B8F;&amp;#x63A5;&amp;#x53D7;&amp;#x4EFB;&amp;#x610F;&amp;#x7684;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x5B9A;&amp;#x4E49;&amp;#x5B8F;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;&amp;#x548C;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x8DDF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x591A;&amp;#x5957;&amp;#x53C2;&amp;#x6570;&amp;#x548C;&amp;#x9012;&amp;#x5F52;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most of the time, your macros will return lists. You can build up the &lt;code&gt;list&lt;/code&gt; to be returned by using list functions or by using syntax quoting. Syntax quoting usually leads to code that&amp;#x2019;s clearer and more concise because it lets you create a template of the data structure you want to return that&amp;#x2019;s easier to parse visually. Whether you use syntax quoting or plain quoting, it&amp;#x2019;s important to be clear about the distinction between a symbol and the value it evaluates to when building up your list. And if you want your macro to return multiple forms for Clojure to evaluate, make sure to wrap them in a &lt;code&gt;do&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;list&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;list&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5EFA;&amp;#x7ACB;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#xFF0C;&amp;#x7B80;&amp;#x6D01;&amp;#xFF0C;&amp;#x89C6;&amp;#x89C9;&amp;#x4E0A;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x8FA8;&amp;#x8BA4;&amp;#x3002;&amp;#x4E0D;&amp;#x7BA1;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x8FD8;&amp;#x662F;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x5728;&amp;#x5EFA;&amp;#x7ACB;list&amp;#x65F6;&amp;#x5019;&amp;#x4F60;&amp;#x8981;&amp;#x533A;&amp;#x5206;&amp;#x6E05;&amp;#x695A;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x503C;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5E0C;&amp;#x671B;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x591A;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8981;&amp;#x786E;&amp;#x4FDD;&amp;#x7528;&lt;code&gt;do&lt;/code&gt;&amp;#x628A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Refactoring a Macro and Unquote Splicing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;That &lt;code&gt;code-critic&lt;/code&gt; macro in the preceding section could still use some improvement. Look at the duplication! The two &lt;code&gt;println&lt;/code&gt; calls are nearly identical. Let&amp;#x2019;s clean that up. First, let&amp;#x2019;s create a function to generate those &lt;code&gt;println&lt;/code&gt; lists. Functions are easier to think about and play with than macros, so it&amp;#x2019;s often a good idea to move macro guts to helper functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x4E00;&amp;#x8282;&amp;#x7684;&lt;code&gt;code-critic&lt;/code&gt;&amp;#x5B8F;&amp;#x8FD8;&amp;#x80FD;&amp;#x4F18;&amp;#x5316;&amp;#x3002;&amp;#x770B;&amp;#x4E0B;&amp;#x91CD;&amp;#x590D;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x4E24;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x51E0;&amp;#x4E4E;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x5F00;&amp;#x59CB;&amp;#x6E05;&amp;#x7406;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x751F;&amp;#x6210;&amp;#x90A3;&amp;#x4E9B;&lt;code&gt;println&lt;/code&gt;list&amp;#x3002;&amp;#x51FD;&amp;#x6570;&amp;#x6BD4;&amp;#x5B8F;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x601D;&amp;#x8003;&amp;#x548C;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7ECF;&amp;#x5E38;&amp;#x628A;&amp;#x5B8F;&amp;#x5185;&amp;#x90E8;&amp;#x90E8;&amp;#x5206;&amp;#x79FB;&amp;#x5230;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;&amp;#x91CC;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; criticize-code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [criticism code]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; ~criticism (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~code)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; ~(&lt;span class=&quot;name&quot;&gt;criticize-code&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cursed bacteria of Liberia, this is bad code:&amp;quot;&lt;/span&gt; bad)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ~(&lt;span class=&quot;name&quot;&gt;criticize-code&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet sacred boa of Western and Eastern Samoa, this is good code:&amp;quot;&lt;/span&gt; good)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice how the &lt;code&gt;criticize-code&lt;/code&gt; function returns a syntax-quoted list. This is how you build up the list that the macro will return.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x51FD;&amp;#x6570;&lt;code&gt;criticize-code&lt;/code&gt;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;list&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x6784;&amp;#x5EFA;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;list&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There&amp;#x2019;s more room for improvement, though. The code still has multiple, nearly identical calls to a function. In a situation like this where you want to apply the same function to a collection of values, it makes sense to use a seq function like &lt;code&gt;map&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x800C;&amp;#x8FD8;&amp;#x6709;&amp;#x63D0;&amp;#x5347;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x4ECD;&amp;#x7136;&amp;#x6709;&amp;#x591A;&amp;#x6B21;&amp;#x51E0;&amp;#x4E4E;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&amp;#x503C;&amp;#x7684;&amp;#x96C6;&amp;#x5408;&amp;#x8C03;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;map&lt;/code&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; ~(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; criticize-code %)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [[&lt;span class=&quot;string&quot;&gt;&amp;quot;Great squid of Madrid, this is bad code:&amp;quot;&lt;/span&gt; bad]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              [&lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet gorilla of Manila, this is good code:&amp;quot;&lt;/span&gt; good]])))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is looking a little better. You&amp;#x2019;re mapping over each criticism/code pair and applying the &lt;code&gt;criticize-code&lt;/code&gt; function to the pair. Let&amp;#x2019;s try to run the code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x597D;&amp;#x70B9;&amp;#x4E86;&amp;#x3002;&amp;#x5BF9;&amp;#x6BCF;&amp;#x5BF9;criticism/code&amp;#x8C03;&amp;#x7528;&lt;code&gt;criticize-code&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5C1D;&amp;#x8BD5;&amp;#x8FD0;&amp;#x884C;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;code-critic&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; NullPointerException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Oh no! That didn&amp;#x2019;t work at all! What happened? The problem is that &lt;code&gt;map&lt;/code&gt; returns a list, and in this case, it returned a list of &lt;code&gt;println&lt;/code&gt; expressions. We just want the result of each &lt;code&gt;println&lt;/code&gt; call, but instead, this code sticks both results in a list and then tries to evaluate that list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FA;&amp;#x73B0;&amp;#x5F02;&amp;#x5E38;&amp;#x4E86;&amp;#xFF0C;&amp;#x4EC0;&amp;#x4E48;&amp;#x60C5;&amp;#x51B5;&amp;#xFF1F;&amp;#x95EE;&amp;#x9898;&amp;#x51FA;&amp;#x5728;&lt;code&gt;map&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;list,&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;list&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x53EA;&amp;#x662F;&amp;#x6BCF;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x628A;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7ED3;&amp;#x679C;&amp;#x653E;&amp;#x5728;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#x91CC;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In other words, as it&amp;#x2019;s evaluating this code, Clojure gets to something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6362;&amp;#x53E5;&amp;#x8BDD;&amp;#x8BF4;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#xFF0C;Clojure&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ((&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;criticism&amp;quot;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;criticism&amp;quot;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;then evaluates the first &lt;code&gt;println&lt;/code&gt; call to give us this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;criticism&amp;quot;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;and after evaluating the second &lt;code&gt;println&lt;/code&gt; call, does this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the cause of the exception. &lt;code&gt;println&lt;/code&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, so we end up with something like &lt;code&gt;(nil nil)&lt;/code&gt;. &lt;code&gt;nil&lt;/code&gt; isn&amp;#x2019;t callable, and we get a &lt;code&gt;NullPointerException&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x5F02;&amp;#x5E38;&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#xFF0C;&lt;code&gt;println&lt;/code&gt;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&lt;code&gt;nil&lt;/code&gt;,&amp;#x6700;&amp;#x540E;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x662F;&lt;code&gt;(nil nil)&lt;/code&gt;&amp;#x3002;&lt;code&gt;nil&lt;/code&gt;&amp;#x4E0D;&amp;#x53EF;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&lt;code&gt;NullPointerException&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What an inconvenience! But as it happens, unquote splicing was invented precisely to handle this kind of situation. Unquote splicing is performed with &lt;code&gt;~@&lt;/code&gt;. If you merely unquote a list, this is what you get:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x592A;&amp;#x4E0D;&amp;#x65B9;&amp;#x4FBF;&amp;#x4E86;&amp;#xFF01;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x662F;&amp;#x4E13;&amp;#x95E8;&amp;#x53D1;&amp;#x660E;&amp;#x51FA;&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x7684;&amp;#x3002;&amp;#x7528;&lt;code&gt;~@&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x662F;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ ~(list 1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ (1 2 3))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, if you use unquote splicing, this is what you get:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ ~@(list 1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2 3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Unquote splicing unwraps a seqable data structure, placing its contents directly within the enclosing syntax-quoted data structure. It&amp;#x2019;s like the &lt;code&gt;~@&lt;/code&gt; is a sledgehammer and whatever follows it is a pi&amp;#xF1;ata, and the result is the most terrifying and awesome party you&amp;#x2019;ve ever been to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x6253;&amp;#x5F00;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x5E8F;&amp;#x5217;&amp;#x5316;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x628A;&amp;#x5176;&amp;#x5185;&amp;#x5BB9;&amp;#x76F4;&amp;#x63A5;&amp;#x653E;&amp;#x5728;&amp;#x5305;&amp;#x542B;&amp;#x4ED6;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x91CC;&amp;#x3002;&lt;code&gt;~@&lt;/code&gt;&amp;#x5C31;&amp;#x50CF;&amp;#x4E2A;&amp;#x9524;&amp;#x5B50;&amp;#xFF0C;&amp;#x8DDF;&amp;#x5728;&amp;#x5B83;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x5C31;&amp;#x50CF;&amp;#x4E2A;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%9A%AE%E7%B4%8D%E5%A1%94&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x76AE;&amp;#x7EB3;&amp;#x5854;&amp;#x76D2;&amp;#x5B50;&lt;/a&gt;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x53EF;&amp;#x60F3;&amp;#x800C;&amp;#x77E5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anyway, if you use unquote splicing in your code critic, then everything will work great:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;,&amp;#x5C31;&amp;#x4E00;&amp;#x5207;ok&amp;#x4E86;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [good bad]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; ~@(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; criticize-code %)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              [[&lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet lion of Zion, this is bad code:&amp;quot;&lt;/span&gt; bad]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;string&quot;&gt;&amp;quot;Great cow of Moscow, this is good code:&amp;quot;&lt;/span&gt; good]])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;code-critic&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Sweet lion of Zion, this is bad code: (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Great cow of Moscow, this is good code: (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Woohoo! You&amp;#x2019;ve successfully extracted repetitive code into a function and made your macro code cleaner. Sweet guinea pig of Winnipeg, that is good code!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x54C7;&amp;#xFF01;&amp;#x4F60;&amp;#x6210;&amp;#x529F;&amp;#x5730;&amp;#x628A;&amp;#x91CD;&amp;#x590D;&amp;#x4EE3;&amp;#x7801;&amp;#x63D0;&amp;#x53D6;&amp;#x51FA;&amp;#x6765;&amp;#x653E;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x5B8F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x52A0;&amp;#x6E05;&amp;#x6670;&amp;#x3002;&amp;#x5E72;&amp;#x7684;&amp;#x6F02;&amp;#x4EAE;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Things to Watch Out For&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;a href=&quot;#&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;/a&gt;&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Macros have a couple of sneaky gotchas that you should be aware of. In this section, you&amp;#x2019;ll learn about some macro pitfalls and how to avoid them. I hope you haven&amp;#x2019;t unstrapped yourself from your thinking mast.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BB2;&amp;#x8FF0;&amp;#x51E0;&amp;#x4E2A;&amp;#x5B8F;&amp;#x91CC;&amp;#x9690;&amp;#x853D;&amp;#x9677;&amp;#x9631;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x7279;&amp;#x522B;&amp;#x6CE8;&amp;#x610F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Variable Capture&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&quot;&gt;&lt;a href=&quot;#&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&quot;&gt;&lt;/a&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Variable capture&lt;/em&gt; occurs when a macro introduces a binding that, unknown to the macro&amp;#x2019;s user, eclipses an existing binding. For example, in the following code, a macro mischievously introduces its own &lt;code&gt;let&lt;/code&gt; binding, and that messes with the code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5B8F;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x5B8F;&amp;#x7528;&amp;#x6237;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#xFF0C;&amp;#x5B8F;&amp;#x91CC;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x66F4;&amp;#x9AD8;&amp;#x800C;&amp;#x5C4F;&amp;#x853D;&amp;#x6389;&amp;#x5916;&amp;#x9762;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x5B8F;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; message &lt;span class=&quot;string&quot;&gt;&amp;quot;Good job!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; with-mischief&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; stuff-to-do]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;concat&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;let [&amp;apos;message &lt;span class=&quot;string&quot;&gt;&amp;quot;Oh, big deal!&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          stuff-to-do))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;with-mischief&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s how I feel about that thing you did: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Here&amp;apos;s how I feel about that thing you did: Oh, big deal!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;println&lt;/code&gt; call references the symbol &lt;code&gt;message&lt;/code&gt;, which we think is bound to the string &lt;code&gt;&amp;quot;Good job!&amp;quot;&lt;/code&gt;. However, the &lt;code&gt;with-mischief&lt;/code&gt; macro has created a new binding for &lt;code&gt;message&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x88AB;&amp;#x8BA4;&amp;#x4E3A;&amp;#x662F;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;Good job!&amp;quot;&lt;/code&gt;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;message&lt;/code&gt;&amp;#x3002;&amp;#x4F46;&lt;code&gt;with-mischief&lt;/code&gt;&amp;#x5B8F;&amp;#x4E3A;&lt;code&gt;message&lt;/code&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that this macro didn&amp;#x2019;t use syntax quoting. Doing so would result in an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x6CA1;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x7528;&amp;#x4E86;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; message &lt;span class=&quot;string&quot;&gt;&amp;quot;Good job!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; with-mischief&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; stuff-to-do]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [message &lt;span class=&quot;string&quot;&gt;&amp;quot;Oh, big deal!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ~@stuff-to-do))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;with-mischief&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s how I feel about that thing you did: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; Exception: Can&amp;apos;t let qualified name: user/message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This exception is for your own good: syntax quoting is designed to prevent you from accidentally capturing variables within macros. If you want to introduce &lt;code&gt;let&lt;/code&gt; bindings in your macro, you can use a &lt;em&gt;gensym&lt;/em&gt;. The &lt;code&gt;gensym&lt;/code&gt; function produces unique symbols on each successive call:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F02;&amp;#x5E38;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x4F60;&amp;#x597D;&amp;#xFF1A;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x4E48;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7684;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x4E0D;&amp;#x4F1A;&amp;#x610F;&amp;#x5916;&amp;#x6355;&amp;#x83B7;&amp;#x5B8F;&amp;#x5185;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x7528;&lt;code&gt;let&lt;/code&gt;&amp;#x5728;&amp;#x5B8F;&amp;#x5185;&amp;#x5F15;&amp;#x5165;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&lt;/em&gt;&amp;#x3002;&lt;code&gt;gensym&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x6BCF;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;&amp;#x552F;&amp;#x4E00;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; G__655&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; G__658&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also pass a symbol prefix:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F20;&amp;#x5165;&amp;#x7B26;&amp;#x53F7;&amp;#x524D;&amp;#x7F00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt; &amp;apos;message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; message4760&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt; &amp;apos;message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; message4763&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s how you could rewrite &lt;code&gt;with-mischief&lt;/code&gt; to be less mischievous:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x91CD;&amp;#x5199;&amp;#x7684;&lt;code&gt;with-mischief&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; without-mischief&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; stuff-to-do]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [macro-message (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt; &amp;apos;message)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [~macro-message &lt;span class=&quot;string&quot;&gt;&amp;quot;Oh, big deal!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ~@stuff-to-do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I still need to say: &amp;quot;&lt;/span&gt; ~macro-message))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;without-mischief&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s how I feel about that thing you did: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Here&amp;apos;s how I feel about that thing you did:  Good job!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; I still need to say:  Oh, big deal!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This example avoids variable capture by using &lt;code&gt;gensym&lt;/code&gt; to create a new, unique symbol that then gets bound to &lt;code&gt;macro-message&lt;/code&gt;. Within the syntax-quoted &lt;code&gt;let&lt;/code&gt; expression, &lt;code&gt;macro-message&lt;/code&gt; is unquoted, resolving to the gensym&amp;#x2019;d symbol. This gensym&amp;#x2019;d symbol is distinct from any symbols within &lt;code&gt;stuff-to-do&lt;/code&gt;, so you avoid variable capture. Because this is such a common pattern, you can use an auto-gensym. Auto-gensyms are more concise and convenient ways to use gensyms:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;gensym&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#x552F;&amp;#x4E00;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&lt;code&gt;macro-message&lt;/code&gt;,&amp;#x8FD9;&amp;#x5C31;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x3002;&amp;#x5728;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&lt;code&gt;macro-message&lt;/code&gt;&amp;#x88AB;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x90A3;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&lt;code&gt;stuff-to-do&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x4EFB;&amp;#x4F55;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x975E;&amp;#x5E38;&amp;#x666E;&amp;#x904D;&amp;#x7684;&amp;#x6A21;&amp;#x5F0F;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x3002;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x7528;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(blarg# blarg#)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(blarg__2869__auto__ blarg__2869__auto__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`(let [name# &amp;quot;Larry Potter&amp;quot;] name#)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/let [name__2872__auto__ &amp;quot;Larry Potter&amp;quot;] name__2872__auto__)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you create an auto-gensym by appending a hash mark (or &lt;em&gt;hashtag&lt;/em&gt;, if you must insist) to a symbol within a syntax-quoted list. Clojure automatically ensures that each instance of x&lt;code&gt;#&lt;/code&gt; resolves to the same symbol within the same syntax-quoted list, that each instance of y&lt;code&gt;#&lt;/code&gt; resolves similarly, and so on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x91CC;&amp;#x6709;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x589E;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E95;&amp;#x53F7;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x3002;Clojure&amp;#x81EA;&amp;#x52A8;&amp;#x786E;&amp;#x4FDD;&amp;#x5728;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;list&amp;#x91CC;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;x&lt;code&gt;#&lt;/code&gt;&amp;#x90FD;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;y&lt;code&gt;#&lt;/code&gt;&amp;#x4E5F;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x8BF8;&amp;#x5982;&amp;#x6B64;&amp;#x7C7B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;gensym&lt;/code&gt; and auto-gensym are both used all the time when writing macros, and they allow you to avoid variable capture.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x7ECF;&amp;#x5E38;&amp;#x4F1A;&amp;#x7528;&amp;#x5230;&lt;code&gt;gensym&lt;/code&gt;&amp;#x548C;auto-gensym&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x907F;&amp;#x514D;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Double Evaluation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&quot;&gt;&lt;a href=&quot;#&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&quot;&gt;&lt;/a&gt;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Another gotcha to watch out for when writing macros is &lt;em&gt;double evaluation&lt;/em&gt;, which occurs when a form passed to a macro as an argument gets evaluated more than once. Consider the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x9700;&amp;#x8981;&amp;#x5C0F;&amp;#x5FC3;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#x662F;&amp;#xFF0C;&amp;#x5F53;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5C31;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; report&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-try]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; ~to-try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt; ~to-try)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt; ~to-try)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; Thread/sleep takes a number of milliseconds to sleep for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code is meant to test its argument for truthiness. If the argument is truthy, it&amp;#x2019;s considered successful; if it&amp;#x2019;s falsey, it&amp;#x2019;s unsuccessful. The macro prints whether or not its argument was successful. In this case, you would actually sleep for two seconds because &lt;code&gt;(Thread/sleep 1000)&lt;/code&gt; gets evaluated twice: once right after &lt;code&gt;if&lt;/code&gt; and again when &lt;code&gt;println&lt;/code&gt; gets called. This happens because the code &lt;code&gt;(do (Thread/sleep 1000) (+ 1 1))&lt;/code&gt; is repeated throughout the macro expansion. It&amp;#x2019;s as if you&amp;#x2019;d written this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x60F3;&amp;#x8981;&amp;#x6D4B;&amp;#x8BD5;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x771F;&amp;#x4F2A;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x771F;&amp;#xFF0C;&amp;#x5219;&amp;#x89C6;&amp;#x4E3A;&amp;#x6210;&amp;#x529F;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x89C6;&amp;#x4E3A;&amp;#x5931;&amp;#x8D25;&amp;#x3002;&amp;#x5B8F;&amp;#x6253;&amp;#x5370;&amp;#x51FA;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x5426;&amp;#x6210;&amp;#x529F;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4F11;&amp;#x7720;&amp;#x4E86;&amp;#x4E24;&amp;#x79D2;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&lt;code&gt;(Thread/sleep 1000)&lt;/code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E24;&amp;#x6B21;&amp;#xFF1A;&lt;code&gt;if&lt;/code&gt;&amp;#x540E;&amp;#x9762;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;&amp;#x5019;&amp;#x4E00;&amp;#x6B21;&amp;#x3002;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4EE3;&amp;#x7801;&lt;code&gt;(do (Thread/sleep 1000) (+ 1 1))&lt;/code&gt;&amp;#x88AB;&amp;#x91CD;&amp;#x590D;&amp;#x4E86;&amp;#xFF0C;&amp;#x5C31;&amp;#x597D;&amp;#x50CF;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#x4E00;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#x201C;Big deal!&amp;#x201D; your inner example critic says. Well, if your code did something like transfer money between bank accounts, this would be a very big deal. Here&amp;#x2019;s how you could avoid this problem:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x94F6;&amp;#x884C;&amp;#x8D26;&amp;#x53F7;&amp;#x95F4;&amp;#x8F6C;&amp;#x8D26;&amp;#xFF0C;&amp;#x8FD9;&amp;#x53EF;&amp;#x662F;&amp;#x5927;&amp;#x95EE;&amp;#x9898;&amp;#xFF01;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x907F;&amp;#x514D;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; report&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-try]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result# ~to-try]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; result#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt; result#)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt; result#))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By placing &lt;code&gt;to-try&lt;/code&gt; in a &lt;code&gt;let&lt;/code&gt; expression, you only evaluate that code once and bind the result to an auto-gensym&amp;#x2019;d symbol, &lt;code&gt;result#&lt;/code&gt;, which you can now reference without reevaluating the &lt;code&gt;to-try&lt;/code&gt; code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&lt;code&gt;to-try&lt;/code&gt;&amp;#x653E;&amp;#x5728;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x91CC;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5E76;&amp;#x628A;&amp;#x7ED3;&amp;#x679C;&amp;#x4E0E;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;result#&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F15;&amp;#x7528;&lt;code&gt;result#&lt;/code&gt;&amp;#x800C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5BF9;&lt;code&gt;to-try&lt;/code&gt;&amp;#x91CD;&amp;#x590D;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros All the Way Down&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One subtle pitfall of using macros is that you can end up having to write more and more of them to get anything done. This is a consequence of the fact that macro expansion happens before evaluation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x9690;&amp;#x853D;&amp;#x7684;&amp;#x5B8F;&amp;#x9677;&amp;#x9631;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x5B8C;&amp;#x6210;&amp;#x4E00;&amp;#x4EF6;&amp;#x4E8B;&amp;#xFF0C;&amp;#x8981;&amp;#x5199;&amp;#x7684;&amp;#x5B8F;&amp;#x53EF;&amp;#x80FD;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x591A;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x5B8F;&amp;#x5148;&amp;#x5C55;&amp;#x5F00;&amp;#x518D;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, let&amp;#x2019;s say you wanted to &lt;code&gt;doseq&lt;/code&gt; using the &lt;code&gt;report&lt;/code&gt; macro. Instead of multiple calls to report:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x4F60;&amp;#x60F3;&amp;#x5728;&lt;code&gt;doseq&lt;/code&gt;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;report&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x591A;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&lt;code&gt;report&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 1) was successful: true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 2) was not successful: false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;let&amp;#x2019;s iterate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&lt;code&gt;doseq&lt;/code&gt;&amp;#x8FED;&amp;#x4EE3;&amp;#x8C03;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [code [&amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; code))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; code was successful: (= 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; code was successful: (= 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The report macro works fine when we pass it functions individually, but when we use &lt;code&gt;doseq&lt;/code&gt; to iterate &lt;code&gt;report&lt;/code&gt; over multiple functions, it&amp;#x2019;s a worthless failure. Here&amp;#x2019;s what a macro expansion for one of the &lt;code&gt;doseq&lt;/code&gt; iterations would look like:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;report&amp;#x5B8F;&amp;#x5355;&amp;#x72EC;&amp;#x4F7F;&amp;#x7528;&amp;#x65F6;&amp;#x6CA1;&amp;#x6709;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4F46;&amp;#x7528;&amp;#x5728;&lt;code&gt;doseq&lt;/code&gt;&amp;#x91CC;&amp;#x8FED;&amp;#x4EE3;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;&amp;#x5019;&amp;#x5931;&amp;#x8D25;&amp;#x4E86;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&lt;code&gt;doseq&lt;/code&gt;&amp;#x4E2D;&amp;#x67D0;&amp;#x4E00;&amp;#x6B21;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7684;&amp;#x6837;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &amp;apos;code &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt; code)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &amp;apos;code &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt; code))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, &lt;code&gt;report&lt;/code&gt; receives the unevaluated symbol &lt;code&gt;code&lt;/code&gt; in each iteration; however, we want it to receive whatever &lt;code&gt;code&lt;/code&gt; is bound to at evaluation time. But &lt;code&gt;report&lt;/code&gt;, operating at macro expansion time, just can&amp;#x2019;t access those values. It&amp;#x2019;s like it has T. rex arms, with runtime values forever out of its reach.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x89C1;&amp;#xFF0C;&amp;#x6BCF;&amp;#x6B21;&amp;#x8FED;&amp;#x4EE3;&amp;#x91CC;&lt;code&gt;report&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x662F;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;code&lt;/code&gt;;&amp;#x4F46;&amp;#x6211;&amp;#x4EEC;&amp;#x60F3;&amp;#x8BA9;&amp;#x4ED6;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x662F;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&lt;code&gt;code&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&lt;code&gt;report&lt;/code&gt;&amp;#x4F5C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x65F6;&amp;#xFF0C;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;&amp;#x5230;&amp;#x8FD9;&amp;#x4E9B;&amp;#x503C;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x66B4;&amp;#x9F99;&amp;#x7684;&amp;#x80F3;&amp;#x818A;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x6C38;&amp;#x8FDC;&amp;#x591F;&amp;#x4E0D;&amp;#x7740;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x8005;&amp;#x8865;&amp;#x5145;&amp;#xFF1A;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x70B9;&amp;#x7ED5;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x628A;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&lt;code&gt;(if)&lt;/code&gt;&amp;#x90E8;&amp;#x5206;&amp;#x4E00;&amp;#x8D77;&amp;#x770B;&amp;#xFF0C;&amp;#x66F4;&amp;#x65B9;&amp;#x4FBF;&amp;#x7406;&amp;#x89E3;&amp;#x4E0B;&amp;#x6BB5;&amp;#x7684;&amp;#x89E3;&amp;#x91CA;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;let*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [result__5428__auto__ (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result__5428__auto__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result__5428__auto__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result__5428__auto__)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;To resolve this situation, we might write another macro, like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x80FD;&amp;#x53C8;&amp;#x5199;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; doseq-macro&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [macroname &amp;amp; args]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ~@(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [arg] (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; macroname arg)) args)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;doseq-macro&lt;/span&gt; report (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 1) was successful: true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 2) was not successful: false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are ever in this situation, take some time to rethink your approach. It&amp;#x2019;s easy to paint yourself into a corner, making it impossible to accomplish anything with run-of-the-mill function calls. You&amp;#x2019;ll be stuck having to write more macros instead. Macros are extremely powerful and awesome, and you shouldn&amp;#x2019;t be afraid to use them. They turn Clojure&amp;#x2019;s facilities for working with data into facilities for creating new languages informed by your programming problems. For some programs, it&amp;#x2019;s appropriate for your code to be like 90 percent macros. As awesome as they are, they also add new composition challenges. They only really compose with each other, so by using them, you might be missing out on the other kinds of composition (functional, object-oriented) available to you in Clojure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x7ECF;&amp;#x5386;&amp;#x8FC7;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x82B1;&amp;#x70B9;&amp;#x65F6;&amp;#x95F4;&amp;#x91CD;&amp;#x65B0;&amp;#x601D;&amp;#x8003;&amp;#x4F60;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x4F60;&amp;#x5F88;&amp;#x5BB9;&amp;#x6613;&amp;#x9677;&amp;#x5165;&amp;#x7528;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5B8C;&amp;#x6210;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x56F0;&amp;#x5883;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x5C06;&amp;#x4F1A;&amp;#x5361;&amp;#x5728;&amp;#x5199;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x5B8F;&amp;#x4E0A;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x597D;&amp;#x5F88;&amp;#x5F3A;&amp;#x5927;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8BE5;&amp;#x5BB3;&amp;#x6015;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&amp;#x5B8F;&amp;#x628A;Clojure&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x5DE5;&amp;#x5177;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7528;&amp;#x4E8E;&amp;#x89E3;&amp;#x51B3;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x65B0;&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x5BF9;&amp;#x4E8E;&amp;#x4E00;&amp;#x4E9B;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x6709;&amp;#x767E;&amp;#x5206;&amp;#x4E4B;90&amp;#x7684;&amp;#x5B8F;&amp;#x662F;&amp;#x5408;&amp;#x9002;&amp;#x7684;&amp;#x3002;&amp;#x5B8F;&amp;#x867D;&amp;#x7136;&amp;#x5F88;&amp;#x68D2;&amp;#xFF0C;&amp;#x4F46;&amp;#x5E26;&amp;#x6765;&amp;#x4E86;&amp;#x65B0;&amp;#x7684;&amp;#x7EC4;&amp;#x5408;&amp;#x6311;&amp;#x6218;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x53EA;&amp;#x80FD;&amp;#x4E92;&amp;#x76F8;&amp;#x7EC4;&amp;#x5408;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7528;&amp;#x4E86;&amp;#x4ED6;&amp;#x4EEC;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x9519;&amp;#x8FC7;Clojure&amp;#x91CC;&amp;#x5176;&amp;#x4ED6;&amp;#x53EF;&amp;#x7528;&amp;#x7EC4;&amp;#x5408;(&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#xFF0C;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&amp;#x2019;ve now covered all the mechanics of writing a macro. Pat yourself on the back! It&amp;#x2019;s a pretty big deal!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5B66;&amp;#x4E60;&amp;#x4E86;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x673A;&amp;#x5236;&amp;#xFF0C;&amp;#x771F;&amp;#x68D2;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To close out this chapter, it&amp;#x2019;s finally time to put on your pretending cap and work on that online potion store I talked about at the very beginning of the chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8BA2;&amp;#x5355;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Brews for the Brave and True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&quot;&gt;&lt;a href=&quot;#&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&quot;&gt;&lt;/a&gt;&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;At the beginning of this chapter, I revealed a dream: to find some kind of drinkable that, once ingested, would temporarily give me the power and temperament of an &amp;#x2019;80s fitness guru, freeing me from a prison of inhibition and self-awareness. I&amp;#x2019;m sure that someone somewhere will someday invent such an elixir, so we might as well get to work on a system for selling this mythical potion. Let&amp;#x2019;s call this hypothetical concoction the Brave and True Ale. The name just came to me for no reason whatsoever.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7565;&amp;#x8FC7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before the orders come pouring in (pun! high-five!), we&amp;#x2019;ll need to have some validation in place. This section shows you a way to do this validation functionally and how to write the code that performs validations a bit more concisely using a macro you&amp;#x2019;ll write called &lt;code&gt;if-valid&lt;/code&gt;. This will help you understand a typical situation for writing your own macro. If you just want the macro definition, it&amp;#x2019;s okay to skip ahead to &amp;#x201C;if-valid&amp;#x201D; on page 182.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8282;&amp;#x5B66;&amp;#x4E60;&amp;#x5982;&amp;#x4F55;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BA2;&amp;#x5355;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5B8F;&lt;code&gt;if-valid&lt;/code&gt;&amp;#x3002;&amp;#x4F7F;&amp;#x4F60;&amp;#x7406;&amp;#x89E3;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x81EA;&amp;#x5DF1;&amp;#x5199;&amp;#x5B8F;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x60F3;&amp;#x770B;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x8DF3;&amp;#x5230;&amp;#x4E0B;&amp;#x4E00;&amp;#x8282;&amp;#x201D;&amp;#x201C;if-valid&amp;#x201D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Validation Functions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;To keep things simple, we&amp;#x2019;ll just worry about validating the name and email for each order. For our store, I&amp;#x2019;m thinking we&amp;#x2019;ll want to have those order details represented like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x53EA;&amp;#x9A8C;&amp;#x8BC1;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8BA2;&amp;#x5355;&amp;#x7684;&amp;#x59D3;&amp;#x540D;&amp;#x548C;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8BA2;&amp;#x5355;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; order-details&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Mitchard Blimmons&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:email&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;mitchard.blimmonsgmail.com&amp;quot;&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This particular map has an invalid email address (it&amp;#x2019;s missing the &lt;code&gt;@&lt;/code&gt; symbol), so this is exactly the kind of order that our validation code should catch! Ideally, we want to write code that produces something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;map&amp;#x91CC;&amp;#x7684;&amp;#x90AE;&amp;#x4EF6;&amp;#x5730;&amp;#x5740;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7F3A;&amp;#x5C11;&lt;code&gt;@&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5E94;&amp;#x8BE5;&amp;#x80FD;&amp;#x53D1;&amp;#x73B0;&amp;#x3002;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5E94;&amp;#x8BE5;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; order-details order-details-validations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:email [&amp;quot;Your email address doesn&amp;apos;t look like an email address.&amp;quot;]}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That is, we want to be able to call a function, &lt;code&gt;validate&lt;/code&gt;, with the data that needs validation and a definition for how to validate it. The result should be a map where each key corresponds to an invalid field, and each value is a vector of one or more validation messages for that field. The following two functions do the job.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x662F;&lt;code&gt;validate&lt;/code&gt;,&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x9700;&amp;#x8981;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x548C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&amp;#x7ED3;&amp;#x679C;&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;map,map&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&amp;#x9879;&amp;#x76EE;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x503C;&amp;#x662F;&amp;#x4E2A;&amp;#x5305;&amp;#x542B;&amp;#x4E00;&amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x5BF9;&amp;#x5E94;&amp;#x57DF;&amp;#x7684;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;vector&amp;#x3002;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s look at &lt;code&gt;order-details-validations&lt;/code&gt; first. Here&amp;#x2019;s how you could represent validations:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5148;&amp;#x770B;&amp;#x770B;&lt;code&gt;order-details-validations&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x8868;&amp;#x793A;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; order-details-validations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;string&quot;&gt;&amp;quot;Please enter a name&amp;quot;&lt;/span&gt; not-empty]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:email&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;string&quot;&gt;&amp;quot;Please enter an email address&amp;quot;&lt;/span&gt; not-empty&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;Your email address doesn&amp;apos;t look like an email address&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;or&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; %) (&lt;span class=&quot;name&quot;&gt;re-seq&lt;/span&gt; #&lt;span class=&quot;string&quot;&gt;&amp;quot;@&amp;quot;&lt;/span&gt; %))]})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a map where each key is associated with a vector of error message and validating function pairs. For example, &lt;code&gt;:name&lt;/code&gt; has one validating function, &lt;code&gt;not-empty&lt;/code&gt;; if that validation fails, you should get the &lt;code&gt;&amp;quot;Please enter a name&amp;quot;&lt;/code&gt; error message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;map&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x5173;&amp;#x8054;&amp;#xFF0C;vector&amp;#x5305;&amp;#x542B;&amp;#x7684;&amp;#x662F;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&amp;#x4E0E;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&amp;#x5BF9;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;:name&lt;/code&gt;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&lt;code&gt;not-empty&lt;/code&gt;,&amp;#x5982;&amp;#x679C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5931;&amp;#x8D25;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&lt;code&gt;&amp;quot;Please enter a name&amp;quot;&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, we need to write out the &lt;code&gt;validate&lt;/code&gt; function. The validate function can be decomposed into two functions: one to apply validations to a single field and another to accumulate those error messages into a final map of error messages like &lt;code&gt;{:email [&amp;quot;Your email address doesn&amp;apos;t look like an email address.&amp;quot;]}&lt;/code&gt;. Here&amp;#x2019;s a function called &lt;code&gt;error-messages-for&lt;/code&gt; that applies validations to a single value:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x662F;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5355;&amp;#x4E2A;&amp;#x57DF;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7D2F;&amp;#x79EF;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&amp;#x5230;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;map&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;{:email [&amp;quot;Your email address doesn&amp;apos;t look like an email address.&amp;quot;]}&lt;/code&gt;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&lt;code&gt;error-messages-for&lt;/code&gt;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5355;&amp;#x72EC;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; error-messages-for&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Return a seq of error messages&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-validate message-validator-pairs]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; first (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;filter&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;not&lt;/span&gt;&lt;/span&gt; ((&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; %) to-validate))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;partition&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; message-validator-pairs))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The first argument, &lt;code&gt;to-validate&lt;/code&gt;, is the field you want to validate. The second argument, &lt;code&gt;message-validator-pairs&lt;/code&gt;, should be a seq with an even number of elements. This seq gets grouped into pairs with &lt;code&gt;(partition 2 message-validator-pairs)&lt;/code&gt;. The first element of the pair should be an error message, and the second element of the pair should be a function (just like the pairs are arranged in &lt;code&gt;order-details-validations&lt;/code&gt;). The &lt;code&gt;error-messages-for&lt;/code&gt; function works by filtering out all error message and validation pairs where the validation function returns &lt;code&gt;true&lt;/code&gt; when applied to &lt;code&gt;to-validate&lt;/code&gt;. It then uses &lt;code&gt;map first&lt;/code&gt; to get the first element of each pair, the error message. Here it is in action:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&lt;code&gt;to-validate&lt;/code&gt;&amp;#x662F;&amp;#x8981;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7684;&amp;#x57DF;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&lt;code&gt;message-validator-pairs&lt;/code&gt;&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x5076;&amp;#x6570;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#x3002;&amp;#x7528;&lt;code&gt;(partition 2 message-validator-pairs)&lt;/code&gt;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#x5206;&amp;#x7EC4;&amp;#x6210;&amp;#x914D;&amp;#x5BF9;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x6BCF;&amp;#x5BF9;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x662F;&amp;#x51FD;&amp;#x6570;(&amp;#x5C31;&amp;#x50CF;&lt;code&gt;order-details-validations&lt;/code&gt;&amp;#x4E00;&amp;#x6837;)&amp;#x3002;&lt;code&gt;error-messages-for&lt;/code&gt;&amp;#x8FC7;&amp;#x6EE4;&amp;#x51FA;&amp;#x6240;&amp;#x6709;&amp;#x8C03;&amp;#x7528;&lt;code&gt;to-validate&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;true&lt;/code&gt;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;error-messages-for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;quot;Please enter a name&amp;quot;&lt;/span&gt; not-empty])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (&amp;quot;Please enter a name&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we need to accumulate these error messages in a map.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x9700;&amp;#x8981;&amp;#x628A;&amp;#x8FD9;&amp;#x4E9B;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&amp;#x7D2F;&amp;#x79EF;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;map&amp;#x91CC;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s the complete &lt;code&gt;validate&lt;/code&gt; function, as well as the output when we apply it to our &lt;code&gt;order-details&lt;/code&gt; and &lt;code&gt;order-details-validations&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5B8C;&amp;#x6574;&amp;#x7684;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x548C;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&lt;code&gt;order-details&lt;/code&gt;,&lt;code&gt;order-details-validations&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x540E;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; validate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Returns a map with a vector of errors for each key&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-validate validations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reduce&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [errors validation]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [[fieldname validation-check-groups] validation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  value (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;get&lt;/span&gt;&lt;/span&gt; to-validate fieldname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  error-messages (&lt;span class=&quot;name&quot;&gt;error-messages-for&lt;/span&gt; value validation-check-groups)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; error-messages)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;assoc&lt;/span&gt;&lt;/span&gt; errors fieldname error-messages))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          validations))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; order-details order-details-validations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:email (&amp;quot;Your email address doesn&amp;apos;t look like an email address&amp;quot;)}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Success! This works by reducing over &lt;code&gt;order-details-validations&lt;/code&gt; and associating the error messages (if there are any) for each key of &lt;code&gt;order-details&lt;/code&gt; into a final map of error messages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6210;&amp;#x529F;&amp;#x4E86;&amp;#xFF01;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5BF9;&lt;code&gt;order-details-validations&lt;/code&gt;&amp;#x8FDB;&amp;#x884C;reduce,&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5C31;&amp;#x628A;&lt;code&gt;order-details&lt;/code&gt;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#x5173;&amp;#x8054;&amp;#x8FDB;&amp;#x6700;&amp;#x7EC8;map&amp;#x91CC;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if-valid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;if-valid&quot;&gt;&lt;a href=&quot;#if-valid&quot; class=&quot;headerlink&quot; title=&quot;if-valid&quot;&gt;&lt;/a&gt;if-valid&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;With our validation code in place, we can now validate records to our hearts&amp;#x2019; content! Most often, validation will look something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E86;&amp;#xFF01;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [errors (&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; order-details order-details-validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; errors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; errors)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The pattern is to do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Validate a record and bind the result to &lt;code&gt;errors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check whether there were any errors&lt;/li&gt;
&lt;li&gt;If there were, do the success thing, here &lt;code&gt;(println :success)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Otherwise, do the failure thing, here &lt;code&gt;(println :failure errors)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x505A;&amp;#x4E86;&amp;#x4E0B;&amp;#x5217;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8BB0;&amp;#x5F55;&amp;#x5E76;&amp;#x628A;&amp;#x7ED3;&amp;#x679C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&lt;code&gt;errors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x68C0;&amp;#x67E5;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#x9519;&amp;#x8BEF;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x8FD0;&amp;#x884C;&amp;#x6210;&amp;#x529F;&amp;#x90E8;&amp;#x5206;,&lt;code&gt;(println :success)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x5426;&amp;#x5219;&amp;#x8FD0;&amp;#x884C;&amp;#x5931;&amp;#x8D25;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&lt;code&gt;(println :failure errors)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ve actually used this validation code in real production websites. At first, I found myself repeating minor variations of the code over and over, a sure sign that I needed to introduce an abstraction that would hide the repetitive parts: applying the &lt;code&gt;validate&lt;/code&gt; function, binding the result to some symbol, and checking whether the result is empty. To create this abstraction, you might be tempted to write a function like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x5728;&amp;#x5B9E;&amp;#x9645;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x6211;&amp;#x53D1;&amp;#x73B0;&amp;#x4E00;&amp;#x4E9B;&amp;#x91CD;&amp;#x590D;&amp;#xFF1A;&amp;#x8C03;&amp;#x7528;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x68C0;&amp;#x67E5;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;&amp;#x7A7A;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x660E;&amp;#x786E;&amp;#x7684;&amp;#x4FE1;&amp;#x53F7;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x5F15;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x62BD;&amp;#x8C61;&amp;#x9690;&amp;#x85CF;&amp;#x8FD9;&amp;#x4E9B;&amp;#x91CD;&amp;#x590D;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x4E3A;&amp;#x6B64;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; if-valid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [record validations success-code failure-code]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [errors (&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; record validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; errors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      success-code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      failure-code)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, this wouldn&amp;#x2019;t work, because &lt;code&gt;success-code&lt;/code&gt; and &lt;code&gt;failure-code&lt;/code&gt; would get evaluated each time. A macro would work because macros let you control evaluation. Here&amp;#x2019;s how you&amp;#x2019;d use the macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x8FD9;&amp;#x6837;&amp;#x4E0D;&amp;#x884C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6BCF;&amp;#x6B21;&lt;code&gt;success-code&lt;/code&gt;&amp;#x548C;&lt;code&gt;failure-code&lt;/code&gt;&amp;#x90FD;&amp;#x4F1A;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&amp;#x5B8F;&amp;#x53EF;&amp;#x884C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A7;&amp;#x5236;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;if-valid&lt;/span&gt; order-details order-details-validations errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; errors))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This macro hides the repetitive details and helps you express your intention more succinctly. It&amp;#x2019;s like asking someone to give you the bottle opener instead of saying, &amp;#x201C;Please give me the manual device for removing the temporary sealant from a glass container of liquid.&amp;#x201D; Here&amp;#x2019;s the implementation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x9690;&amp;#x85CF;&amp;#x4E86;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x6709;&amp;#x52A9;&amp;#x4E8E;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x8868;&amp;#x8FBE;&amp;#x51FA;&amp;#x610F;&amp;#x56FE;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x8BF4;&amp;#xFF1A;&amp;#x7ED9;&amp;#x6211;&amp;#x74F6;&amp;#x8D77;&amp;#x5B50;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x8BF4;&amp;#xFF1A;&amp;#x7ED9;&amp;#x6211;&amp;#x7528;&amp;#x4E8E;&amp;#x53BB;&amp;#x9664;&amp;#x88C5;&amp;#x6DB2;&amp;#x4F53;&amp;#x7684;&amp;#x73BB;&amp;#x7483;&amp;#x5BB9;&amp;#x5668;&amp;#x7684;&amp;#x4E34;&amp;#x65F6;&amp;#x5C01;&amp;#x53E3;&amp;#x6750;&amp;#x6599;&amp;#x7684;&amp;#x624B;&amp;#x52A8;&amp;#x8BBE;&amp;#x5907;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; if-valid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Handle validation more concisely&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-validate validations errors-name &amp;amp; then-else]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [~errors-name (&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; ~to-validate ~validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; ~errors-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ~@then-else)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This macro takes four arguments: &lt;code&gt;to-validate&lt;/code&gt;, &lt;code&gt;validations&lt;/code&gt;, &lt;code&gt;errors-name&lt;/code&gt;, and the rest argument &lt;code&gt;then-else&lt;/code&gt;. Using &lt;code&gt;errors-name&lt;/code&gt; like this is a new strategy. We want to have access to the errors returned by the &lt;code&gt;validate&lt;/code&gt; function within the &lt;code&gt;then-else&lt;/code&gt; statements. To do this, we tell the macro what symbol it should bind the result to. The following macro expansion shows how this works:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x63A5;&amp;#x53D7;&amp;#x56DB;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&lt;code&gt;to-validate&lt;/code&gt;,&lt;code&gt;validations&lt;/code&gt;,&lt;code&gt;errors-name&lt;/code&gt;,&amp;#x548C;&amp;#x5269;&amp;#x4F59;&amp;#x53C2;&amp;#x6570;&lt;code&gt;then-else&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x4E48;&amp;#x7528;&lt;code&gt;errors-name&lt;/code&gt;&amp;#x662F;&amp;#x4E2A;&amp;#x65B0;&amp;#x62DB;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x8981;&amp;#x5728;&lt;code&gt;then-else&lt;/code&gt;&amp;#x91CC;&amp;#x8BBF;&amp;#x95EE;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x3002;&amp;#x770B;&amp;#x770B;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;if-valid&lt;/span&gt; order-details order-details-validations my-error-name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; my-error-name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;let*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [my-error-name (&lt;span class=&quot;name&quot;&gt;user/validate&lt;/span&gt; order-details order-details-validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;clojure.core/empty?&lt;/span&gt; my-error-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; my-error-name)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The syntax quote abstracts the general form of the &lt;code&gt;let/validate/if&lt;/code&gt; pattern you saw earlier. Then we use unquote splicing to unpack the &lt;code&gt;if&lt;/code&gt; branches, which were packed into the &lt;code&gt;then-else&lt;/code&gt; rest argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x62BD;&amp;#x8C61;&amp;#x6389;&amp;#x4E86;&amp;#x524D;&amp;#x9762;&amp;#x7684;&lt;code&gt;let/validate/if&lt;/code&gt;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x5C55;&amp;#x5F00;&amp;#x5305;&amp;#x5728;&lt;code&gt;then-else&lt;/code&gt;&amp;#x751F;&amp;#x80B2;&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#x7684;&lt;code&gt;if&lt;/code&gt;&amp;#x5206;&amp;#x652F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That&amp;#x2019;s pretty simple! After all this talk about macros and going through their mechanics in such detail, I bet you were expecting something more complicated. Sorry, friend. If you&amp;#x2019;re having a hard time coping with your disappointment, I know of a certain drink that will help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x975E;&amp;#x5E38;&amp;#x7B80;&amp;#x5355;&amp;#xFF01;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8BB2;&amp;#x8FF0;&amp;#x4E86;&amp;#x5B8F;&amp;#x548C;&amp;#x6240;&amp;#x6709;&amp;#x5B8F;&amp;#x7684;&amp;#x673A;&amp;#x5236;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned how to write your own macros. Macros are defined very similarly to functions: they have arguments, a docstring, and a body. They can use argument destructuring and rest args, and they can be recursive. Your macros will almost always return lists. You&amp;#x2019;ll sometimes use &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;seq&lt;/code&gt; functions for simple macros, but most of the time you&amp;#x2019;ll use the syntax quote, &lt;code&gt;` &lt;/code&gt;, which lets you write macros using a safe template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x5199;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x5B8F;&amp;#x3002;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF1A;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6587;&amp;#x6863;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x548C;&amp;#x4E3B;&amp;#x4F53;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;&amp;#x548C;&amp;#x5269;&amp;#x4F59;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x9012;&amp;#x5F52;&amp;#x3002;&amp;#x5B8F;&amp;#x51E0;&amp;#x4E4E;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;list&amp;#x3002;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x548C;&lt;code&gt;seq&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5199;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F46;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&lt;code&gt;` &lt;/code&gt;,&amp;#x5B83;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#x5199;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you&amp;#x2019;re writing macros, it&amp;#x2019;s important to keep in mind the distinction between symbols and values: macros are expanded before code is evaluated and therefore don&amp;#x2019;t have access to the results of evaluation. Double evaluation and variable capture are two other subtle traps for the unwary, but you can avoid them through the judicious use of &lt;code&gt;let&lt;/code&gt; expressions and gensyms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x5019;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x65F6;&amp;#x523B;&amp;#x533A;&amp;#x5206;&amp;#x6E05;&amp;#x695A;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x503C;&amp;#xFF1A;&amp;#x5B8F;&amp;#x6C42;&amp;#x503C;&amp;#x524D;&amp;#x5148;&amp;#x5C55;&amp;#x5F00;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&amp;#x548C;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x662F;&amp;#x4E24;&amp;#x4E2A;&amp;#x9690;&amp;#x853D;&amp;#x7684;&amp;#x9677;&amp;#x9631;&amp;#xFF0C;&amp;#x4F46;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x907F;&amp;#x514D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros are fun tools that allow you to code with fewer inhibitions. By letting you control evaluation, macros give you a degree of freedom and expression that other languages simply don&amp;#x2019;t allow. Throughout your Clojure journey, you&amp;#x2019;ll probably hear people cautioning you against their use, saying things like &amp;#x201C;Macros are evil&amp;#x201D; and &amp;#x201C;You should never use macros.&amp;#x201D; Don&amp;#x2019;t listen to these prudes&amp;#x2014;at least, not at first! Go out there and have a good time. That&amp;#x2019;s the only way you&amp;#x2019;ll learn the situations where it&amp;#x2019;s appropriate to use macros. You&amp;#x2019;ll come out the other side knowing how to use macros with skill and panache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x662F;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x53D7;&amp;#x5230;&amp;#x7684;&amp;#x9650;&amp;#x5236;&amp;#x66F4;&amp;#x5C11;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x63A7;&amp;#x5236;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5B8F;&amp;#x7ED9;&amp;#x4F60;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x5141;&amp;#x8BB8;&amp;#x7684;&amp;#x81EA;&amp;#x7531;&amp;#x548C;&amp;#x8868;&amp;#x8FBE;&amp;#x529B;&amp;#x3002;&amp;#x5728;&amp;#x4F60;&amp;#x7684;Clojurea&amp;#x65C5;&amp;#x9014;&amp;#x4E2D;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x4EBA;&amp;#x8B66;&amp;#x544A;&amp;#x4F60;&amp;#xFF0C;&amp;#x8BF4;&amp;#x5B8F;&amp;#x662F;&amp;#x9B54;&amp;#x9B3C;&amp;#xFF0C;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E5F;&amp;#x522B;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8F;&amp;#x4E4B;&amp;#x7C7B;&amp;#x7684;&amp;#x8BDD;&amp;#x3002;&amp;#x81F3;&amp;#x5C11;&amp;#x5F00;&amp;#x59CB;&amp;#x4E0D;&amp;#x8981;&amp;#x542C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&amp;#x3002;&amp;#x8BE5;&amp;#x7528;&amp;#x5C31;&amp;#x7528;&amp;#xFF0C;&amp;#x4E50;&amp;#x4EAB;&amp;#x5176;&amp;#x4E2D;&amp;#x3002;&amp;#x53EA;&amp;#x6709;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x624D;&amp;#x80FD;&amp;#x5B66;&amp;#x4F1A;&amp;#x5E94;&amp;#x8BE5;&amp;#x4F55;&amp;#x65F6;&amp;#x7528;&amp;#x5B8F;&amp;#xFF0C;&amp;#x624D;&amp;#x80FD;&amp;#x5B66;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8F;&amp;#x7684;&amp;#x6280;&amp;#x5DE7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Write the macro &lt;code&gt;when-valid&lt;/code&gt; so that it behaves similarly to &lt;code&gt;when&lt;/code&gt;. Here is an example of calling it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(when-valid order-details order-details-validations
 (println &amp;quot;It&amp;apos;s a success!&amp;quot;)
 (render :success))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When the data is valid, the println and render forms should be evaluated, and when-valid should return nil if the data is invalid.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You saw that &lt;code&gt;and&lt;/code&gt; is implemented as a macro. Implement &lt;code&gt;or&lt;/code&gt; as a macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In Chapter 5 you created a series of functions (&lt;code&gt;c-int&lt;/code&gt;, &lt;code&gt;c-str&lt;/code&gt;, &lt;code&gt;c-dex&lt;/code&gt;) to read an RPG character&amp;#x2019;s attributes. Write a macro that defines an arbitrary number of attribute-retrieving functions using one macro call. Here&amp;#x2019;s how you would call it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(defattrs c-int :intelligence
          c-str :strength
          c-dex :dexterity)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;when-valid&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5176;&amp;#x4E0E;&lt;code&gt;when&lt;/code&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;br&gt;&amp;#x6570;&amp;#x636E;&amp;#x5408;&amp;#x6CD5;&amp;#x65F6;&amp;#xFF0C;println&amp;#x548C;render&amp;#x5E94;&amp;#x8BE5;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;nil&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&lt;code&gt;and&lt;/code&gt;&amp;#x662F;&amp;#x7528;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&lt;code&gt;or&lt;/code&gt;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7B2C;5&amp;#x7AE0;&amp;#x4F60;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;(&lt;code&gt;c-int&lt;/code&gt;,&lt;code&gt;c-str&lt;/code&gt;,&lt;code&gt;c-dex&lt;/code&gt;)&amp;#x8BFB;&amp;#x53D6;RPG&amp;#x89D2;&amp;#x8272;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#x3002;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5C31;&amp;#x80FD;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EFB;&amp;#x610F;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#x83B7;&amp;#x53D6;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8C03;&amp;#x7528;&amp;#x65B9;&amp;#x6CD5;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>【译】Clojure炼金术:读取，求值，宏</title>
    <link href="http://yoursite.com/2016/05/11/braveclojure-read-and-eval/"/>
    <id>http://yoursite.com/2016/05/11/braveclojure-read-and-eval/</id>
    <published>2016-05-11T07:42:47.000Z</published>
    <updated>2016-05-16T02:34:45.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x4E03;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/read-and-eval/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure Alchemy: Reading, Evaluation, and Macros&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;Clojure&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x7B2C;3&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/do-things/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Clojure Crash Course&lt;/a&gt;;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x67D0;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&lt;a href=&quot;http://clojuredocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coojuredocs&lt;/a&gt;&amp;#x7684;&amp;#x53C2;&amp;#x8003;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6587;&amp;#x6863;&amp;#x90FD;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The philosopher&amp;#x2019;s stone, along with the elixir of life and Viagra, is one of the most well-known specimens of alchemical lore, pursued for its ability to transmute lead into gold. Clojure, however, offers a tool that makes the philosopher&amp;#x2019;s stone look like a mere trinket: the macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros allow you to transform arbitrary expressions into valid Clojure, so you can extend the language itself to fit your needs. And you don&amp;#x2019;t even have to be a wizened old dude or lady in a robe to use them!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x628A;&amp;#x4EFB;&amp;#x610F;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;Clojure&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x6269;&amp;#x5C55;&amp;#x8BED;&amp;#x8A00;&amp;#x4EE5;&amp;#x7B26;&amp;#x5408;&amp;#x4F60;&amp;#x7684;&amp;#x9700;&amp;#x6C42;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get just a sip of this power, consider this trivial macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; backwards&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [form]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reverse&lt;/span&gt;&lt;/span&gt; form))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;backwards&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&amp;quot; backwards&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot; am&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;quot;&lt;/span&gt; str))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;I am backwards&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The backwards macro allows Clojure to successfully evaluate the expression &lt;code&gt;(&amp;quot; backwards&amp;quot; &amp;quot; am&amp;quot; &amp;quot;I&amp;quot; str)&lt;/code&gt;, even though it doesn&amp;#x2019;t follow Clojure&amp;#x2019;s built-in syntax rules, which require an expression&amp;#x2019;s operand to appear first (not to mention the rule that an expression not be written in reverse order). Without backwards, the expression would fail harder than millennia of alchemists ironically spending their entire lives pursuing an impossible means of achieving immortality. With backwards, you&amp;#x2019;ve created your own syntax! You&amp;#x2019;ve extended Clojure so you can write code however you please! Better than turning lead into gold, I tell you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;code&gt;(&amp;quot; backwards&amp;quot; &amp;quot; am&amp;quot; &amp;quot;I&amp;quot; str)&lt;/code&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;Clojure&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;backwards&lt;/code&gt;&amp;#x5B8F;&amp;#x4F7F;Clojure&amp;#x80FD;&amp;#x6210;&amp;#x529F;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x4F60;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x521B;&amp;#x9020;&amp;#x4E86;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This chapter gives you the conceptual foundation you need to go mad with power writing your own macros. It explains the elements of Clojure&amp;#x2019;s evaluation model: the &lt;code&gt;reader&lt;/code&gt;, the &lt;code&gt;evaluator&lt;/code&gt;, and the &lt;code&gt;macro expander&lt;/code&gt;. It&amp;#x2019;s like the periodic table of Clojure elements. Think of how the periodic table reveals the properties of atoms: elements in the same column behave similarly because they have the same nuclear charge. Without the periodic table and its underlying theory, we&amp;#x2019;d be in the same position as the alchemists of yore, mixing stuff together randomly to see what blows up. But with a deeper understanding of the elements, you can see why stuff blows up and learn how to blow stuff up on purpose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x5199;&amp;#x5B8F;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x5230;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x89E3;&amp;#x91CA;&amp;#x4E86;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x7684;&amp;#x4E09;&amp;#x4E2A;&amp;#x65B9;&amp;#x9762;&amp;#xFF1A;&lt;code&gt;reader&lt;/code&gt;(&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;)&amp;#xFF0C;&lt;code&gt;evaluator&lt;/code&gt;(&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;)&amp;#xFF0C;&lt;code&gt;macro expander&lt;/code&gt;(&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7A0B;&amp;#x5E8F;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An Overview of Clojure&amp;#x2019;s Evaluation Model&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Clojure (like all Lisps) has an evaluation model that differs from most other languages: it has a two-phase system where it reads textual source code, producing Clojure data structures. These data structures are then evaluated: Clojure traverses the data structures and performs actions like function application or var lookup based on the type of the data structure. For example, when Clojure reads the text &lt;code&gt;(+ 1 2)&lt;/code&gt;, the result is a list data structure whose first element is a &lt;code&gt;+&lt;/code&gt; symbol, followed by the numbers 1 and 2. This data structure is passed to Clojure&amp;#x2019;s evaluator, which looks up the function corresponding to + and applies that function to 1 and 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure(&amp;#x4E0E;&amp;#x6240;&amp;#x6709;&amp;#x7684;Lisp&amp;#x4E00;&amp;#x6837;)&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x4E0E;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x540C;&amp;#xFF1A;&amp;#x7531;&amp;#x4E24;&amp;#x6B65;&amp;#x7EC4;&amp;#x6210;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B65;&amp;#x8BFB;&amp;#x5165;&amp;#x6587;&amp;#x672C;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x6B65;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x52A8;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x53D8;&amp;#x91CF;&amp;#x67E5;&amp;#x627E;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x6E90;&amp;#x7801;&lt;code&gt;(+ 1 2)&lt;/code&gt;,&amp;#x8BFB;&amp;#x5165;&amp;#x540E;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&lt;code&gt;+&lt;/code&gt;&amp;#x8FD9;&amp;#x4E2A;symbol(&amp;#x7B26;&amp;#x53F7;)&amp;#xFF0C;&amp;#x540E;&amp;#x9762;&amp;#x8DDF;&amp;#x7740;1&amp;#x548C;2&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4F20;&amp;#x7ED9;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7528;1&amp;#x548C;2&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Languages that have this relationship between source code, data, and evaluation are called &lt;code&gt;homoiconic&lt;/code&gt;. (Incidentally, if you say &lt;code&gt;homoiconic&lt;/code&gt; in front of your bathroom mirror three times with the lights out, the ghost of John McCarthy appears and hands you a parenthesis.) Homoiconic languages empower you to reason about your code as a set of data structures that you can manipulate programmatically. To put this into context, let&amp;#x2019;s take a jaunt through the land of compilation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x5173;&amp;#x7CFB;&amp;#x7684;&amp;#x8BED;&amp;#x8A00;&amp;#x88AB;&amp;#x79F0;&amp;#x4E3A;&lt;code&gt;homoiconic&lt;/code&gt;&amp;#x8BED;&amp;#x8A00;(&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%90%8C%E5%83%8F%E6%80%A7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&lt;/a&gt;)&amp;#x3002;(&amp;#x987A;&amp;#x4FBF;&amp;#x63D0;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5F00;&amp;#x7740;&amp;#x706F;&amp;#xFF0C;&amp;#x5728;&amp;#x6D74;&amp;#x5BA4;&amp;#x955C;&amp;#x5B50;&amp;#x524D;&amp;#x9762;&amp;#x8BF4;&amp;#x4E09;&amp;#x58F0;&lt;code&gt;homoiconic&lt;/code&gt;,&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E9%BA%A6%E5%8D%A1%E9%94%A1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x7EA6;&amp;#x7FF0;&amp;#xB7;&amp;#x9EA6;&amp;#x5361;&amp;#x9521;&lt;/a&gt;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#xFF0C;&amp;#x5E76;&amp;#x4EA4;&amp;#x7ED9;&amp;#x4F60;&amp;#x4E00;&amp;#x5BF9;&amp;#x5706;&amp;#x62EC;&amp;#x53F7;&amp;#x3002;)&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x628A;&amp;#x4EE3;&amp;#x7801;&amp;#x770B;&amp;#x6210;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5E8F;&amp;#x64CD;&amp;#x7EB5;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5373;&amp;#x4F20;&amp;#x8BF4;&amp;#x4E2D;&amp;#x7684;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5373;&amp;#x6570;&amp;#x636E;&amp;#x8BED;&amp;#x8A00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Programming languages require a compiler or interpreter for translating the code you write, which consists of Unicode characters, into something else: machine instructions, code in another programming language, whatever. During this process, the compiler constructs an &lt;code&gt;abstract syntax tree&lt;/code&gt; (AST), which is a data structure that represents your program. You can think of the AST as the input to the evaluator, which you can think of as a function that traverses the tree to produce the machine code or whatever as its output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x9700;&amp;#x8981;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6216;&amp;#x89E3;&amp;#x91CA;&amp;#x5668;&amp;#x628A;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x673A;&amp;#x5668;&amp;#x6307;&amp;#x4EE4;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x7B49;&amp;#x7B49;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6784;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&lt;/code&gt;(AST)&amp;#x4EE3;&amp;#x8868;&amp;#x6E90;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;AST&amp;#x770B;&amp;#x6210;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6811;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x673A;&amp;#x5668;&amp;#x7801;&amp;#x6216;&amp;#x5176;&amp;#x4ED6;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So far this sounds a lot like what I described for Clojure. However, in most languages the AST&amp;#x2019;s data structure is inaccessible within the programming language; the programming language space and the compiler space are forever separated, and never the twain shall meet. Figure 7-1 shows how you might visualize the compilation process for an expression in a non-Lisp programming language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x662F;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;AST&amp;#x7684;&amp;#xFF0C;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0E;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6C38;&amp;#x8FDC;&amp;#x662F;&amp;#x9694;&amp;#x79BB;&amp;#x7684;&amp;#x3002;&amp;#x56FE;7-1&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x975E;Lisp&amp;#x8BED;&amp;#x8A00;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;&amp;#x7F16;&amp;#x8BD1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-1&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/non-lisp-eval.png&quot; alt=&quot;&amp;#x56FE;7-1&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But Clojure is different, because Clojure is a Lisp and Lisps are hotter than a stolen tamale. Instead of evaluating an AST that&amp;#x2019;s represented as some inaccessible internal data structure, Lisps evaluate native data structures. Clojure still evaluates tree structures, but the trees are structured using Clojure lists and the nodes are Clojure values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;Clojure&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;Clojure&amp;#x662F;Lisp&amp;#x3002;Lisp&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0D;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x8BBF;&amp;#x95EE;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x6E90;&amp;#x751F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;Clojure&amp;#x4E5F;&amp;#x662F;&amp;#x5BF9;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F46;&amp;#x6811;&amp;#x662F;&amp;#x7531;Clojure&amp;#x6E90;&amp;#x751F;list&amp;#x6784;&amp;#x6210;&amp;#xFF0C;&amp;#x6811;&amp;#x8282;&amp;#x70B9;&amp;#x662F;&amp;#x6E90;&amp;#x751F;Clojure&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists are ideal for constructing tree structures. The first element of a list is treated as the root, and each subsequent element is treated as a branch. To create a nested tree, you can just use nested lists, as shown in Figure 7-2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;list&amp;#x6784;&amp;#x9020;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#x5F88;&amp;#x5408;&amp;#x9002;&amp;#x3002;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x6839;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x540E;&amp;#x7EED;&amp;#x5143;&amp;#x7D20;&amp;#x90FD;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&amp;#x3002;&amp;#x5982;&amp;#x9700;&amp;#x6784;&amp;#x5EFA;&amp;#x5D4C;&amp;#x5957;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;list,&amp;#x5982;&amp;#x56FE;7-2&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-2&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/trees.png&quot; alt=&quot;&amp;#x56FE;7-2&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First, Clojure&amp;#x2019;s reader converts the text &lt;code&gt;(+ 1 (* 6 7))&lt;/code&gt; into a nested list. (You&amp;#x2019;ll learn more about the reader in the next section.) Then, Clojure&amp;#x2019;s evaluator takes that data as input and produces a result. (It also compiles Java Virtual Machine ( JVM) bytecode, which you&amp;#x2019;ll learn about in Chapter 12. For now, we&amp;#x2019;ll just focus on the evaluation model on a conceptual level.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&lt;code&gt;(+ 1 (* 6 7))&lt;/code&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x5D4C;&amp;#x5957;list&amp;#x3002;&amp;#x7136;&amp;#x540E;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x5E76;&amp;#x4EA7;&amp;#x751F;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With this in mind, Figure 7-3 shows what Clojure&amp;#x2019;s evaluation process looks like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;7-3&amp;#x8868;&amp;#x793A;&amp;#x4E86;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-3&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/lisp-eval.png&quot; alt=&quot;&amp;#x56FE;7-3&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;S-Expressions&lt;/strong&gt;&lt;br&gt;In your Lisp adventures, you&amp;#x2019;ll come across resources that explain that Lisps evaluate s-expressions. I avoid that term here because it&amp;#x2019;s ambiguous: you&amp;#x2019;ll see it used to refer to both the actual data object that gets evaluated and the source code that represents that data. Using the same term for two different components of Lisp evaluation (code and data) obscures what&amp;#x2019;s important: your text represents native data structures, and Lisps evaluate native data structures, which is unique and awesome. For a great treatment of s-expressions, check out &lt;a href=&quot;http://www.gigamonkeys.com/book/syntax-and-semantics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gigamonkeys.com/book/syntax-and-semantics.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5B66;&amp;#x4E60;Lisp&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x78B0;&amp;#x4E0A;s-expressions(s&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;)&amp;#x7684;&amp;#x89E3;&amp;#x91CA;&amp;#x3002;&amp;#x6211;&amp;#x907F;&amp;#x514D;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x6B67;&amp;#x4E49;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#x5B83;&amp;#x65E2;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x53C8;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x6E90;&amp;#x7801;&amp;#x3002;&amp;#x7528;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#x4EE3;&amp;#x8868;Lips&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EC4;&amp;#x6210;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x63A9;&amp;#x76D6;&amp;#x4E86;&amp;#x8981;&amp;#x70B9;&amp;#xFF1A;&amp;#x6E90;&amp;#x7801;&amp;#x6587;&amp;#x672C;&amp;#x4EE3;&amp;#x8868;&amp;#x6E90;&amp;#x751F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;Lisp&amp;#x5BF9;&amp;#x6E90;&amp;#x751F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5F88;&amp;#x72EC;&amp;#x7279;&amp;#x5F88;&amp;#x68D2;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E00;&amp;#x7BC7;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&lt;a href=&quot;http://www.gigamonkeys.com/book/syntax-and-semantics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;s&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x6587;&amp;#x7AE0;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the evaluator doesn&amp;#x2019;t actually care where its input comes from; it doesn&amp;#x2019;t have to come from the reader. As a result, you can send your program&amp;#x2019;s data structures directly to the Clojure evaluator with &lt;code&gt;eval&lt;/code&gt;. Behold!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E0D;&amp;#x5728;&amp;#x4E4E;&amp;#x8F93;&amp;#x5165;&amp;#x4ECE;&amp;#x54EA;&amp;#x6765;&amp;#xFF0C;&amp;#x8F93;&amp;#x5165;&amp;#x4E0D;&amp;#x4E00;&amp;#x5B9A;&amp;#x6765;&amp;#x81EA;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;&lt;code&gt;eval&lt;/code&gt;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; addition-list (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; addition-list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That&amp;#x2019;s right, baby! Your program just evaluated a Clojure list. You&amp;#x2019;ll read all about Clojure&amp;#x2019;s evaluation rules soon, but briefly, this is what happened: when Clojure evaluated the list, it looked up the list that &lt;code&gt;addition-list&lt;/code&gt; refers to; then it looked up the function corresponding to the &lt;code&gt;+&lt;/code&gt; symbol; and then it called that function with &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; as arguments, returning &lt;code&gt;3&lt;/code&gt;. The data structures of your running program and those of the evaluator live in the same space, and the upshot is that you can use the full power of Clojure and all the code you&amp;#x2019;ve written to construct data structures for evaluation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&amp;#x5F53;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&lt;code&gt;addition-list&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;list,&amp;#x7136;&amp;#x540E;&amp;#x627E;&amp;#x5230;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4EE5;&lt;code&gt;1&lt;/code&gt;&amp;#x548C;&lt;code&gt;2&lt;/code&gt;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&amp;#x8FD0;&amp;#x884C;&amp;#x4E2D;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5904;&amp;#x4E8E;&amp;#x540C;&amp;#x4E00;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD0;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x7684;Clojure&amp;#x529B;&amp;#x91CF;&amp;#x6784;&amp;#x5EFA;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(eval (concat addition-list [10]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(eval (list &amp;apos;def &amp;apos;lucky-number (concat addition-list [10])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;apos;user/lucky-number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lucky-number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 7-4 shows the lists you sent to the evaluator in these two examples.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;7-4&amp;#x663E;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;list&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-4&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/data-to-eval.png&quot; alt=&quot;&amp;#x56FE;7-4&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your program can talk directly to its own evaluator, using its own functions and data to modify itself as it runs! Are you going mad with power yet? I hope so! Hold on to some of your sanity, though, because there&amp;#x2019;s still more to learn.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8DDF;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BF9;&amp;#x8BDD;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x5019;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4FEE;&amp;#x6539;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So Clojure is homoiconic: it represents abstract syntax trees using lists, and you write textual representations of lists when you write Clojure code. Because the code you write represents data structures that you&amp;#x2019;re used to manipulating and the evaluator consumes those data structures, it&amp;#x2019;s easy to reason about how to programmatically modify your program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x662F;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#xFF1A;&amp;#x7528;list&amp;#x8868;&amp;#x793A;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6E90;&amp;#x7801;&amp;#x4E5F;&amp;#x7528;list&amp;#x8868;&amp;#x793A;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x8981;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C31;&amp;#x5BB9;&amp;#x6613;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros are what allow you to perform those manipulations easily. The rest of this chapter covers Clojure&amp;#x2019;s reader and evaluation rules in detail to give you a precise understanding of how macros work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8F7B;&amp;#x677E;&amp;#x5B8C;&amp;#x6210;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x8BB2;&amp;#x8FF0;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x51C6;&amp;#x786E;&amp;#x7406;&amp;#x89E3;&amp;#x5B8F;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Reader&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The reader converts the textual source code you save in a file or enter in the REPL into Clojure data structures. It&amp;#x2019;s like a translator between the human world of Unicode characters and Clojure&amp;#x2019;s world of lists, vectors, maps, symbols, and other data structures. In this section, you&amp;#x2019;ll interact directly with the reader and learn how a handy feature, the reader macro, lets you write code more succinctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x5B58;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x7684;&amp;#x6216;REPL&amp;#x8F93;&amp;#x5165;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x7FFB;&amp;#x8BD1;&amp;#xFF0C;&amp;#x628A;&amp;#x4EBA;&amp;#x7C7B;&amp;#x4E16;&amp;#x754C;&amp;#x7684;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#x7FFB;&amp;#x8BD1;&amp;#x6210;Clojure&amp;#x4E16;&amp;#x754C;&amp;#x7684;list, vector, map, symbol&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x8981;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4EA4;&amp;#x4E92;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B66;&amp;#x4E60;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BFB;&amp;#x5165;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;To understand reading, let&amp;#x2019;s first take a close look at how Clojure handles the text you type in the REPL. First, the REPL prompts you for text:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x7406;&amp;#x89E3;&amp;#x8BFB;&amp;#x5165;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x4ED4;&amp;#x7EC6;&amp;#x770B;&amp;#x770B;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5904;&amp;#x7406;REPL&amp;#x91CC;&amp;#x8F93;&amp;#x5165;&amp;#x7684;&amp;#x6587;&amp;#x5B57;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;REPL&amp;#x63D0;&amp;#x793A;&amp;#x4F60;&amp;#x8F93;&amp;#x5165;&amp;#x6587;&amp;#x5B57;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Then you enter a bit of text. Maybe something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x4F60;&amp;#x8F93;&amp;#x5165;&amp;#x4E00;&amp;#x4E9B;&amp;#x6587;&amp;#x5B57;&amp;#x3002;&amp;#x4E5F;&amp;#x8BB8;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (str &amp;quot;To understand what recursion is,&amp;quot; &amp;quot; you must first understand recursion.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That text is really just a sequence of Unicode characters, but it&amp;#x2019;s meant to represent a combination of Clojure data structures. This textual representation of data structures is called a &lt;code&gt;reader form&lt;/code&gt;. In this example, the form represents a list data structure that contains three more forms: the &lt;code&gt;str&lt;/code&gt; symbol and two strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x5B57;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EE3;&amp;#x8868;&amp;#x7684;&amp;#x662F;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7EC4;&amp;#x5408;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x5F62;&amp;#x5F0F;&amp;#x53EB;&amp;#x505A;&lt;code&gt;reader form&lt;/code&gt;(&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;)&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x53C8;&amp;#x5305;&amp;#x542B;&amp;#x4E86;3&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;code&gt;str&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you type those characters into the prompt and press enter, that text goes to the reader (remember REPL stands for read-eval-print-loop). Clojure reads the stream of characters and internally produces the corresponding data structures. It then evaluates the data structures and prints the textual representation of the result:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8F93;&amp;#x5165;&amp;#x5B8C;&amp;#x6210;&amp;#x5E76;&amp;#x56DE;&amp;#x8F66;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x672C;&amp;#x88AB;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;(REPL&amp;#x4EE3;&amp;#x8868;&amp;#x4E86;&amp;#x8BFB;&amp;#x5165;-&amp;#x6C42;&amp;#x503C;-&amp;#x6253;&amp;#x5370;-&amp;#x5FAA;&amp;#x73AF;)&amp;#x3002;Clojure&amp;#x5185;&amp;#x90E8;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x672C;&amp;#x4EA7;&amp;#x751F;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x8868;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;To understand what recursion is, you must first understand recursion.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading and evaluation are discrete processes that you can perform independently. One way to interact with the reader directly is by using the &lt;code&gt;read-string&lt;/code&gt; function. &lt;code&gt;read-string&lt;/code&gt; takes a string as an argument and processes it using Clojure&amp;#x2019;s reader, returning a data structure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x662F;&amp;#x80FD;&amp;#x72EC;&amp;#x7ACB;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x5206;&amp;#x79BB;&amp;#x6B65;&amp;#x9AA4;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;read-string&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&lt;code&gt;read-string&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x5B83;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list?&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;conj&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;) &lt;span class=&quot;symbol&quot;&gt;:zagglewag&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (:zagglewag + 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the first example, &lt;code&gt;read-string&lt;/code&gt; reads the string representation of a list containing a plus symbol and the numbers 1 and 2. The return value is an actual list, as proven by the second example. The last example uses &lt;code&gt;conj&lt;/code&gt; to prepend a keyword to the list. The takeaway is that reading and evaluating are independent of each other. You can read text without evaluating it, and you can pass the result to other functions. You can also evaluate the result, if you want:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&lt;code&gt;read-string&lt;/code&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5305;&amp;#x542B;&amp;#x52A0;&amp;#x53F7;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x6570;&amp;#x5B57;1&amp;#xFF0C;2&amp;#x7684;list&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x5B9E;&amp;#x9645;list&amp;#xFF0C;&amp;#x4ECE;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BC1;&amp;#x5B9E;&amp;#x3002;&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7528;&lt;code&gt;conj&lt;/code&gt;&amp;#x628A;&amp;#x4E00;&amp;#x4E2A;keyword&amp;#x9644;&amp;#x52A0;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x4E0A;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x8981;&amp;#x70B9;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x4E92;&amp;#x76F8;&amp;#x72EC;&amp;#x7ACB;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BFB;&amp;#x5165;&amp;#x6587;&amp;#x672C;&amp;#x4F46;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8BFB;&amp;#x5165;&amp;#x7ED3;&amp;#x679C;&amp;#x4F20;&amp;#x7ED9;&amp;#x5176;&amp;#x4ED6;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x613F;&amp;#x610F;&amp;#xFF0C;&amp;#x4F60;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In all the examples so far, there&amp;#x2019;s been a one-to-one relationship between the reader form and the corresponding data structures. Here are more examples of simple reader forms that directly map to the data structures they represent:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x90FD;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;() A list reader form&lt;br&gt;str A symbol reader form&lt;br&gt;[1 2] A vector reader form containing two number reader forms&lt;br&gt;{:sound &amp;#x201C;hoot&amp;#x201D;} A map reader form with a keyword reader form and string reader form&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;() list&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;str symbol&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;[1 2] vector&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x6570;&amp;#x5B57;&amp;#x8BFB;&amp;#x5165;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;{:sound &amp;#x201C;hoot&amp;#x201D;} map&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x4E24;&amp;#x4E2A;&amp;#x8BFB;&amp;#x5165;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;keyword&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the reader can employ more complex behavior when converting text to data structures. For example, remember anonymous functions?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x662F;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x66F4;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x3002;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x533F;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;#&lt;/span&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; %) &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, try this out:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BD5;&amp;#x8BD5;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;#(+ 1 %)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (fn* [p1__423#] (+ 1 p1__423#))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Whoa! This is not the one-to-one mapping that we&amp;#x2019;re used to. Reading &lt;code&gt;#(+ 1 %)&lt;/code&gt; somehow resulted in a list consisting of the &lt;code&gt;fn*&lt;/code&gt; symbol, a vector containing a symbol, and a list containing three elements. What just happened?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x64E6;&amp;#xFF01;&amp;#x8FD9;&amp;#x4E0D;&amp;#x662F;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x8BFB;&amp;#x5165;&lt;code&gt;#(+ 1 %)&lt;/code&gt;&amp;#x751F;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&lt;code&gt;fn*&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;vector(&amp;#x542B;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;)&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;list(&amp;#x542B;&amp;#x6709;3&amp;#x4E2A;&amp;#x6210;&amp;#x5458;)&amp;#x3002;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reader Macros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ll answer my own question: the reader used a &lt;em&gt;reader macro&lt;/em&gt; to transform &lt;code&gt;#(+ 1 %)&lt;/code&gt;. Reader macros are sets of rules for transforming text into data structures. They often allow you to represent data structures in more compact ways because they take an abbreviated reader form and expand it into a full form. They&amp;#x2019;re designated by &lt;em&gt;macro characters&lt;/em&gt;, like &lt;code&gt;&amp;apos;&lt;/code&gt; (the single quote), &lt;code&gt;#&lt;/code&gt;, and &lt;code&gt;@&lt;/code&gt;. They&amp;#x2019;re also completely different from the macros we&amp;#x2019;ll get to later. So as not to get the two confused, I&amp;#x2019;ll always refer to reader macros using the full term reader macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/em&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x4E86;&lt;code&gt;#(+ 1 %)&lt;/code&gt;&amp;#x3002;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x662F;&amp;#x4E00;&amp;#x7EC4;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x91C7;&amp;#x7528;&amp;#x4E86;&amp;#x7F29;&amp;#x5199;&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x88AB;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x5B8C;&amp;#x6574;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7531;&lt;em&gt;&amp;#x5B8F;&amp;#x5B57;&amp;#x7B26;&lt;/em&gt;&amp;#x6807;&amp;#x8BC6;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;&amp;#x2018;&lt;/code&gt;(&amp;#x5355;&amp;#x5F15;&amp;#x53F7;)&amp;#xFF0C;&lt;code&gt;#&lt;/code&gt;,&lt;code&gt;@&lt;/code&gt;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E0E;&amp;#x540E;&amp;#x9762;&amp;#x8BB2;&amp;#x7684;&amp;#x5B8F;&amp;#x5B8C;&amp;#x5168;&amp;#x662F;&amp;#x4E24;&amp;#x7801;&amp;#x4E8B;&amp;#x3002;&amp;#x4E0D;&amp;#x8981;&amp;#x6DF7;&amp;#x4E3A;&amp;#x4E00;&amp;#x8C08;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x6211;&amp;#x4F1A;&amp;#x603B;&amp;#x662F;&amp;#x7528;&amp;#x5B8C;&amp;#x6574;&amp;#x7684;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/em&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, you can see how the quote reader macro expands the single quote character here:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x770B;&amp;#x770B;&amp;#x5F15;&amp;#x7528;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x6269;&amp;#x5C55;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;(a b c)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (quote (a b c))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When the reader encounters the single quote, it expands it to a list whose first member is the symbol &lt;code&gt;quote&lt;/code&gt; and whose second member is the data structure that followed the single quote. The &lt;code&gt;deref&lt;/code&gt; reader macro works similarly for the &lt;code&gt;@&lt;/code&gt; character:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x9047;&amp;#x5230;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x628A;&amp;#x5B83;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x5176;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;quote&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7C7B;&amp;#x4F3C;&amp;#x5730;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&lt;code&gt;@&lt;/code&gt;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&lt;code&gt;defef&lt;/code&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;@var&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (clojure.core/deref var)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Reader macros can also do crazy stuff like cause text to be ignored. The semicolon designates the single-line comment reader macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x8FD8;&amp;#x80FD;&amp;#x5FFD;&amp;#x7565;&amp;#x6587;&amp;#x672C;&amp;#x3002;&amp;#x5206;&amp;#x53F7;&amp;#x662F;&amp;#x5355;&amp;#x884C;&amp;#x6CE8;&amp;#x91CA;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;; ignore!\n(+ 1 2)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;And that&amp;#x2019;s the reader! Your humble companion, toiling away at transforming text into data structures. Now let&amp;#x2019;s look at how Clojure evaluates those data structures.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x770B;Clojure&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Evaluator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;a href=&quot;#&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;/a&gt;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;You can think of Clojure&amp;#x2019;s evaluator as a function that takes a data structure as an argument, processes the data structure using rules corresponding to the data structure&amp;#x2019;s type, and returns a result. To evaluate a symbol, Clojure looks up what the symbol refers to. To evaluate a list, Clojure looks at the first element of the list and calls a function, macro, or special form. Any other values (including strings, numbers, and keywords) simply evaluate to themselves.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x770B;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7C7B;&amp;#x578B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89C4;&amp;#x5219;&amp;#x5904;&amp;#x7406;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x6C42;&amp;#x503C;list&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Clojure&amp;#x67E5;&amp;#x770B;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x5B8F;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x503C;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x6570;&amp;#x5B57;&amp;#xFF0C;keyword&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, let&amp;#x2019;s say you&amp;#x2019;ve typed &lt;code&gt;(+ 1 2)&lt;/code&gt; in the REPL. Figure 7-5 shows a diagram of the data structure that gets sent to the evaluator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x4F60;&amp;#x5728;REPL&amp;#x8F93;&amp;#x5165;&amp;#x4E86;&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x56FE;7-5&amp;#x793A;&amp;#x610F;&amp;#x4E86;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-5&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/simple-eval.png&quot; alt=&quot;7-5&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because it&amp;#x2019;s a list, the evaluator starts by evaluating the first element in the list. The first element is the plus symbol, and the evaluator resolves that by returning the corresponding function. Because the first element in the list is a function, the evaluator evaluates each of the operands. The operands 1 and 2 evaluate to themselves because they&amp;#x2019;re not lists or symbols. Then the evaluator calls the addition function with 1 and 2 as the operands, and returns the result.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5148;&amp;#x6C42;&amp;#x503C;list&amp;#x91CC;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x89E3;&amp;#x6790;&amp;#x5B83;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;1&amp;#x548C;2&amp;#x4E0D;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x662F;list&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x90FD;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;1&amp;#x548C;2&amp;#x4F5C;&amp;#x4E3A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The rest of this section explains the evaluator&amp;#x2019;s rules for each kind of data structure more fully. To show how the evaluator works, we&amp;#x2019;ll just run each example in the REPL. Keep in mind that the REPL first reads your text to get a data structure, then sends that data structure to the evaluator, and then prints the result as text.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8282;&amp;#x7684;&amp;#x5269;&amp;#x4F59;&amp;#x90E8;&amp;#x5206;&amp;#x5168;&amp;#x9762;&amp;#x89E3;&amp;#x91CA;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BF9;&amp;#x6BCF;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;br&gt;I write about how Clojure evaluates data structures in this chapter, but that&amp;#x2019;s imprecise. Technically, data structure refers to some kind of collection, like a linked list or b-tree, or whatever, but I also use the term to refer to scalar (singular, noncollection) values like symbols and numbers. I considered using the term data objects but didn&amp;#x2019;t want to imply object-oriented programming, or using just data but didn&amp;#x2019;t want to confuse that with data as a concept. So, data structure it is, and if you find this offensive, I will give you a thousand apologies, thoughtfully organized in a Van Emde Boas tree.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x6570;&amp;#x636E;&lt;/strong&gt;&lt;br&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x91CC;&amp;#x6211;&amp;#x7ECF;&amp;#x5E38;&amp;#x63D0;&amp;#x5230;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E0D;&amp;#x592A;&amp;#x7CBE;&amp;#x786E;&amp;#x3002;&amp;#x6280;&amp;#x672F;&amp;#x4E0A;&amp;#x8BB2;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x6307;&amp;#x67D0;&amp;#x79CD;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x4F46;&amp;#x6211;&amp;#x4E5F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BCD;&amp;#x4EE3;&amp;#x8868;&amp;#x7EAF;&amp;#x91CF;(&amp;#x5355;&amp;#x4E2A;&amp;#x7684;&amp;#xFF0C;&amp;#x975E;&amp;#x96C6;&amp;#x5408;)&amp;#x503C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x6570;&amp;#x5B57;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x6BD4;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x5BF9;&amp;#x8C61;&amp;#x6216;&amp;#x6570;&amp;#x636E;&amp;#x66F4;&amp;#x5408;&amp;#x9002;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x4E0D;&amp;#x59A5;&amp;#xFF0C;&amp;#x6DF1;&amp;#x8868;&amp;#x6B49;&amp;#x610F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These Things Evaluate to Themselves&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot;&gt;&lt;a href=&quot;#&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot;&gt;&lt;/a&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Whenever Clojure evaluates data structures that aren&amp;#x2019;t a list or symbol, the result is the data structure itself:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x65E0;&amp;#x8BBA;&amp;#x4F55;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;list&amp;#x6216;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;:huzzah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; :huzzah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Empty lists evaluate to themselves, too:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A7A;list&amp;#x4E5F;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;symbols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7B26;&amp;#x53F7;&quot;&gt;&lt;a href=&quot;#&amp;#x7B26;&amp;#x53F7;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B26;&amp;#x53F7;&quot;&gt;&lt;/a&gt;&amp;#x7B26;&amp;#x53F7;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One of your fundamental tasks as a programmer is creating abstractions by associating names with values. You learned how to do this in Chapter 3 by using &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, and function definitions. Clojure uses &lt;em&gt;symbols&lt;/em&gt; to name functions, macros, data, and anything else you can use, and evaluates them by &lt;em&gt;resolving&lt;/em&gt; them. To resolve a symbol, Clojure traverses any bindings you&amp;#x2019;ve created and then looks up the symbol&amp;#x2019;s entry in a namespace mapping, which you learned about in Chapter 6. Ultimately, a symbol resolves to either a &lt;em&gt;value&lt;/em&gt; or a &lt;em&gt;special form&lt;/em&gt;&amp;#x2014;a built-in Clojure operator that provides fundamental behavior.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C31;&amp;#x662F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x540D;&amp;#x5B57;&amp;#x548C;&amp;#x503C;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x7B2C;3&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x7684;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;,&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x90FD;&amp;#x662F;&amp;#x5E72;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7684;&amp;#x3002;Clojure&amp;#x7528;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&amp;#x547D;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x548C;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&lt;em&gt;&amp;#x89E3;&amp;#x6790;&lt;/em&gt;&amp;#x6765;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x8981;&amp;#x89E3;&amp;#x6790;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;Clojure&amp;#x904D;&amp;#x5386;&amp;#x6240;&amp;#x6709;&amp;#x4F60;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x6761;&amp;#x76EE;&amp;#xFF0C;&amp;#x7B2C;6&amp;#x7AE0;&amp;#x8BB2;&amp;#x89E3;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&amp;#x6700;&amp;#x7EC8;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#x6216;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt;&amp;#x2013;&amp;#x63D0;&amp;#x4F9B;&amp;#x57FA;&amp;#x7840;&amp;#x884C;&amp;#x4E3A;&amp;#x7684;Clojure&amp;#x5167;&amp;#x5EFA;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In general, Clojure resolves a symbol by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Looking up whether the symbol names a special form. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Looking up whether the symbol corresponds to a local binding. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Trying to find a namespace mapping introduced by &lt;code&gt;def&lt;/code&gt;. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Throwing an exception&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;Clojure&amp;#x8FD9;&amp;#x6837;&amp;#x89E3;&amp;#x6790;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;def&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6620;&amp;#x5C04;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s first look at a symbol resolving to a special form. Special forms, like &lt;code&gt;if&lt;/code&gt;, are always used in the context of an operation; they&amp;#x2019;re always the first element in a list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;if&lt;/code&gt;,&amp;#x603B;&amp;#x662F;&amp;#x4F5C;&amp;#x4E3A;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x603B;&amp;#x662F;list&amp;#x91CC;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; :a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, &lt;code&gt;if&lt;/code&gt; is a special form and it&amp;#x2019;s being used as an operator. If you try to refer to a special form outside of this context, you&amp;#x2019;ll get an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;if&lt;/code&gt;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x5F15;&amp;#x7528;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; CompilerException java.lang.RuntimeException: Unable to resolve symbol: if in this context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, let&amp;#x2019;s evaluate some &lt;em&gt;local bindings&lt;/em&gt;. A local binding is any association between a symbol and a value that wasn&amp;#x2019;t created by &lt;code&gt;def&lt;/code&gt;. In the next example, the symbol &lt;code&gt;x&lt;/code&gt; is bound to 5 using &lt;code&gt;let&lt;/code&gt;. When the evaluator resolves &lt;code&gt;x&lt;/code&gt;, it resolves the symbol &lt;code&gt;x&lt;/code&gt; to the value 5:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&lt;em&gt;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&lt;/em&gt;&amp;#x3002;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x662F;&amp;#x4EFB;&amp;#x4F55;&amp;#x975E;&lt;code&gt;def&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;x&lt;/code&gt;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;let&lt;/code&gt;&amp;#x4E0E;5&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x89E3;&amp;#x6790;&lt;code&gt;x&lt;/code&gt;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x503C;5:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now if we create a namespace mapping of &lt;code&gt;x&lt;/code&gt; to 15, Clojure resolves it accordingly:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;x&lt;/code&gt;&amp;#x4E0E;15&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x6620;&amp;#x5C04;,Clojure&amp;#x4F1A;&amp;#x76F8;&amp;#x5E94;&amp;#x5730;&amp;#x89E3;&amp;#x6790;&amp;#x5B83;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the next example, &lt;code&gt;x&lt;/code&gt; is mapped to 15, but we introduce a local binding of &lt;code&gt;x&lt;/code&gt; to 5 using &lt;code&gt;let&lt;/code&gt;. So &lt;code&gt;x&lt;/code&gt; is resolved to 5:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;x&lt;/code&gt;&amp;#x6620;&amp;#x5C04;&amp;#x6210;15,&amp;#x4F46;&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x91CC;&lt;code&gt;x&lt;/code&gt;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E3A;5,&amp;#x6240;&amp;#x4EE5;&lt;code&gt;x&lt;/code&gt;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;5:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can nest bindings, in which case the most recently defined binding takes precedence:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x7ED1;&amp;#x5B9A;,&amp;#x6700;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x6700;&amp;#x9AD8;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Functions also create local bindings, binding parameters to arguments within the function body. In this next example, &lt;code&gt;exclaim&lt;/code&gt; is mapped to a function. Within the function body, the parameter name &lt;code&gt;exclamation&lt;/code&gt; is bound to the argument passed to the function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E5F;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;,&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x91CC;,&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x540D;&amp;#x4E0E;&amp;#x53C2;&amp;#x6570;&amp;#x503C;&amp;#x7ED1;&amp;#x5B9A;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;exclaim&lt;/code&gt;&amp;#x662F;&amp;#x51FD;&amp;#x6570;.&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x91CC;,&amp;#x53C2;&amp;#x6570;&amp;#x540D;&lt;code&gt;exclamation&lt;/code&gt;&amp;#x4E0E;&amp;#x4F20;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x503C;&amp;#x7ED1;&amp;#x5B9A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; exclaim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [exclamation]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; exclamation &lt;span class=&quot;string&quot;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;exclaim&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Hadoken&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Hadoken!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, in this last example, &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;inc&lt;/code&gt; both refer to functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;inc&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x5F15;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; inc [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (2 3 4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When Clojure evaluates this code, it first evaluates the &lt;code&gt;map&lt;/code&gt; symbol, looking up the corresponding function and applying it to its arguments. The symbol &lt;code&gt;map&lt;/code&gt; refers to the map function, but it shouldn&amp;#x2019;t be confused with the function itself. The &lt;code&gt;map&lt;/code&gt; symbol is still a data structure, the same way that the string &lt;code&gt;&amp;quot;fried salad&amp;quot;&lt;/code&gt; is a data structure, but it&amp;#x2019;s not the same as the function itself:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x89E3;&amp;#x6790;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x65F6;,&amp;#x5148;&amp;#x6C42;&amp;#x503C;&lt;code&gt;map&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;,&amp;#x67E5;&amp;#x627E;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x7528;&amp;#x5176;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;.&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x662F;map&amp;#x51FD;&amp;#x6570;,&amp;#x4F46;&amp;#x4E0D;&amp;#x8981;&amp;#x628A;&amp;#x5B83;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x81EA;&amp;#x8EAB;&amp;#x6DF7;&amp;#x6DC6;&amp;#x3002;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;&amp;#x4ECD;&amp;#x7136;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;,&amp;#x5C31;&amp;#x50CF;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;fried salad&amp;quot;&lt;/code&gt;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x6837;,&amp;#x7B26;&amp;#x53F7;&amp;#x4E0D;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x672C;&amp;#x8EAB;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;type&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; clojure.lang.Symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In these examples, you&amp;#x2019;re interacting with the plus symbol, &lt;code&gt;+&lt;/code&gt;, as a data structure. You&amp;#x2019;re not interacting with the addition function that it refers to. If you evaluate it, Clojure looks up the function and applies it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&amp;#x4F60;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x4EA4;&amp;#x4E92;.&amp;#x4E0D;&amp;#x662F;&amp;#x4E0E;&amp;#x5B83;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#x4EA4;&amp;#x4E92;.&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;,Clojure&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;On their own, symbols and their referents don&amp;#x2019;t actually do anything; Clojure performs work by evaluating lists.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x81EA;&amp;#x8EAB;&amp;#x6765;&amp;#x8BF4;,&amp;#x4ED6;&amp;#x4EEC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E5F;&amp;#x4E0D;&amp;#x505A;;Clojure&amp;#x9760;&amp;#x6C42;&amp;#x503C;list&amp;#x5E72;&amp;#x6D3B;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;a href=&quot;#&amp;#x5217;&amp;#x8868;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;/a&gt;&amp;#x5217;&amp;#x8868;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;If the data structure is an empty list, it evaluates to an empty list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x7A7A;list, &amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x7A7A;list:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;()&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Otherwise, it is evaluated as a &lt;em&gt;call&lt;/em&gt; to the first element in the list. The way the call is performed depends on the nature of that first element.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5426;&amp;#x5219;,&amp;#x5C31;&amp;#x662F;&amp;#x5BF9;&amp;#x5217;&amp;#x8868;&amp;#x91CC;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&lt;em&gt;&amp;#x8C03;&amp;#x7528;&lt;/em&gt;&amp;#x7684;&amp;#x6C42;&amp;#x503C;.&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x7531;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x6027;&amp;#x8D28;&amp;#x51B3;&amp;#x5B9A;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Function Calls&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;When performing a function call, each operand is fully evaluated and then passed to the function as an argument. In this example, the &lt;code&gt;+&lt;/code&gt; symbol resolves to a function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x884C;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x5B8C;&amp;#x5168;&amp;#x6C42;&amp;#x503C;,&amp;#x7136;&amp;#x540E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;,&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure sees that the list&amp;#x2019;s head is a function, so it proceeds to evaluate the rest of the elements in the list. The operands 1 and 2 both evaluate to themselves, and after they&amp;#x2019;re evaluated, Clojure applies the addition function to them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x770B;&amp;#x5230;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;,&amp;#x6240;&amp;#x4EE5;&amp;#x5B83;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;list&amp;#x91CC;&amp;#x5269;&amp;#x4F59;&amp;#x7684;&amp;#x5143;&amp;#x7D20;.&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;1&amp;#x548C;2&amp;#x90FD;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;,&amp;#x4E4B;&amp;#x540E;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also nest function calls:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E5F;&amp;#x53EF;&amp;#x80FD;&amp;#x5D4C;&amp;#x5957;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Even though the second argument is a list, Clojure follows the same process here: look up the &lt;code&gt;+&lt;/code&gt; symbol and evaluate each argument. To evaluate the list &lt;code&gt;(+ 2 3)&lt;/code&gt;, Clojure resolves the first member to the addition function and proceeds to evaluate each of the arguments. In this way, evaluation is recursive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C3D;&amp;#x7BA1;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x52A0;&amp;#x662F;&amp;#x4E2A;list,Clojure&amp;#x4ECD;&amp;#x91C7;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;: &amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x5E76;&amp;#x6C42;&amp;#x503C;&amp;#x5176;&amp;#x6BCF;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;.&amp;#x6C42;&amp;#x503C;list&lt;code&gt;(+ 2 3)&lt;/code&gt;&amp;#x65F6;,Clojure&amp;#x628A;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;.&amp;#x6C42;&amp;#x503C;&amp;#x4EE5;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x9012;&amp;#x5F52;&amp;#x8FDB;&amp;#x884C;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Special Forms&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;You can also call &lt;em&gt;special forms&lt;/em&gt;. In general, special forms are special because they implement core behavior that can&amp;#x2019;t be implemented with functions. For example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt; &amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;.&amp;#x603B;&amp;#x7684;&amp;#x6765;&amp;#x8BF4;,&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7279;&amp;#x6B8A;&amp;#x4E4B;&amp;#x5904;&amp;#x5728;&amp;#x4E8E;: &amp;#x5B83;&amp;#x4EEC;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x529F;&amp;#x80FD;.&amp;#x6BD4;&amp;#x5982;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, we ask Clojure to evaluate a list beginning with the symbol &lt;code&gt;if&lt;/code&gt;. That &lt;code&gt;if&lt;/code&gt; symbol gets resolved to the &lt;code&gt;if&lt;/code&gt; special form, and Clojure calls that special form with the operands &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;,Clojure&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EE5;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;if&lt;/code&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;list&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&lt;code&gt;if&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&lt;code&gt;if&lt;/code&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;,Clojure&amp;#x7528;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Special forms don&amp;#x2019;t follow the same evaluation rules as normal functions. For example, when you call a function, each operand gets evaluated. However, with &lt;code&gt;if&lt;/code&gt; you don&amp;#x2019;t want each operand to be evaluated. You only want certain operands to be evaluated, depending on whether the condition is true or false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x9075;&amp;#x4ECE;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#x65F6;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&amp;#x5BF9;&amp;#x4E8E;&lt;code&gt;if&lt;/code&gt;,&amp;#x4E0D;&amp;#x5E0C;&amp;#x671B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x53EA;&amp;#x5E0C;&amp;#x671B;&amp;#x6839;&amp;#x636E;&amp;#x6761;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;true&amp;#x6216;false,&amp;#x67D0;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another important special form is &lt;code&gt;quote&lt;/code&gt;. You&amp;#x2019;ve seen lists represented like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x662F;&lt;code&gt;&amp;#x5F15;&amp;#x7528;&lt;/code&gt;(quote)&amp;#x3002;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x89C1;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E48;&amp;#x8868;&amp;#x793A;&amp;#x7684;list:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(a b c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you saw in &amp;#x201C;The Reader&amp;#x201D; on page 153, this invokes a reader macro so that we end up with this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x524D;&amp;#x9762;&amp;#x89C1;&amp;#x8FC7;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x6700;&amp;#x7EC8;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; b c))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Normally, Clojure would try to resolve the &lt;code&gt;a&lt;/code&gt; symbol and then call it because it&amp;#x2019;s the first element in a list. The &lt;code&gt;quote&lt;/code&gt; special form tells the evaluator, &amp;#x201C;Instead of evaluating my next data structure like normal, just return the data structure itself.&amp;#x201D; In this case, you end up with a list consisting of the symbols &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;a&lt;/code&gt;&amp;#x662F;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;Clojure&amp;#x4F1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x89E3;&amp;#x6790;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;code&gt;&amp;#x5F15;&amp;#x7528;&lt;/code&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x662F;&amp;#x544A;&amp;#x8BC9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8981;&amp;#x6C42;&amp;#x503C;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;a&lt;/code&gt;,&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;c&lt;/code&gt;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;list&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, and &lt;code&gt;recur&lt;/code&gt; are all special forms as well. You can see why: they don&amp;#x2019;t get evaluated the same way as functions. For example, normally when the evaluator evaluates a symbol, it resolves that symbol, but &lt;code&gt;def&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; obviously don&amp;#x2019;t behave that way. Instead of resolving symbols, they actually create associations between symbols and values. So the evaluator receives a combination of data structures from the reader, and it goes about resolving the symbols and calling the functions or special forms at the beginning of each list. But there&amp;#x2019;s more! You can also place a &lt;em&gt;macro&lt;/em&gt; at the beginning of a list instead of a function or a special form, and this can give you tremendous power over how the rest of the data structures are evaluated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt; &amp;#x548C; &lt;code&gt;recur&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0D;&amp;#x540C;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x89E3;&amp;#x6790;&amp;#x90A3;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4F46;&lt;code&gt;def&lt;/code&gt;&amp;#x548C;&lt;code&gt;let&lt;/code&gt;&amp;#x660E;&amp;#x663E;&amp;#x4E0D;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4ECE;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x89E3;&amp;#x6790;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5B8C;&amp;#xFF01;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x9664;&amp;#x4E86;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&lt;em&gt;&amp;#x5B8F;&lt;/em&gt;&amp;#xFF0C;&amp;#x5B8F;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x6781;&amp;#x5176;&amp;#x5F3A;&amp;#x5927;&amp;#x7684;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5176;&amp;#x540E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x4F55;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Hmm . . . Clojure evaluates data structures&amp;#x2014;the same data structures that we write and manipulate in our Clojure programs. Wouldn&amp;#x2019;t it be awesome if we could use Clojure to manipulate the data structures that Clojure evaluates? Yes, yes it would! And guess what? You can do this with macros! Did your head just explode? Mine did!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6211;&amp;#x4EEC;&amp;#x5199;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x80FD;&amp;#x591F;&amp;#x4FEE;&amp;#x6539;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x5F88;&amp;#x68D2;&amp;#x5462;&amp;#xFF1F;&amp;#x5B8F;&amp;#x5C31;&amp;#x662F;&amp;#x5E72;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7684;&amp;#xFF01;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x64CD;&amp;#x7EB5;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get an idea of what macros do, let&amp;#x2019;s look at some code. Say we want to write a function that makes Clojure read infix notation (such as &lt;code&gt;1 + 1&lt;/code&gt;) instead of its normal notation with the operator first (&lt;code&gt;+ 1 1&lt;/code&gt;). This example is not a macro. Rather, it merely shows that you can write code using infix notation and then use Clojure to transform it so it will actually execute. First, create a list that represents infix addition:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x611F;&amp;#x53D7;&amp;#x4E00;&amp;#x4E0B;&amp;#x5B8F;&amp;#x4F7F;&amp;#x5E72;&amp;#x5565;&amp;#x7684;&amp;#xFF0C;&amp;#x6765;&amp;#x770B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x8BFB;&amp;#x53D6;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;1 + 1&lt;/code&gt;),&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x6B63;&amp;#x5E38;&amp;#x7684;&amp;#x524D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;(&lt;code&gt;+ 1 1&lt;/code&gt;)&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E0D;&amp;#x662F;&amp;#x5B8F;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x8BA9;&amp;#x4F60;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x7F6E;&amp;#x52A0;&amp;#x6CD5;list&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure will throw an exception if you try to make it evaluate this list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ClassCastException java.lang.Long cannot be cast to clojure.lang.IFn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, &lt;code&gt;read-string&lt;/code&gt; returns a list, and you can use Clojure to reorganize that list into something it &lt;code&gt;can&lt;/code&gt; successfully evaluate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&lt;code&gt;read-string&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;list,&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x7EC4;&amp;#x8FD9;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x4F7F;&amp;#x5B83;&lt;code&gt;&amp;#x80FD;&amp;#x591F;&lt;/code&gt;&amp;#x6210;&amp;#x529F;&amp;#x6C42;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [infix (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infix)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you eval this, it returns 2, just as you&amp;#x2019;d expect:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;2&amp;#xFF0C;&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x613F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [infix (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infix))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is cool, but it&amp;#x2019;s also quite clunky. That&amp;#x2019;s where macros come in. Macros give you a convenient way to manipulate lists before Clojure evaluates them. Macros are a lot like functions: they take arguments and return a value, just like a function would. They work on Clojure data structures, just like functions do. What makes them unique and powerful is the way they fit in to the evaluation process. They are executed in between the reader and the evaluator&amp;#x2014;so they can manipulate the data structures that the reader spits out and transform with those data structures before passing them to the evaluator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5F88;&amp;#x9177;&amp;#xFF0C;&amp;#x4F46;&amp;#x5F88;&amp;#x9EBB;&amp;#x70E6;&amp;#x3002;&amp;#x5B8F;&amp;#x5C31;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x3002;Clojure&amp;#x6C42;&amp;#x503C;list&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x7528;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x65B9;&amp;#x4FBF;&amp;#x5730;&amp;#x64CD;&amp;#x7EB5;&amp;#x5B83;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&amp;#x63A5;&amp;#x53D7;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x3002;&amp;#x5B8F;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x8D77;&amp;#x4F5C;&amp;#x7528;&amp;#x3002;&amp;#x5B8F;&amp;#x7684;&amp;#x72EC;&amp;#x7279;&amp;#x548C;&amp;#x5F3A;&amp;#x5927;&amp;#x4E4B;&amp;#x5904;&amp;#x5728;&amp;#x4E8E;&amp;#x5B83;&amp;#x5982;&amp;#x4F55;&amp;#x878D;&amp;#x5165;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5B8F;&amp;#x6267;&amp;#x884C;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E4B;&amp;#x95F4;&amp;#x2013;&amp;#x6240;&amp;#x4EE5;&amp;#x5B8F;&amp;#x80FD;&amp;#x64CD;&amp;#x7EB5;&amp;#x5E76;&amp;#x8F6C;&amp;#x6362;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x4F20;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s look at an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defmacro ignore-last-operand&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [function-call]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (butlast function-call))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; (ignore-last-operand (+ 1 2 10))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; This will not print anything&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(ignore-last-operand (+ 1 2 (println &amp;quot;look at me!!!&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;At &amp;#x278A; the macro &lt;code&gt;ignore-last-operand&lt;/code&gt; receives the list &lt;code&gt;(+ 1 2 10)&lt;/code&gt; as its argument, not the value 13. This is very different from a function call, because function calls always evaluate all of the arguments passed in, so there is no possible way for a function to reach into one of its operands and alter or ignore it. By contrast, when you call a macro, the operands are not evaluated. In particular, symbols are not resolved; they are passed as symbols. Lists are not evaluated either; that is, the first element in the list is not called as a function, special form, or macro. Rather, the unevaluated list data structure is passed in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728; &amp;#x278A; &amp;#x5904;&amp;#xFF0C;&amp;#x5B8F;&lt;code&gt;ignore-last-operand&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E86;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x662F;list&lt;code&gt;(+ 1 2 10)&lt;/code&gt;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;13&amp;#x3002;&amp;#x8FD9;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x5F88;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;&amp;#x603B;&amp;#x662F;&amp;#x6C42;&amp;#x503C;&amp;#x6240;&amp;#x6709;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5FFD;&amp;#x7565;&amp;#x6216;&amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x4E0E;&amp;#x4E4B;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4E0D;&amp;#x5BF9;&amp;#x53C2;&amp;#x6570;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7279;&amp;#x522B;&amp;#x662F;&amp;#x5B8F;&amp;#x4E0D;&amp;#x5BF9;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x7B26;&amp;#x53F7;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x8FD8;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5B8F;&amp;#x4E5F;&amp;#x4E0D;&amp;#x5BF9;list&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5373;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4F5C;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x6216;&amp;#x5B8F;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x7684;&amp;#x8FD8;&amp;#x662F;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another difference is that the data structure returned by a function is not evaluated, but the data structure returned by a macro &lt;code&gt;is&lt;/code&gt;. The process of determining the return value of a macro is called &lt;code&gt;macro expansion&lt;/code&gt;, and you can use the function &lt;code&gt;macroexpand&lt;/code&gt; to see what data structure a macro returns before that data structure is evaluated. Note that you have to quote the form that you pass to &lt;code&gt;macroexpand&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5DEE;&amp;#x522B;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E0D;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&lt;code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&lt;/code&gt;&amp;#x3002;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53EB;&lt;code&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&lt;/code&gt;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x770B;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x5FC5;&amp;#x987B;&amp;#x7528;quote&amp;#x5305;&amp;#x4F4F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;ignore-last-operand&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;ignore-last-operand&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;look at me!!!&amp;quot;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, both expansions result in the list &lt;code&gt;(+ 1 2)&lt;/code&gt;. When this list is evaluated, as in the previous example, the result is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;list&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x5F53;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just for fun, here&amp;#x2019;s a macro for doing simple infix notation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x597D;&amp;#x73A9;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [infixed]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infixed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infixed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infixed)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The best way to think about this whole process is to picture a phase between reading and evaluation: the &lt;code&gt;macro expansion&lt;/code&gt; phase. Figure 7-6 shows how you can visualize the entire evaluation process for &lt;code&gt;(infix (1 + 2))&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x601D;&amp;#x8003;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x6700;&amp;#x597D;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;&amp;#x56FE;&amp;#x4E0A;&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x9636;&amp;#x6BB5;&amp;#x4E2D;&amp;#x95F4;&amp;#x753B;&amp;#x51FA;&lt;code&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&lt;/code&gt;&amp;#x9636;&amp;#x6BB5;&amp;#x3002;&amp;#x56FE;7-6&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&lt;code&gt;(infix (1 + 2))&lt;/code&gt;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-6&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/whole-shebang.png&quot; alt=&quot;7-6&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And that&amp;#x2019;s how macros fit into the evaluation process. But why would you want to do this? The reason is that macros allow you to transform an arbitrary data structure like &lt;code&gt;(1 + 2)&lt;/code&gt; into one that can Clojure can evaluate, &lt;code&gt;(+ 1 2)&lt;/code&gt;. That means &lt;code&gt;you can use Clojure to extend itself&lt;/code&gt; so you can write programs however you please. In other words, macros enable &lt;code&gt;syntactic abstraction&lt;/code&gt;. Syntactic abstraction may sound a bit abstract (ha ha!), so let&amp;#x2019;s explore that a little.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x5B8F;&amp;#x878D;&amp;#x5165;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8981;&amp;#x8FD9;&amp;#x4E48;&amp;#x5E72;&amp;#x5462;&amp;#xFF1F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x4EFB;&amp;#x610F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;(1 + 2)&lt;/code&gt;,&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x80FD;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x53EF;&amp;#x4EE5;&lt;code&gt;&amp;#x7528;Clojure&amp;#x8BED;&amp;#x8A00;&amp;#x6269;&amp;#x5C55;&amp;#x81EA;&amp;#x8EAB;&lt;/code&gt;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x4F60;&amp;#x9AD8;&amp;#x5174;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7231;&amp;#x600E;&amp;#x4E48;&amp;#x5199;&amp;#x600E;&amp;#x4E48;&amp;#x5199;&amp;#x3002;&amp;#x6362;&amp;#x53E5;&amp;#x8BDD;&amp;#x8BF4;&amp;#xFF0C;Clojure&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x8FDB;&amp;#x884C;&lt;code&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&lt;/code&gt;&amp;#x3002;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x542C;&amp;#x8D77;&amp;#x6765;&amp;#x6709;&amp;#x70B9;&amp;#x62BD;&amp;#x8C61;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x63A2;&amp;#x7D22;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntactic Abstraction and the -&amp;gt; Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E;-gt-&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E;-gt-&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E; -&amp;gt; &amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E; -&amp;gt; &amp;#x5B8F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Often, Clojure code consists of a bunch of nested function calls. For example, I use the following function in one of my projects:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x4EE3;&amp;#x7801;&amp;#x7ECF;&amp;#x5E38;&amp;#x7531;&amp;#x5927;&amp;#x91CF;&amp;#x5D4C;&amp;#x5957;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x6784;&amp;#x6210;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x5728;&amp;#x6211;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; read-resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Read a resource into a string&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;slurp&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;clojure.java.io/resource&lt;/span&gt; path))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;To understand the function body, you have to find the innermost form, in this case &lt;code&gt;(clojure.java.io/resource path)&lt;/code&gt;, and then work your way outward from right to left to see how the result of each function gets passed to another function. This right-to-left flow is opposite of what non-Lisp programmers are used to. As you get used to writing in Clojure, this kind of code gets easier and easier to understand. But if you want to translate Clojure code so you can read it in a more familiar, left-to-right, top-to-bottom manner, you can use the built-in &lt;code&gt;-&amp;gt;&lt;/code&gt; macro, which is also known as the &lt;code&gt;threading&lt;/code&gt; or &lt;code&gt;stabby&lt;/code&gt; macro. It lets you rewrite the preceding function like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8981;&amp;#x7406;&amp;#x89E3;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x627E;&amp;#x5230;&amp;#x6700;&amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;(clojure.java.io/resource path)&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x4ECE;&amp;#x53F3;&amp;#x81F3;&amp;#x5DE6;&amp;#x5730;&amp;#x5F80;&amp;#x5916;&amp;#x5C42;&amp;#x8D70;&amp;#xFF0C;&amp;#x67E5;&amp;#x770B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x4F20;&amp;#x7ED9;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x4ECE;&amp;#x53F3;&amp;#x5F80;&amp;#x5DE6;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0E;&amp;#x975E;Lisp&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x76F8;&amp;#x53CD;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x4E86;Clojure&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4F1A;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x8F6C;&amp;#x6362;Clojure&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x7528;&amp;#x66F4;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#xFF0C;&amp;#x4ECE;&amp;#x5DE6;&amp;#x5230;&amp;#x53F3;&amp;#xFF0C;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x9605;&amp;#x8BFB;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5167;&amp;#x5EFA;&amp;#x7684;&lt;code&gt;-&amp;gt;&lt;/code&gt;&amp;#x5B8F;&amp;#x505A;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E5F;&amp;#x53EB;&lt;code&gt;&amp;#x7A7F;&amp;#x7EBF;&lt;/code&gt;&amp;#x6216;&lt;code&gt;&amp;#x7A7F;&amp;#x4E32;&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; read-resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clojure.java.io/resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      slurp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      read-string))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can read this as a pipeline that goes from top to bottom instead of from inner parentheses to outer parentheses. First, &lt;code&gt;path&lt;/code&gt; gets passed to &lt;code&gt;io/resource&lt;/code&gt;, then the result gets passed to &lt;code&gt;slurp&lt;/code&gt;, and finally the result of that gets passed to &lt;code&gt;read-string&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x7BA1;&amp;#x9053;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x4ECE;&amp;#x5185;&amp;#x5230;&amp;#x5916;&amp;#x7684;&amp;#x62EC;&amp;#x53F7;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&lt;code&gt;path&lt;/code&gt;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;io/resource&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;slurp&lt;/code&gt;,&amp;#x6700;&amp;#x540E;&amp;#x53C8;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;read-string&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These two ways of defining &lt;code&gt;read-resource&lt;/code&gt; are entirely equivalent. However, the second one might be easier understand because we can approach it from top to bottom, a direction we&amp;#x2019;re used to. The &lt;code&gt;-&amp;gt;&lt;/code&gt; also lets us omit parentheses, which means there&amp;#x2019;s less visual noise to contend with. This is a &lt;code&gt;syntactic abstraction&lt;/code&gt; because it lets you write code in a syntax that&amp;#x2019;s different from Clojure&amp;#x2019;s built-in syntax but is preferable for human consumption. Better than lead into gold!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;read-resource&lt;/code&gt;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x4F46;&amp;#x7B2C;&amp;#x4E8C;&amp;#x79CD;&amp;#x53EF;&amp;#x80FD;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5411;&amp;#x3002;&lt;code&gt;-&amp;gt;&lt;/code&gt;&amp;#x8FD8;&amp;#x7701;&amp;#x53BB;&amp;#x4E86;&amp;#x62EC;&amp;#x53F7;&amp;#xFF0C;&amp;#x89C6;&amp;#x89C9;&amp;#x4E0A;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&lt;code&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&lt;/code&gt;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x591F;&amp;#x7528;&amp;#x4E0E;Clojure&amp;#x5185;&amp;#x7F6E;&amp;#x8BED;&amp;#x6CD5;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EBA;&amp;#x7C7B;&amp;#x66F4;&amp;#x559C;&amp;#x6B22;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x771F;&amp;#x5C4C;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned about Clojure&amp;#x2019;s evaluation process. First, the reader transforms text into Clojure data structures. Next, the macro expander transforms those data structures with macros, converting your custom syntax into syntactically valid data structures. Finally, those data structures get sent to the evaluator. The evaluator processes data structures based on their type: symbols are resolved to their referents; lists result in function, macro, or special form calls; and everything else evaluates to itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x4E86;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#xFF0C;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&amp;#x5B8F;&amp;#x8F6C;&amp;#x6362;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x628A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x8BED;&amp;#x6CD5;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x8BED;&amp;#x6CD5;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x57FA;&amp;#x4E8E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5904;&amp;#x7406;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&amp;#x7B26;&amp;#x53F7;&amp;#x88AB;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF1B;list&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x3001;&amp;#x5B8F;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#xFF1B;&amp;#x6240;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x578B;&amp;#x90FD;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The coolest thing about this process is that it allows you to use Clojure to expand its own syntax. This process is made easier because Clojure is homoiconic: its text represents data structures, and those data structures represent abstract syntax trees, allowing you to more easily reason about how to construct syntax-expanding macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x9177;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7528;Clojure&amp;#x6269;&amp;#x5C55;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;Clojure&amp;#x662F;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x4E86;&amp;#xFF1A;&amp;#x4EE3;&amp;#x7801;&amp;#x4EE3;&amp;#x8868;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4EE3;&amp;#x8868;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x63A8;&amp;#x65AD;&amp;#x5982;&amp;#x4F55;&amp;#x6784;&amp;#x5EFA;&amp;#x8BED;&amp;#x6CD5;&amp;#x6269;&amp;#x5C55;&amp;#x5B8F;&amp;#x53D8;&amp;#x5F97;&amp;#x66F4;&amp;#x52A0;&amp;#x5BB9;&amp;#x6613;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With all these new concepts in your brainacles, you&amp;#x2019;re now ready to blow stuff up on purpose, just like I promised. The next chapter will teach you everything you need to know about writing macros. Hold on to your socks or they&amp;#x2019;re liable to get knocked off!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6982;&amp;#x5FF5;&amp;#x4E3A;&amp;#x4E0B;&amp;#x7AE0;&amp;#x505A;&amp;#x597D;&amp;#x4E86;&amp;#x51C6;&amp;#x5907;&amp;#x3002;&amp;#x4E0B;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BB2;&amp;#x8FF0;&amp;#x5199;&amp;#x5B8F;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x77E5;&amp;#x8BC6;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;These exercises focus on reading and evaluation. Chapter 8 has exercises for writing macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC3;&amp;#x4E60;&amp;#x4E13;&amp;#x6CE8;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7B2C;8&amp;#x7AE0;&amp;#x6709;&amp;#x5199;&amp;#x5B8F;&amp;#x7EC3;&amp;#x4E60;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;code&gt;list&lt;/code&gt; function, quoting, and &lt;code&gt;read-string&lt;/code&gt; to create a list that, when evaluated, prints your first name and your favorite sci-fi movie.&lt;/li&gt;
&lt;li&gt;Create an infix function that takes a list like &lt;code&gt;(1 + 3 * 4 - 5)&lt;/code&gt; and transforms it into the lists that Clojure needs in order to correctly evaluate the expression using operator precedence rules.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;quote&lt;/code&gt; &amp;#x548C; &lt;code&gt;read-string&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;list,&amp;#x8FD9;&amp;#x4E2A;list&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x4F60;&amp;#x7684;&amp;#x59D3;&amp;#x548C;&amp;#x4F60;&amp;#x6700;&amp;#x559C;&amp;#x6B22;&amp;#x7684;&amp;#x79D1;&amp;#x5E7B;&amp;#x7535;&amp;#x5F71;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7F16;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;infix&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x5F62;&amp;#x5982;&lt;code&gt;(1 + 3 * 4 - 5)&lt;/code&gt;&amp;#x7684;list&amp;#xFF0C;&amp;#x5E76;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x89C4;&amp;#x5219;&amp;#x6B63;&amp;#x786E;&amp;#x7684;Clojure&amp;#x9700;&amp;#x8981;&amp;#x7684;list&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>OpenClose原则的几类使用场景</title>
    <link href="http://yoursite.com/2016/03/27/openclose-principle-use-case/"/>
    <id>http://yoursite.com/2016/03/27/openclose-principle-use-case/</id>
    <published>2016-03-26T17:33:28.000Z</published>
    <updated>2016-03-27T14:17:07.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;a href=&quot;#OpenClose&amp;#x539F;&amp;#x5219;&quot; class=&quot;headerlink&quot; title=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;/a&gt;OpenClose&amp;#x539F;&amp;#x5219;&lt;/h2&gt;&lt;p&gt;&amp;#x524D;&amp;#x4E00;&amp;#x9635;&amp;#x770B;&amp;#x5230;&amp;#x9648;&amp;#x5929;&amp;#x8001;&amp;#x5E08;&amp;#x7684;&amp;#x4E00;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;,&amp;#x6807;&amp;#x9898;&amp;#x662F;&lt;a href=&quot;http://t.cn/Rq7j4fu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8C08;&amp;#x8C08;&amp;#x6211;&amp;#x5BF9;&amp;#x5DE5;&amp;#x7A0B;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x7684;&amp;#x770B;&amp;#x6CD5;&lt;/a&gt;.&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x7BC7;&amp;#x542B;&amp;#x91D1;&amp;#x91CF;&amp;#x5F02;&amp;#x5E38;&amp;#x9AD8;&amp;#x7684;&amp;#x6587;&amp;#x7AE0;,&amp;#x5F3A;&amp;#x70C8;&amp;#x5EFA;&amp;#x8BAE;&amp;#x4ED4;&amp;#x7EC6;&amp;#x9605;&amp;#x8BFB;.&amp;#x8FD9;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x8FD8;&amp;#x4F7F;&amp;#x6211;&amp;#x5F00;&amp;#x59CB;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5B66;&amp;#x4E60;Clojure,&amp;#x56E0;&amp;#x4E3A;Rich Hickey&amp;#x90A3;&amp;#x7BC7;&lt;a href=&quot;http://t.cn/R795YxA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simple Made Easy&lt;/a&gt;&amp;#x5B9E;&amp;#x5728;&amp;#x662F;&amp;#x592A;&amp;#x8BF1;&amp;#x4EBA;&amp;#x4E86;&amp;#x2026;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x8FD9;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x91CC;,&amp;#x6211;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;: &lt;code&gt;Open to extension, Close to modification&lt;/code&gt;. &amp;#x5373;&amp;#x4EE3;&amp;#x7801;&amp;#x5199;&amp;#x5B8C;&amp;#x4EE5;&amp;#x540E;,&amp;#x4FDD;&amp;#x6301;&amp;#x6269;&amp;#x5C55;&amp;#x80FD;&amp;#x529B;,&amp;#x4F46;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x518D;&amp;#x6539;&amp;#x52A8;&amp;#x4EE3;&amp;#x7801;.&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x76EE;&amp;#x524D;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x5C31;&amp;#x662F;:&amp;#x628A;&lt;code&gt;&amp;#x6761;&amp;#x4EF6;&amp;#x68C0;&amp;#x6D4B;&lt;/code&gt;&amp;#x548C;&lt;code&gt;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/code&gt;&amp;#x7EC4;&amp;#x7EC7;&amp;#x6210;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x6210;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;,&amp;#x6709;&amp;#x65B0;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x65F6;&amp;#x5019;,&amp;#x53EA;&amp;#x8981;&amp;#x589E;&amp;#x52A0;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5C31;&amp;#x884C;&amp;#x4E86;(Open to extension),&amp;#x800C;&amp;#x9009;&amp;#x62E9;&amp;#x5E76;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x904D;&amp;#x5386;&amp;#x51FD;&amp;#x6570;&amp;#x5B8C;&amp;#x6210;,&amp;#x4E0D;&amp;#x518D;&amp;#x9700;&amp;#x8981;&amp;#x4FEE;&amp;#x6539;(Close to modification).&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x7406;&amp;#x89E3;&amp;#x89D2;&amp;#x5EA6;&amp;#x5C31;&amp;#x662F;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;,&amp;#x628A;&amp;#x5305;&amp;#x542B;&amp;#x591A;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;,&amp;#x5C06;&amp;#x6765;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x589E;&amp;#x52A0;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x5355;&amp;#x903B;&amp;#x8F91;&amp;#x72EC;&amp;#x7ACB;&amp;#x4EFB;&amp;#x52A1;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;/h2&gt;&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x573A;&amp;#x666F;,&amp;#x6839;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x6587;&amp;#x5B57;,type&amp;#x4E3A;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;&amp;#x6570;&amp;#x5B57;,&amp;#x73B0;&amp;#x5728;&amp;#x8981;&amp;#x53D6;&amp;#x5F97;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x5B57;.&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#x5C31;&amp;#x662F;if&amp;#x52A0;&amp;#x4FEE;&amp;#x6539;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTypeName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; result = &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;spck_list&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;detail&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;search&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;activity&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;,&amp;#x5176;&amp;#x5B9E;&amp;#x4EE5;&amp;#x524D;&amp;#x786E;&amp;#x5B9E;&amp;#x53EA;&amp;#x6709;3&amp;#x79CD;,&amp;#x73B0;&amp;#x5728;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;4&amp;#x79CD;,&amp;#x6CA1;&amp;#x51C6;&amp;#x4EE5;&amp;#x540E;&amp;#x8FD8;&amp;#x4F1A;&amp;#x589E;&amp;#x52A0;,PM&amp;#x7684;idea,&amp;#x4F60;&amp;#x61C2;&amp;#x7684;.&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x91C7;&amp;#x7528;OpenClose&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTypeName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; coll = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;spck_list&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;detail&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;search&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;activity&amp;apos;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; found = _.find(coll, item =&amp;gt; item[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] === type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; found ? found[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x770B;&amp;#x4E0D;&amp;#x51FA;&amp;#x660E;&amp;#x663E;&amp;#x4F18;&amp;#x52BF;,&amp;#x4F46;&amp;#x9009;&amp;#x62E9;&amp;#x903B;&amp;#x8F91;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5F88;&amp;#x591A;,&amp;#x6267;&amp;#x884C;&amp;#x903B;&amp;#x8F91;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5F88;&amp;#x957F;,&amp;#x5F88;&amp;#x4E71;,&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x5C31;&amp;#x4F1A;&amp;#x66F4;&amp;#x660E;&amp;#x663E;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&lt;/h2&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x6B21;&amp;#x9700;&amp;#x8981;&amp;#x683C;&amp;#x5F0F;&amp;#x5316;&amp;#x4ECE;DB&amp;#x53D6;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;,&amp;#x6B63;&amp;#x597D;&amp;#x8FD8;&amp;#x662F;&amp;#x4E0A;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;,&amp;#x7531;&amp;#x4E8E;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E86;&amp;#x4E0D;&amp;#x540C;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;,&amp;#x6240;&amp;#x4EE5;&amp;#x8981;&amp;#x6839;&amp;#x636E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5BF9;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x5316;.&amp;#x8FD9;&amp;#x6B21;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;&amp;#x91C7;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;formatActWithDetail&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//act.type  0:&amp;#x7CBE;&amp;#x54C1;&amp;#x5408;&amp;#x96C6; 1:&amp;#x5355;&amp;#x54C1;&amp;#x63A8;&amp;#x8350; 2:&amp;#x68C0;&amp;#x7D22;&amp;#x89C4;&amp;#x5219; 9:&amp;#x5B98;&amp;#x7F51;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x62FC;&amp;#x88C5;0,2,9&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterWithAction = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format0(act) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format2(act, matched) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format9(act, matched) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; run(filterWithAction, act.type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;coll, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; option &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; coll) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.filter(args)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; option.action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format0&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x7CBE;&amp;#x54C1;&amp;#x5408;&amp;#x96C6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activityId: act.id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (act.width === &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;) result.pic = imgurl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x68C0;&amp;#x7D22;&amp;#x89C4;&amp;#x5219;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keyword: matched.keyword,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format9&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5B98;&amp;#x7F51;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activityId: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(matched.keyword),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x6709;&amp;#x76F8;&amp;#x4F3C;,&amp;#x4E5F;&amp;#x6709;&amp;#x5DEE;&amp;#x5F02;,&amp;#x6709;&amp;#x7684;&amp;#x8FD8;&amp;#x6709;&amp;#x81EA;&amp;#x5DF1;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5982;&amp;#x679C;&amp;#x5199;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x5373;&amp;#x96BE;&amp;#x770B;,&amp;#x53C8;&amp;#x75DB;&amp;#x82E6;,&amp;#x53C8;&amp;#x4E0D;&amp;#x597D;&amp;#x6269;&amp;#x5C55;,&amp;#x56E0;&amp;#x4E3A;&amp;#x6269;&amp;#x5C55;&amp;#x65F6;&amp;#x5019;&amp;#x53C8;&amp;#x662F;&amp;#x4E00;&amp;#x6B21;&amp;#x5373;&amp;#x96BE;&amp;#x770B;&amp;#x53C8;&amp;#x75DB;&amp;#x82E6;&amp;#x7684;&amp;#x7ECF;&amp;#x5386;.&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;OpenClose&amp;#x5199;&amp;#x6CD5;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6BD4;&amp;#x4E0A;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x660E;&amp;#x663E;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot;&gt;&lt;a href=&quot;#&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot;&gt;&lt;/a&gt;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&lt;/h2&gt;&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4E00;&amp;#x4E2A;api&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x5305;&amp;#x542B;&amp;#x597D;&amp;#x51E0;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x4F46;&amp;#x7531;&amp;#x4E8E;&amp;#x67D0;&amp;#x4E9B;&amp;#x539F;&amp;#x56E0;(&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;api&amp;#x66F4;&amp;#x5408;&amp;#x9002;),&amp;#x8FD9;&amp;#x4E2A;api&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5728;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x62C6;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;api,&amp;#x800C;&amp;#x662F;&amp;#x5E26;&amp;#x7740;&amp;#x591A;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;api&amp;#x8BF7;&amp;#x6C42;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;,&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x5199;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x76F4;&amp;#x63A5;&amp;#x7528;if&amp;#x8BED;&amp;#x53E5;&amp;#x5224;&amp;#x65AD;&amp;#x53C2;&amp;#x6570;&amp;#x5E76;&amp;#x6267;&amp;#x884C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x5FCD;&amp;#x65E0;&amp;#x53EF;&amp;#x5FCD;&amp;#x4E86;,&amp;#x56E0;&amp;#x4E3A;&amp;#x592A;&amp;#x591A;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x9700;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x8003;&amp;#x8651;.&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;OpenClose&amp;#x539F;&amp;#x5219;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&amp;#x53D1;&amp;#x6325;&amp;#x5A01;&amp;#x529B;.&amp;#x5373;&amp;#x76F4;&amp;#x63A5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;api&amp;#x6839;&amp;#x636E;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;,&amp;#x62C6;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;&amp;#x5185;&amp;#x90E8;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&amp;#x65E2;&amp;#x964D;&amp;#x4F4E;&amp;#x4E86;&amp;#x5F00;&amp;#x53D1;&amp;#x75DB;&amp;#x82E6;&amp;#x5EA6;,&amp;#x4E5F;&amp;#x4FDD;&amp;#x6301;&amp;#x4E86;&amp;#x6269;&amp;#x5C55;&amp;#x6027;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0A;&amp;#x8FF0;&amp;#x63CF;&amp;#x8FF0;&amp;#x7684;&amp;#x5177;&amp;#x4F53;&amp;#x4F8B;&amp;#x5B50;,&amp;#x591A;&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;,&amp;#x5404;&amp;#x4E2A;&amp;#x5206;&amp;#x4EAB;&amp;#x7684;&amp;#x76F8;&amp;#x4F3C;&amp;#x548C;&amp;#x5DEE;&amp;#x5F02;&amp;#x6709;&amp;#x5927;&amp;#x6709;&amp;#x5C0F;,&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5206;&amp;#x4EAB;&amp;#x7C7B;&amp;#x578B;&amp;#x4ECE;3&amp;#x79CD;&amp;#x589E;&amp;#x52A0;&amp;#x5230;&amp;#x4E86;5&amp;#x79CD;,&amp;#x76F4;&amp;#x63A5;&amp;#x770B;OpenClose&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#x5427;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//type: 1&amp;#x6D3B;&amp;#x52A8; 2&amp;#x4E13;&amp;#x8F91; 3&amp;#x5355;&amp;#x54C1; 4&amp;#x6211;&amp;#x7684;&amp;#x7CBE;&amp;#x9009;&amp;#x96C6; 5&amp;#x540E;&amp;#x53F0;&amp;#x5EFA;&amp;#x7684;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//channelId 0 &amp;#x5FAE;&amp;#x4FE1;&amp;#x597D;&amp;#x53CB; 1&amp;#x5FAE;&amp;#x4FE1;&amp;#x670B;&amp;#x53CB;&amp;#x5708; 2 &amp;#x5FAE;&amp;#x535A; 3 QQ&amp;#x597D;&amp;#x53CB; 4 QQ&amp;#x7A7A;&amp;#x95F4; 5 &amp;#x77ED;&amp;#x4FE1; 6 &amp;#x4E8C;&amp;#x7EF4;&amp;#x7801; 7&amp;#x590D;&amp;#x5236;&amp;#x94FE;&amp;#x63A5; 8&amp;#x5FAE;&amp;#x4FE1;&amp;#x5FEB;&amp;#x7167; 9&amp;#x670B;&amp;#x53CB;&amp;#x5708;&amp;#x5FEB;&amp;#x7167;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5355;&amp;#x54C1;&amp;#x6216;&amp;#x8005;&amp;#x6D3B;&amp;#x52A8;&amp;#x9700;&amp;#x8981;&amp;#x4F20;&amp;#x5165;&amp;#x5355;&amp;#x54C1;&amp;#x7684;url&amp;#x94FE;&amp;#x63A5;&amp;#x5730;&amp;#x5740;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; args = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    userId: req.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;uid&amp;apos;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    productId: req.body.pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: req.body.url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: req.body.type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    channelId: req.body.channel_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterWithAction = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;1&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-active&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;2&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-album&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;3&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-product&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-best&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;5&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-spck-list&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  run(filterWithAction, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;coll, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; option &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; coll) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.filter(args)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; option.action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,5&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x5185;&amp;#x5BB9;,&amp;#x6BCF;&amp;#x79CD;&amp;#x53C8;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x6E20;&amp;#x9053;,&amp;#x5176;&amp;#x4E2D;&amp;#x6709;&amp;#x7684;&amp;#x6E20;&amp;#x9053;&amp;#x9700;&amp;#x8981;&amp;#x8FD4;&amp;#x56DE;&amp;#x9644;&amp;#x52A0;&amp;#x7684;&amp;#x6570;&amp;#x636E;.&amp;#x6211;&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x62FC;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;args&lt;/code&gt;&amp;#x5BF9;&amp;#x8C61;.&amp;#x7136;&amp;#x540E;&amp;#x76F4;&amp;#x63A5;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;type&lt;/code&gt;&amp;#x53C2;&amp;#x6570;,&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;api&amp;#x62C6;&amp;#x5206;&amp;#x6210;5&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5355;&amp;#x4E00;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x5904;&amp;#x7406;&amp;#x6A21;&amp;#x5757;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x653E;&amp;#x5728;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;,&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5168;&amp;#x90E8;&amp;#x4F20;&amp;#x8FC7;&amp;#x53BB;,&amp;#x8FD9;&amp;#x5C42;api&amp;#x5C31;&amp;#x4E0D;&amp;#x518D;&amp;#x5E72;&amp;#x5176;&amp;#x4ED6;&amp;#x4E8B;&amp;#x60C5;&amp;#x4E86;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x6A21;&amp;#x5757;&lt;code&gt;action-active.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (args, res, req) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; productId = args.productId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; channelId = args.channelId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testArgs([productId, channelId]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; shareUrl = &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${global.appConfig.activityUrl}&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;${productId}&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; recordShare(args.userId, shareUrl, args.type, channelId, productId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; shareId = _.first(data).id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; apiUrl = global.appConfig.apiUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content : &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5546;&amp;#x54C1;&amp;#x5728;&amp;#x53C2;&amp;#x52A0;&amp;#x6D3B;&amp;#x52A8;&amp;#xFF0C;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x5F88;&amp;#x4E0D;&amp;#x9519;&amp;#xFF0C;&amp;#x5FEB;&amp;#x6765;&amp;#x770B;&amp;#x770B;&amp;#x5427;&amp;#xFF01;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${apiUrl}&lt;/span&gt;share/share?share_id=&lt;span class=&quot;subst&quot;&gt;${shareId}&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      status: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendError(res, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logError(err, req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x6BB5;&amp;#x5355;&amp;#x4E00;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#x7F16;&amp;#x7801;&amp;#x7684;&amp;#x540C;&amp;#x662F;&amp;#x8003;&amp;#x8651;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;.&amp;#x53EF;&amp;#x4EE5;&amp;#x60F3;&amp;#x8C61;&amp;#x4E00;&amp;#x4E0B;&amp;#x628A;&amp;#x6240;&amp;#x6709;5&amp;#x79CD;&amp;#x6DF7;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x800C;&amp;#x4E14;&amp;#x5C06;&amp;#x6765;&amp;#x6CA1;&amp;#x51C6;&amp;#x4F1A;&amp;#x589E;&amp;#x52A0;&amp;#x5206;&amp;#x4EAB;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;,&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x4F1A;&amp;#x5230;&amp;#x5904;&amp;#x5145;&amp;#x6EE1;&amp;#x4E86;if,&amp;#x800C;OpenClose&amp;#x4E00;&amp;#x65E6;&amp;#x642D;&amp;#x597D;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5C31;&amp;#x90FD;&amp;#x4EAB;&amp;#x53D7;&amp;#x5230;&amp;#x5355;&amp;#x4E00;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x6E05;&amp;#x6670;&amp;#x660E;&amp;#x4E86;,&amp;#x540C;&amp;#x65F6;&amp;#x73B0;&amp;#x5B58;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x4FEE;&amp;#x6539;,&amp;#x65B0;&amp;#x589E;&amp;#x65B0;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5F71;&amp;#x54CD;&amp;#x5176;&amp;#x4ED6;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot;&gt;&lt;a href=&quot;#&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot;&gt;&lt;/a&gt;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&lt;/h2&gt;&lt;p&gt;&amp;#x6C34;&amp;#x5E73;&amp;#x6709;&amp;#x9650;,&amp;#x5982;&amp;#x679C;&amp;#x60A8;&amp;#x53D1;&amp;#x73B0;&amp;#x4E86;&amp;#x5176;&amp;#x4ED6;&amp;#x597D;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6216;&amp;#x8005;&amp;#x6211;&amp;#x7406;&amp;#x89E3;&amp;#x7684;&amp;#x4E0D;&amp;#x6B63;&amp;#x786E;,&amp;#x4E0D;&amp;#x5168;&amp;#x9762;&amp;#x7684;&amp;#x5730;&amp;#x65B9;,&amp;#x8BF7;&amp;#x52A1;&amp;#x5FC5;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;,&amp;#x975E;&amp;#x5E38;&amp;#x611F;&amp;#x8C22;!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;a href=&quot;#OpenClose&amp;#x539F;&amp;#x5219;&quot; class=&quot;headerlink&quot; title=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;/a&gt;OpenClose&amp;#
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bluebird带给我的惊喜</title>
    <link href="http://yoursite.com/2016/03/13/bluebird-serendipity/"/>
    <id>http://yoursite.com/2016/03/13/bluebird-serendipity/</id>
    <published>2016-03-13T13:31:19.000Z</published>
    <updated>2016-03-13T13:31:19.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;a href=&quot;#&amp;#x80CC;&amp;#x666F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;/a&gt;&amp;#x80CC;&amp;#x666F;&lt;/h2&gt;&lt;p&gt;&amp;#x7528;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&amp;#x5F00;&amp;#x53D1;App&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;Api.&amp;#x6846;&amp;#x67B6;:&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express&lt;/a&gt;,Promise&amp;#x5E93;:&lt;a href=&quot;http://bluebirdjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluebird&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5C40;&amp;#x9650;&quot;&gt;&lt;a href=&quot;#&amp;#x5C40;&amp;#x9650;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5C40;&amp;#x9650;&quot;&gt;&lt;/a&gt;&amp;#x5C40;&amp;#x9650;&lt;/h2&gt;&lt;p&gt;&amp;#x6211;&amp;#x6CA1;&amp;#x7528;&amp;#x8FC7;ES7&amp;#x7684;await,async&amp;#x8BED;&amp;#x6CD5;,&amp;#x6240;&amp;#x4EE5;&amp;#x65E0;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;.&amp;#x53E6;&amp;#x5916;,bluebird&amp;#x4E5F;&amp;#x4E86;&amp;#x89E3;&amp;#x7684;&amp;#x4E0D;&amp;#x8BE6;&amp;#x7EC6;,&amp;#x5982;&amp;#x6709;&amp;#x5199;&amp;#x7684;&amp;#x4E0D;&amp;#x5BF9;&amp;#x7684;&amp;#x5730;&amp;#x65B9;,&amp;#x5B9E;&amp;#x5C5E;&amp;#x6B63;&amp;#x5E38;,&amp;#x6B22;&amp;#x8FCE;&amp;#x8BA8;&amp;#x8BBA;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x4ECE;callback&amp;#x5230;async&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;callback&amp;#x5230;async&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;callback&amp;#x5230;async&quot;&gt;&lt;/a&gt;&amp;#x4ECE;callback&amp;#x5230;async&lt;/h3&gt;&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x53EA;&amp;#x7528;Node&amp;#x7684;&amp;#x4F20;&amp;#x7EDF;callback&amp;#x5D4C;&amp;#x5957;&amp;#x65B9;&amp;#x5F0F;.&amp;#x540E;&amp;#x6765;&amp;#x6709;&amp;#x7684;api&amp;#x7EC8;&amp;#x4E8E;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;callback hell,&amp;#x53D8;&amp;#x5F97;&amp;#x96BE;&amp;#x4EE5;&amp;#x9605;&amp;#x8BFB;,&amp;#x7406;&amp;#x89E3;,&amp;#x8C03;&amp;#x8BD5;,&amp;#x4E8E;&amp;#x662F;&amp;#x53EA;&amp;#x597D;&amp;#x5BFB;&amp;#x627E;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6CD5;.&amp;#x9996;&amp;#x5148;&amp;#x627E;&amp;#x5230;&amp;#x4E86;&lt;a href=&quot;https://www.npmjs.com/package/async&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;async&lt;/a&gt;.async&amp;#x6CA1;&amp;#x6709;&amp;#x5F15;&amp;#x5165;&amp;#x65B0;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;,&amp;#x4E5F;&amp;#x7528;callback,&amp;#x4F46;&amp;#x53EA;&amp;#x7528;&amp;#x4E00;&amp;#x5C42;.&amp;#x5F00;&amp;#x59CB;&amp;#x7528;&amp;#x7684;&amp;#x8FD8;&amp;#x4E0D;&amp;#x9519;,&amp;#x7528;&amp;#x5B83;&amp;#x7684;&lt;a href=&quot;https://www.npmjs.com/package/async#waterfall&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;waterfall&lt;/a&gt;,&lt;a href=&quot;https://www.npmjs.com/package/async#parallel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parallel&lt;/a&gt;&amp;#x7B49;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;api&amp;#x7EC4;&amp;#x7EC7;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;.&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/03/13/bluebird-serendipity/async-1.jpg&quot; alt=&quot;async&amp;#x5199;&amp;#x7684;&amp;#x65E0;&amp;#x5D4C;&amp;#x5957;n&amp;#x6B65;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x7528;async&amp;#x7684;waterfall&amp;#x5199;&amp;#x7684;&amp;#x4E0D;&amp;#x5E26;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;(&amp;#x6BCF;&amp;#x6B65;&amp;#x5185;&amp;#x6CA1;&amp;#x6709;asycn&amp;#x7684;api&amp;#x5D4C;&amp;#x5957;),&amp;#x6BCF;&amp;#x6B65;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x6536;&amp;#x8D77;&amp;#x4E86;.&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x67E5;&amp;#x8BE2;,&amp;#x5F80;respEntity&amp;#x7684;data&amp;#x91CC;&amp;#x653E;&amp;#x6570;&amp;#x636E;.&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;callback&amp;#x5199;&amp;#x5DF2;&amp;#x7ECF;&amp;#x65E0;&amp;#x6CD5;&amp;#x5FCD;&amp;#x53D7;&amp;#x4E86;,&amp;#x7528;async&amp;#x7B97;&amp;#x662F;&amp;#x57FA;&amp;#x672C;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;callback hell.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x4ECE;async&amp;#x5230;Promise-bluebird&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;async&amp;#x5230;Promise-bluebird&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;async&amp;#x5230;Promise(bluebird)&quot;&gt;&lt;/a&gt;&amp;#x4ECE;async&amp;#x5230;Promise(bluebird)&lt;/h3&gt;&lt;p&gt;&amp;#x540E;&amp;#x6765;&amp;#x6709;&amp;#x4E9B;api,&amp;#x603B;&amp;#x4F53;&amp;#x662F;&amp;#x4E32;&amp;#x884C;&amp;#x7ED3;&amp;#x6784;,&amp;#x4F46;&amp;#x6709;&amp;#x4E9B;&amp;#x6B65;&amp;#x9AA4;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;,&amp;#x5F97;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x7ED3;&amp;#x679C;&amp;#x4EE5;&amp;#x540E;&amp;#x518D;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B65;(&amp;#x6216;&amp;#x603B;&amp;#x4F53;&amp;#x5E76;&amp;#x884C;,&amp;#x5176;&amp;#x4E2D;&amp;#x6709;&amp;#x4E32;&amp;#x884C;),&amp;#x8FD9;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x5D4C;&amp;#x5957;,&amp;#x5F00;&amp;#x59CB;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;async&amp;#x884C;&amp;#x4E0D;&amp;#x884C;,&amp;#x5C31;&amp;#x6CA1;&amp;#x5D4C;&amp;#x5957;&amp;#x7528;,&amp;#x540E;&amp;#x6765;&amp;#x4E3A;&amp;#x4E86;&amp;#x6027;&amp;#x80FD;&amp;#x6700;&amp;#x4F18;,&amp;#x8BD5;&amp;#x4E86;&amp;#x4E00;&amp;#x4E0B;,&amp;#x53D1;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x5199;,&amp;#x4F46;&amp;#x975E;&amp;#x5E38;&amp;#x75DB;&amp;#x82E6;.&amp;#x56E0;&amp;#x4E3A;async&amp;#x6BCF;&amp;#x6B65;&amp;#x5185;&amp;#x7528;&amp;#x7684;&amp;#x8FD8;&amp;#x662F;callback&amp;#x65B9;&amp;#x5F0F;,&amp;#x4E00;&amp;#x65E6;&amp;#x5D4C;&amp;#x5957;,&amp;#x5C31;&amp;#x662F;2&amp;#x5C42;callback&amp;#x52A0;&amp;#x4E0A;2&amp;#x5C42;async&amp;#x81EA;&amp;#x8EAB;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#x4EE3;&amp;#x7801;,&amp;#x6BCF;&amp;#x6B65;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x5F80;&amp;#x540E;&amp;#x4F20;,&amp;#x7F20;&amp;#x7EF5;&amp;#x60B1;&amp;#x607B;,&amp;#x5B8C;&amp;#x5168;&amp;#x65E0;&amp;#x6CD5;&amp;#x76F4;&amp;#x89C6;.&lt;/p&gt;
&lt;p&gt;&amp;#x4E8E;&amp;#x662F;&amp;#x5F00;&amp;#x59CB;&amp;#x5B66;&amp;#x4E60;Promise,&amp;#x4E0D;&amp;#x719F;&amp;#x6089;Promise&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x7684;&amp;#x53EF;&amp;#x4EE5;&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-promises&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x770B;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;,&amp;#x5E76;&amp;#x627E;&amp;#x5230;&amp;#x4E86;bluebird.bluebird&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x529F;&amp;#x80FD;&amp;#x7684;Promise&amp;#x5E93;,&amp;#x6027;&amp;#x80FD;&amp;#x636E;&amp;#x8BF4;&amp;#x4E5F;&amp;#x4E0D;&amp;#x9519;.&lt;a href=&quot;http://bluebirdjs.com/docs/why-bluebird.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x5B98;&amp;#x7F51;:Why bluebird?&lt;/a&gt;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x6301;&amp;#x7EED;&amp;#x4E86;&amp;#x4E00;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;,&amp;#x7528;&lt;code&gt;Promise.props&lt;/code&gt;,&lt;code&gt;Promise.all&lt;/code&gt;,&amp;#x548C;&lt;code&gt;then&lt;/code&gt;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;async&amp;#x7684;&amp;#x5D4C;&amp;#x5957;&amp;#x75DB;&amp;#x70B9;,&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5168;&amp;#x90E8;&amp;#x64B8;&amp;#x5E73;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x5C42;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x4F8B;&amp;#x5B50;,&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;:&amp;#x68C0;&amp;#x6D4B;&amp;#x53C2;&amp;#x6570;&amp;#x540E;,&amp;#x5F00;&amp;#x59CB;&amp;#x7528;bluebird&amp;#x8D70;&amp;#x5F02;&amp;#x6B65;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;,&amp;#x5148;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7528;&amp;#x6237;,&amp;#x5982;&amp;#x679C;&amp;#x53C2;&amp;#x6570;&amp;#x9519;&amp;#x8BEF;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;,&amp;#x5426;&amp;#x5219;&amp;#x7EE7;&amp;#x7EED;&amp;#x5E76;&amp;#x884C;&amp;#x67E5;&amp;#x8BE2;2&amp;#x79CD;&amp;#x6570;&amp;#x636E;,&amp;#x518D;&amp;#x62FC;&amp;#x7ED3;&amp;#x679C;,&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x6216;&amp;#x4E2D;&amp;#x95F4;&amp;#x6709;&amp;#x4EFB;&amp;#x610F;&amp;#x6B65;&amp;#x9AA4;&amp;#x51FA;&amp;#x9519;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uid = req.query.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// valid&amp;#x662F;&amp;#x540C;&amp;#x6B65;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!valid(uid)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x65E0;&amp;#x6548;&amp;#x53C2;&amp;#x6570;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// validUser, queryUser, queryMessage&amp;#x90FD;&amp;#x662F;&amp;#x5F02;&amp;#x6B65;&amp;#x67E5;&amp;#x5E93;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;bluebird&amp;#x5199;&amp;#x6210;&amp;#x8FD4;&amp;#x56DE;Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x6210;&amp;#x4F20;&amp;#x7EDF;&amp;#x7684;callback,&amp;#x518D;&amp;#x7528;Promise.promisify&amp;#x6216;Promise.promisifyAll&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x8FD4;&amp;#x56DE;Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(validUser(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.props({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: queryUser(uid),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: queryMessage(uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = data.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; message = data.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;success&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user: formatUser(user),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: formatMsg(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: err.message ? err.message : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5F02;&amp;#x5E38;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;,&amp;#x7528;bluebird&amp;#x5199;&amp;#x5F02;&amp;#x6B65;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x5D4C;&amp;#x5957;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x4F7F;&amp;#x6BCF;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x51FD;&amp;#x6570;.&amp;#x8FD9;&amp;#x5C31;&amp;#x4F7F;&amp;#x5F00;&amp;#x53D1;,&amp;#x8C03;&amp;#x8BD5;,&amp;#x4FEE;&amp;#x6539;&amp;#x90FD;&amp;#x53D8;&amp;#x5F97;&amp;#x8F7B;&amp;#x677E;&amp;#x6109;&amp;#x5FEB;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;,&amp;#x6781;&amp;#x5927;&amp;#x63D0;&amp;#x9AD8;&amp;#x4E86;&amp;#x6548;&amp;#x7387;.&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;,&amp;#x5B8C;&amp;#x5168;&amp;#x7B26;&amp;#x5408;&amp;#x4EBA;&amp;#x7C7B;&amp;#x601D;&amp;#x7EF4;&amp;#x8FC7;&amp;#x7A0B;,&amp;#x5904;&amp;#x7406;&amp;#x5B8C;&amp;#x4E00;&amp;#x4E2A;,&amp;#x518D;&amp;#x5904;&amp;#x7406;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;.&amp;#x6574;&amp;#x4E2A;&amp;#x5F02;&amp;#x6B65;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5B8C;&amp;#x5168;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x5199;&amp;#x51FA;&amp;#x6240;&amp;#x6709;&amp;#x4E1A;&amp;#x52A1;&amp;#x7684;stub&amp;#x51FD;&amp;#x6570;,&amp;#x628A;&amp;#x8DEF;&amp;#x7531;&amp;#x8D70;&amp;#x901A;,&amp;#x518D;&amp;#x6328;&amp;#x4E2A;&amp;#x5B9E;&amp;#x73B0;&amp;#x5177;&amp;#x4F53;&amp;#x529F;&amp;#x80FD;.&amp;#x8C03;&amp;#x8BD5;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7406;&amp;#x89E3;&amp;#x4EE3;&amp;#x7801;&amp;#x548C;&amp;#x65AD;&amp;#x70B9;&amp;#x9009;&amp;#x62E9;&amp;#x90FD;&amp;#x53D8;&amp;#x7684;&amp;#x4E00;&amp;#x76EE;&amp;#x4E86;&amp;#x7136;.&amp;#x4E1A;&amp;#x52A1;&amp;#x66F4;&amp;#x6539;&amp;#x65F6;&amp;#x5019;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x4E32;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x53EA;&amp;#x8981;&amp;#x6CE8;&amp;#x91CA;&amp;#x6389;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;then&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x5C31;&amp;#x884C;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x5E76;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x53EA;&amp;#x8981;&amp;#x6CE8;&amp;#x91CA;&amp;#x6389;Promise.props&amp;#x91CC;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x67D0;&amp;#x4E00;&amp;#x9879;&amp;#x5C31;&amp;#x884C;.&amp;#x6DFB;&amp;#x52A0;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x540C;&amp;#x7406;.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot;&gt;&lt;/a&gt;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&lt;/h3&gt;&lt;p&gt;&amp;#x4F46;&amp;#x5B9E;&amp;#x9645;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E2D;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6A21;&amp;#x5F0F;&amp;#x4F1A;&amp;#x9047;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;,&amp;#x6BD4;&amp;#x5982;&amp;#x53C2;&amp;#x6570;&amp;#x68C0;&amp;#x67E5;&amp;#x672C;&amp;#x8EAB;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x68C0;&amp;#x6D4B;&amp;#x548C;&amp;#x8FD4;&amp;#x56DE;,&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;.&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x590D;&amp;#x5199;&amp;#x591A;&amp;#x6B21;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&amp;#x52A0;&amp;#x4E0A;&amp;#x5F02;&amp;#x6B65;&amp;#x90E8;&amp;#x5206;&amp;#x4E5F;&amp;#x6709;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;,&amp;#x5BFC;&amp;#x81F4;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x6CA1;&amp;#x90A3;&amp;#x4E48;&amp;#x6E05;&amp;#x6670;,&amp;#x4E5F;&amp;#x4E0D;&amp;#x7B26;&amp;#x5408;DRY&amp;#x539F;&amp;#x5219;.&amp;#x6709;&amp;#x4E00;&amp;#x6B21;&amp;#x5199;&amp;#x4E86;3&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x68C0;&amp;#x67E5;&amp;#x52A0;&amp;#x4E09;&amp;#x4E2A;&amp;#x8FD4;&amp;#x56DE;,&amp;#x770B;&amp;#x7740;&amp;#x5B9E;&amp;#x5728;&amp;#x96BE;&amp;#x53D7;,&amp;#x4E8E;&amp;#x662F;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4E86;&amp;#x4E00;&amp;#x4E0B;&amp;#x628A;&amp;#x6574;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x90FD;&amp;#x7528;&amp;#x4E00;&amp;#x53E5;Promise&amp;#x4E32;&amp;#x8D77;&amp;#x6765;,&amp;#x7528;&amp;#x6700;&amp;#x540E;&amp;#x7684;catch&amp;#x6355;&amp;#x83B7;&amp;#x4ECE;&amp;#x5934;&amp;#x5230;&amp;#x5C3E;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x540C;&amp;#x6B65;,&amp;#x5F02;&amp;#x6B65;&amp;#x548C;&amp;#x5185;&amp;#x90E8;&amp;#x5D4C;&amp;#x5957;&amp;#x5F02;&amp;#x5E38;,&amp;#x53D1;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;,&amp;#x4E8E;&amp;#x662F;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x5C31;&amp;#x53D8;&amp;#x6210;&amp;#x4E00;&amp;#x53E5;Promise.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x60CA;&amp;#x559C;-&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;-&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot;&gt;&lt;a href=&quot;#&amp;#x60CA;&amp;#x559C;-&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;-&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x60CA;&amp;#x559C;: &amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;,&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot;&gt;&lt;/a&gt;&amp;#x60CA;&amp;#x559C;: &amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;,&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&lt;/h2&gt;&lt;p&gt;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x601D;&amp;#x8DEF;,&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x6539;&amp;#x6210;&amp;#x8FD9;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uid = req.query.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(testUid(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(validUser(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.props({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: queryUser(uid),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: queryMessage(uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = data.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; message = data.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;success&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user: formatUser(user),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: formatMsg(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sendError(err, res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testUid&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;uid&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!valid(uid)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; err = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x65E0;&amp;#x6548;&amp;#x53C2;&amp;#x6570;&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err.code = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;&amp;#x51FD;&amp;#x6570;&lt;code&gt;sendError&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x72EC;&amp;#x7ACB;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x4F9B;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x4F7F;&amp;#x7528;,&amp;#x6BCF;&amp;#x5904;&amp;#x5F02;&amp;#x5E38;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5B9A;&amp;#x4E49;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7F16;&amp;#x7801;&amp;#x548C;&amp;#x6587;&amp;#x5B57;,&amp;#x7136;&amp;#x540E;&amp;#x629B;&amp;#x51FA;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendError&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;res, err&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: err.code ? err.code : &lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: err.message ? err.message : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F02;&amp;#x5E38;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;&amp;#x91CD;&amp;#x590D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x5462;?&amp;#x5C31;&amp;#x6CA1;&amp;#x6709;&amp;#x7136;&amp;#x540E;&amp;#x4E86;,&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x5168;&amp;#x90FD;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5957;&amp;#x8DEF;&amp;#x91CD;&amp;#x5199;,&amp;#x81EA;&amp;#x6211;&amp;#x611F;&amp;#x89C9;&amp;#x903C;&amp;#x683C;&amp;#x9AD8;&amp;#x4E86;&amp;#x4E9B;.&amp;#x6709;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;&amp;#x5F0F;&amp;#x8FDE;&amp;#x7EED;transform&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x611F;&amp;#x89C9;,&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;,&amp;#x4EE5;&amp;#x8FD4;&amp;#x56DE;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x675F;,&amp;#x4E00;&amp;#x53E5;&amp;#x5B8C;&amp;#x6210;,&amp;#x4E2D;&amp;#x95F4;&amp;#x5F02;&amp;#x6B65;&amp;#x5E76;&amp;#x884C;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;return Promise.props()&lt;/code&gt;&amp;#x6216;return&amp;#x5355;&amp;#x4E00;Promise&amp;#x5F80;&amp;#x540E;&amp;#x4F20;,&amp;#x90FD;&amp;#x5168;&amp;#x4E86;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;then&lt;/code&gt;&amp;#x91CC;&amp;#x6574;&amp;#x7406;,&amp;#x683C;&amp;#x5F0F;&amp;#x5316;&amp;#x6570;&amp;#x636E;&amp;#x8FD4;&amp;#x56DE;.&amp;#x540E;&amp;#x9762;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;.catch&lt;/code&gt;&amp;#x6355;&amp;#x83B7;&amp;#x6240;&amp;#x6709;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird-Api-&amp;#x53C2;&amp;#x8003;&quot;&gt;&lt;a href=&quot;#&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird-Api-&amp;#x53C2;&amp;#x8003;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird Api,&amp;#x53C2;&amp;#x8003;&quot;&gt;&lt;/a&gt;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird Api,&lt;a href=&quot;http://bluebirdjs.com/docs/api-reference.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6D41;&amp;#x63A7;&amp;#x5236;api&lt;br&gt;&lt;code&gt;then&lt;/code&gt;(&amp;#x5355;&amp;#x4E00;&amp;#x5F02;&amp;#x6B65;&amp;#x6216;&amp;#x540C;&amp;#x6B65;),&lt;code&gt;Promise.props&lt;/code&gt;(&amp;#x6709;&amp;#x9650;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5E76;&amp;#x884C;),&lt;code&gt;Promise.all&lt;/code&gt;,&lt;code&gt;Prommise.map&lt;/code&gt;(&amp;#x4E0D;&amp;#x5B9A;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5E76;&amp;#x884C;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6570;&amp;#x636E;&amp;#x5E93;api&lt;br&gt;&lt;code&gt;Promise.using&lt;/code&gt;(&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;,&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#x8FDE;&amp;#x63A5;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5176;&amp;#x4ED6;&lt;br&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;(&amp;#x4FBF;&amp;#x4E8E;&amp;#x4F20;&amp;#x9012;&amp;#x503C;),&lt;code&gt;catch&lt;/code&gt;(&amp;#x6355;&amp;#x83B7;&amp;#x5F02;&amp;#x5E38;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;&amp;#x5E0C;&amp;#x671B;&quot;&gt;&lt;a href=&quot;#&amp;#x5E0C;&amp;#x671B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E0C;&amp;#x671B;&quot;&gt;&lt;/a&gt;&amp;#x5E0C;&amp;#x671B;&lt;/h2&gt;&lt;p&gt;&amp;#x6709;&amp;#x5F88;&amp;#x591A;bluebird&amp;#x7684;api,&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x5E72;&amp;#x5565;&amp;#x7684;,&amp;#x5927;&amp;#x81F4;&amp;#x770B;&amp;#x4E86;&amp;#x4E0B;,&amp;#x4E5F;&amp;#x6CA1;&amp;#x770B;&amp;#x61C2;,&amp;#x5982;&amp;#x679C;&amp;#x60A8;&amp;#x6709;&amp;#x5206;&amp;#x4EAB;,&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;,&amp;#x4E07;&amp;#x5206;&amp;#x611F;&amp;#x8C22;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;a href=&quot;#&amp;#x80CC;&amp;#x666F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;/a&gt;&amp;#x80CC;&amp;#x666F;&lt;/h2&gt;&lt;p&gt;&amp;#x7528;&lt;a hre
    
    </summary>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="Promise" scheme="http://yoursite.com/tags/Promise/"/>
    
      <category term="bluebird" scheme="http://yoursite.com/tags/bluebird/"/>
    
  </entry>
  
  <entry>
    <title>Clojure的sequence抽象</title>
    <link href="http://yoursite.com/2016/03/11/clojure-abstraction-seq-collection/"/>
    <id>http://yoursite.com/2016/03/11/clojure-abstraction-seq-collection/</id>
    <published>2016-03-11T10:02:04.000Z</published>
    <updated>2016-03-11T10:20:23.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x6765;&amp;#x6E90;:&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Programming_to_Abstractions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure for the brave and true&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming-to-Abstractions&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming-to-Abstractions&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming to Abstractions?&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming to Abstractions?&lt;/h2&gt;&lt;p&gt;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x8BBE;&amp;#x8BA1;&amp;#x51FD;&amp;#x6570;&amp;#x5E93;&amp;#x7684;&amp;#x539F;&amp;#x5219;,Clojure&amp;#x91C7;&amp;#x7528;&amp;#x4E86;&amp;#x8FD9;&amp;#x79CD;&amp;#x539F;&amp;#x5219;.&lt;br&gt;&amp;#x5373;&amp;#x628A;&amp;#x5177;&amp;#x6709;&amp;#x76F8;&amp;#x4F3C;&amp;#x7279;&amp;#x5F81;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x62BD;&amp;#x8C61;&amp;#x6210;&amp;#x67D0;&amp;#x4E2A;&amp;#x6982;&amp;#x5FF5;,&amp;#x6BD4;&amp;#x5982;&lt;code&gt;sequence&lt;/code&gt;.&amp;#x4E4B;&amp;#x540E;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7C7B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x64CD;&amp;#x4F5C;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;a href=&quot;#&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;/a&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&lt;/h2&gt;&lt;p&gt;Javascript&amp;#x7684;&lt;code&gt;Lodash&lt;/code&gt;&amp;#x5E93;&amp;#x7684;&lt;a href=&quot;https://lodash.com/docs#map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;map&lt;/a&gt;&amp;#x548C;&lt;a href=&quot;https://lodash.com/docs#reduce&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reduce&lt;/a&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x540C;&amp;#x65F6;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x7EC4;&amp;#x548C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot;&gt;&lt;a href=&quot;#&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot;&gt;&lt;/a&gt;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&lt;/h2&gt;&lt;p&gt;&amp;#x8BA9;&amp;#x4F60;&amp;#x5199;&amp;#x7A0B;&amp;#x5E8F;&amp;#x65F6;&amp;#x5019;,&amp;#x4E13;&amp;#x6CE8;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x80FD;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;,&amp;#x540C;&amp;#x65F6;&amp;#x5C3D;&amp;#x53EF;&amp;#x80FD;&amp;#x5730;&amp;#x5FFD;&amp;#x7565;&amp;#x5B83;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;.&lt;/p&gt;
&lt;h2 id=&quot;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot;&gt;&lt;a href=&quot;#map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot; class=&quot;headerlink&quot; title=&quot;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot;&gt;&lt;/a&gt;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defn titleize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [topic]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (str topic &amp;quot; for the Brave and True&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize [&amp;quot;Hamsters&amp;quot; &amp;quot;Ragnarok&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Hamsters for the Brave and True&amp;quot; &amp;quot;Ragnarok for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize &amp;apos;(&amp;quot;Empathy&amp;quot; &amp;quot;Decorating&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Empathy for the Brave and True&amp;quot; &amp;quot;Decorating for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize #{&amp;quot;Elbows&amp;quot; &amp;quot;Soap Carving&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Elbows for the Brave and True&amp;quot; &amp;quot;Soap Carving for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var list = [&amp;quot;Transylvania&amp;quot;, &amp;quot;Forks, WA&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map(list, function (val) { return val + &amp;quot; mapped!&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// =&amp;gt; [&amp;quot;Transylvania mapped!&amp;quot;, &amp;quot;Forks, WA mapped!&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;,Clojure&amp;#x7684;&lt;code&gt;map&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x53D7;&amp;#x591A;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;,&amp;#x5305;&amp;#x62EC;List,Vector,Set,Map.&lt;code&gt;map&lt;/code&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x57FA;&amp;#x4E8E;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;,&amp;#x800C;&amp;#x662F;&amp;#x57FA;&amp;#x4E8E;&lt;code&gt;sequence&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;.&lt;/p&gt;
&lt;h2 id=&quot;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sequence&lt;/code&gt;&amp;#x662F;Clojure&amp;#x5BF9;&amp;#x67D0;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x62BD;&amp;#x8C61;,&amp;#x5373;&amp;#x5E8F;&amp;#x5217;&amp;#x7ED3;&amp;#x6784;.&lt;code&gt;sequence&lt;/code&gt;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;first&lt;/code&gt;: &amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x5E8F;&amp;#x5217;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/first&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;: &amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x9664;&amp;#x4E86;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x6784;&amp;#x6210;&amp;#x7684;&amp;#x5E8F;&amp;#x5217; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/rest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cons&lt;/code&gt;: &amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;)&amp;#x548C;&amp;#x7B2C;2&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x65B0;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x5E8F;&amp;#x5217; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/cons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x8981;&amp;#x67D0;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x652F;&amp;#x6301;&amp;#x4E0A;&amp;#x9762;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;,&amp;#x5C31;&amp;#x80FD;&amp;#x628A;&amp;#x5B83;&amp;#x89C6;&amp;#x4E3A;&lt;code&gt;sequence&lt;/code&gt;,&amp;#x56E0;&amp;#x6B64;&amp;#x5C31;&amp;#x80FD;&amp;#x5BF9;&amp;#x5B83;&amp;#x8FDB;&amp;#x884C;map(&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x57FA;&amp;#x4E8E;&lt;code&gt;sequence&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x51FD;&amp;#x6570;,&amp;#x5305;&amp;#x62EC;&lt;code&gt;filter&lt;/code&gt;,&lt;code&gt;reduce&lt;/code&gt;,&lt;code&gt;group-by&lt;/code&gt;&amp;#x7B49;)&amp;#x64CD;&amp;#x4F5C;.&lt;/p&gt;
&lt;h2 id=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;/a&gt;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&lt;/h2&gt;&lt;p&gt;&amp;#x5F53;&amp;#x67D0;&amp;#x4E2A;&lt;code&gt;sequence&lt;/code&gt;&amp;#x51FD;&amp;#x6570;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;map&lt;/code&gt;)&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;,&amp;#x4F1A;&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;seq&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x7C7B;&amp;#x4F3C;List&amp;#x7684;,&amp;#x652F;&amp;#x6301;&amp;#x4E0A;&amp;#x8FF0;&lt;code&gt;sequence&lt;/code&gt;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;.&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x7528;&amp;#x5B83;&amp;#x8FDB;&amp;#x884C;&amp;#x76F8;&amp;#x5173;&amp;#x8BA1;&amp;#x7B97;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(seq &amp;apos;(1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq [1 2 3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq #{1 2 3})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq {:name &amp;quot;Bill Compton&amp;quot; :occupation &amp;quot;Dead mopey guy&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; ([:name &amp;quot;Bill Compton&amp;quot;] [:occupation &amp;quot;Dead mopey guy&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot;&gt;&lt;/a&gt;&lt;code&gt;sequence&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Seq_Function_Examples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6765;&amp;#x6E90;:&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Programming_to_Abstractions&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
  </entry>
  
  <entry>
    <title>今天听了陈天老师的函数式编程的分享</title>
    <link href="http://yoursite.com/2016/02/27/compose-monad/"/>
    <id>http://yoursite.com/2016/02/27/compose-monad/</id>
    <published>2016-02-27T14:10:32.000Z</published>
    <updated>2016-03-04T14:15:23.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&lt;/h3&gt;&lt;p&gt;FP&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x662F;&amp;#x7EC4;&amp;#x5408;,&amp;#x4E00;&amp;#x4E9B;&amp;#x6BD4;&amp;#x8F83;&amp;#x96BE;&amp;#x61C2;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;(&amp;#x6BD4;&amp;#x5982;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(functional_programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;monad&lt;/a&gt;), &lt;a href=&quot;https://en.wikipedia.org/wiki/Functor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;functor&lt;/a&gt;),&amp;#x90FD;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x5F3A;&amp;#x5316;FP&amp;#x7684;&amp;#x7EC4;&amp;#x5408;&amp;#x529F;&amp;#x80FD;.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&lt;/h3&gt;&lt;p&gt;FP&amp;#x975E;&amp;#x5E38;&amp;#x6709;&amp;#x5229;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;OpenClose&amp;#x539F;&amp;#x5219;,&amp;#x65E2;Open to extension, close to modification.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&lt;/h3&gt;&lt;p&gt;Javascript&amp;#x7684;&lt;code&gt;Promise&lt;/code&gt;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&lt;code&gt;monad&lt;/code&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B
    
    </summary>
    
    
      <category term="Functional Programming" scheme="http://yoursite.com/tags/Functional-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Rails Many to Many Associations</title>
    <link href="http://yoursite.com/2013/10/20/rails-many-to-many-associations/"/>
    <id>http://yoursite.com/2013/10/20/rails-many-to-many-associations/</id>
    <published>2013-10-19T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:59.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;has_many through&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires a join model&lt;/li&gt;
&lt;li&gt;name your join table anything&lt;ul&gt;
&lt;li&gt;ex: memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;more flexible, can add additional attributes(solumns) to join table&lt;br&gt;Cons:&lt;/li&gt;
&lt;li&gt;additional join model required&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;has_and_belongs_to_many&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no join model necesary&lt;/li&gt;
&lt;li&gt;assumes join table based on convention&lt;ul&gt;
&lt;li&gt;ex: groups_users&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easier, no join model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;not as flexible, can&amp;#x2019;t add additional attributes(solumns) to join table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;has_many through&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires a join model&lt;/li&gt;
&lt;li&gt;name your join table anything&lt;ul&gt;
&lt;li&gt;ex: memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deployment Options</title>
    <link href="http://yoursite.com/2013/09/27/deployment-options/"/>
    <id>http://yoursite.com/2013/09/27/deployment-options/</id>
    <published>2013-09-26T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:48.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;Managed&lt;ul&gt;
&lt;li&gt;Google App Engine&lt;/li&gt;
&lt;li&gt;Heroku&lt;ul&gt;
&lt;li&gt;cons: no server access, constrained enviroment&lt;/li&gt;
&lt;li&gt;pros: don&amp;#x2019;t need devops skills&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Self Service&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPS&lt;ul&gt;
&lt;li&gt;pros: your own virtualized environment/server&lt;/li&gt;
&lt;li&gt;cons: need devop/sysadmin skills&lt;/li&gt;
&lt;li&gt;AWS, Rackspace, Digital Ocean, Linode&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical Machines&lt;ul&gt;
&lt;li&gt;colocation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Shared host&lt;ul&gt;
&lt;li&gt;your app in a dir, other apps in other dir&lt;/li&gt;
&lt;li&gt;roomates&lt;/li&gt;
&lt;li&gt;pro: very cheap&lt;/li&gt;
&lt;li&gt;cons: too many to list&lt;/li&gt;
&lt;li&gt;Vendors&lt;ul&gt;
&lt;li&gt;Dreamhost&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Managed&lt;ul&gt;
&lt;li&gt;Google App Engine&lt;/li&gt;
&lt;li&gt;Heroku&lt;ul&gt;
&lt;li&gt;cons: no server access, constrained enviroment&lt;/li&gt;
&lt;li&gt;pros: don&amp;#x2019;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tools of Modern Web Development</title>
    <link href="http://yoursite.com/2013/09/17/tools-of-modern-web-development/"/>
    <id>http://yoursite.com/2013/09/17/tools-of-modern-web-development/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot;&gt;&lt;a href=&quot;#juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot; class=&quot;headerlink&quot; title=&quot;juggle many layers of technologies, all with different syntax &amp;amp; behaviors, and understand how they integrate with each other&quot;&gt;&lt;/a&gt;juggle many layers of technologies, all with different syntax &amp;amp; behaviors, and understand how they integrate with each other&lt;/h2&gt;&lt;h2 id=&quot;Other-things-web-developers-must-be-aware-of&quot;&gt;&lt;a href=&quot;#Other-things-web-developers-must-be-aware-of&quot; class=&quot;headerlink&quot; title=&quot;Other things web developers must be aware of:&quot;&gt;&lt;/a&gt;Other things web developers must be aware of:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;best practices&lt;/li&gt;
&lt;li&gt;security concerns&lt;/li&gt;
&lt;li&gt;browser compatibility&lt;/li&gt;
&lt;li&gt;mobile operating systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;FrontEnd&quot;&gt;&lt;a href=&quot;#FrontEnd&quot; class=&quot;headerlink&quot; title=&quot;FrontEnd&quot;&gt;&lt;/a&gt;FrontEnd&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Javascript&lt;ul&gt;
&lt;li&gt;frameworks&lt;ul&gt;
&lt;li&gt;jquery&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MVC&lt;ul&gt;
&lt;li&gt;backbone.js&lt;/li&gt;
&lt;li&gt;Ember.js&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ajax&lt;/li&gt;
&lt;li&gt;coffeesript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTML&lt;ul&gt;
&lt;li&gt;erb&lt;/li&gt;
&lt;li&gt;haml&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS&lt;ul&gt;
&lt;li&gt;sass&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mobile&lt;ul&gt;
&lt;li&gt;responsive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MiddleWare&quot;&gt;&lt;a href=&quot;#MiddleWare&quot; class=&quot;headerlink&quot; title=&quot;MiddleWare&quot;&gt;&lt;/a&gt;MiddleWare&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;APIs&lt;/li&gt;
&lt;li&gt;URLs&lt;/li&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;request/response processing&lt;/li&gt;
&lt;li&gt;security&lt;ul&gt;
&lt;li&gt;xss, crsf, code injection, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;BackEnd&quot;&gt;&lt;a href=&quot;#BackEnd&quot; class=&quot;headerlink&quot; title=&quot;BackEnd&quot;&gt;&lt;/a&gt;BackEnd&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;database&lt;ul&gt;
&lt;li&gt;relational&lt;ul&gt;
&lt;li&gt;MySql&lt;/li&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NoSql&lt;ul&gt;
&lt;li&gt;document&lt;ul&gt;
&lt;li&gt;MangoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;web services&lt;/li&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;SOAP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;deployment&lt;/li&gt;
&lt;li&gt;background processing&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;bundler&lt;/li&gt;
&lt;li&gt;rvm&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot;&gt;&lt;a hre
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP and MVC</title>
    <link href="http://yoursite.com/2013/09/17/http-and-mvc/"/>
    <id>http://yoursite.com/2013/09/17/http-and-mvc/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:01.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP:&quot;&gt;&lt;/a&gt;HTTP:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;verb/method (GET or POST)&lt;/li&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Response&lt;ul&gt;
&lt;li&gt;status code (200, 301, 404, 500)&lt;/li&gt;
&lt;li&gt;payload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stateless: we have to rebuild the world at every request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MVC&quot;&gt;&lt;a href=&quot;#MVC&quot; class=&quot;headerlink&quot; title=&quot;MVC:&quot;&gt;&lt;/a&gt;MVC:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Model, View, Controller&lt;/li&gt;
&lt;li&gt;Controller&lt;ul&gt;
&lt;li&gt;routes to appropriate action based on request&lt;/li&gt;
&lt;li&gt;action my talk to model, and then either redirect (301) or render view (200) as the response&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Important-Sinatra-concepts&quot;&gt;&lt;a href=&quot;#Important-Sinatra-concepts&quot; class=&quot;headerlink&quot; title=&quot;Important Sinatra concepts:&quot;&gt;&lt;/a&gt;Important Sinatra concepts:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Rendering template allows access by template to ivars set up in action&lt;/li&gt;
&lt;li&gt;Template have access seeeion hash&lt;/li&gt;
&lt;li&gt;session&lt;/li&gt;
&lt;li&gt;params&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP:&quot;&gt;&lt;/a&gt;HTTP:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;verb/method (GET or POST)&lt;/li&gt;
&lt;li&gt;url
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Porcess of Building Web App using Rails</title>
    <link href="http://yoursite.com/2013/09/17/porcess-of-building-web-app-using-rails/"/>
    <id>http://yoursite.com/2013/09/17/porcess-of-building-web-app-using-rails/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:13.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;build mock up&lt;/li&gt;
&lt;li&gt;build domain model&lt;/li&gt;
&lt;li&gt;build relation DB that support all business logic&lt;/li&gt;
&lt;li&gt;build url points, control actions, template&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;build mock up&lt;/li&gt;
&lt;li&gt;build domain model&lt;/li&gt;
&lt;li&gt;build relation DB that support all business logic&lt;/li&gt;
&lt;li&gt;build url points, con
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>process of design app&#39;s class and module</title>
    <link href="http://yoursite.com/2013/09/12/process-of-design-apps-class-and-module/"/>
    <id>http://yoursite.com/2013/09/12/process-of-design-apps-class-and-module/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:09.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;Write out the detailed specs&lt;/li&gt;
&lt;li&gt;Extract out major nouns; these are your classes.&lt;/li&gt;
&lt;li&gt;Extract out major verbs; these are your behaviors/methods.&lt;/li&gt;
&lt;li&gt;Create objects out of those classes; these are your actors in your program.&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;Write out the detailed specs&lt;/li&gt;
&lt;li&gt;Extract out major nouns; these are your classes.&lt;/li&gt;
&lt;li&gt;Extract out major verbs; these are 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby&#39;s inheritance</title>
    <link href="http://yoursite.com/2013/09/12/rubys-inheritance/"/>
    <id>http://yoursite.com/2013/09/12/rubys-inheritance/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:43.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;quot;
  end
end

class Dog &amp;lt; Animal
  def speak
    &amp;quot;#{ name } is barking!&amp;quot;
  end
end

class Cat &amp;lt; Animal
end

fido = Dog.new(&amp;apos;fido&amp;apos;)
puts fido.name
puts fido.speak

kitty = Cat.new(&amp;apos;kitty&amp;apos;)
puts kitty.name
puts kitty.speak

puts Dog.ancestors
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;produce&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fido
fido is barking!
kitty
kitty is speaking!
Dog
Animal
Object
Kernel
BasicObject
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;q
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby&#39;s composition</title>
    <link href="http://yoursite.com/2013/09/12/rubys-composition/"/>
    <id>http://yoursite.com/2013/09/12/rubys-composition/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:27.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;module Swimmable
  def swim
    &amp;quot;#{ name } is swimming!&amp;quot;
  end
end

module Fetchable
  def fetch
    &amp;quot;#{ name } is fetching!&amp;quot;
  end
end    

class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;quot;
  end
end

class Mammal &amp;lt; Animal
  def warm_blooded?
    true
  end
end

class Dog &amp;lt; Mammal
  include Swimmable
  include Fetchable

  def speak
    &amp;quot;#{ name } is barking!&amp;quot;
  end
end

fido = Dog.new(&amp;apos;fido&amp;apos;)
puts fido.swim
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;produce&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fido is swimming!
Dog
Fetchable
Swimmable
Mammal
Animal
Object
Kernel
BasicObject
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;module Swimmable
  def swim
    &amp;quot;#{ name } is swimming!&amp;quot;
  end
end

module Fetchable
  def fetch
    &amp;quot;#{ name } is
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby method scope</title>
    <link href="http://yoursite.com/2013/09/11/ruby-method-scope/"/>
    <id>http://yoursite.com/2013/09/11/ruby-method-scope/</id>
    <published>2013-09-10T16:00:00.000Z</published>
    <updated>2016-02-27T09:46:44.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Ruby-method-scope-convention&quot;&gt;&lt;a href=&quot;#Ruby-method-scope-convention&quot; class=&quot;headerlink&quot; title=&quot;Ruby method scope convention&quot;&gt;&lt;/a&gt;Ruby method scope convention&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ruby method not have a strict pass by value or pass by reference.&lt;/li&gt;
&lt;li&gt;if you passing an argument, and the argument calls a method that mutates the caller which may or may not have a &lt;code&gt;!&lt;/code&gt;, then it&amp;#x2019;s going to change that object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very common source bug.&lt;/p&gt;
&lt;h2 id=&quot;example&quot;&gt;&lt;a href=&quot;#example&quot; class=&quot;headerlink&quot; title=&quot;example&quot;&gt;&lt;/a&gt;example&lt;/h2&gt;&lt;h3 id=&quot;pass-by-value-not-mutate-argument-in-method&quot;&gt;&lt;a href=&quot;#pass-by-value-not-mutate-argument-in-method&quot; class=&quot;headerlink&quot; title=&quot;pass by value(not mutate argument in method):&quot;&gt;&lt;/a&gt;pass by value(not mutate argument in method):&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;a = [1, 2, 1]
def my_method(a)
  a.uniq
end
puts a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pass-by-reference-mutate-argument-in-method&quot;&gt;&lt;a href=&quot;#pass-by-reference-mutate-argument-in-method&quot; class=&quot;headerlink&quot; title=&quot;pass by reference(mutate argument in method):&quot;&gt;&lt;/a&gt;pass by reference(mutate argument in method):&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;a = [1, 2, 1]
def my_method(a)
  a.uniq!
end
puts a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1
2
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ruby-method-scope-convention&quot;&gt;&lt;a href=&quot;#Ruby-method-scope-convention&quot; class=&quot;headerlink&quot; title=&quot;Ruby method scope convention&quot;&gt;&lt;/a&gt;Ru
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby class template</title>
    <link href="http://yoursite.com/2013/09/11/ruby-class-template/"/>
    <id>http://yoursite.com/2013/09/11/ruby-class-template/</id>
    <published>2013-09-10T16:00:00.000Z</published>
    <updated>2016-02-27T09:46:30.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;class Dog
  attr_accessor :name, :height, :weight

  @@count = 0

  def initialize(name, height, weight)
    @name = name
    @height = height
    @weight = weight
    @@count += 1
  end

  def bark
    &amp;quot;#{ name } bark!&amp;quot;
  end

  def info
    &amp;quot;#{ name } weights #{ weight } lbs and is #{ height } feet tall&amp;quot;
  end

  def update_info(n, h, w)
    self.name = n
    self.height = h
    self.weight = w
  end

end

teddy = Dog.new(&amp;apos;teddy&amp;apos;, 3, 100)
fido = Dog.new(&amp;apos;fido&amp;apos;, 1.5, 150)

puts teddy.info
teddy.update_info(&amp;apos;ted&amp;apos;, 2, 90)
puts teddy.info
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;class Dog
  attr_accessor :name, :height, :weight

  @@count = 0

  def initialize(name, height, weight)
    @name = name
    @he
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>use vpn for git</title>
    <link href="http://yoursite.com/2013/09/10/use-vpn-for-git/"/>
    <id>http://yoursite.com/2013/09/10/use-vpn-for-git/</id>
    <published>2013-09-09T16:00:00.000Z</published>
    <updated>2016-03-10T13:37:38.000Z</updated>
    
    <content type="html">&lt;p&gt;In China, if you git command can&amp;#x2019;t connect to github, get this tip:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh: connect to host github.com port 22: Operation timed out
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;maybe(and very possible) beacuse of &lt;a href=&quot;http://en.wikipedia.org/wiki/Great_Firewall_of_China&quot; target=&quot;_blank&quot;&gt;GFW&lt;/a&gt;, use VPN can solve this problem.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;In China, if you git command can&amp;#x2019;t connect to github, get this tip:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh: connect to host github.com port 22: Operat
    
    </summary>
    
    
  </entry>
  
</feed>
