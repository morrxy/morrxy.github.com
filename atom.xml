<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡军的网络日志</title>
  <subtitle>pursue next update</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-04T13:55:33.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>胡军</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【译】Brave Clojure 第十一章:用core.async掌握并发过程</title>
    <link href="http://yoursite.com/2016/08/02/brave-clojure-core-async/"/>
    <id>http://yoursite.com/2016/08/02/brave-clojure-core-async/</id>
    <published>2016-08-02T14:11:30.000Z</published>
    <updated>2016-08-04T13:55:33.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x5341;&amp;#x4E00;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/core-async/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mastering Concurrent Processes with core.async&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morrxy.github.io/tags/Clojure-For-The-Branve-And-True/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5176;&amp;#x4ED6;&amp;#x7AE0;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;One day, while you are walking down the street, you will be surprised, intrigued, and a little disgusted to discover a hot dog vending machine. Your scalp tingling with guilty curiosity, you won&amp;#x2019;t be able to help yourself from pulling out three dollars and seeing if this contraption actually works. After accepting your money with a click and a whir, it pops out a fresh hot dog, bun and all.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6709;&amp;#x4E00;&amp;#x5929;&amp;#x4F60;&amp;#x5728;&amp;#x8857;&amp;#x4E0A;&amp;#x770B;&amp;#x89C1;&amp;#x4E00;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/brave-clojure-core-async/hotdog-vending-machine.png&quot; alt=&quot;hotdog-vending-machine&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The vending machine exhibits simple behavior: when it receives money, it releases a hot dog and then gets ready for the next purchase. When it&amp;#x2019;s out of hot dogs, it stops. All around us are hot dog vending machines in different guises&amp;#x2014;independent entities concurrently responding to events in the world. The espresso machine at your favorite coffee shop, the pet hamster you loved as a child&amp;#x2014;everything can be deconstructed into a set of behaviors that follow the general form &amp;#x201C;when x happens, do y.&amp;#x201D; Even the programs we write are just glorified hot dog vending machines, each one an independent process waiting for the next event, whether it&amp;#x2019;s a keystroke, a timeout, or the arrival of data on a socket.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;:&amp;#x6536;&amp;#x94B1;&amp;#xFF0C;&amp;#x653E;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x4E0B;&amp;#x6B21;&amp;#x8D2D;&amp;#x4E70;&amp;#x3002;&amp;#x70ED;&amp;#x72D7;&amp;#x5356;&amp;#x5B8C;&amp;#x4E86;&amp;#xFF0C;&amp;#x5C31;&amp;#x505C;&amp;#x6B62;&amp;#x5DE5;&amp;#x4F5C;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x5468;&amp;#x56F4;&amp;#x5230;&amp;#x5904;&amp;#x90FD;&amp;#x662F;&amp;#x4F2A;&amp;#x88C5;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x8D29;&amp;#x5356;&amp;#x673A;-&amp;#x5BF9;&amp;#x4E8B;&amp;#x4EF6;&amp;#x5E76;&amp;#x53D1;&amp;#x54CD;&amp;#x5E94;&amp;#x7684;&amp;#x5B9E;&amp;#x4F53;&amp;#x3002;&amp;#x5496;&amp;#x5561;&amp;#x5E97;&amp;#x7684;&amp;#x5496;&amp;#x5561;&amp;#x673A;&amp;#xFF0C;&amp;#x5BA0;&amp;#x7269;&amp;#x4ED3;&amp;#x9F20;-&amp;#x8FD9;&amp;#x4E00;&amp;#x5207;&amp;#x90FD;&amp;#x80FD;&amp;#x5206;&amp;#x89E3;&amp;#x4E3A;&amp;#x4E00;&amp;#x7EC4;&amp;#x9075;&amp;#x5FAA;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x7528;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x5C31;&amp;#x662F;&amp;#x201C;&amp;#x5F53;x&amp;#x53D1;&amp;#x751F;&amp;#x65F6;&amp;#xFF0C;&amp;#x505A;y&amp;#x201D;&amp;#x3002;&amp;#x5373;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x5199;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53EA;&amp;#x662F;&amp;#x70ED;&amp;#x72D7;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#xFF0C;&amp;#x4F46;&amp;#x6BCF;&amp;#x4E2A;&amp;#x90FD;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6B63;&amp;#x5728;&amp;#x7B49;&amp;#x5F85;&amp;#x4E0B;&amp;#x6B21;&amp;#x4E8B;&amp;#x4EF6;&amp;#x7684;&amp;#x72EC;&amp;#x7ACB;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x65E0;&amp;#x8BBA;&amp;#x4E8B;&amp;#x4EF6;&amp;#x662F;&amp;#x6309;&amp;#x952E;&amp;#xFF0C;&amp;#x8D85;&amp;#x65F6;&amp;#xFF0C;&amp;#x6216;socket&amp;#x4E0A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5230;&amp;#x8FBE;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure&amp;#x2019;s core.async library allows you to create multiple independent processes within a single program. This chapter describes a useful model for thinking about this style of programming as well as the practical details you need to know to actually write code. You&amp;#x2019;ll learn how to use channels to communicate between independent processes created by go blocks and &lt;code&gt;thread&lt;/code&gt;; a bit about how Clojure manages threads efficiently with parking and blocking; how to use &lt;code&gt;alts!!&lt;/code&gt;; and a more straight&amp;#xAD;forward way of creating queues. Finally, you&amp;#x2019;ll learn how to kick callbacks in the butt with process pipelines.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x7684;core.async&amp;#x5E93;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x5728;&amp;#x5355;&amp;#x4E00;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x591A;&amp;#x4E2A;&amp;#x4E0D;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x8FD9;&amp;#x7AE0;&amp;#x63CF;&amp;#x8FF0;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x4E8E;&amp;#x601D;&amp;#x8003;&amp;#x8FD9;&amp;#x79CD;&amp;#x98CE;&amp;#x683C;&amp;#x7684;&amp;#x7F16;&amp;#x7A0B;&amp;#x6709;&amp;#x7528;&amp;#x7684;&amp;#x6A21;&amp;#x578B;&amp;#xFF0C;&amp;#x4E5F;&amp;#x63CF;&amp;#x8FF0;&amp;#x4E86;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#x3002;&amp;#x4F60;&amp;#x5C06;&amp;#x5B66;&amp;#x4E60;&amp;#xFF1A;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&amp;#x901A;&amp;#x9053;(channel)&amp;#x5728;go&amp;#x4EE3;&amp;#x7801;&amp;#x5757;(go blocks)&amp;#x6216;&lt;code&gt;thread&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x72EC;&amp;#x7ACB;&amp;#x8FC7;&amp;#x7A0B;&amp;#x95F4;&amp;#x901A;&amp;#x4FE1;&amp;#xFF1B;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x7528;&amp;#x505C;&amp;#x6CCA;(parking)&amp;#x548C;&amp;#x963B;&amp;#x585E;(blocking)&amp;#x6709;&amp;#x6548;&amp;#x7BA1;&amp;#x7406;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1B;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;alts!!&lt;/code&gt;&amp;#xFF1B;&amp;#x7528;&amp;#x66F4;&amp;#x76F4;&amp;#x63A5;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&amp;#xFF1B;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x5E72;&amp;#x6389;&amp;#x56DE;&amp;#x8C03;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Getting Started with Processes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x4ECE;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5F00;&amp;#x59CB;&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5F00;&amp;#x59CB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5F00;&amp;#x59CB;&quot;&gt;&lt;/a&gt;&amp;#x4ECE;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5F00;&amp;#x59CB;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;At the heart of core.async is the process, a concurrently running unit of logic that responds to events. The process corresponds to our mental model of the real world: entities interact with and respond to each other independently without some kind of central control mechanism pulling the strings. You put your money in the machine, and out comes a hot dog, all without the Illuminati or Big Brother orchestrating the whole thing. This differs from the view of concurrency you&amp;#x2019;ve been exploring so far, where you&amp;#x2019;ve defined tasks that are either mere extensions of the main thread of control (for example, achieving data parallelism with &lt;code&gt;pmap&lt;/code&gt;) or tasks that you have no interest in communicating with (like one-off tasks created with &lt;code&gt;future&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;core.async&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x662F;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x53D1;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8B;&amp;#x4EF6;&amp;#x505A;&amp;#x51FA;&amp;#x54CD;&amp;#x5E94;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5355;&amp;#x5143;&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7B26;&amp;#x5408;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;&amp;#x771F;&amp;#x5B9E;&amp;#x4E16;&amp;#x754C;&amp;#x7684;&amp;#x601D;&amp;#x8003;&amp;#x6A21;&amp;#x578B;: &amp;#x5B9E;&amp;#x4F53;&amp;#x72EC;&amp;#x7ACB;&amp;#x5730;&amp;#x76F8;&amp;#x4E92;&amp;#x4EA4;&amp;#x4E92;&amp;#x4E0E;&amp;#x54CD;&amp;#x5E94;&amp;#xFF0C;&amp;#x6CA1;&amp;#x6709;&amp;#x4E2D;&amp;#x592E;&amp;#x673A;&amp;#x6784;&amp;#x65BD;&amp;#x52A0;&amp;#x63A7;&amp;#x5236;&amp;#x3002;&amp;#x4F60;&amp;#x628A;&amp;#x94B1;&amp;#x653E;&amp;#x8FDB;&amp;#x673A;&amp;#x5668;&amp;#xFF0C;&amp;#x51FA;&amp;#x73B0;&amp;#x4E00;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x4E8B;&amp;#x60C5;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x4EBA;&amp;#x4ECE;&amp;#x4E2D;&amp;#x534F;&amp;#x8C03;&amp;#x3002;&amp;#x8FD9;&amp;#x4E0E;&amp;#x4F60;&amp;#x4E4B;&amp;#x524D;&amp;#x5B66;&amp;#x4E60;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E9B;&amp;#x6216;&amp;#x662F;&amp;#x4E3B;&amp;#x63A7;&amp;#x5236;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x6269;&amp;#x5C55;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;pmap&lt;/code&gt;)&amp;#xFF0C;&amp;#x6216;&amp;#x662F;&amp;#x4E0D;&amp;#x518D;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x4FE1;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;(&lt;code&gt;future&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x4E00;&amp;#x6B21;&amp;#x6027;&amp;#x4EFB;&amp;#x52A1;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might be strange to think of a vending machine as a process: vending machines are noun-y and thing-y, and processes are verb-y and do-y. To get in the right mindset, try defining real-world objects as the sum of their event-driven behavior. When a seed gets watered, it sprouts; when a mother looks at her newborn child, she feels love; and when you watch &lt;em&gt;Star Wars Episode I&lt;/em&gt;, you are filled with anger and despair. If you want to get super philosophical, consider whether it&amp;#x2019;s possible to define every thing&amp;#x2019;s essence as the set of the events it recognizes and how it responds. Is reality just the composition of hot dog vending machines?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x628A;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x5F53;&amp;#x4F5C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53EF;&amp;#x80FD;&amp;#x5F88;&amp;#x5947;&amp;#x602A;:&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x662F;&amp;#x540D;&amp;#x8BCD;&amp;#x6027;&amp;#x7684;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x52A8;&amp;#x8BCD;&amp;#x6027;&amp;#x7684;&amp;#x3002;&amp;#x4E3A;&amp;#x5F97;&amp;#x5230;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x601D;&amp;#x7EF4;&amp;#xFF0C;&amp;#x8BD5;&amp;#x8BD5;&amp;#x628A;&amp;#x771F;&amp;#x5B9E;&amp;#x4E16;&amp;#x754C;&amp;#x7684;&amp;#x7269;&amp;#x4F53;&amp;#x5B9A;&amp;#x4E49;&amp;#x6210;&amp;#x5B83;&amp;#x4EEC;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x9A71;&amp;#x52A8;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x7684;&amp;#x603B;&amp;#x548C;&amp;#x3002;&amp;#x7ED9;&amp;#x4E00;&amp;#x7C92;&amp;#x79CD;&amp;#x5B50;&amp;#x6D47;&amp;#x6C34;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x53D1;&amp;#x82BD;&amp;#xFF1B;&amp;#x4E00;&amp;#x4F4D;&amp;#x6BCD;&amp;#x4EB2;&amp;#x770B;&amp;#x5230;&amp;#x5979;&amp;#x7684;&amp;#x65B0;&amp;#x751F;&amp;#x5B69;&amp;#x5B50;&amp;#xFF0C;&amp;#x5979;&amp;#x4F1A;&amp;#x611F;&amp;#x5230;&amp;#x7231;&amp;#xFF1B;&amp;#x4F60;&amp;#x770B;&amp;#x4E86;&lt;em&gt;&amp;#x661F;&amp;#x6218;&amp;#x524D;&amp;#x4F20;1&lt;/em&gt;&amp;#xFF0C;&amp;#x4F60;&amp;#x5145;&amp;#x6EE1;&amp;#x4E86;&amp;#x6124;&amp;#x6012;&amp;#x548C;&amp;#x5931;&amp;#x671B;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x4ECE;&amp;#x54F2;&amp;#x5B66;&amp;#x4E0A;&amp;#x601D;&amp;#x8003;&amp;#xFF0C;&amp;#x8003;&amp;#x8651;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x662F;&amp;#x5426;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x4E1C;&amp;#x897F;&amp;#x7684;&amp;#x672C;&amp;#x8D28;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E3A;&amp;#x5B83;&amp;#x4EEC;&amp;#x8BC6;&amp;#x522B;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x548C;&amp;#x5982;&amp;#x4F55;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x54CD;&amp;#x5E94;&amp;#x7684;&amp;#x96C6;&amp;#x5408;&amp;#x3002;&amp;#x73B0;&amp;#x5B9E;&amp;#x662F;&amp;#x5426;&amp;#x53EA;&amp;#x662F;&amp;#x70ED;&amp;#x72D7;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x7684;&amp;#x7EC4;&amp;#x5408;&amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anyway, enough of my yakking! Let&amp;#x2019;s move from the theoretical to the concrete by creating some simple processes. First, create a new Leiningen project called &lt;em&gt;playsync&lt;/em&gt; with &lt;em&gt;lein new app playsync&lt;/em&gt;. Then, open the file &lt;em&gt;project.clj&lt;/em&gt; and add core.async to the &lt;code&gt;:dependencies&lt;/code&gt; vector so it reads as follows:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x603B;&amp;#x4E4B;&amp;#xFF0C;&amp;#x8BB2;&amp;#x7684;&amp;#x591F;&amp;#x591A;&amp;#x4E86;&amp;#xFF01;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x7406;&amp;#x8BBA;&amp;#x8F6C;&amp;#x79FB;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x5177;&amp;#x4F53;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E0A;&amp;#x3002;&amp;#x7528;&lt;em&gt;lein new app playsync&lt;/em&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EB;&amp;#x505A;&lt;em&gt;playsync&lt;/em&gt;&amp;#x7684;&amp;#x9879;&amp;#x76EE;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x6253;&amp;#x5F00;&amp;#x6587;&amp;#x4EF6;&lt;em&gt;projcect.clj&lt;/em&gt;&amp;#x5E76;&amp;#x5F80;&lt;code&gt;:dependencies&lt;/code&gt;&amp;#x91CC;&amp;#x6DFB;&amp;#x52A0;core.async,&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[org.clojure/clojure &lt;span class=&quot;string&quot;&gt;&amp;quot;1.7.0&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[org.clojure/core.async &lt;span class=&quot;string&quot;&gt;&amp;quot;0.1.346.0-17112a-alpha&amp;quot;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Note    It&amp;#x2019;s possible that the core.async version has advanced since I wrote this. For the latest version, check the core.async GitHub project page. But for the purpose of these exercises, please use the version listed here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;core.async&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x53EF;&amp;#x80FD;&amp;#x5DF2;&amp;#x7ECF;&amp;#x66F4;&amp;#x65B0;&amp;#x4E86;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x53BB;&amp;#x5B83;&amp;#x7684;GitHub&amp;#x9879;&amp;#x76EE;&amp;#x4ED3;&amp;#x5E93;&amp;#x67E5;&amp;#x770B;&amp;#x6700;&amp;#x65B0;&amp;#x7248;&amp;#x3002;&amp;#x4F46;&amp;#x51FA;&amp;#x4E8E;&amp;#x7EC3;&amp;#x4E60;&amp;#x7684;&amp;#x76EE;&amp;#x7684;&amp;#xFF0C;&amp;#x8BF7;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7248;&amp;#x672C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, open &lt;em&gt;src/playsync/core.clj&lt;/em&gt; and make it look like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#xFF0C;&amp;#x6253;&amp;#x5F00;&lt;em&gt;src/playsync/core.clj&lt;/em&gt; &amp;#xFF0C;&amp;#x4F7F;&amp;#x5B83;&amp;#x53D8;&amp;#x6210;&amp;#x8FD9;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; playsync.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; [clojure.core.async&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;symbol&quot;&gt;:refer&lt;/span&gt; [&amp;gt;! &amp;lt;! &amp;gt;!! &amp;lt;!! go chan buffer close! thread&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     alts! alts!! timeout]]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now when you open this in a REPL, you&amp;#x2019;ll have the most frequently used core.async functions at your disposal. Great! Before creating something as sophisticated and revolutionary as a hot dog vending machine, create a process that simply prints the message it receives:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#xFF0C;&amp;#x6253;&amp;#x5F00;REPL&amp;#xFF0C;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;core.async&amp;#x91CC;&amp;#x6700;&amp;#x5E38;&amp;#x7528;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x4E86;&amp;#x3002;&amp;#x5F88;&amp;#x597D;&amp;#xFF01;&amp;#x5148;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x5B83;&amp;#x6536;&amp;#x5230;&amp;#x7684;&amp;#x6D88;&amp;#x606F;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; echo-chan (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; echo-chan)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; echo-chan &lt;span class=&quot;string&quot;&gt;&amp;quot;ketchup&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ketchup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;At the first line of code, you used the &lt;code&gt;chan&lt;/code&gt; function to create a &lt;em&gt;channel&lt;/em&gt; named &lt;code&gt;echo-chan&lt;/code&gt;. Channels communicate &lt;em&gt;messages&lt;/em&gt;. You can put messages on a channel and take messages off a channel. Processes &lt;em&gt;wait&lt;/em&gt; for the completion of put and take&amp;#x2014;these are the events that processes respond to. You can think of processes as having two rules: 1) when trying to put a message on a channel or take a message off of it, wait and do nothing until the put or take succeeds, and 2) when the put or take succeeds, continue executing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x884C;&amp;#x7528;&lt;code&gt;chan&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EB;&amp;#x505A;&lt;code&gt;echo-chan&lt;/code&gt;&amp;#x7684;&lt;em&gt;&amp;#x901A;&amp;#x9053;&lt;/em&gt;&amp;#x3002;&amp;#x901A;&amp;#x9053;&amp;#x4F20;&amp;#x9012;&lt;em&gt;&amp;#x6D88;&amp;#x606F;&lt;/em&gt;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x6D88;&amp;#x606F;&amp;#x653E;&amp;#x8FDB;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;&amp;#x901A;&amp;#x9053;&amp;#x53D6;&amp;#x5F97;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4F1A;&lt;em&gt;&amp;#x7B49;&amp;#x7740;&lt;/em&gt;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#xFF0C;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x6210;&amp;#x529F;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4F1A;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x8FDB;&amp;#x884C;&amp;#x54CD;&amp;#x5E94;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BA4;&amp;#x4E3A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x89C4;&amp;#x5219;: 1) &amp;#x5F53;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x6D88;&amp;#x606F;&amp;#x65F6;&amp;#xFF0C;&amp;#x7B49;&amp;#x7740;&amp;#xFF0C;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x4E0D;&amp;#x5E72;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x6210;&amp;#x529F;&amp;#x3002;2) &amp;#x5F53;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x6210;&amp;#x529F;&amp;#x65F6;&amp;#xFF0C;&amp;#x7EE7;&amp;#x7EED;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On the next line, you used &lt;code&gt;go&lt;/code&gt; to create a new process. Everything within the &lt;code&gt;go&lt;/code&gt; expression&amp;#x2014;called a &lt;em&gt;go block&lt;/em&gt;&amp;#x2014;runs concurrently on a separate thread. Go blocks run your processes on a thread pool that contains a number of threads equal to two plus the number of cores on your machine, which means your program doesn&amp;#x2019;t have to create a new thread for each process. This often results in better performance because you avoid the overhead associated with creating threads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x4E00;&amp;#x884C;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;go&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;code&gt;go&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x91CC;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4E1C;&amp;#x897F;(&amp;#x53EB;&lt;em&gt;go block&lt;/em&gt;)&amp;#x90FD;&amp;#x5E76;&amp;#x53D1;&amp;#x8FD0;&amp;#x884C;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x72EC;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x3002;go block&amp;#x628A;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x653E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x91CC;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6570;&amp;#x7B49;&amp;#x4E8E;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5185;&amp;#x6838;&amp;#x6570;&amp;#x52A0;&amp;#x4E0A;2&amp;#xFF0C;&amp;#x8FD9;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x4F60;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x8FD9;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x521B;&amp;#x5EFA;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x635F;&amp;#x8017;&amp;#xFF0C;&amp;#x901A;&amp;#x5E38;&amp;#x4F1A;&amp;#x4F7F;&amp;#x6027;&amp;#x80FD;&amp;#x66F4;&amp;#x597D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, the process &lt;code&gt;(println (&amp;lt;! echo-chan))&lt;/code&gt; expresses &amp;#x201C;when I take a message from &lt;code&gt;echo-chan&lt;/code&gt;, print it.&amp;#x201D; The process is shunted to another thread, freeing up the current thread and allowing you to continue interacting with the REPL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;&lt;code&gt;(println (&amp;lt;! echo-chan))&lt;/code&gt;&amp;#x8868;&amp;#x8FF0;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#x662F;&amp;#xFF1A;&amp;#x201D;&amp;#x5F53;&amp;#x6211;&amp;#x4ECE;&lt;code&gt;echo-chan&lt;/code&gt;&amp;#x53D6;&amp;#x5F97;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x65F6;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x201D;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x88AB;&amp;#x8F6C;&amp;#x79FB;&amp;#x5230;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#xFF0C;&amp;#x91CA;&amp;#x653E;&amp;#x51FA;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7EE7;&amp;#x7EED;&amp;#x4E0E;REPL&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the expression &lt;code&gt;(&amp;lt;! echo-chan)&lt;/code&gt;, &lt;code&gt;&amp;lt;!&lt;/code&gt; is the &lt;em&gt;take&lt;/em&gt; function. It listens to the channel you give it as an argument, and the process it belongs to waits until another process puts a message on the channel. When &lt;code&gt;&amp;lt;!&lt;/code&gt; retrieves a value, the value is returned and the &lt;code&gt;println&lt;/code&gt; expression is executed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;code&gt;(&amp;lt;! echo-chan)&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&lt;code&gt;&amp;lt;!&lt;/code&gt;&amp;#x662F;&lt;em&gt;take&lt;/em&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5B83;&amp;#x76D1;&amp;#x542C;&amp;#x901A;&amp;#x9053;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4F1A;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x4E0A;&amp;#x653E;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x5F53;&lt;code&gt;&amp;lt;!&lt;/code&gt;&amp;#x53D6;&amp;#x5F97;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x503C;&amp;#x88AB;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&lt;code&gt;println&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x88AB;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The expression &lt;code&gt;(&amp;gt;!! echo-chan &amp;quot;ketchup&amp;quot;)&lt;/code&gt; puts the string &lt;code&gt;&amp;quot;ketchup&amp;quot;&lt;/code&gt; on &lt;code&gt;echo-chan&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;. When you put a message on a channel, the process blocks until another process takes the message. In this case, the REPL process didn&amp;#x2019;t have to wait at all, because there was already a process listening to the channel, waiting to take something off it. However, if you do the following, your REPL will block indefinitely:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;code&gt;(&amp;gt;!! echo-chan &amp;quot;ketchup&amp;quot;)&lt;/code&gt;&amp;#x628A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;ketchup&amp;quot;&lt;/code&gt;&amp;#x653E;&amp;#x5728;&lt;code&gt;echo-chan&lt;/code&gt;&amp;#x4E0A;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;true&lt;/code&gt;&amp;#x3002;&amp;#x5F53;&amp;#x4F60;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x9891;&amp;#x9053;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x65F6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53D6;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;REPL&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E0D;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6B63;&amp;#x5728;&amp;#x76D1;&amp;#x542C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x53D6;&amp;#x5F97;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E48;&amp;#x5E72;&amp;#xFF0C;REPL&amp;#x5C06;&amp;#x4F1A;&amp;#x65E0;&amp;#x9650;&amp;#x963B;&amp;#x585E;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;&amp;quot;mustard&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You&amp;#x2019;ve created a new channel and put something on it, but there&amp;#x2019;s no process listening to that channel. Processes don&amp;#x2019;t just wait to receive messages; they also wait for the messages they put on a channel to be taken.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x5E76;&amp;#x5728;&amp;#x5B83;&amp;#x4E0A;&amp;#x9762;&amp;#x653E;&amp;#x8FDB;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x4F46;&amp;#x6CA1;&amp;#x6709;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6B63;&amp;#x5728;&amp;#x76D1;&amp;#x542C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0D;&amp;#x4EC5;&amp;#x4EC5;&amp;#x7B49;&amp;#x5F85;&amp;#x63A5;&amp;#x6536;&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x4E5F;&amp;#x7B49;&amp;#x5F85;&amp;#x653E;&amp;#x8FDB;&amp;#x901A;&amp;#x9053;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x88AB;&amp;#x53D6;&amp;#x8D70;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Buffering&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7F13;&amp;#x51B2;&quot;&gt;&lt;a href=&quot;#&amp;#x7F13;&amp;#x51B2;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7F13;&amp;#x51B2;&quot;&gt;&lt;/a&gt;&amp;#x7F13;&amp;#x51B2;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s worth noting that the previous exercise contained two processes: the one you created with &lt;code&gt;go&lt;/code&gt; and the REPL process. These processes don&amp;#x2019;t have explicit knowledge of each other, and they act independently.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x4E00;&amp;#x70B9;&amp;#x662F;&amp;#xFF0C;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x7EC3;&amp;#x4E60;&amp;#x5305;&amp;#x542B;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;: &amp;#x7528;&lt;code&gt;go&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x548C;REPL&amp;#x3002;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E92;&amp;#x76F8;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x72EC;&amp;#x7ACB;&amp;#x884C;&amp;#x52A8;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s imagine that these processes take place in a diner. The REPL is the ketchup chef, and when he&amp;#x2019;s done with a batch, he belts out, &amp;#x201C;Ketchup!&amp;#x201D; It&amp;#x2019;s entirely possible that the rest of the staff is outside admiring the latest batch of oregano in their organic garden, and the chef just sits and waits until someone shows up to take his ketchup. On the flip side, the &lt;code&gt;go&lt;/code&gt; process represents one of the staff, and he&amp;#x2019;s waiting patiently for something to respond to. It could be that nothing ever happens, and he just waits indefinitely until the restaurant closes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x60F3;&amp;#x8C61;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53D1;&amp;#x751F;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x9910;&amp;#x5385;&amp;#x91CC;&amp;#x3002;REPL&amp;#x662F;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#x5927;&amp;#x53A8;&amp;#xFF0C;&amp;#x5F53;&amp;#x4ED6;&amp;#x505A;&amp;#x597D;&amp;#x4E00;&amp;#x6279;&amp;#x65F6;&amp;#xFF0C;&amp;#x5927;&amp;#x58F0;&amp;#x558A;&amp;#x5230;&amp;#x201D;&amp;#x201C;Ketchup!&amp;#x201D;&amp;#x3002;&amp;#x5F88;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x5176;&amp;#x4ED6;&amp;#x4EBA;&amp;#x6B63;&amp;#x5728;&amp;#x5916;&amp;#x9762;&amp;#x804A;&amp;#x5929;&amp;#xFF0C;&amp;#x5927;&amp;#x53A8;&amp;#x53EA;&amp;#x662F;&amp;#x5750;&amp;#x7740;&amp;#x5E76;&amp;#x7B49;&amp;#x7740;&amp;#x67D0;&amp;#x4EBA;&amp;#x51FA;&amp;#x73B0;&amp;#x62FF;&amp;#x8D70;&amp;#x4ED6;&amp;#x7684;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#x3002;&amp;#x53E6;&amp;#x4E00;&amp;#x65B9;&amp;#x9762;&amp;#xFF0C;&lt;code&gt;go&lt;/code&gt;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4EE3;&amp;#x8868;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EBA;&amp;#xFF0C;&amp;#x4ED6;&amp;#x6B63;&amp;#x5728;&amp;#x8010;&amp;#x5FC3;&amp;#x7B49;&amp;#x5F85;&amp;#x67D0;&amp;#x79CD;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x51C6;&amp;#x5907;&amp;#x505A;&amp;#x51FA;&amp;#x54CD;&amp;#x5E94;&amp;#x3002;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#xFF0C;&amp;#x4ED6;&amp;#x65E0;&amp;#x9650;&amp;#x7B49;&amp;#x7740;&amp;#x76F4;&amp;#x5230;&amp;#x996D;&amp;#x9986;&amp;#x5173;&amp;#x95E8;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This situation seems a little silly: what self-respecting ketchup chef would just sit and wait for someone to take his latest batch before making more ketchup? To avoid this tragedy, you can create buffered channels:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x770B;&amp;#x7740;&amp;#x6709;&amp;#x70B9;&amp;#x50BB;&amp;#xFF0C;&amp;#x5927;&amp;#x53A8;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8981;&amp;#x7B49;&amp;#x7740;&amp;#x800C;&amp;#x4E0D;&amp;#x53BB;&amp;#x505A;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#x5462;&amp;#xFF1F;&amp;#x4E3A;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60B2;&amp;#x5267;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;&amp;#x6709;&amp;#x7F13;&amp;#x51B2;&amp;#x7684;&amp;#x901A;&amp;#x9053;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; echo-buffer (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; echo-buffer &lt;span class=&quot;string&quot;&gt;&amp;quot;ketchup&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; echo-buffer &lt;span class=&quot;string&quot;&gt;&amp;quot;ketchup&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; echo-buffer &lt;span class=&quot;string&quot;&gt;&amp;quot;ketchup&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; This blocks because the channel buffer is full&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;(Be careful evaluating the last &lt;code&gt;(&amp;gt;!! echo-buffer &amp;quot;ketchup&amp;quot;)&lt;/code&gt; because it will block your REPL. If you&amp;#x2019;re using a Leiningen REPL, ctrl-C will unblock it.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(&amp;#x5C0F;&amp;#x5FC3;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;(&amp;gt;!! echo-buffer &amp;quot;ketchup&amp;quot;)&lt;/code&gt;&amp;#x65F6;&amp;#xFF0C;REPL&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x3002;ctrl-C&amp;#x53EF;&amp;#x4EE5;&amp;#x89E3;&amp;#x9501;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, you&amp;#x2019;ve created a channel with buffer size 2. That means you can put two values on the channel without waiting, but putting a third one on means the process will wait until another process takes a value from the channel. You can also create sliding buffers with &lt;code&gt;sliding-buffer&lt;/code&gt;, which drops values in a first-in, first-out fashion; and &lt;em&gt;dropping&lt;/em&gt; buffers with &lt;code&gt;dropping-buffer&lt;/code&gt;, which discards values in a last-in, first-out fashion. Neither of these buffers will ever cause &lt;code&gt;&amp;gt;!!&lt;/code&gt; to block.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x51B2;&amp;#x5927;&amp;#x5C0F;&amp;#x662F;2&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x53EF;&amp;#x4EE5;&amp;#x65E0;&amp;#x9700;&amp;#x7B49;&amp;#x5F85;&amp;#x5730;&amp;#x653E;&amp;#x5165;&amp;#x4E24;&amp;#x4E2A;&amp;#x503C;&amp;#xFF0C;&amp;#x4F46;&amp;#x653E;&amp;#x8FDB;&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5C31;&amp;#x8981;&amp;#x7B49;&amp;#x5F85;&amp;#x5176;&amp;#x4ED6;&amp;#x8FC7;&amp;#x7A0B;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x503C;&amp;#x53D6;&amp;#x8D70;&amp;#x3002;&amp;#x4F60;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;sliding-buffer&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&lt;em&gt;&amp;#x6ED1;&amp;#x52A8;&amp;#x7F13;&amp;#x51B2;&lt;/em&gt;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x6309;&amp;#x5148;&amp;#x8FDB;&amp;#x5148;&amp;#x51FA;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4E22;&amp;#x5F03;&amp;#x503C;&amp;#x3002;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;dropping-buffer&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&lt;em&gt;&amp;#x4E22;&amp;#x5F03;&amp;#x7F13;&amp;#x51B2;&lt;/em&gt;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x6309;&amp;#x540E;&amp;#x8FDB;&amp;#x5148;&amp;#x51FA;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4E22;&amp;#x5F03;&amp;#x503C;&amp;#x3002;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x7F13;&amp;#x51B2;&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4F7F;&lt;code&gt;&amp;gt;!!&lt;/code&gt;&amp;#x963B;&amp;#x585E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By using buffers, the master ketchup chef can keep whipping up batches of mouthwatering ketchup without having to wait for his staff to take them away. If he&amp;#x2019;s using a regular buffer, it&amp;#x2019;s like he has a shelf to put all his ketchup batches on; once the shelf is full, he&amp;#x2019;ll still have to wait for space to open up. If he&amp;#x2019;s using a sliding buffer, he&amp;#x2019;d throw away the oldest batch of ketchup when the shelf is full, slide all the ketchup down, and put the new batch in the vacant space. With a dropping buffer, he&amp;#x2019;d just knock the freshest batch off of the shelf and put his new batch in that space.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x4F7F;&amp;#x7528;&amp;#x7F13;&amp;#x51B2;&amp;#xFF0C;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#x5927;&amp;#x53A8;&amp;#x53EF;&amp;#x4EE5;&amp;#x6301;&amp;#x7EED;&amp;#x5236;&amp;#x4F5C;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#xFF0C;&amp;#x800C;&amp;#x65E0;&amp;#x9700;&amp;#x7B49;&amp;#x5F85;&amp;#x505A;&amp;#x597D;&amp;#x7684;&amp;#x88AB;&amp;#x53D6;&amp;#x8D70;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;&amp;#x666E;&amp;#x901A;&amp;#x7F13;&amp;#x51B2;&amp;#xFF0C;&amp;#x5C31;&amp;#x50CF;&amp;#x4ED6;&amp;#x6709;&amp;#x4E2A;&amp;#x653E;&amp;#x7F6E;&amp;#x505A;&amp;#x597D;&amp;#x7684;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#x7684;&amp;#x67B6;&amp;#x5B50;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x67B6;&amp;#x5B50;&amp;#x653E;&amp;#x6EE1;&amp;#x4E86;&amp;#xFF0C;&amp;#x4ED6;&amp;#x8FD8;&amp;#x662F;&amp;#x8981;&amp;#x7B49;&amp;#x5F85;&amp;#x67B6;&amp;#x5B50;&amp;#x4E0A;&amp;#x51FA;&amp;#x73B0;&amp;#x7A7A;&amp;#x4F59;&amp;#x4F4D;&amp;#x7F6E;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4ED6;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x6ED1;&amp;#x52A8;&amp;#x7F13;&amp;#x51B2;&amp;#xFF0C;&amp;#x67B6;&amp;#x5B50;&amp;#x6EE1;&amp;#x4E86;&amp;#xFF0C;&amp;#x4ED6;&amp;#x5C31;&amp;#x6254;&amp;#x6389;&amp;#x6700;&amp;#x65E7;&amp;#x7684;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#xFF0C;&amp;#x6ED1;&amp;#x52A8;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#xFF0C;&amp;#x628A;&amp;#x65B0;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#x653E;&amp;#x5728;&amp;#x7A7A;&amp;#x51FA;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x4E22;&amp;#x5F03;&amp;#x7F13;&amp;#x51B2;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4F1A;&amp;#x6254;&amp;#x6389;&amp;#x67B6;&amp;#x5B50;&amp;#x4E0A;&amp;#x6700;&amp;#x65B0;&amp;#x7684;&amp;#x756A;&amp;#x8304;&amp;#x9171;&amp;#xFF0C;&amp;#x628A;&amp;#x65B0;&amp;#x505A;&amp;#x7684;&amp;#x653E;&amp;#x5728;&amp;#x90A3;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x4E0A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Buffers are just elaborations of the core model: processes are independent, concurrently executing units of logic that respond to events. You can create processes with go blocks and communicate events over channels.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7F13;&amp;#x51B2;&amp;#x53EA;&amp;#x662F;&amp;#x6838;&amp;#x5FC3;&amp;#x6A21;&amp;#x578B;&amp;#x7684;&amp;#x8BE6;&amp;#x7EC6;&amp;#x9610;&amp;#x8FF0;: &amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8B;&amp;#x4EF6;&amp;#x505A;&amp;#x51FA;&amp;#x54CD;&amp;#x5E94;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5355;&amp;#x5143;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;go blocks&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&amp;#x901A;&amp;#x9053;&amp;#x4F20;&amp;#x8FBE;&amp;#x4E8B;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blocking and Parking&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x505C;&amp;#x6CCA;&quot;&gt;&lt;a href=&quot;#&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x505C;&amp;#x6CCA;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x505C;&amp;#x6CCA;&quot;&gt;&lt;/a&gt;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x505C;&amp;#x6CCA;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;You may have noticed that the take function &lt;code&gt;&amp;lt;!&lt;/code&gt; used only one exclamation point, whereas the put function &lt;code&gt;&amp;gt;!!&lt;/code&gt; used two. In fact, both put and take have one-exclamation-point and two-exclamation-point varieties. When do you use which? The simple answer is that you can use one exclamation point inside go blocks, but you have to use two exclamation points outside of them:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x6CE8;&amp;#x610F;&amp;#x5230;take&amp;#x51FD;&amp;#x6570;&lt;code&gt;&amp;lt;!&lt;/code&gt;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x53F9;&amp;#x53F7;&amp;#xFF0C;put&amp;#x51FD;&amp;#x6570;&lt;code&gt;&amp;gt;!!&lt;/code&gt;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x4E24;&amp;#x4E2A;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x90FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x7528;&amp;#x54EA;&amp;#x4E2A;&amp;#xFF1F;&amp;#x7B80;&amp;#x5355;&amp;#x7B54;&amp;#x6848;&amp;#x662F;&amp;#x5728;go block&amp;#x91CC;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x53F9;&amp;#x53F7;&amp;#xFF0C;&amp;#x5728;&amp;#x5176;&amp;#x5916;&amp;#x7528;&amp;#x4E24;&amp;#x4E2A;&amp;#x53F9;&amp;#x53F7;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Inside go block&lt;/th&gt;
&lt;th&gt;Outside go block&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;put&lt;/td&gt;
&lt;td&gt;&amp;gt;! or &amp;gt;!!&lt;/td&gt;
&lt;td&gt;&amp;gt;!!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;take&lt;/td&gt;
&lt;td&gt;&amp;lt;! or &amp;lt;!!&lt;/td&gt;
&lt;td&gt;&amp;lt;!!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;It all comes down to efficiency. Because go blocks use a thread pool with a fixed size, you can create 1,000 go processes but use only a handful of threads:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6240;&amp;#x6709;&amp;#x539F;&amp;#x56E0;&amp;#x90FD;&amp;#x5F52;&amp;#x7ED3;&amp;#x4E3A;&amp;#x6548;&amp;#x7387;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;go blocks&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x56FA;&amp;#x5B9A;&amp;#x5927;&amp;#x5C0F;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;1000&amp;#x4E2A;go&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4F46;&amp;#x53EA;&amp;#x4F7F;&amp;#x7528;&amp;#x51E0;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; hi-chan (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [n (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;range&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; hi-chan (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;hi &amp;quot;&lt;/span&gt; n))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;To understand how Clojure accomplishes this, we need to explore how processes &lt;em&gt;wait&lt;/em&gt;. Waiting is a key aspect of working with core.async processes: we&amp;#x2019;ve already established that put waits until another process does a &lt;em&gt;take&lt;/em&gt; on the same channel, and vice versa. In this example, 1,000 processes are waiting for another process to take from &lt;code&gt;hi-chan&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x7406;&amp;#x89E3;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4EF6;&amp;#x4E8B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;&amp;#x8FDB;&amp;#x7A0B;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&lt;em&gt;&amp;#x7B49;&amp;#x5F85;&lt;/em&gt;&amp;#x7684;&amp;#x3002;&amp;#x7B49;&amp;#x5F85;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;core.async&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x56E0;&amp;#x7D20;&amp;#xFF1A;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&lt;em&gt;&amp;#x653E;&amp;#x5165;&lt;/em&gt; &amp;#x4F1A;&amp;#x7B49;&amp;#x5F85;&amp;#x76F4;&amp;#x5230;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5728;&amp;#x540C;&amp;#x4E00;&amp;#x901A;&amp;#x9053;&amp;#x505A;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x53D6;&amp;#x5F97;&lt;/em&gt;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x53CD;&amp;#x4E4B;&amp;#x4EA6;&amp;#x7136;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;1000&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6B63;&amp;#x5728;&amp;#x7B49;&amp;#x5F85;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4ECE;&lt;code&gt;hi-chan&lt;/code&gt;&amp;#x505A;&amp;#x53D6;&amp;#x5F97;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two varieties of waiting: &lt;em&gt;parking&lt;/em&gt; and &lt;em&gt;blocking&lt;/em&gt;. Blocking is the kind of waiting you&amp;#x2019;re familiar with: a thread stops execution until a task is complete. Usually this happens when you&amp;#x2019;re doing some kind of I/O operation. The thread remains alive but doesn&amp;#x2019;t do any work, so you have to create a new thread if you want your program to continue working. In Chapter 9, you learned how to do this with &lt;code&gt;future&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B49;&amp;#x5F85;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x53D8;&amp;#x4F53;&amp;#xFF1A;&lt;em&gt;&amp;#x505C;&amp;#x6CCA;&lt;/em&gt; &amp;#x548C; &lt;em&gt;&amp;#x963B;&amp;#x585E;&lt;/em&gt;&amp;#x3002;&amp;#x963B;&amp;#x585E;&amp;#x662F;&amp;#x4F60;&amp;#x719F;&amp;#x6089;&amp;#x7684;&amp;#x90A3;&amp;#x79CD;&amp;#x7B49;&amp;#x5F85;: &amp;#x7EBF;&amp;#x7A0B;&amp;#x505C;&amp;#x6B62;&amp;#x6267;&amp;#x884C;&amp;#x76F4;&amp;#x5230;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&amp;#x8FD9;&amp;#x901A;&amp;#x5E38;&amp;#x53D1;&amp;#x751F;&amp;#x5728;&amp;#x8FDB;&amp;#x884C;&amp;#x67D0;&amp;#x4E9B;I/O&amp;#x64CD;&amp;#x4F5C;&amp;#x65F6;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4FDD;&amp;#x6301;&amp;#x5B58;&amp;#x6D3B;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EC0;&amp;#x4E48;&amp;#x5DE5;&amp;#x4F5C;&amp;#x90FD;&amp;#x4E0D;&amp;#x5E72;&amp;#xFF0C;&amp;#x4E3A;&amp;#x4E86;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7EE7;&amp;#x7EED;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x4F60;&amp;#x4E0D;&amp;#x5F97;&amp;#x4E0D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x5728;&amp;#x7B2C;&amp;#x4E5D;&amp;#x7AE0;&amp;#xFF0C;&amp;#x4F60;&amp;#x5B66;&amp;#x8FC7;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&lt;code&gt;future&lt;/code&gt;&amp;#x5E72;&amp;#x8FD9;&amp;#x4EF6;&amp;#x4E8B;,&lt;a href=&quot;https://morrxy.github.io/2016/07/15/braveclojure-concurrency/#&amp;#x672A;&amp;#x6765;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x70B9;&amp;#x6B64;&amp;#x67E5;&amp;#x770B;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Parking frees up the thread so it can keep doing work. Let&amp;#x2019;s say you have one thread and two processes, Process A and Process B. Process A is running on the thread and then waits for a put or take. Clojure moves Process A off the thread and moves Process B onto the thread. If Process B starts waiting and Process A&amp;#x2019;s put or take has finished, then Clojure will move Process B off the thread and put Process A back on it. Parking allows the instructions from multiple processes to interleave on a single thread, similar to the way that using multiple threads allows interleaving on a single core. The implementation of parking isn&amp;#x2019;t important; suffice it to say that it&amp;#x2019;s only possible within go blocks, and it&amp;#x2019;s only possible when you use &lt;code&gt;&amp;gt;!&lt;/code&gt; and &lt;code&gt;&amp;lt;!&lt;/code&gt;, or parking put and parking take. &lt;code&gt;&amp;gt;!!&lt;/code&gt; and &lt;code&gt;&amp;lt;!!&lt;/code&gt; are &lt;em&gt;blocking put&lt;/em&gt; and &lt;em&gt;blocking take&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x505C;&amp;#x6CCA;&amp;#x91CA;&amp;#x653E;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8BA9;&amp;#x5B83;&amp;#x80FD;&amp;#x7EE7;&amp;#x7EED;&amp;#x5DE5;&amp;#x4F5C;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;A&amp;#x548C;&amp;#x8FC7;&amp;#x7A0B;B&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;A&amp;#x6B63;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x653E;&amp;#x5165;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x3002;Clojure&amp;#x628A;&amp;#x8FC7;&amp;#x7A0B;A&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x632A;&amp;#x8D70;&amp;#xFF0C;&amp;#x5E76;&amp;#x628A;&amp;#x8FC7;&amp;#x7A0B;B&amp;#x632A;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8FC7;&amp;#x7A0B;B&amp;#x5F00;&amp;#x59CB;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FC7;&amp;#x7A0B;A&amp;#x7684;&amp;#x653E;&amp;#x5165;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;Clojure&amp;#x628A;&amp;#x8FC7;&amp;#x7A0B;B&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x632A;&amp;#x8D70;&amp;#xFF0C;&amp;#x5E76;&amp;#x628A;&amp;#x8FC7;&amp;#x7A0B;A&amp;#x632A;&amp;#x56DE;&amp;#x6765;&amp;#x3002;&amp;#x505C;&amp;#x6CCA;&amp;#x8BA9;&amp;#x591A;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x4EA4;&amp;#x66FF;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x7C7B;&amp;#x4F3C;&amp;#x4E8E;&amp;#x5355;&amp;#x6838;&amp;#x4E0A;&amp;#x7684;&amp;#x591A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4EA4;&amp;#x66FF;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x505C;&amp;#x6CCA;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x65B9;&amp;#x5F0F;&amp;#x5E76;&amp;#x4E0D;&amp;#x91CD;&amp;#x8981;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x53EA;&amp;#x80FD;&amp;#x5728;go block&amp;#x91CC;&amp;#x8FDB;&amp;#x884C;&lt;code&gt;&amp;gt;!&lt;/code&gt;&amp;#x6216;&lt;code&gt;&amp;lt;!&lt;/code&gt;&amp;#x3002;&lt;code&gt;&amp;gt;!&lt;/code&gt;&amp;#x53EB;&amp;#x505A;&lt;em&gt;&amp;#x505C;&amp;#x6CCA;&amp;#x653E;&amp;#x8FDB;&lt;/em&gt;(parking put),&lt;code&gt;&amp;lt;!&lt;/code&gt;&amp;#x53EB;&amp;#x505A;&lt;em&gt;&amp;#x505C;&amp;#x6CCA;&amp;#x53D6;&amp;#x5F97;&lt;/em&gt;(parking take),&lt;code&gt;&amp;gt;!!&lt;/code&gt;&amp;#x53EB;&amp;#x505A;&lt;em&gt;&amp;#x963B;&amp;#x585E;&amp;#x653E;&amp;#x8FDB;&lt;/em&gt;(blocking put),&lt;code&gt;&amp;lt;!!&lt;/code&gt;&amp;#x53EB;&amp;#x505A;&lt;em&gt;&amp;#x963B;&amp;#x585E;&amp;#x53D6;&amp;#x5F97;&lt;/em&gt;(blocking take)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;thread&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;thread&quot;&gt;&lt;a href=&quot;#thread&quot; class=&quot;headerlink&quot; title=&quot;thread&quot;&gt;&lt;/a&gt;thread&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;There are definitely times when you&amp;#x2019;ll want to use blocking instead of parking, like when your process will take a long time before putting or taking, and for those occasions you should use &lt;code&gt;thread&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F60;&amp;#x60F3;&amp;#x4F7F;&amp;#x7528;&amp;#x963B;&amp;#x585E;&amp;#x800C;&amp;#x4E0D;&amp;#x60F3;&amp;#x7528;&amp;#x505C;&amp;#x6CCA;,&amp;#x6BD4;&amp;#x5982;&amp;#x4F60;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x524D;&amp;#xFF0C;&amp;#x5C06;&amp;#x82B1;&amp;#x8D39;&amp;#x5F88;&amp;#x957F;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;thread&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;thread&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; echo-chan)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; echo-chan &lt;span class=&quot;string&quot;&gt;&amp;quot;mustard&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; mustard&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;thread&lt;/code&gt; acts almost exactly like &lt;code&gt;future&lt;/code&gt;: it creates a new thread and executes a process on that thread. Unlike &lt;code&gt;future&lt;/code&gt;, instead of returning an object that you can dereference, &lt;code&gt;thread&lt;/code&gt; returns a channel. When &lt;code&gt;thread&lt;/code&gt;&amp;#x2019;s process stops, the process&amp;#x2019;s return value is put on the channel that &lt;code&gt;thread&lt;/code&gt; returns:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;thread&lt;/code&gt;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x51E0;&amp;#x4E4E;&amp;#x4E0E;&lt;code&gt;future&lt;/code&gt;&amp;#x4E00;&amp;#x6837;: &amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5728;&amp;#x90A3;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x4E0D;&amp;#x50CF;&lt;code&gt;future&lt;/code&gt;&amp;#x90A3;&amp;#x6837;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x4EE5;&amp;#x53D6;&amp;#x503C;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&lt;code&gt;thread&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x5F53;&lt;code&gt;thread&lt;/code&gt;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x505C;&amp;#x6B62;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x88AB;&amp;#x653E;&amp;#x8FDB;&amp;#x8FD9;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [t (&lt;span class=&quot;name&quot;&gt;thread&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;chili&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; t))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;chili&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, the process doesn&amp;#x2019;t wait for any events; instead, it stops immediately. Its return value is &lt;code&gt;&amp;quot;chili&amp;quot;&lt;/code&gt;, which gets put on the channel that&amp;#x2019;s bound to &lt;code&gt;t&lt;/code&gt;. We take from &lt;code&gt;t&lt;/code&gt;, returning &lt;code&gt;&amp;quot;chili&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;thread&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7ACB;&amp;#x5373;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&lt;code&gt;&amp;quot;chili&amp;quot;&lt;/code&gt;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x503C;&amp;#x88AB;&amp;#x653E;&amp;#x8FDB;&amp;#x901A;&amp;#x9053;&lt;code&gt;t&lt;/code&gt;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x901A;&amp;#x9053;&lt;code&gt;t&lt;/code&gt;&amp;#x53D6;&amp;#x5F97;&lt;code&gt;&amp;quot;chili&amp;quot;&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The reason you should use &lt;code&gt;thread&lt;/code&gt; instead of a go block when you&amp;#x2019;re performing a long-running task is so you don&amp;#x2019;t clog your thread pool. Imagine you&amp;#x2019;re running four processes that download humongous files, save them, and then put the file paths on a channel. While the processes are downloading files and saving these files, Clojure can&amp;#x2019;t park their threads. It can park the thread only at the last step, when the process puts the files&amp;#x2019; paths on a channel. Therefore, if your thread pool has only four threads, all four threads will be used for downloading, and no other process will be allowed to run until one of the downloads finishes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD0;&amp;#x884C;&amp;#x957F;&amp;#x65F6;&amp;#x95F4;&amp;#x4EFB;&amp;#x52A1;&amp;#x65F6;&amp;#xFF0C;&amp;#x5E94;&amp;#x8BE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;thread&lt;/code&gt;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;go blockd&amp;#x7684;&amp;#x7406;&amp;#x7531;&amp;#x662F;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x4E0D;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x3002;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x6B63;&amp;#x5728;&amp;#x8FD0;&amp;#x884C;4&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x90FD;&amp;#x4E0B;&amp;#x8F7D;&amp;#x4E00;&amp;#x4E2A;&amp;#x5927;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4FDD;&amp;#x5B58;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x628A;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x653E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x4E0A;&amp;#x3002;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6B63;&amp;#x5728;&amp;#x4E0B;&amp;#x8F7D;&amp;#x548C;&amp;#x4FDD;&amp;#x5B58;&amp;#x6587;&amp;#x4EF6;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x4E0D;&amp;#x80FD;&amp;#x505C;&amp;#x6CCA;&amp;#x5B83;&amp;#x4EEC;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x53EA;&amp;#x6709;&amp;#x5230;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x6B65;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x628A;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x624D;&amp;#x80FD;&amp;#x505C;&amp;#x6CCA;&amp;#x5B83;&amp;#x4EEC;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x53EA;&amp;#x6709;4&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x7EBF;&amp;#x7A0B;&amp;#x90FD;&amp;#x4F1A;&amp;#x88AB;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5360;&amp;#x7528;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8FC7;&amp;#x7A0B;&amp;#x90FD;&amp;#x65E0;&amp;#x6CD5;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;go&lt;/code&gt;, &lt;code&gt;thread&lt;/code&gt;, &lt;code&gt;chan&lt;/code&gt;, &lt;code&gt;&amp;lt;!&lt;/code&gt;, &lt;code&gt;&amp;lt;!!&lt;/code&gt;, &lt;code&gt;&amp;gt;!&lt;/code&gt;, and &lt;code&gt;&amp;gt;!!&lt;/code&gt; are the core tools you&amp;#x2019;ll use for creating and communicating with processes. Both put and take will cause a process to wait until its complement is performed on the given channel. &lt;code&gt;go&lt;/code&gt; allows you to use the parking variants of put and take, which could improve performance. You should use the blocking variants, along with &lt;code&gt;thread&lt;/code&gt;, if you&amp;#x2019;re performing long-running tasks before the put or take.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;go&lt;/code&gt;, &lt;code&gt;thread&lt;/code&gt;, &lt;code&gt;chan&lt;/code&gt;, &lt;code&gt;&amp;lt;!&lt;/code&gt;, &lt;code&gt;&amp;lt;!!&lt;/code&gt;, &lt;code&gt;&amp;gt;!&lt;/code&gt;, &amp;#x548C; &lt;code&gt;&amp;gt;!!&lt;/code&gt;&amp;#x662F;&amp;#x8FC7;&amp;#x7A0B;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x901A;&amp;#x4FE1;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x653E;&amp;#x8FDB;&amp;#x548C;&amp;#x53D6;&amp;#x5F97;&amp;#x90FD;&amp;#x4F1A;&amp;#x4F7F;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x901A;&amp;#x9053;&amp;#x4E0A;&amp;#x6709;&amp;#x4E92;&amp;#x8865;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&lt;code&gt;go&lt;/code&gt;&amp;#x91CC;&amp;#x9762;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x4F7F;&amp;#x7528;&amp;#x653E;&amp;#x8FDB;&amp;#x548C;&amp;#x53D6;&amp;#x5F97;&amp;#x7684;&amp;#x505C;&amp;#x6CCA;&amp;#x53D8;&amp;#x4F53;&amp;#xFF0C;&amp;#x4EE5;&amp;#x63D0;&amp;#x9AD8;&amp;#x6027;&amp;#x80FD;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x653E;&amp;#x8FDB;&amp;#x6216;&amp;#x53D6;&amp;#x5F97;&amp;#x524D;&amp;#xFF0C;&amp;#x8981;&amp;#x6267;&amp;#x884C;&amp;#x957F;&amp;#x65F6;&amp;#x95F4;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5E94;&amp;#x8BE5;&amp;#x4F7F;&amp;#x7528;&amp;#x963B;&amp;#x585E;&amp;#x53D8;&amp;#x4F53;&amp;#x52A0;&amp;#x4E0A;&lt;code&gt;thread&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And that should give you everything you need to fulfill your heart&amp;#x2019;s desire and create a machine that turns money into hot dogs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C31;&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x521B;&amp;#x5EFA;&amp;#x70ED;&amp;#x72D7;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Hot Dog Machine Process You&amp;#x2019;ve Been Longing For&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x4F60;&amp;#x6E34;&amp;#x671B;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&quot;&gt;&lt;a href=&quot;#&amp;#x4F60;&amp;#x6E34;&amp;#x671B;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4F60;&amp;#x6E34;&amp;#x671B;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&quot;&gt;&lt;/a&gt;&amp;#x4F60;&amp;#x6E34;&amp;#x671B;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Behold, your dreams made real!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#xFF0C;&amp;#x4F60;&amp;#x68A6;&amp;#x60F3;&amp;#x6210;&amp;#x771F;&amp;#x4E86;&amp;#xFF01;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; hot-dog-machine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [in (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        out (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; in)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; out &lt;span class=&quot;string&quot;&gt;&amp;quot;hot dog&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [in out]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This function creates an &lt;code&gt;in&lt;/code&gt; channel for receiving money and an &lt;code&gt;out&lt;/code&gt; channel for dispensing a hot dog. It then creates an asynchronous process with &lt;code&gt;go&lt;/code&gt;, which waits for money and then dispenses a hot dog. Finally, it returns the &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; channels as a vector.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;in&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x6536;&amp;#x94B1;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;out&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#x7528;&amp;#x4E8E;&amp;#x7ED9;&amp;#x51FA;&amp;#x70ED;&amp;#x72D7;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x7528;&lt;code&gt;go&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F02;&amp;#x6B65;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x7B49;&amp;#x7740;&amp;#x6536;&amp;#x94B1;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x653E;&amp;#x51FA;&amp;#x70ED;&amp;#x72D7;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x628A;&lt;code&gt;in&lt;/code&gt;&amp;#x548C;&lt;code&gt;out&lt;/code&gt;&amp;#x653E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x91CC;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Time for a hot dog!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x70ED;&amp;#x72D7;&amp;#x4EA4;&amp;#x6613;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [[in out] (&lt;span class=&quot;name&quot;&gt;hot-dog-machine&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in &lt;span class=&quot;string&quot;&gt;&amp;quot;pocket lint&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;hot dog&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this snippet, you use destructuring (covered in Chapter 3) with &lt;code&gt;let&lt;/code&gt; to bind the &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; channels to the &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; symbols. You then put &lt;code&gt;&amp;quot;pocket lint&amp;quot;&lt;/code&gt; on the &lt;code&gt;in&lt;/code&gt; channel. The hot dog machine process waits for something, anything, to arrive on the &lt;code&gt;in&lt;/code&gt; channel; once &lt;code&gt;&amp;quot;pocket lint&amp;quot;&lt;/code&gt; arrives, the hot dog machine process resumes execution, putting &lt;code&gt;&amp;quot;hot dog&amp;quot;&lt;/code&gt; on the &lt;code&gt;out&lt;/code&gt; channel.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x7528;&amp;#x89E3;&amp;#x6784;(&amp;#x7B2C;3&amp;#x7AE0;&amp;#x8BB2;&amp;#x89E3;&amp;#x8FC7;)&amp;#x628A;&lt;code&gt;in&lt;/code&gt;&amp;#x548C;&lt;code&gt;out&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&lt;code&gt;in&lt;/code&gt;&amp;#x548C;&lt;code&gt;out&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x628A;&lt;code&gt;&amp;quot;pocket lint&amp;quot;&lt;/code&gt;&amp;#x653E;&amp;#x8FDB;&lt;code&gt;in&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6B63;&amp;#x5728;&amp;#x7B49;&amp;#x5F85;&amp;#x4EFB;&amp;#x4F55;&amp;#x4E1C;&amp;#x897F;&amp;#x8FDB;&amp;#x5165;&lt;code&gt;in&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&lt;code&gt;&amp;quot;pocket lint&amp;quot;&lt;/code&gt;&amp;#x5230;&amp;#x8FBE;&amp;#xFF0C;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7EE7;&amp;#x7EED;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x628A;&lt;code&gt;&amp;quot;hot dog&amp;quot;&lt;/code&gt;&amp;#x653E;&amp;#x8FDB;&lt;code&gt;out&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wait a minute . . . that&amp;#x2019;s not right. I mean, yay, free hot dogs, but someone&amp;#x2019;s bound to get upset that the machine&amp;#x2019;s accepting pocket lint as payment. Not only that, but this machine will only dispense one hot dog before shutting down. Let&amp;#x2019;s alter the hot dog machine function so that you can specify how many hot dogs it has and so it only dispenses a hot dog when you give it the number 3:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B49;&amp;#x4E0B;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5BF9;&amp;#x3002;&amp;#x514D;&amp;#x8D39;&amp;#x70ED;&amp;#x72D7;&amp;#xFF0C;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#x63A5;&amp;#x53D7;&amp;#x4E86;&amp;#x53E3;&amp;#x888B;&amp;#x91CC;&amp;#x7684;&amp;#x7ED2;&amp;#x6BDB;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4ED8;&amp;#x6B3E;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x673A;&amp;#x5668;&amp;#x53EA;&amp;#x80FD;&amp;#x53D1;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#x3002;&amp;#x4FEE;&amp;#x6539;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x5B9A;&amp;#x5B83;&amp;#x6709;&amp;#x51E0;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#xFF0C;&amp;#x5E76;&amp;#x8BA9;&amp;#x5B83;&amp;#x53EA;&amp;#x6709;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x5B57;3&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x53D1;&amp;#x51FA;&amp;#x70ED;&amp;#x72D7;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; hot-dog-machine-v2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [hot-dog-count]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [in (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        out (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;loop&lt;/span&gt;&lt;/span&gt; [hc hot-dog-count]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; hc &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [input (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; in)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &amp;#x278A;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; input)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; out &lt;span class=&quot;string&quot;&gt;&amp;quot;hot dog&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;recur&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dec&lt;/span&gt;&lt;/span&gt; hc)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; out &lt;span class=&quot;string&quot;&gt;&amp;quot;wilted lettuce&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;recur&lt;/span&gt;&lt;/span&gt; hc))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#x278B;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;close!&lt;/span&gt; in)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;close!&lt;/span&gt; out)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [in out]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;There&amp;#x2019;s a lot more code here, but the strategy is straightforward. The new function &lt;code&gt;hot-dog-machine-v2&lt;/code&gt; allows you to specify the &lt;code&gt;hot-dog-count&lt;/code&gt;. Within the go block at &amp;#x278A;, it dispenses a hot dog only if the number 3 (meaning three dollars) is placed on the &lt;code&gt;in&lt;/code&gt; channel; otherwise, it dispenses wilted lettuce, which is definitely not a hot dog. Once a process has taken the output, the hot dog machine process loops back with an updated hot dog count and is ready to receive money again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x867D;&amp;#x7136;&amp;#x591A;&amp;#xFF0C;&amp;#x4F46;&amp;#x5F88;&amp;#x76F4;&amp;#x63A5;&amp;#x3002;&amp;#x51FD;&amp;#x6570;&lt;code&gt;hot-dog-machine-v2&lt;/code&gt;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x6307;&amp;#x5B9A;&lt;code&gt;hot-dog-count&lt;/code&gt;&amp;#x3002;&amp;#x5728;&amp;#x278A;&amp;#x5904;&amp;#x7684;go block&amp;#x5185;&amp;#xFF0C;&amp;#x53EA;&amp;#x6709;&amp;#x6570;&amp;#x5B57;3(&amp;#x610F;&amp;#x601D;&amp;#x662F;3&amp;#x7F8E;&amp;#x5143;)&amp;#x653E;&amp;#x5165;&amp;#x901A;&amp;#x9053;&lt;code&gt;in&lt;/code&gt;&amp;#xFF0C;&amp;#x624D;&amp;#x7ED9;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x7ED9;&amp;#x51FA;&amp;#x67AF;&amp;#x840E;&amp;#x7684;&amp;#x83B4;&amp;#x82E3;&amp;#x3002;&amp;#x4E00;&amp;#x65E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53D6;&amp;#x8D70;&amp;#x4E86;&amp;#x7ED9;&amp;#x51FA;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x66F4;&amp;#x65B0;&amp;#x70ED;&amp;#x72D7;&amp;#x8BA1;&amp;#x6570;&amp;#xFF0C;&amp;#x91CD;&amp;#x65B0;&amp;#x5F00;&amp;#x59CB;&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x51C6;&amp;#x5907;&amp;#x597D;&amp;#x6536;&amp;#x94B1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When the machine process runs out of hot dogs, the process closes the channels at &amp;#x278B;. When you close a channel, you can no longer perform puts on it, and once you&amp;#x2019;ve taken all values off a closed channel, any subsequent takes will return &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7528;&amp;#x5B8C;&amp;#x70ED;&amp;#x72D7;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5728;&amp;#x278B;&amp;#x5904;&amp;#x5173;&amp;#x95ED;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x901A;&amp;#x9053;&amp;#x5173;&amp;#x95ED;&amp;#x540E;&amp;#xFF0C;&amp;#x4E0D;&amp;#x80FD;&amp;#x5728;&amp;#x6267;&amp;#x884C;&amp;#x653E;&amp;#x5165;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x901A;&amp;#x9053;&amp;#x4E0A;&amp;#x7684;&amp;#x503C;&amp;#x90FD;&amp;#x88AB;&amp;#x53D6;&amp;#x8D70;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x53D6;&amp;#x5F97;&amp;#x64CD;&amp;#x4F5C;&amp;#x5C06;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;nil&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s give the upgraded hot dog machine a go in Listing 11-1 by putting in money and pocket lint:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E0B;&amp;#x5347;&amp;#x7EA7;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#xFF0C;&amp;#x653E;&amp;#x8FDB;&amp;#x94B1;&amp;#x548C;&amp;#x7ED2;&amp;#x6BDB;:&lt;/p&gt;
&lt;p&gt;list 11-1:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [[in out] (&lt;span class=&quot;name&quot;&gt;hot-dog-machine-v2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in &lt;span class=&quot;string&quot;&gt;&amp;quot;pocket lint&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;lt;!!&lt;/span&gt; out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; wilted lettuce&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; hotdog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; hotdog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;First, we try the ol&amp;#x2019; pocket lint trick and get wilted lettuce. Next, we put in 3 dollars twice and get a hot dog both times. Then, we try to put in another 3 dollars, but that&amp;#x2019;s ignored because the channel is closed; the number 3 is not put on the channel. When we try to take from the &lt;code&gt;out&lt;/code&gt; channel, we get &lt;code&gt;nil&lt;/code&gt;, again because the channel is closed. You might notice a couple of interesting details about &lt;code&gt;hot-dog-machine-v2&lt;/code&gt;. First, it does a put and a take within the same go block. This isn&amp;#x2019;t that unusual, and it&amp;#x2019;s one way you can create a &lt;em&gt;pipeline&lt;/em&gt; of processes: just make the &lt;em&gt;in&lt;/em&gt; channel of one process the &lt;em&gt;out&lt;/em&gt; channel of another. The following example does just that, passing a string through a series of processes that perform transformations until the string finally gets printed by the last process:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4E86;&amp;#x7ED2;&amp;#x6BDB;&amp;#x628A;&amp;#x620F;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x4E86;&amp;#x67AF;&amp;#x840E;&amp;#x83B4;&amp;#x82E3;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x653E;&amp;#x5165;&amp;#x4E24;&amp;#x6B21;3&amp;#x7F8E;&amp;#x5143;&amp;#xFF0C;&amp;#x6BCF;&amp;#x6B21;&amp;#x90FD;&amp;#x5F97;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x70ED;&amp;#x72D7;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#xFF0C;&amp;#x518D;&amp;#x6B21;&amp;#x653E;&amp;#x5165;3&amp;#x7F8E;&amp;#x5143;,&amp;#x4F46;&amp;#x88AB;&amp;#x5FFD;&amp;#x7565;&amp;#x4E86;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x901A;&amp;#x9053;&amp;#x5173;&amp;#x4E86;&amp;#xFF0C;3&amp;#x7F8E;&amp;#x5143;&amp;#x6CA1;&amp;#x6709;&amp;#x653E;&amp;#x5165;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x5F53;&amp;#x6211;&amp;#x4EEC;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5728;&lt;code&gt;out&lt;/code&gt;&amp;#x901A;&amp;#x9053;&amp;#x8FDB;&amp;#x884C;&amp;#x53D6;&amp;#x5F97;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x4E86;&lt;code&gt;nil&lt;/code&gt;,&amp;#x56E0;&amp;#x4E3A;&amp;#x901A;&amp;#x9053;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5173;&amp;#x95ED;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x6CE8;&amp;#x610F;&amp;#x5230;&lt;code&gt;hot-dog-machine-v2&lt;/code&gt;&amp;#x91CC;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x5728;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;go block&amp;#x91CC;&amp;#x8FDB;&amp;#x884C;&amp;#x4E86;&amp;#x653E;&amp;#x8FDB;&amp;#x548C;&amp;#x53D6;&amp;#x5F97;&amp;#x3002;&amp;#x8FD9;&amp;#x5F88;&amp;#x5E38;&amp;#x89C1;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&lt;em&gt;&amp;#x7BA1;&amp;#x9053;&lt;/em&gt;&amp;#x7684;&amp;#x4E00;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;:&amp;#x53EA;&amp;#x9700;&amp;#x8BA9;&lt;em&gt;in&lt;/em&gt;&amp;#x901A;&amp;#x9053;&amp;#x5229;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&lt;em&gt;out&lt;/em&gt; &amp;#x901A;&amp;#x9053;&amp;#x5229;&amp;#x7528;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x5E72;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x901A;&amp;#x8FC7;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x88AB;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6253;&amp;#x5370;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [c1 (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      c2 (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      c3 (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; c2 (&lt;span class=&quot;name&quot;&gt;clojure.string/upper-case&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; c1))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; c3 (&lt;span class=&quot;name&quot;&gt;clojure.string/reverse&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; c2))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; c3)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; c1 &lt;span class=&quot;string&quot;&gt;&amp;quot;redrum&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; MURDER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ll have more to say about process pipelines and how you can use them instead of callbacks toward the end of the chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x5148;&amp;#x8BF4;&amp;#x5230;&amp;#x8FD9;&amp;#xFF0C;&amp;#x540E;&amp;#x9762;&amp;#x518D;&amp;#x63A5;&amp;#x7740;&amp;#x8BF4;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&amp;#x5B83;&amp;#x66FF;&amp;#x4EE3;&amp;#x56DE;&amp;#x8C03;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Back to Listing 11-1! Another thing to note is that the hot dog machine doesn&amp;#x2019;t accept more money until you&amp;#x2019;ve dealt with whatever it&amp;#x2019;s dispensed. This allows you to model state-machine-like behavior, where the completion of channel operations triggers state transitions. For example, you can think of the vending machine as having two states: &lt;em&gt;ready to receive money&lt;/em&gt; and &lt;em&gt;dispensed item&lt;/em&gt;. Inserting money and taking the item trigger transitions between the two.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56DE;&amp;#x5230;list 11-1,&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x6CE8;&amp;#x610F;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;: &amp;#x70ED;&amp;#x72D7;&amp;#x673A;&amp;#x4E0D;&amp;#x4F1A;&amp;#x518D;&amp;#x6536;&amp;#x94B1;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x4F60;&amp;#x5904;&amp;#x7406;&amp;#x4E86;&amp;#x5B83;&amp;#x7ED9;&amp;#x51FA;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x8FD9;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x5BF9;&amp;#x7C7B;&amp;#x4F3C;&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6A21;&amp;#x578B;&amp;#xFF0C;&amp;#x4E92;&amp;#x8865;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x64CD;&amp;#x4F5C;&amp;#x89E6;&amp;#x53D1;&amp;#x72B6;&amp;#x6001;&amp;#x8F6C;&amp;#x6362;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BA4;&amp;#x4E3A;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x72B6;&amp;#x6001;: &lt;em&gt;&amp;#x51C6;&amp;#x5907;&amp;#x6536;&amp;#x94B1;&lt;/em&gt; &amp;#x548C; &lt;em&gt;&amp;#x7ED9;&amp;#x51FA;&amp;#x4E86;&amp;#x7269;&amp;#x54C1;&lt;/em&gt;&amp;#x3002;&amp;#x653E;&amp;#x8FDB;&amp;#x94B1;&amp;#x548C;&amp;#x62FF;&amp;#x8D70;&amp;#x7269;&amp;#x54C1;&amp;#x89E6;&amp;#x53D1;&amp;#x72B6;&amp;#x6001;&amp;#x95F4;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;alts!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;alts&quot;&gt;&lt;a href=&quot;#alts&quot; class=&quot;headerlink&quot; title=&quot;alts!!&quot;&gt;&lt;/a&gt;alts!!&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The core.async function &lt;code&gt;alts!!&lt;/code&gt; lets you use the result of the first successful channel operation among a collection of operations. We did something similar to this with delays and futures in &amp;#x201C;Delays&amp;#x201D; on page 198. In that example, we uploaded a set of headshots to a headshot-sharing site and notified the headshot owner when the first photo was uploaded. Here&amp;#x2019;s how you&amp;#x2019;d do the same with &lt;code&gt;alts!!&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;core.async&amp;#x7684;&lt;code&gt;alts!!&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x4F7F;&amp;#x7528;&amp;#x64CD;&amp;#x4F5C;&amp;#x96C6;&amp;#x5408;&amp;#x91CC;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x64CD;&amp;#x4F5C;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x672A;&amp;#x6765;&amp;#x5728;198&amp;#x9875;&amp;#x505A;&amp;#x4E86;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&amp;#x90A3;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x4F20;&amp;#x4E00;&amp;#x7EC4;&amp;#x7167;&amp;#x7247;&amp;#x5230;&amp;#x7167;&amp;#x7247;&amp;#x5171;&amp;#x4EAB;&amp;#x7F51;&amp;#x7AD9;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5F53;&amp;#x7B2C;&amp;#x4E00;&amp;#x5F20;&amp;#x4E0A;&amp;#x4F20;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#xFF0C;&amp;#x901A;&amp;#x77E5;&amp;#x4E0A;&amp;#x4F20;&amp;#x4EBA;&amp;#xFF08;&lt;a href=&quot;https://morrxy.github.io/2016/07/15/braveclojure-concurrency/#&amp;#x5EF6;&amp;#x671F;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x70B9;&amp;#x51FB;&amp;#x67E5;&amp;#x770B;&lt;/a&gt;&amp;#xFF09;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&lt;code&gt;alts!!&lt;/code&gt;&amp;#x505A;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defn upload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [headshot c]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (go (Thread/sleep (rand 100))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&amp;gt;! c headshot)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; (let [c1 (chan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      c2 (chan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      c3 (chan)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (upload &amp;quot;serious.jpg&amp;quot; c1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (upload &amp;quot;fun.jpg&amp;quot; c2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (upload &amp;quot;sassy.jpg&amp;quot; c3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B;   (let [[headshot channel] (alts!! [c1 c2 c3])]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (println &amp;quot;Sending headshot notification for&amp;quot; headshot)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; Sending headshot notification for sassy.jpg&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, the &lt;code&gt;upload&lt;/code&gt; function takes a headshot and a channel, and creates a new process that sleeps for a random amount of time (to simulate the upload) and then puts the headshot on the channel. The &lt;code&gt;let&lt;/code&gt; bindings and &lt;code&gt;upload&lt;/code&gt; function calls beginning at &amp;#x278A; should make sense: we create three channels and then use them to perform the uploads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;upload&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x7167;&amp;#x7247;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x5E76;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x7761;&amp;#x7720;&amp;#x968F;&amp;#x673A;&amp;#x65F6;&amp;#x95F4;(&amp;#x6A21;&amp;#x62DF;&amp;#x4E0A;&amp;#x4F20;)&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x628A;&amp;#x7167;&amp;#x7247;&amp;#x653E;&amp;#x8FDB;&amp;#x8FD9;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x5728;&amp;#x278A;&amp;#x5904;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;3&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x5E76;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0A;&amp;#x4F20;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Things get interesting at &amp;#x278B;. The &lt;code&gt;alts!!&lt;/code&gt; function takes a vector of channels as its argument. This is like saying, &amp;#x201C;Try to do a blocking take on each of these channels simultaneously. As soon as a take succeeds, return a vector whose first element is the value taken and whose second element is the winning channel.&amp;#x201D; In this case, the channel associated with &lt;em&gt;sassy.jpg&lt;/em&gt; received a value first. The other channels are still available if you want to take their values and do something with them. All &lt;code&gt;alts!!&lt;/code&gt; does is take a value from the first channel to have a value; it doesn&amp;#x2019;t touch the other channels.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x278B;&amp;#x5904;&amp;#xFF0C;&amp;#x4E8B;&amp;#x60C5;&amp;#x53D8;&amp;#x7684;&amp;#x6709;&amp;#x610F;&amp;#x601D;&amp;#x4E86;&amp;#x3002;&lt;code&gt;alts!!&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x901A;&amp;#x9053;&amp;#x7684;vector&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x662F;&amp;#x5728;&amp;#x8BF4;&amp;#xFF1A;&amp;#x201D;&amp;#x540C;&amp;#x65F6;&amp;#x5728;&amp;#x6BCF;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x4E0A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x963B;&amp;#x585E;&amp;#x53D6;&amp;#x5F97;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x529F;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;vector,&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x53D6;&amp;#x5F97;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x662F;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x201D;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x4E0E;&lt;em&gt;sassy.jpg&lt;/em&gt;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53D7;&amp;#x5230;&amp;#x4E86;&amp;#x503C;&amp;#x3002;&amp;#x5176;&amp;#x4ED6;&amp;#x901A;&amp;#x9053;&amp;#x7684;&amp;#x503C;&amp;#x4ECD;&amp;#x7136;&amp;#x53EF;&amp;#x7528;&amp;#x3002;&lt;code&gt;alts!!&lt;/code&gt;&amp;#x505A;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x4ECE;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x503C;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x53D6;&amp;#x5F97;&amp;#x503C;&amp;#xFF0C;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x78B0;&amp;#x5176;&amp;#x4ED6;&amp;#x901A;&amp;#x9053;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One cool aspect of &lt;code&gt;alts!!&lt;/code&gt; is that you can give it a &lt;em&gt;timeout channel&lt;/em&gt;, which waits the specified number of milliseconds and then closes. It&amp;#x2019;s an elegant mechanism for putting a time limit on concurrent operations. Here&amp;#x2019;s how you could use it with the upload service:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;alts!!&lt;/code&gt;&amp;#x5F88;cool&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x529F;&amp;#x80FD;&amp;#x662F;&amp;#xFF1A;&amp;#x53EF;&amp;#x4EE5;&amp;#x7ED9;&amp;#x5B83;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x8D85;&amp;#x65F6;&amp;#x901A;&amp;#x9053;&lt;/em&gt;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#x7B49;&amp;#x5F85;&amp;#x6307;&amp;#x5B9A;&amp;#x6BEB;&amp;#x79D2;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5173;&amp;#x95ED;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x4F18;&amp;#x96C5;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x64CD;&amp;#x4F5C;&amp;#x9650;&amp;#x65F6;&amp;#x673A;&amp;#x5236;&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [c1 (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;upload&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;serious.jpg&amp;quot;&lt;/span&gt; c1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [[headshot channel] (&lt;span class=&quot;name&quot;&gt;alts!!&lt;/span&gt; [c1 (&lt;span class=&quot;name&quot;&gt;timeout&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)])]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; headshot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sending headshot notification for&amp;quot;&lt;/span&gt; headshot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Timed out!&amp;quot;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Timed out!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, we set the timeout to 20 milliseconds. Because the upload didn&amp;#x2019;t finish in that time frame, we got a timeout message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;20&amp;#x6BEB;&amp;#x79D2;&amp;#x7684;&amp;#x8D85;&amp;#x65F6;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E0A;&amp;#x4F20;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65F6;&amp;#x9650;&amp;#x5185;&amp;#x6CA1;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5F97;&amp;#x5230;&amp;#x4E86;&amp;#x8D85;&amp;#x65F6;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also use &lt;code&gt;alts!!&lt;/code&gt; to specify put operations. To do that, place a vector inside the vector you pass to &lt;code&gt;alts!!&lt;/code&gt;, like at &amp;#x278A; in this example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;alts&lt;/code&gt;&amp;#x91CC;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x505A;&amp;#x653E;&amp;#x8FDB;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&lt;code&gt;alts&lt;/code&gt;&amp;#x7684;vector&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#xFF0C;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x8868;&amp;#x793A;&amp;#x653E;&amp;#x8FDB;&amp;#x64CD;&amp;#x4F5C;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [c1 (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      c2 (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; c2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [[value channel] (&lt;span class=&quot;name&quot;&gt;alts!!&lt;/span&gt; [c1 [c2 &lt;span class=&quot;string&quot;&gt;&amp;quot;put!&amp;quot;&lt;/span&gt;]])]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; channel c2)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here you&amp;#x2019;re creating two channels and then creating a process that&amp;#x2019;s waiting to perform a take on &lt;code&gt;c2&lt;/code&gt;. The vector that you supply to &lt;code&gt;alts!!&lt;/code&gt; tells it, &amp;#x201C;Try to do a take on &lt;code&gt;c1&lt;/code&gt; and try to put &amp;#x201C;put!&amp;#x201D; on &lt;code&gt;c2&lt;/code&gt;. If the take on &lt;code&gt;c1&lt;/code&gt; finishes first, return its value and channel. If the put on &lt;code&gt;c2&lt;/code&gt; finishes first, return &lt;code&gt;true&lt;/code&gt; if the put was successful and &lt;code&gt;false&lt;/code&gt; otherwise.&amp;#x201D; Finally, the result of &lt;code&gt;value&lt;/code&gt; (which is &lt;code&gt;true&lt;/code&gt;, because the &lt;code&gt;c2&lt;/code&gt; channel was open) prints and shows that the channel returned was indeed &lt;code&gt;c2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B49;&amp;#x7740;&amp;#x5728;&lt;code&gt;c2&lt;/code&gt;&amp;#x4E0A;&amp;#x8FDB;&amp;#x884C;&amp;#x53D6;&amp;#x5F97;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;alts!!&lt;/code&gt;&amp;#x7684;vector&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#x662F;&amp;#xFF1A;&amp;#x201C;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5728;&lt;code&gt;c1&lt;/code&gt;&amp;#x4E0A;&amp;#x8FDB;&amp;#x884C;&amp;#x53D6;&amp;#x5F97;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5728;&lt;code&gt;c2&lt;/code&gt;&amp;#x4E0A;&amp;#x653E;&amp;#x8FDB;&amp;#x201D;put!&amp;#x201D;&amp;#x3002;&amp;#x5982;&amp;#x679C;&lt;code&gt;c1&lt;/code&gt;&amp;#x4E0A;&amp;#x7684;&amp;#x53D6;&amp;#x5F97;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x90A3;&amp;#x4E2A;&amp;#x503C;&amp;#x548C;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x5982;&amp;#x679C;&lt;code&gt;c2&lt;/code&gt;&amp;#x4E0A;&amp;#x7684;&amp;#x653E;&amp;#x8FDB;&amp;#x5148;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x653E;&amp;#x8FDB;&amp;#x6210;&amp;#x529F;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;true&lt;/code&gt;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;false&lt;/code&gt;&amp;#x201D;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&lt;code&gt;value&lt;/code&gt;&amp;#x548C;&lt;code&gt;channel&lt;/code&gt;&amp;#x88AB;&amp;#x6253;&amp;#x5370;&amp;#xFF0C;&amp;#x8BC1;&amp;#x5B9E;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x786E;&amp;#x5B9E;&amp;#x662F;&lt;code&gt;c2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Like &lt;code&gt;&amp;lt;!!&lt;/code&gt; and &lt;code&gt;&amp;gt;!!&lt;/code&gt;, &lt;code&gt;alts!!&lt;/code&gt; has a parking alternative, &lt;code&gt;alts!&lt;/code&gt;, which you can use inside go blocks. &lt;code&gt;alts!&lt;/code&gt; is a nice way to exercise some choice over which of a group of channels you put or take from. It still performs puts and takes, so the same reasons to use the parking or blocking variation apply.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x540C;&lt;code&gt;&amp;lt;!!&lt;/code&gt;&amp;#x548C;&lt;code&gt;&amp;gt;!!&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&lt;code&gt;alts!&lt;/code&gt;&amp;#x4E5F;&amp;#x6709;&amp;#x4E2A;&amp;#x505C;&amp;#x6CCA;&amp;#x7248;&amp;#x53D8;&amp;#x4F53;&amp;#xFF0C;&lt;code&gt;alts!&lt;/code&gt;,&amp;#x53EA;&amp;#x80FD;&amp;#x5728;go blocks&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;code&gt;alts!&lt;/code&gt;&amp;#x662F;&amp;#x5728;&amp;#x4E00;&amp;#x7EC4;&amp;#x901A;&amp;#x9053;&amp;#x91CC;&amp;#x8FDB;&amp;#x884C;&amp;#x9009;&amp;#x62E9;&amp;#x7684;&amp;#x597D;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5B83;&amp;#x4E5F;&amp;#x6267;&amp;#x884C;&amp;#x653E;&amp;#x8FDB;&amp;#x548C;&amp;#x53D6;&amp;#x5F97;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x524D;&amp;#x9762;&amp;#x8BB2;&amp;#x8FC7;&amp;#x7684;&amp;#x4F55;&amp;#x65F6;&amp;#x4F7F;&amp;#x7528;&amp;#x505C;&amp;#x6CCA;&amp;#x6216;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#x7406;&amp;#x7531;&amp;#x540C;&amp;#x6837;&amp;#x9002;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And that covers the core.async basics! The rest of the chapter explains two common patterns for coordinating processes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;core.async&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x77E5;&amp;#x8BC6;&amp;#x8BB2;&amp;#x5B8C;&amp;#x4E86;&amp;#xFF01;&amp;#x540E;&amp;#x9762;&amp;#x8BB2;&amp;#x89E3;&amp;#x4E24;&amp;#x4E2A;&amp;#x534F;&amp;#x8C03;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x901A;&amp;#x7528;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Queues&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x961F;&amp;#x5217;&quot;&gt;&lt;a href=&quot;#&amp;#x961F;&amp;#x5217;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x961F;&amp;#x5217;&quot;&gt;&lt;/a&gt;&amp;#x961F;&amp;#x5217;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In &amp;#x201C;Rolling Your Own Queue&amp;#x201D; on page 202, you wrote a macro that let you queue futures. Processes let you use a similar technique in a more straightforward manner. Let&amp;#x2019;s say you want to get a bunch of random quotes from a website and write them to a single file. You want to make sure that only one quote is written to a file at a time so the text doesn&amp;#x2019;t get interleaved, so you put your quotes on a queue. Here&amp;#x2019;s the full code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;202&amp;#x9875;&amp;#x7684;&amp;#x201D;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&amp;#x201D;&amp;#xFF0C;&amp;#x4F60;&amp;#x5199;&amp;#x4E86;&amp;#x5B8F;&amp;#x628A;&amp;#x672A;&amp;#x6765;&amp;#x961F;&amp;#x5217;&amp;#x5316;(&lt;a href=&quot;https://morrxy.github.io/2016/07/15/braveclojure-concurrency/#&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x70B9;&amp;#x51FB;&amp;#x67E5;&amp;#x770B;&lt;/a&gt;)&amp;#x3002;&amp;#x6709;&amp;#x4E86;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4F60;&amp;#x80FD;&amp;#x7528;&amp;#x66F4;&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4F7F;&amp;#x7528;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x6280;&amp;#x5DE7;&amp;#x3002;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x60F3;&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7AD9;&amp;#x83B7;&amp;#x5F97;&amp;#x4E00;&amp;#x4E9B;&amp;#x968F;&amp;#x673A;&amp;#x7684;&amp;#x540D;&amp;#x8A00;&amp;#xFF0C;&amp;#x5E76;&amp;#x5199;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x3002;&amp;#x4F60;&amp;#x8981;&amp;#x786E;&amp;#x4FDD;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x8A00;&amp;#x5199;&amp;#x8FDB;&amp;#x6587;&amp;#x4EF6;&amp;#x4EE5;&amp;#x907F;&amp;#x514D;&amp;#x6587;&amp;#x5B57;&amp;#x4EA4;&amp;#x53E0;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;&amp;#x3002;&amp;#x4F60;&amp;#x628A;&amp;#x540D;&amp;#x8A00;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x961F;&amp;#x5217;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x5168;&amp;#x90E8;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; append-to-file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Write a string to the end of a file&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [filename s]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;spit&lt;/span&gt; filename s &lt;span class=&quot;symbol&quot;&gt;:append&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; format-quote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Delineate the beginning and end of a quote because it&amp;apos;s convenient&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [quote]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;=== BEGIN QUOTE ===\n&amp;quot;&lt;/span&gt; quote &lt;span class=&quot;string&quot;&gt;&amp;quot;=== END QUOTE ===\n\n&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; random-quote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Retrieve a random quote and format it&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;format-quote&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;slurp&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;http://www.braveclojure.com/random-quote&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; snag-quotes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [filename num-quotes]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [c (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;while&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;append-to-file&lt;/span&gt; filename (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; c))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dotimes&lt;/span&gt;&lt;/span&gt; [n num-quotes] (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; c (&lt;span class=&quot;name&quot;&gt;random-quote&lt;/span&gt;))))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The functions &lt;code&gt;append-to-file&lt;/code&gt;, &lt;code&gt;format-quote&lt;/code&gt;, and &lt;code&gt;random-quote&lt;/code&gt; have docstrings that explain what they do. &lt;code&gt;snag-quotes&lt;/code&gt; is where the interesting work happens. First, it creates a channel that&amp;#x2019;s shared between the quote-producing processes and the quote-consuming process. Then it creates a process that uses &lt;code&gt;while true&lt;/code&gt; to create an infinite loop. On every iteration of the loop, it waits for a quote to arrive on &lt;code&gt;c&lt;/code&gt; and then appends it to a file. Finally, &lt;code&gt;snag-quotes&lt;/code&gt; creates a &lt;code&gt;num-quotes&lt;/code&gt; number of processes that fetch a quote and then put it on &lt;code&gt;c&lt;/code&gt;. If you evaluate &lt;code&gt;(snag-quotes &amp;quot;quotes&amp;quot; 2)&lt;/code&gt; and check the &lt;em&gt;quotes&lt;/em&gt; file in the directory where you started your REPL, it should have two quotes:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&lt;code&gt;append-to-file&lt;/code&gt;, &lt;code&gt;format-quote&lt;/code&gt;, &amp;#x548C; &lt;code&gt;random-quote&lt;/code&gt;&amp;#x90FD;&amp;#x6709;&amp;#x6587;&amp;#x6863;&amp;#x8BF4;&amp;#x660E;&amp;#x5404;&amp;#x81EA;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x91CD;&amp;#x70B9;&amp;#x662F;&lt;code&gt;snag-quotes&lt;/code&gt;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x5B83;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x8A00;&amp;#x751F;&amp;#x4EA7;&amp;#x8FC7;&amp;#x7A0B;&amp;#x548C;&amp;#x540D;&amp;#x8A00;&amp;#x6D88;&amp;#x8D39;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5171;&amp;#x4EAB;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x7528;&lt;code&gt;while true&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65E0;&amp;#x9650;&amp;#x5FAA;&amp;#x73AF;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x6BCF;&amp;#x6B21;&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x90FD;&amp;#x7B49;&amp;#x5F85;&amp;#x540D;&amp;#x8A00;&amp;#x8FDB;&amp;#x5165;&amp;#x901A;&amp;#x9053;&lt;code&gt;c&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x628A;&amp;#x5B83;&amp;#x5199;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x6700;&amp;#x540E;&lt;code&gt;snag-quotes&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&lt;code&gt;num-quotes&lt;/code&gt;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x8A00;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x653E;&amp;#x8FDB;&amp;#x901A;&amp;#x9053;&lt;code&gt;c&lt;/code&gt;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x6C42;&amp;#x503C;&lt;code&gt;(snag-quotes &amp;quot;quotes&amp;quot; 2)&lt;/code&gt;,&amp;#x5E76;&amp;#x67E5;&amp;#x770B;REPL&amp;#x542F;&amp;#x52A8;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&lt;em&gt;quotes&lt;/em&gt;,&amp;#x5E94;&amp;#x8BE5;&amp;#x770B;&amp;#x5230;&amp;#x4E24;&amp;#x4E2A;&amp;#x540D;&amp;#x8A00;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;=== BEGIN QUOTE ===&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Nobody&amp;apos;s gonna believe that computers are intelligent until they start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;coming in late and lying about it.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=== END QUOTE ===&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=== BEGIN QUOTE ===&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Give your child mental blocks for Christmas.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=== END QUOTE ===&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This kind of queuing differs from the example in Chapter 9. In that example, each task was handled in the order it was created. Here, each quote-retrieving task is handled in the order that it finishes. In both cases, you ensure that only one quote at a time is written to a file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x79CD;&amp;#x961F;&amp;#x5217;&amp;#x4E0E;&amp;#x7B2C;9&amp;#x7AE0;&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x3002;&amp;#x7B2C;9&amp;#x7AE0;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x6309;&amp;#x7167;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x83B7;&amp;#x53D6;&amp;#x540D;&amp;#x8A00;&amp;#x4EFB;&amp;#x52A1;&amp;#x6309;&amp;#x7167;&amp;#x5B83;&amp;#x4EEC;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x4E24;&amp;#x8005;&amp;#x90FD;&amp;#x4FDD;&amp;#x8BC1;&amp;#x4E86;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x8A00;&amp;#x5199;&amp;#x5165;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Escape Callback Hell with Process Pipelines&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x907F;&amp;#x514D;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&quot;&gt;&lt;a href=&quot;#&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x907F;&amp;#x514D;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x907F;&amp;#x514D;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&quot;&gt;&lt;/a&gt;&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x907F;&amp;#x514D;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In languages without channels, you need to express the idea &amp;#x201C;when x happens, do y&amp;#x201D; with &lt;code&gt;callbacks&lt;/code&gt;. In a language like JavaScript, callbacks are a way to define code that executes asynchronously once other code finishes. If you&amp;#x2019;ve worked with JavaScript, you&amp;#x2019;ve probably spent some time wallowing in &lt;em&gt;callback hell&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6CA1;&amp;#x6709;&amp;#x901A;&amp;#x9053;&amp;#x7684;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x7528;&lt;code&gt;&amp;#x56DE;&amp;#x8C03;&lt;/code&gt;&amp;#x8868;&amp;#x793A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60F3;&amp;#x6CD5;&amp;#x201D;&amp;#x5F53;x&amp;#x53D1;&amp;#x751F;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x505A;y&amp;#x201D;&amp;#x3002;&amp;#x5728;JavaScript&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x56DE;&amp;#x8C03;&amp;#x662F;&amp;#x5B9A;&amp;#x4E49;&amp;#x5F53;&amp;#x5176;&amp;#x4ED6;&amp;#x4EE3;&amp;#x7801;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#x5F02;&amp;#x6B65;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x7528;&amp;#x8FC7;JavaScript,&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x5728;&lt;em&gt;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&lt;/em&gt;&amp;#x4E0A;&amp;#x82B1;&amp;#x8D39;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E9B;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The reason it&amp;#x2019;s called callback hell is that it&amp;#x2019;s very easy to create dependencies among layers of callbacks that aren&amp;#x2019;t immediately obvious. They end up sharing state, making it difficult to reason about the state of the overall system as the callbacks get triggered. You can avoid this depressing outcome by creating a process pipeline. That way, each unit of logic lives in its own isolated process, and all communication between units of logic occurs through explicitly defined input and output channels.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EB;&amp;#x505A;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x975E;&amp;#x5E38;&amp;#x5BB9;&amp;#x6613;&amp;#x5EFA;&amp;#x7ACB;&amp;#x56DE;&amp;#x8C03;&amp;#x5C42;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x4E0D;&amp;#x660E;&amp;#x663E;&amp;#x7684;&amp;#x4F9D;&amp;#x8D56;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x5B83;&amp;#x4EEC;&amp;#x5171;&amp;#x4EAB;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4F7F;&amp;#x56DE;&amp;#x8C03;&amp;#x89E6;&amp;#x53D1;&amp;#x65F6;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x5F88;&amp;#x96BE;&amp;#x5224;&amp;#x65AD;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x79CD;&amp;#x4EE4;&amp;#x4EBA;&amp;#x6CAE;&amp;#x4E27;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x90A3;&amp;#x6837;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x5355;&amp;#x5143;&amp;#x90FD;&amp;#x5B58;&amp;#x5728;&amp;#x4E8E;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x9694;&amp;#x79BB;&amp;#x8FC7;&amp;#x7A0B;&amp;#x91CC;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x901A;&amp;#x4FE1;&amp;#x90FD;&amp;#x901A;&amp;#x8FC7;&amp;#x660E;&amp;#x786E;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x548C;&amp;#x8F93;&amp;#x51FA;&amp;#x901A;&amp;#x9053;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the following example, we create three infinitely looping processes connected through channels, passing the out channel of one process as the in channel of the next process in the pipeline:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E09;&amp;#x4E2A;&amp;#x65E0;&amp;#x9650;&amp;#x5FAA;&amp;#x73AF;&amp;#x7684;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x901A;&amp;#x9053;&amp;#x8FDE;&amp;#x63A5;&amp;#x8D77;&amp;#x6765;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x628A;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x8F93;&amp;#x51FA;&amp;#x7684;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x4E0B;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;,&amp;#x4F5C;&amp;#x4E3A;&amp;#x4E0B;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x901A;&amp;#x9053;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; upper-caser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [in]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [out (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;while&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; out (&lt;span class=&quot;name&quot;&gt;clojure.string/upper-case&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; in)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; reverser&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [in]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [out (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;while&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;gt;!&lt;/span&gt; out (&lt;span class=&quot;name&quot;&gt;clojure.string/reverse&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; in)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; printer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [in]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;go&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;while&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&amp;lt;!&lt;/span&gt; in)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; in-chan (&lt;span class=&quot;name&quot;&gt;chan&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; upper-caser-out (&lt;span class=&quot;name&quot;&gt;upper-caser&lt;/span&gt; in-chan))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; reverser-out (&lt;span class=&quot;name&quot;&gt;reverser&lt;/span&gt; upper-caser-out))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;printer&lt;/span&gt; reverser-out)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in-chan &lt;span class=&quot;string&quot;&gt;&amp;quot;redrum&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; MURDER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&amp;gt;!!&lt;/span&gt; in-chan &lt;span class=&quot;string&quot;&gt;&amp;quot;repaid&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; DIAPER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By handling events using processes like this, it&amp;#x2019;s easier to reason about the individual steps of the overall data transformation system. You can look at each step and understand what it does without having to refer to what might have happened before it or what might happen after it; each process is as easy to reason about as a pure function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x4F7F;&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5904;&amp;#x7406;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x8F6C;&amp;#x6362;&amp;#x4E2D;&amp;#x7684;&amp;#x72EC;&amp;#x7ACB;&amp;#x6B65;&amp;#x9AA4;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&amp;#x6BCF;&amp;#x6B65;&amp;#x5E76;&amp;#x7406;&amp;#x89E3;&amp;#x5B83;&amp;#x505A;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x53C2;&amp;#x8003;&amp;#x8FD9;&amp;#x6B65;&amp;#x4E4B;&amp;#x524D;&amp;#x6216;&amp;#x4E4B;&amp;#x540E;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x90FD;&amp;#x8DDF;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EAF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Additional Resources&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x66F4;&amp;#x591A;&amp;#x8D44;&amp;#x6E90;&quot;&gt;&lt;a href=&quot;#&amp;#x66F4;&amp;#x591A;&amp;#x8D44;&amp;#x6E90;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x66F4;&amp;#x591A;&amp;#x8D44;&amp;#x6E90;&quot;&gt;&lt;/a&gt;&amp;#x66F4;&amp;#x591A;&amp;#x8D44;&amp;#x6E90;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Clojure&amp;#x2019;s core.async library was largely inspired by Go&amp;#x2019;s concurrency model, which is based on the work by Tony Hoare in &lt;em&gt;Communicating Sequential Processes&lt;/em&gt; and is available at &lt;a href=&quot;http://www.usingcsp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.usingcsp.com/&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x7684;core.async&amp;#x5E93;&amp;#x7684;&amp;#x7075;&amp;#x611F;&amp;#x4E3B;&amp;#x8981;&amp;#x6765;&amp;#x6E90;&amp;#x4E0E;Go&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x6A21;&amp;#x578B;&amp;#xFF0C;&amp;#x6B64;&amp;#x6A21;&amp;#x578B;&amp;#x57FA;&amp;#x4E8E;Tony Hoare&amp;#x7684;&amp;#x8457;&amp;#x4F5C;&lt;em&gt;Communicating Sequential Processes&lt;/em&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x67E5;&amp;#x770B; &lt;a href=&quot;http://www.usingcsp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.usingcsp.com/&lt;/a&gt; &amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rob Pike, co-creator of Go, has a good talk on concurrency, which is available at &lt;a href=&quot;https://www.youtube.com/watch?v=f6kdp27TYZs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.youtube.com/watch?v=f6kdp27TYZs&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rob Pike,Go&amp;#x7684;&amp;#x5171;&amp;#x540C;&amp;#x521B;&amp;#x9020;&amp;#x8005;&amp;#xFF0C;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x6F14;&amp;#x8BB2;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC; &lt;a href=&quot;https://www.youtube.com/watch?v=f6kdp27TYZs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.youtube.com/watch?v=f6kdp27TYZs&lt;/a&gt; &amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ClojureScript, also known as the best thing to happen to the browser, uses core.async. No more callback hell! You can learn about ClojureScript at &lt;a href=&quot;https://github.com/clojure/clojurescript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/clojure/clojurescript&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ClojureScript, &amp;#x88AB;&amp;#x79F0;&amp;#x4E3A;&amp;#xFF1A;&amp;#x5BF9;&amp;#x4E8E;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x6765;&amp;#x8BF4;&amp;#xFF0C;&amp;#x6700;&amp;#x597D;&amp;#x7684;&amp;#x4E8B;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x3002;ClojureScript&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;core.async&amp;#x3002;&amp;#x4E0D;&amp;#x5728;&amp;#x6709;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&amp;#x4E86;&amp;#xFF01;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x5B66;&amp;#x4E60;ClojureScript: &lt;a href=&quot;https://github.com/clojure/clojurescript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/clojure/clojurescript&lt;/a&gt; &amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, check out the API docs at &lt;a href=&quot;http://clojure.github.io/core.async/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clojure.github.io/core.async/&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;core.async&amp;#x7684;API&amp;#x6587;&amp;#x6863; &lt;a href=&quot;http://clojure.github.io/core.async/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clojure.github.io/core.async/&lt;/a&gt; &amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned about how core.async allows you to create concurrent processes that respond to the put and take communication events on channels. You learned about how to use &lt;code&gt;go&lt;/code&gt; and &lt;code&gt;thread&lt;/code&gt; to create concurrent processes that wait for communication events by parking and blocking. You also learned how to create process pipelines by making the out channel of one process the in channel of another, and how this allows you to write code that&amp;#x2019;s way more intelligible than nested callbacks. Finally, you meditated on whether or not you&amp;#x2019;re just a fancy hot dog vending machine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;core.async&amp;#x5141;&amp;#x8BB8;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4F1A;&amp;#x5BF9;&amp;#x901A;&amp;#x9053;&amp;#x4E0A;&amp;#x7684;&amp;#x653E;&amp;#x8FDB;&amp;#x548C;&amp;#x53D6;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x901A;&amp;#x4FE1;&amp;#x4E8B;&amp;#x4EF6;&amp;#x505A;&amp;#x51FA;&amp;#x54CD;&amp;#x5E94;&amp;#x3002;&amp;#x5B66;&amp;#x4E60;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;go&lt;/code&gt;&amp;#x548C;&lt;code&gt;thread&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x7B49;&amp;#x5F85;&amp;#x5E76;&amp;#x53D1;&amp;#x4E8B;&amp;#x4EF6;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&lt;code&gt;go&lt;/code&gt;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x505C;&amp;#x6CCA;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&lt;code&gt;thread&lt;/code&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x963B;&amp;#x585E;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&amp;#x8FD8;&amp;#x5B66;&amp;#x4E60;&amp;#x4E86;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7BA1;&amp;#x9053;&amp;#xFF0C;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x4F7F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x8F93;&amp;#x51FA;&amp;#x901A;&amp;#x9053;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x901A;&amp;#x9053;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6BD4;&amp;#x56DE;&amp;#x8C03;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x4F60;&amp;#x8FD8;&amp;#x5C31;&amp;#x4F60;&amp;#x662F;&amp;#x5426;&amp;#x53EA;&amp;#x662F;&amp;#x4E2A;&amp;#x5176;&amp;#x5999;&amp;#x7684;&amp;#x70ED;&amp;#x72D7;&amp;#x8D29;&amp;#x5356;&amp;#x673A;&amp;#x8FDB;&amp;#x884C;&amp;#x4E86;&amp;#x6DF1;&amp;#x5165;&amp;#x601D;&amp;#x8003;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>【译】Brave Clojure 第六章:组织项目:图书管理员传奇</title>
    <link href="http://yoursite.com/2016/07/29/brave-clojure-organization/"/>
    <id>http://yoursite.com/2016/07/29/brave-clojure-organization/</id>
    <published>2016-07-29T09:50:04.000Z</published>
    <updated>2016-08-04T13:55:40.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x516D;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/organization/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Organizing Your Project: A Librarian&amp;#x2019;s Tale&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morrxy.github.io/tags/Clojure-For-The-Branve-And-True/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5176;&amp;#x4ED6;&amp;#x7AE0;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Within each of us lives a librarian named Melvil, a fantastical creature who delights in the organizational arts. Day and night, Melvil yearns to bring order to your codebase. Fortunately, Clojure provides a suite of tools designed specifically to aid this homunculus in its constant struggle against the forces of chaos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x7EC4;&amp;#x4E13;&amp;#x95E8;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x7528;&amp;#x4E8E;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x6574;&amp;#x9F50;&amp;#x6709;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These tools help you organize your code by grouping together related functions and data. They also prevent name collisions so you don&amp;#x2019;t accidentally overwrite someone else&amp;#x2019;s code or vice versa. Join me in a tale of suspense and mystery as you learn how to use these tools and solve the heist of a lifetime! By the end of the saga, you&amp;#x2019;ll understand the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5DE5;&amp;#x5177;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x628A;&amp;#x76F8;&amp;#x5173;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x5206;&amp;#x6210;&amp;#x7EC4;&amp;#x3002;&amp;#x8FD8;&amp;#x9632;&amp;#x6B62;&amp;#x53D1;&amp;#x751F;&amp;#x547D;&amp;#x540D;&amp;#x51B2;&amp;#x7A81;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0E;&amp;#x522B;&amp;#x4EBA;&amp;#x7684;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4E92;&amp;#x76F8;&amp;#x8986;&amp;#x76D6;&amp;#x3002;&amp;#x5B66;&amp;#x4E60;&amp;#x5B8C;&amp;#x672C;&amp;#x7AE0;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x4E86;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E9B;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;What &lt;code&gt;def&lt;/code&gt; does&lt;/li&gt;
&lt;li&gt;What namespaces are and how to use them&lt;/li&gt;
&lt;li&gt;The relationship between namespaces and the filesystem&lt;/li&gt;
&lt;li&gt;How to use &lt;code&gt;refer&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;use&lt;/code&gt;, and &lt;code&gt;ns&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;How to organize Clojure projects using the filesystem&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;def&lt;/code&gt;&amp;#x5E72;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&lt;/li&gt;
&lt;li&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&lt;/li&gt;
&lt;li&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E0E;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528; &lt;code&gt;refer&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;use&lt;/code&gt;, &amp;#x548C; &lt;code&gt;ns&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7EC4;&amp;#x7EC7;Clojure&amp;#x9879;&amp;#x76EE;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ll start with a high-level overview of Clojure&amp;#x2019;s organizational system, which works much like a library. Melvil quivers with excitement!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x9AD8;&amp;#x5C42;&amp;#x6B21;&amp;#x7684;Clojure&amp;#x7EC4;&amp;#x7EC7;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6982;&amp;#x89C8;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5F88;&amp;#x50CF;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your Project as a Library&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x822C;&amp;#x7684;&amp;#x9879;&amp;#x76EE;&quot;&gt;&lt;a href=&quot;#&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x822C;&amp;#x7684;&amp;#x9879;&amp;#x76EE;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x822C;&amp;#x7684;&amp;#x9879;&amp;#x76EE;&quot;&gt;&lt;/a&gt;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x822C;&amp;#x7684;&amp;#x9879;&amp;#x76EE;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Real-world libraries store collections of objects, such as books, magazines, and DVDs. They use addressing systems, so when you&amp;#x2019;re given an object&amp;#x2019;s address, you can navigate to the physical space and retrieve the object.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x771F;&amp;#x5B9E;&amp;#x7684;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x5B58;&amp;#x50A8;&amp;#x7269;&amp;#x54C1;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x4E66;&amp;#xFF0C;&amp;#x6742;&amp;#x5FD7;&amp;#xFF0C;DVD&amp;#x3002;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x4F7F;&amp;#x7528;&amp;#x5730;&amp;#x5740;&amp;#x7CFB;&amp;#x7EDF;&amp;#xFF0C;&amp;#x6709;&amp;#x4E86;&amp;#x7269;&amp;#x54C1;&amp;#x5730;&amp;#x5740;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C31;&amp;#x80FD;&amp;#x627E;&amp;#x5230;&amp;#x7269;&amp;#x54C1;&amp;#x5B58;&amp;#x653E;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5E76;&amp;#x53D6;&amp;#x5F97;&amp;#x90A3;&amp;#x4E2A;&amp;#x7269;&amp;#x54C1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Of course, no human being would be expected to know offhand what a book&amp;#x2019;s or DVD&amp;#x2019;s address is. That&amp;#x2019;s why libraries record the association between an object&amp;#x2019;s title and its address and provide tools for searching these records. In ye olden times before computers, libraries provided card catalogs, which were cabinets filled with paper cards containing each book&amp;#x2019;s title, author, &amp;#x201C;address&amp;#x201D; (its Dewey decimal or Library of Congress number), and other info.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x7136;&amp;#xFF0C;&amp;#x6CA1;&amp;#x4EBA;&amp;#x80FD;&amp;#x8F7B;&amp;#x6613;&amp;#x8BB0;&amp;#x4F4F;&amp;#x4E66;&amp;#x6216;DVD&amp;#x7684;&amp;#x5730;&amp;#x5740;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x6709;&amp;#x7269;&amp;#x54C1;&amp;#x6807;&amp;#x9898;&amp;#x548C;&amp;#x5730;&amp;#x5740;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x8BB0;&amp;#x5F55;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6709;&amp;#x641C;&amp;#x7D22;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8BB0;&amp;#x5F55;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x51FA;&amp;#x73B0;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x91CC;&amp;#x6709;&amp;#x5206;&amp;#x7C7B;&amp;#x5361;&amp;#x7247;&amp;#xFF0C;&amp;#x67DC;&amp;#x5B50;&amp;#x91CC;&amp;#x653E;&amp;#x6EE1;&amp;#x4E86;&amp;#x5361;&amp;#x7247;&amp;#xFF0C;&amp;#x5361;&amp;#x7247;&amp;#x4E0A;&amp;#x6709;&amp;#x6BCF;&amp;#x672C;&amp;#x4E66;&amp;#x7684;&amp;#x4E66;&amp;#x540D;&amp;#xFF0C;&amp;#x4F5C;&amp;#x8005;&amp;#xFF0C;&amp;#x5730;&amp;#x5740;(&amp;#x675C;&amp;#x5A01;&amp;#x5C0F;&amp;#x6570;&amp;#x6216;&amp;#x56FD;&amp;#x4F1A;&amp;#x56FE;&amp;#x4E66;&amp;#x9986;&amp;#x53F7;&amp;#x7801;)&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, to find The Da Vinci Code, you would riffle through the title catalog (cards ordered by title) until you found the correct card. On that card you would see the address 813.54 (if it&amp;#x2019;s using the Dewey decimal system), navigate your library to find the shelf where The Da Vinci Code resides, and engage in the literary and/or hate-reading adventure of your lifetime.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x8981;&amp;#x627E;&amp;#x8FBE;&amp;#x82AC;&amp;#x5947;&amp;#x5BC6;&amp;#x7801;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x5FEB;&amp;#x901F;&amp;#x6D4F;&amp;#x89C8;&amp;#x5206;&amp;#x7C7B;&amp;#x76EE;&amp;#x5F55;(&amp;#x5361;&amp;#x7247;&amp;#x6309;&amp;#x6807;&amp;#x9898;&amp;#x6392;&amp;#x5E8F;)&amp;#x5E76;&amp;#x627E;&amp;#x5230;&amp;#x5361;&amp;#x7247;&amp;#x3002;&amp;#x5361;&amp;#x7247;&amp;#x4E0A;&amp;#x7684;&amp;#x5730;&amp;#x5740;&amp;#x662F;813.54(&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x675C;&amp;#x5A01;&amp;#x5C0F;&amp;#x6570;)&amp;#xFF0C;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5730;&amp;#x5740;&amp;#x627E;&amp;#x5230;&amp;#x5B58;&amp;#x653E;&amp;#x8FBE;&amp;#x82AC;&amp;#x5947;&amp;#x5BC6;&amp;#x7801;&amp;#x7684;&amp;#x4E66;&amp;#x67B6;&amp;#xFF0C;&amp;#x53D6;&amp;#x5F97;&amp;#x76EE;&amp;#x6807;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s useful to imagine a similar setup in Clojure. I think of Clojure as storing objects (like data structures and functions) in a vast set of numbered shelves. No human being could know offhand which shelf an object is stored in. Instead, we give Clojure an identifier that it uses to retrieve the object.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x65B9;&amp;#x5F0F;&amp;#x4E0E;&amp;#x6B64;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;Clojure&amp;#x628A;&amp;#x7269;&amp;#x54C1;(&amp;#x6BD4;&amp;#x5982;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x51FD;&amp;#x6570;)&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;&amp;#x8BB8;&amp;#x591A;&amp;#x6709;&amp;#x7F16;&amp;#x53F7;&amp;#x7684;&amp;#x67B6;&amp;#x5B50;&amp;#x4E0A;&amp;#x3002;&amp;#x6CA1;&amp;#x4EBA;&amp;#x80FD;&amp;#x8F7B;&amp;#x6613;&amp;#x77E5;&amp;#x9053;&amp;#x67D0;&amp;#x4E2A;&amp;#x7269;&amp;#x54C1;&amp;#x5B58;&amp;#x653E;&amp;#x5728;&amp;#x54EA;&amp;#x4E2A;&amp;#x67B6;&amp;#x5B50;&amp;#x4E0A;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7ED9;&amp;#x51FA;&amp;#x90A3;&amp;#x4E2A;&amp;#x7269;&amp;#x54C1;&amp;#x7684;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#xFF0C;Clojure&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#x53D6;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7269;&amp;#x54C1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For this to be successful, Clojure must maintain the associations between our identifiers and shelf addresses. It does this by using &lt;em&gt;namespaces&lt;/em&gt;. Namespaces contain maps between human-friendly &lt;em&gt;symbols&lt;/em&gt; and references to shelf addresses, known as vars, much like a card catalog.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x5B8C;&amp;#x6210;&amp;#x8FD9;&amp;#x4EF6;&amp;#x4E8B;&amp;#xFF0C;Clojure&amp;#x7528;&lt;em&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;/em&gt;&amp;#x4FDD;&amp;#x5B58;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#x4E0E;&amp;#x67B6;&amp;#x5B50;&amp;#x5730;&amp;#x5740;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x6620;&amp;#x5C04;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6620;&amp;#x5C04;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x5BF9;&amp;#x4EBA;&amp;#x7C7B;&amp;#x53CB;&amp;#x597D;&amp;#x7684;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&amp;#xFF0C;&amp;#x548C;&amp;#x79F0;&amp;#x4E3A;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x5BF9;&amp;#x4E8E;&amp;#x67B6;&amp;#x5B50;&amp;#x5730;&amp;#x5740;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x5F88;&amp;#x50CF;&amp;#x5361;&amp;#x7247;&amp;#x5206;&amp;#x7C7B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Technically, namespaces are objects of type &lt;code&gt;clojure.lang.Namespace&lt;/code&gt;, and you can interact with them just like you can with Clojure data structures. For example, you can refer to the current namespace with &lt;code&gt;*ns*&lt;/code&gt;, and you can get its name with &lt;code&gt;(ns-name *ns*)&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x6280;&amp;#x672F;&amp;#x4E0A;&amp;#x8BF4;&amp;#xFF0C;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x662F;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&lt;code&gt;clojure.lang.Namespace&lt;/code&gt;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x540C;&amp;#x5176;&amp;#x4ED6;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E0E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;*ns*&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;(ns-name *ns*)&lt;/code&gt;&amp;#x5F97;&amp;#x5230;&amp;#x5B83;&amp;#x7684;&amp;#x540D;&amp;#x5B57;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;ns-name&lt;/span&gt; *ns*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When you start the REPL, for example, you&amp;#x2019;re in the &lt;code&gt;user&lt;/code&gt; namespace (as you can see here). The prompt shows the current namespace using something like &lt;code&gt;user=&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x542F;&amp;#x52A8;REPL&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5904;&amp;#x4E8E;&lt;code&gt;user&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x63D0;&amp;#x793A;&amp;#x7B26;&amp;#x663E;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;user=&amp;gt;&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea of a current namespace implies that you can have more than one, and indeed Clojure allows you to create as many namespaces as you want (although technically, there might be an upper limit to the number of names you can create). In Clojure programs, you are always in a namespace.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x968F;&amp;#x610F;&amp;#x521B;&amp;#x5EFA;&amp;#x591A;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;(&amp;#x6280;&amp;#x672F;&amp;#x4E0A;&amp;#x6709;&amp;#x4E0A;&amp;#x9650;)&amp;#x3002;Clojure&amp;#x7A0B;&amp;#x5E8F;&amp;#x603B;&amp;#x662F;&amp;#x5904;&amp;#x4E8E;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As for symbols, you&amp;#x2019;ve been using them this entire time without even realizing it. For example, when you write &lt;code&gt;(map inc [1 2])&lt;/code&gt;, both &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;inc&lt;/code&gt; are symbols. Symbols are data types within Clojure, and I&amp;#x2019;ll explain them thoroughly in the next chapter. For now, all you need to know is that when you give Clojure a symbol like &lt;code&gt;map&lt;/code&gt;, it finds the corresponding var in the current namespace, gets a shelf address, and retrieves an object from that shelf for you&amp;#x2014;in this case, the function that &lt;code&gt;map&lt;/code&gt; refers to. If you want to just use the symbol itself, and not the thing it refers to, you have to quote it. Quoting any Clojure form tells Clojure not to evaluate it but to treat it as data. The next few examples show what happens when you quote a form.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BF4;&amp;#x5230;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x4F60;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x6CA1;&amp;#x6709;&amp;#x610F;&amp;#x8BC6;&amp;#x5230;&amp;#x5B83;&amp;#x4EEC;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x4EE3;&amp;#x7801;&lt;code&gt;(map inc [1 2])&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;inc&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x7B26;&amp;#x53F7;&amp;#x662F;Clojure&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x4E0B;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BE6;&amp;#x7EC6;&amp;#x89E3;&amp;#x91CA;(&lt;a href=&quot;https://morrxy.github.io/2016/05/11/braveclojure-read-and-eval/#&amp;#x7B26;&amp;#x53F7;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x70B9;&amp;#x6B64;&amp;#x67E5;&amp;#x770B;&lt;/a&gt;)&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#xFF1A;&amp;#x5F53;&amp;#x4F60;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;map&lt;/code&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x4ECE;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x67B6;&amp;#x5B50;&amp;#x5730;&amp;#x5740;&amp;#xFF0C;&amp;#x4ECE;&amp;#x90A3;&amp;#x4E2A;&amp;#x67B6;&amp;#x5B50;&amp;#x53D6;&amp;#x56DE;&amp;#x4F60;&amp;#x8981;&amp;#x7684;&amp;#x7269;&amp;#x54C1;&amp;#xFF0C;&amp;#x5373;&lt;code&gt;map&lt;/code&gt;&amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x7B26;&amp;#x53F7;&amp;#x672C;&amp;#x8EAB;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x5F15;&amp;#x7528;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x4EFB;&amp;#x4F55;&amp;#x88AB;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x88AB;Clojure&amp;#x5F53;&amp;#x4F5C;&amp;#x6570;&amp;#x636E;&amp;#x800C;&amp;#x4E0D;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; inc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;lt;core$inc clojure.core$inc@30132014&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B; &amp;apos;inc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; inc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278C; (map inc [1 2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278D; &amp;apos;(map inc [1 2])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (map inc [1 2])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When you evaluate &lt;code&gt;inc&lt;/code&gt; in the REPL at &amp;#x278A;, it prints out the textual representation of the function that &lt;code&gt;inc&lt;/code&gt; refers to. Next, you quote &lt;code&gt;inc&lt;/code&gt; at &amp;#x278B;, so the result is the symbol &lt;code&gt;inc&lt;/code&gt;. Then, you evaluate a familiar &lt;code&gt;map&lt;/code&gt; application at &amp;#x278C; and get a familiar result. After that, you quote the entire list data structure at &amp;#x278D;, resulting in an unevaluated list that includes the &lt;code&gt;map&lt;/code&gt; symbol, the &lt;code&gt;inc&lt;/code&gt; symbol, and a vector.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x278A;&amp;#x5904;:&amp;#x5BF9;&lt;code&gt;inc&lt;/code&gt;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x51FA;&lt;code&gt;inc&lt;/code&gt;&amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x8868;&amp;#x793A;&amp;#x3002;&amp;#x278B;&amp;#x5904;:&amp;#x5F15;&amp;#x7528;&lt;code&gt;inc&lt;/code&gt;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;inc&lt;/code&gt;&amp;#x3002;&amp;#x278C;&amp;#x5904;:&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;map&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x719F;&amp;#x6089;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x278D;&amp;#x5904;&amp;#xFF0C;&amp;#x5F15;&amp;#x7528;&amp;#x6574;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list,&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;,&lt;code&gt;inc&lt;/code&gt;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that you know about Clojure&amp;#x2019;s organization system, let&amp;#x2019;s look at how to use it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;Clojure&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x7CFB;&amp;#x7EDF;&amp;#xFF0C;&amp;#x6765;&amp;#x770B;&amp;#x770B;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Storing Objects with def&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7528;def&amp;#x4FDD;&amp;#x5B58;&amp;#x5BF9;&amp;#x8C61;&quot;&gt;&lt;a href=&quot;#&amp;#x7528;def&amp;#x4FDD;&amp;#x5B58;&amp;#x5BF9;&amp;#x8C61;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7528;def&amp;#x4FDD;&amp;#x5B58;&amp;#x5BF9;&amp;#x8C61;&quot;&gt;&lt;/a&gt;&amp;#x7528;def&amp;#x4FDD;&amp;#x5B58;&amp;#x5BF9;&amp;#x8C61;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The primary tool in Clojure for storing objects is &lt;code&gt;def&lt;/code&gt;. Other tools like &lt;code&gt;defn&lt;/code&gt; use &lt;code&gt;def&lt;/code&gt; under the hood. Here&amp;#x2019;s an example of def in action:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x91CC;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x50A8;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x5DE5;&amp;#x5177;&amp;#x662F;&lt;code&gt;def&lt;/code&gt;&amp;#x3002;&lt;code&gt;defn&lt;/code&gt;&amp;#x7B49;&amp;#x5176;&amp;#x4ED6;&amp;#x5DE5;&amp;#x5177;&amp;#x5185;&amp;#x90E8;&amp;#x4E5F;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;def&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;def&amp;#x7684;&amp;#x5B9E;&amp;#x9645;&amp;#x4F7F;&amp;#x7528;&amp;#x4F8B;&amp;#x5B50;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(def great-books [&amp;quot;East of Eden&amp;quot; &amp;quot;The Glass Bead Game&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;apos;user/great-books&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;great-books&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;East of Eden&amp;quot; &amp;quot;The Glass Bead Game&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code tells Clojure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Update the current namespace&amp;#x2019;s map with the association between &lt;code&gt;great-books&lt;/code&gt; and the var.&lt;/li&gt;
&lt;li&gt;Find a free storage shelf.&lt;/li&gt;
&lt;li&gt;Store &lt;code&gt;[&amp;quot;East of Eden&amp;quot; &amp;quot;The Glass Bead Game&amp;quot;]&lt;/code&gt; on the shelf.&lt;/li&gt;
&lt;li&gt;Write the address of the shelf on the var.&lt;/li&gt;
&lt;li&gt;Return the var (in this case, &lt;code&gt;#&amp;apos;user/great-books&lt;/code&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x544A;&amp;#x8BC9;Clojure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x7528;&lt;code&gt;great-books&lt;/code&gt;&amp;#x4E0E;&lt;code&gt;def&lt;/code&gt;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x66F4;&amp;#x65B0;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x627E;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x5B58;&amp;#x50A8;&amp;#x67B6;&amp;#x5B50;&lt;/li&gt;
&lt;li&gt;&amp;#x628A;&lt;code&gt;[&amp;quot;East of Eden&amp;quot; &amp;quot;The Glass Bead Game&amp;quot;]&lt;/code&gt;&amp;#x5B58;&amp;#x653E;&amp;#x5728;&amp;#x54EA;&amp;#x4E2A;&amp;#x67B6;&amp;#x5B50;&amp;#x4E0A;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x53D8;&amp;#x91CF;&amp;#x4E0A;&amp;#x5199;&amp;#x4E0A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x67B6;&amp;#x5B50;&amp;#x7684;&amp;#x5730;&amp;#x5740;&lt;/li&gt;
&lt;li&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;(&lt;code&gt;#&amp;apos;user/great-books&lt;/code&gt;)&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;This process is called &lt;em&gt;interning&lt;/em&gt; a var. You can interact with a namespace&amp;#x2019;s map of symbols-to-interned-vars using &lt;code&gt;ns-interns&lt;/code&gt;. Here&amp;#x2019;s how you&amp;#x2019;d get a map of interned vars:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53EB;&amp;#x53D8;&amp;#x91CF;&lt;em&gt;&amp;#x9A7B;&amp;#x7559;&lt;/em&gt;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;ns-interns&lt;/code&gt;&amp;#x67E5;&amp;#x770B;&amp;#x9A7B;&amp;#x7559;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;ns-interns&lt;/span&gt; *ns*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {great-books #&amp;apos;user/great-books}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can use the get function to &lt;code&gt;get&lt;/code&gt; a specific var:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;get&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5F97;&amp;#x5230;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;get&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;ns-interns&lt;/span&gt; *ns*) &amp;apos;great-books)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; #&amp;apos;user/great-books&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By evaluating &lt;code&gt;(ns-map *ns*)&lt;/code&gt;, you can also get the full map that the namespace uses for looking up a var when given a symbol. &lt;code&gt;(ns-map *ns*)&lt;/code&gt; gives you a very large map that I won&amp;#x2019;t print here, but try it out!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6C42;&amp;#x503C;&lt;code&gt;(ns-map *ns*)&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x5B8C;&amp;#x5168;&amp;#x6620;&amp;#x5C04;&amp;#xFF0C;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6620;&amp;#x5C04;&amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x5F88;&amp;#x957F;&amp;#xFF0C;&amp;#x6211;&amp;#x5C31;&amp;#x4E0D;&amp;#x6253;&amp;#x5370;&amp;#x4E86;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x8981;&amp;#x8BD5;&amp;#x8BD5;&amp;#xFF01;&lt;/p&gt;
&lt;p&gt;[&amp;#x8BD1;&amp;#x8005;&amp;#x589E;&amp;#x52A0;]&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/29/brave-clojure-organization/ns-map.png&quot; alt=&quot;ns-map&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;#&amp;apos;user/great-books&lt;/code&gt; is the &lt;em&gt;reader form&lt;/em&gt; of a var. I&amp;#x2019;ll explain more about reader forms in Chapter 7. For now, just know that you can use &lt;code&gt;#&amp;apos;&lt;/code&gt; to grab hold of the var corresponding to the symbol that follows; &lt;code&gt;#&amp;apos;user/great-books&lt;/code&gt; lets you use the var associated with the symbol &lt;code&gt;great-books&lt;/code&gt; within the &lt;code&gt;user&lt;/code&gt; namespace. We can &lt;code&gt;deref&lt;/code&gt; vars to get the objects they point to:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;#&amp;apos;user/great-books&lt;/code&gt;&amp;#x662F;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt;&amp;#x3002;&amp;#x7B2C;&amp;#x4E03;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BE6;&amp;#x7EC6;&amp;#x8BB2;&amp;#x89E3;(&lt;a href=&quot;https://morrxy.github.io/2016/05/11/braveclojure-read-and-eval/#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x70B9;&amp;#x6B64;&amp;#x67E5;&amp;#x770B;&lt;/a&gt;)&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x53EA;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#xFF1A;&amp;#x7528;&lt;code&gt;#&amp;apos;&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x5176;&amp;#x540E;&amp;#x7B26;&amp;#x53F7;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;code&gt;#&amp;apos;user/great-books&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&lt;code&gt;user&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E0B;&amp;#x7684;&amp;#xFF0C;&lt;code&gt;great-books&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x5173;&amp;#x8054;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;deref&lt;/code&gt;&amp;#x5F97;&amp;#x5230;&amp;#x53D8;&amp;#x91CF;&amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#x503C;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; #&amp;apos;user/great-books)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; [&amp;quot;East of Eden&amp;quot; &amp;quot;The Glass Bead Game&amp;quot;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is like telling Clojure, &amp;#x201C;Get the shelf number from the var, go to that shelf number, grab what&amp;#x2019;s on it, and give it to me!&amp;#x201D;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x50CF;&amp;#x544A;&amp;#x8BC9;Clojure&amp;#xFF0C;&amp;#x201D;&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x5F97;&amp;#x5230;&amp;#x67B6;&amp;#x5B50;&amp;#x7F16;&amp;#x53F7;&amp;#xFF0C;&amp;#x53BB;&amp;#x90A3;&amp;#x4E2A;&amp;#x67B6;&amp;#x5B50;&amp;#x90A3;&amp;#x91CC;&amp;#xFF0C;&amp;#x628A;&amp;#x653E;&amp;#x5728;&amp;#x5B83;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x62FF;&amp;#x7ED9;&amp;#x6211;&amp;#xFF01;&amp;#x201D;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But normally, you would just use the symbol:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x822C;&amp;#x60C5;&amp;#x51B5;&amp;#x6211;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;great-books&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;East of Eden&amp;quot; &amp;quot;The Glass Bead Game&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is like telling Clojure, &amp;#x201C;Retrieve the var associated with great-books and deref that bad Jackson.&amp;#x201D;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x50CF;&amp;#x544A;&amp;#x8BC9;Clojure,&amp;#x201C;&amp;#x53D6;&amp;#x5F97;&amp;#x4E0E;great-books&amp;#x5173;&amp;#x8054;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5B83;&amp;#x53D6;&amp;#x503C;&amp;#x201D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So far so good, right? Well, brace yourself, because this idyllic paradise of organization is about to be turned upside down! Call &lt;code&gt;def&lt;/code&gt; again with the same symbol:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x4E00;&amp;#x5207;&amp;#x90FD;&amp;#x4E0D;&amp;#x9519;&amp;#x3002;&amp;#x4F46;&amp;#x79E9;&amp;#x5E8F;&amp;#x5C06;&amp;#x88AB;&amp;#x6253;&amp;#x4E71;&amp;#xFF01;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x518D;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&lt;code&gt;def&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(def great-books [&amp;quot;The Power of Bees&amp;quot; &amp;quot;Journey to Upstairs&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;great-books&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;The Power of Bees&amp;quot; &amp;quot;Journey to Upstairs&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/29/brave-clojure-organization/bee-power.png&quot; alt=&quot;bee-power&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The var has been updated with the address of the new vector. It&amp;#x2019;s like you used white-out on the address on a card in the card catalog and then wrote a new address. The result is that you can no longer ask Clojure to find the first vector. This is referred to as a &lt;em&gt;name collision&lt;/em&gt;. Chaos! Anarchy!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x5DF2;&amp;#x7ECF;&amp;#x88AB;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x7528;&amp;#x65B0;&amp;#x7684;vector&amp;#x5730;&amp;#x5740;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4F60;&amp;#x628A;&amp;#x5206;&amp;#x7C7B;&amp;#x5361;&amp;#x7247;&amp;#x4E0A;&amp;#x7684;&amp;#x5730;&amp;#x5740;&amp;#x6D82;&amp;#x767D;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5199;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x5730;&amp;#x5740;&amp;#x3002;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x518D;&amp;#x4E5F;&amp;#x627E;&amp;#x4E0D;&amp;#x5230;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x3002;&amp;#x8FD9;&amp;#x88AB;&amp;#x79F0;&amp;#x4E3A;&lt;em&gt;&amp;#x547D;&amp;#x540D;&amp;#x51B2;&amp;#x7A81;&lt;/em&gt;&amp;#x3002;&amp;#x5168;&amp;#x4E71;&amp;#x4E86;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You may have experienced this in other programming languages. JavaScript is notorious for it, and it happens in Ruby as well. It&amp;#x2019;s a problem because you can unintentionally overwrite your own code, and you also have no guarantee that a third-party library won&amp;#x2019;t overwrite your code. Melvil recoils in horror! Fortunately, Clojure allows you to create as many namespaces as you like so you can avoid these collisions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#x7ECF;&amp;#x5386;&amp;#x8FC7;&amp;#x547D;&amp;#x540D;&amp;#x51B2;&amp;#x7A81;&amp;#x3002;JavaScript&amp;#x5BF9;&amp;#x6B64;&amp;#x81ED;&amp;#x540D;&amp;#x662D;&amp;#x8457;&amp;#xFF0C;Ruby&amp;#x91CC;&amp;#x4E5F;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x65E0;&amp;#x610F;&amp;#x5730;&amp;#x8986;&amp;#x76D6;&amp;#x81EA;&amp;#x5DF1;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x4E5F;&amp;#x65E0;&amp;#x6CD5;&amp;#x4FDD;&amp;#x8BC1;&amp;#x7B2C;&amp;#x4E09;&amp;#x65B9;&amp;#x5E93;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8986;&amp;#x76D6;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x4E3A;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;Clojure&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x521B;&amp;#x5EFA;&amp;#x4EFB;&amp;#x610F;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Creating and Switching to Namespaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&quot;&gt;&lt;a href=&quot;#&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&quot;&gt;&lt;/a&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Clojure has three tools for creating namespaces: the function &lt;code&gt;create-ns&lt;/code&gt;, the function &lt;code&gt;in-ns&lt;/code&gt;, and the macro &lt;code&gt;ns&lt;/code&gt;. You&amp;#x2019;ll mostly use the &lt;code&gt;ns&lt;/code&gt; macro in your Clojure files, but I&amp;#x2019;ll hold off on explaining it for a few pages because it combines many tools, and it&amp;#x2019;s easier to understand after I discuss each of the other tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x5DE5;&amp;#x5177;&amp;#x7528;&amp;#x4E8E;&amp;#x521B;&amp;#x5EFA;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;:&lt;code&gt;create-ns&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;in-ns&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;ns&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x4F60;&amp;#x901A;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;ns&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F46;&amp;#x6211;&amp;#x4F1A;&amp;#x63A8;&amp;#x8FDF;&amp;#x89E3;&amp;#x91CA;&amp;#x5B83;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x7ED3;&amp;#x5408;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;&amp;#x5176;&amp;#x4ED6;&amp;#x5DE5;&amp;#x5177;&amp;#x540E;&amp;#xFF0C;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x5B83;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;create-ns&lt;/code&gt; takes a symbol, creates a namespace with that name if it doesn&amp;#x2019;t exist already, and returns the namespace:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;create-ns&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x540D;&amp;#x5B57;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x5C31;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x540D;&amp;#x5B57;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (create-ns &amp;apos;cheese.taxonomy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;lt;Namespace cheese.taxonomy&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can use the returned namespace as an argument in a function call:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (ns-name (create-ns &amp;apos;cheese.taxonomy))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; cheese-taxonomy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In practice, you&amp;#x2019;ll probably never use &lt;code&gt;create-ns&lt;/code&gt; in your code, because it&amp;#x2019;s not very useful to create a namespace and not move into it. Using &lt;code&gt;in-ns&lt;/code&gt; is more common because it creates the namespace if it doesn&amp;#x2019;t exist and switches to it, as shown in Listing 6-1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#xFF0C;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x53EF;&amp;#x80FD;&amp;#x6C38;&amp;#x8FDC;&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;create-ns&lt;/code&gt;,&amp;#x56E0;&amp;#x4E3A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x8FDB;&amp;#x5165;&amp;#x5B83;&amp;#xFF0C;&amp;#x6CA1;&amp;#x4EC0;&amp;#x4E48;&amp;#x7528;&amp;#x3002;&lt;code&gt;in-ns&lt;/code&gt;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x66F4;&amp;#x4E3A;&amp;#x5E38;&amp;#x89C1;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x5982;&amp;#x5217;&amp;#x8868;6-1&amp;#x6240;&amp;#x793A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;6-1. Using in-ns to create a namespace and switch to it&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6-1 &amp;#x7528;in-ns&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (in-ns &amp;apos;cheese.analysis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;lt;Namespace cheese.analysis&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that your REPL prompt is now &lt;code&gt;cheese.analysis&amp;gt;&lt;/code&gt;, indicating that you are indeed in the new namespace you just created. Now when you use def, it will store the named object in the &lt;code&gt;cheese.analysis&lt;/code&gt; namespace.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x73B0;&amp;#x5728;&amp;#x7684;REPL&amp;#x63D0;&amp;#x793A;&amp;#x7B26;&amp;#x662F;&lt;code&gt;cheese.analysis&amp;gt;&lt;/code&gt;,&amp;#x8BF4;&amp;#x660E;&amp;#x4F60;&amp;#x73B0;&amp;#x5728;&amp;#x786E;&amp;#x5B9E;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B0;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x4F7F;&amp;#x7528;def,&amp;#x4F1A;&amp;#x628A;&amp;#x547D;&amp;#x540D;&amp;#x5BF9;&amp;#x8C61;&amp;#x5B58;&amp;#x50A8;&amp;#x5728;&lt;code&gt;cheese.analysis&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But what if you want to use functions and data from other name&amp;#xAD;spaces? To do that, you can use a &lt;em&gt;fully qualified&lt;/em&gt; symbol. The general form is namespace&lt;code&gt;/&lt;/code&gt;name:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x4F7F;&amp;#x7528;&amp;#x5176;&amp;#x4ED6;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8BE5;&amp;#x600E;&amp;#x4E48;&amp;#x529E;&amp;#x5462;&amp;#xFF1F;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;em&gt;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&lt;/em&gt;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x901A;&amp;#x7528;&amp;#x5F62;&amp;#x5F0F;&amp;#x662F;namespace&lt;code&gt;/&lt;/code&gt;name:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (in-ns &amp;apos;cheese.taxonomy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.taxonomy=&amp;gt; (def cheddars [&amp;quot;mild&amp;quot; &amp;quot;medium&amp;quot; &amp;quot;strong&amp;quot; &amp;quot;sharp&amp;quot; &amp;quot;extra sharp&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.taxonomy=&amp;gt; (in-ns &amp;apos;cheese.analysis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; cheddars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; Exception: Unable to resolve symbol: cheddars in this context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This creates a new namespace, &lt;code&gt;cheese.taxonomy&lt;/code&gt;, defines &lt;code&gt;cheddars&lt;/code&gt; in that namespace, and then switches back to the &lt;code&gt;cheese.analysis&lt;/code&gt; namespace. You&amp;#x2019;ll get an exception if you try to refer to the &lt;code&gt;cheese.taxonomy&lt;/code&gt; namespace&amp;#x2019;s &lt;code&gt;cheddars&lt;/code&gt; from within &lt;code&gt;cheese.analysis&lt;/code&gt;, but using the fully qualified symbol works:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&lt;code&gt;cheese.taxonomy&lt;/code&gt;,&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&lt;code&gt;cheddars&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x5207;&amp;#x6362;&amp;#x56DE;&lt;code&gt;cheese.analysis&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4ECE;&lt;code&gt;cheese.analysis&lt;/code&gt;&amp;#x91CC;&amp;#x5F15;&amp;#x7528;&lt;code&gt;cheese.taxonomy&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&lt;code&gt;cheddars&lt;/code&gt;,&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&amp;#x4F46;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x6CA1;&amp;#x95EE;&amp;#x9898;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; cheese.taxonomy/cheddars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;mild&amp;quot; &amp;quot;medium&amp;quot; &amp;quot;strong&amp;quot; &amp;quot;sharp&amp;quot; &amp;quot;extra sharp&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Typing these fully qualified symbols can quickly become a nuisance. For instance, say I&amp;#x2019;m an extremely impatient academic specializing in semiotics-au-fromage, or the study of symbols as they relate to cheese.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8F93;&amp;#x5165;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x5F88;&amp;#x5FEB;&amp;#x5C31;&amp;#x53D8;&amp;#x6210;&amp;#x4E00;&amp;#x4EF6;&amp;#x9EBB;&amp;#x70E6;&amp;#x4E8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Suddenly, the worst conceivable thing that could possibly happen happens! All across the world, sacred and historically important cheeses have gone missing. Wisconsin&amp;#x2019;s Standard Cheddar: gone! The Great Cheese Jars of Tutankhamun: stolen! The Cheese of Turin: replaced with a hoax cheese! This threatens to throw the world into total chaos for some reason! Naturally, as a distinguished cheese researcher, I am honor-bound to solve this mystery. Meanwhile, I&amp;#x2019;m being chased by the Illuminati, the Freemasons, and the Foot Clan!&lt;/p&gt;
&lt;p&gt;Because I&amp;#x2019;m an academic, I attempt to solve this mystery the best way I know how&amp;#x2014;by heading to the library and researching the shit out of it. My trusty assistant, Clojure, accompanies me. As we bustle from namespace to namespace, I shout at Clojure to hand me one thing after another.&lt;/p&gt;
&lt;p&gt;But Clojure is kind of dumb and has a hard time figuring out what I&amp;#x2019;m referring to. From within the user namespace, I belt out, &amp;#x201C;&lt;code&gt;join&lt;/code&gt;! Give me &lt;code&gt;join&lt;/code&gt;!&amp;#x201D;&amp;#x2014;specks of spittle flying from my mouth. &amp;#x201C;&lt;code&gt;RuntimeException: Unable to resolve symbol: join&lt;/code&gt;,&amp;#x201D; Clojure whines in response. &amp;#x201C;For the love of brie, just hand me &lt;code&gt;clojure.string/join&lt;/code&gt;!&amp;#x201D; I retort, and Clojure dutifully hands me the function I was looking for.&lt;/p&gt;
&lt;p&gt;My voice gets hoarse. I need some way to tell Clojure what objects to get me without having to use the fully qualified symbol every. damn. time.&lt;/p&gt;
&lt;p&gt;Luckily, Clojure provides the &lt;code&gt;refer&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; tools that let me yell at it more succinctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E78;&amp;#x8FD0;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&lt;code&gt;refer&lt;/code&gt;&amp;#x548C;&lt;code&gt;alias&lt;/code&gt;,&amp;#x80FD;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;refer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;refer&quot;&gt;&lt;a href=&quot;#refer&quot; class=&quot;headerlink&quot; title=&quot;refer&quot;&gt;&lt;/a&gt;refer&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;refer&lt;/code&gt; gives you fine-grained control over how you refer to objects in other namespaces. Fire up a new REPL session and try the following. Keep in mind that it&amp;#x2019;s okay to play around with namespaces like this in the REPL, but you don&amp;#x2019;t want your Clojure files to look like this; the proper way to structure your files is covered in &lt;a href=&quot;#&quot;&gt;&amp;#x201C;Real Project Organization&amp;#x201D; on page 133&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;refer&lt;/code&gt;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x5F15;&amp;#x7528;&amp;#x5176;&amp;#x4ED6;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x7EC6;&amp;#x7C92;&amp;#x5EA6;&amp;#x63A7;&amp;#x5236;&amp;#x3002;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;REPL,&amp;#x5C1D;&amp;#x8BD5;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x8BB0;&amp;#x4F4F;&amp;#xFF0C;&amp;#x5728;REPL&amp;#x91CC;&amp;#x8FD9;&amp;#x4E48;&amp;#x73A9;&amp;#x6CA1;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4F46;&amp;#x522B;&amp;#x5728;Clojure&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x8FD9;&amp;#x4E48;&amp;#x5E72;&amp;#x3002;&amp;#x540E;&amp;#x9762;&amp;#x4F1A;&amp;#x8BB2;&amp;#x5230;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x600E;&amp;#x4E48;&amp;#x505A;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (in-ns &amp;apos;cheese.taxonomy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.taxonomy=&amp;gt; (def cheddars [&amp;quot;mild&amp;quot; &amp;quot;medium&amp;quot; &amp;quot;strong&amp;quot; &amp;quot;sharp&amp;quot; &amp;quot;extra sharp&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.taxonomy=&amp;gt; (def bries [&amp;quot;Wisconsin&amp;quot; &amp;quot;Somerset&amp;quot; &amp;quot;Brie de Meaux&amp;quot; &amp;quot;Brie de Melun&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.taxonomy=&amp;gt; (in-ns &amp;apos;cheese.analysis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/refer &amp;apos;cheese.taxonomy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;Wisconsin&amp;quot; &amp;quot;Somerset&amp;quot; &amp;quot;Brie de Meaux&amp;quot; &amp;quot;Brie de Melun&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; cheddars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;mild&amp;quot; &amp;quot;medium&amp;quot; &amp;quot;strong&amp;quot; &amp;quot;sharp&amp;quot; &amp;quot;extra sharp&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code creates a &lt;code&gt;cheese.taxonomy&lt;/code&gt; namespace and two vectors within it: &lt;code&gt;cheddars&lt;/code&gt; and &lt;code&gt;bries&lt;/code&gt;. Then it creates and moves to a new namespace called &lt;code&gt;cheese.analysis&lt;/code&gt;. Calling &lt;code&gt;refer&lt;/code&gt; with a namespace symbol lets you refer to the corresponding namespace&amp;#x2019;s objects without having to use fully qualified symbols. It does this by updating the current namespace&amp;#x2019;s symbol/object map. You can see the new entries like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;code&gt;cheese.taxonomy&lt;/code&gt;&amp;#xFF0C;&amp;#x5E76;&amp;#x5728;&amp;#x5176;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;vector,&lt;code&gt;cheddars&lt;/code&gt;&amp;#x548C;&lt;code&gt;bries&lt;/code&gt;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;code&gt;cheese.analysis&lt;/code&gt;&amp;#x3002;&amp;#x8C03;&amp;#x7528;&lt;code&gt;refer&lt;/code&gt;&amp;#x52A0;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7B26;&amp;#x53F7;&amp;#x4EE5;&amp;#x540E;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F15;&amp;#x7528;&amp;#x90A3;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x7528;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528;&amp;#x66F4;&amp;#x65B0;&amp;#x4E86;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;/&amp;#x5BF9;&amp;#x8C61;&amp;#x6620;&amp;#x5C04;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x6837;&amp;#x770B;&amp;#x5230;&amp;#x65B0;&amp;#x6761;&amp;#x76EE;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/get (clojure.core/ns-map clojure.core/*ns*) &amp;apos;bries)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;apos;cheese.taxonomy/bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/get (clojure.core/ns-map clojure.core/*ns*) &amp;apos;cheddars)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;apos;cheese.taxonomy/cheddars&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s as if Clojure&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Calls &lt;code&gt;ns-interns&lt;/code&gt; on the &lt;code&gt;cheese.taxonomy&lt;/code&gt; namespace&lt;/li&gt;
&lt;li&gt;Merges that with the &lt;code&gt;ns-map&lt;/code&gt; of the current namespace&lt;/li&gt;
&lt;li&gt;Makes the result the new &lt;code&gt;ns-map&lt;/code&gt; of the current namespace&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C31;&amp;#x597D;&amp;#x50CF;Clojure&amp;#x505A;&amp;#x4E86;&amp;#x5982;&amp;#x4E0B;&amp;#x4E8B;&amp;#x60C5;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5728;&lt;code&gt;cheese.taxonomy&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E0A;&amp;#x8C03;&amp;#x7528;&lt;code&gt;ns-interns&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x628A;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x4E0E;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&lt;code&gt;ns-map&lt;/code&gt;&amp;#x5408;&amp;#x5E76;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(ns-map *ns*)&lt;/code&gt; &amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x53D8;&amp;#x6210;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;When you call &lt;code&gt;refer&lt;/code&gt;, you can also pass it the filters &lt;code&gt;:only&lt;/code&gt;, &lt;code&gt;:exclude&lt;/code&gt;, and &lt;code&gt;:rename&lt;/code&gt;. As the names imply, &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:exclude&lt;/code&gt; restrict which symbol/var mappings get merged into the current namespace&amp;#x2019;s &lt;code&gt;ns-map&lt;/code&gt;. &lt;code&gt;:rename&lt;/code&gt; lets you use different symbols for the vars being merged in. Here&amp;#x2019;s what would happen if we had modified the preceding example to use &lt;code&gt;:only&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;&lt;code&gt;refer&lt;/code&gt;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x589E;&amp;#x52A0;&amp;#x53C2;&amp;#x6570;: &lt;code&gt;:only&lt;/code&gt;,&lt;code&gt;:exclude&lt;/code&gt;&amp;#x548C;&lt;code&gt;:rename&lt;/code&gt;&amp;#x3002;&lt;code&gt;:only&lt;/code&gt;&amp;#x548C;&lt;code&gt;:exclude&lt;/code&gt;&amp;#x9650;&amp;#x5236;&amp;#x5408;&amp;#x5E76;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;code&gt;:rename&lt;/code&gt;&amp;#x8BA9;&amp;#x4F60;&amp;#x5BF9;&amp;#x5408;&amp;#x5E76;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x4F7F;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;:only&lt;/code&gt;,&amp;#x7ED3;&amp;#x679C;&amp;#x4F1A;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/refer &amp;apos;cheese.taxonomy :only [&amp;apos;bries])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;Wisconsin&amp;quot; &amp;quot;Somerset&amp;quot; &amp;quot;Brie de Meaux&amp;quot; &amp;quot;Brie de Melun&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; cheddars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; RuntimeException: Unable to resolve symbol: cheddars&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;And here&amp;#x2019;s &lt;code&gt;:exclude&lt;/code&gt; in action:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&lt;code&gt;:exclude&lt;/code&gt;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/refer &amp;apos;cheese.taxonomy :exclude [&amp;apos;bries])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; RuntimeException: Unable to resolve symbol: bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; cheddars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;mild&amp;quot; &amp;quot;medium&amp;quot; &amp;quot;strong&amp;quot; &amp;quot;sharp&amp;quot; &amp;quot;extra sharp&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Lastly, a &lt;code&gt;:rename&lt;/code&gt; example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x662F;&lt;code&gt;:rename&lt;/code&gt;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/refer &amp;apos;cheese.taxonomy :rename {&amp;apos;bries &amp;apos;yummy-bries})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; RuntimeException: Unable to resolve symbol: bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; yummy-bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;Wisconsin&amp;quot; &amp;quot;Somerset&amp;quot; &amp;quot;Brie de Meaux&amp;quot; &amp;quot;Brie de Melun&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that in these last examples we have to use the fully qualified names of all the objects in &lt;code&gt;clojure.core&lt;/code&gt;, like &lt;code&gt;clojure.core/ns-map&lt;/code&gt; and &lt;code&gt;clojure.core/refer&lt;/code&gt;. We didn&amp;#x2019;t have to do that in the &lt;code&gt;user&lt;/code&gt; namespace. That&amp;#x2019;s because the REPL automatically refers &lt;code&gt;clojure.core&lt;/code&gt; within the &lt;code&gt;user&lt;/code&gt; namespace. You can make your life easier by evaluating &lt;code&gt;(clojure.core/refer-clojure)&lt;/code&gt; when you create a new namespace; this will refer the clojure.core namespace, and I&amp;#x2019;ll be using it from now on. Instead of seeing &lt;code&gt;clojure.core/refer&lt;/code&gt; in the examples, you&amp;#x2019;ll only see &lt;code&gt;refer&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&lt;code&gt;clojure.core&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;clojure.core/ns-map&lt;/code&gt;&amp;#x548C;&lt;code&gt;clojure.core/refer&lt;/code&gt;&amp;#x3002;&amp;#x5728;&lt;code&gt;user&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x8FD9;&amp;#x4E48;&amp;#x5E72;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&lt;code&gt;user&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x81EA;&amp;#x52A8;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&lt;code&gt;clojure.core&lt;/code&gt;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;(clojure.core/refer-clojure)&lt;/code&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FBE;&amp;#x5230;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x6548;&amp;#x679C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x5F97;&amp;#x4EE3;&amp;#x7801;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another thing to notice is that you have complete freedom over how you organize your functions and data across namespaces. This lets you sensibly group related functions and data together in the same namespace.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x5982;&amp;#x4F55;&amp;#x7EC4;&amp;#x7EC7;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x5B8C;&amp;#x5168;&amp;#x7531;&amp;#x4F60;&amp;#x51B3;&amp;#x5B9A;&amp;#x3002;&amp;#x8FD9;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x5408;&amp;#x7406;&amp;#x5730;&amp;#x7EC4;&amp;#x7EC7;&amp;#x76F8;&amp;#x5173;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes you may want a function to be available only to other functions within the same namespace. Clojure allows you to define private functions using &lt;code&gt;defn-&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F60;&amp;#x60F3;&amp;#x8BA9;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x53EA;&amp;#x5BF9;&amp;#x76F8;&amp;#x540C;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E0B;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x89C1;&amp;#x3002;&amp;#x7528;&lt;code&gt;defn-&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B9A;&amp;#x4E49;&amp;#x79C1;&amp;#x6709;&amp;#x51FD;&amp;#x6570;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;cheese.analysis)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; Notice the dash after &amp;quot;defn&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn-&lt;/span&gt;&lt;/span&gt; private-function&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Just an example function that does nothing&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [] &lt;span class=&quot;string&quot;&gt;&amp;quot;sdf&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you try to call this function from another namespace or refer it, Clojure will throw an exception. You can see this when you evaluate the code at &amp;#x278A; and &amp;#x278B;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x5176;&amp;#x4ED6;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x8C03;&amp;#x7528;&amp;#x6216;&amp;#x5F15;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x278A;, &amp;#x278B; &amp;#x5904;&amp;#x770B;&amp;#x5230;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (in-ns &amp;apos;cheese.taxonomy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.taxonomy=&amp;gt; (clojure.core/refer-clojure)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; cheese.taxonomy=&amp;gt; (cheese.analysis/private-function)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B; cheese.taxonomy=&amp;gt; (refer &amp;apos;cheese.analysis :only [&amp;apos;private-function])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, even if you explicitly &lt;code&gt;refer&lt;/code&gt; the function, you can&amp;#x2019;t use the function from another namespace, because you made it private. (If you want to be tricky, you can still access the private var using the arcane syntax &lt;code&gt;@#&amp;apos;some/private-var&lt;/code&gt;, but you&amp;#x2019;ll rarely want to do that.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x89C1;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x660E;&amp;#x786E;&lt;code&gt;refer&lt;/code&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x80FD;&amp;#x5728;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x662F;&amp;#x79C1;&amp;#x6709;&amp;#x7684;&amp;#x3002;(&amp;#x5982;&amp;#x679C;&amp;#x800D;&amp;#x82B1;&amp;#x62DB;&amp;#xFF0C;&amp;#x8FD8;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE;&amp;#x79C1;&amp;#x6709;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BED;&amp;#x6CD5;&lt;code&gt;@#&amp;apos;some/private-var&lt;/code&gt;,&amp;#x4F46;&amp;#x5F88;&amp;#x5C11;&amp;#x4F1A;&amp;#x9700;&amp;#x8981;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;alias&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;alias&quot;&gt;&lt;a href=&quot;#alias&quot; class=&quot;headerlink&quot; title=&quot;alias&quot;&gt;&lt;/a&gt;alias&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Compared to &lt;code&gt;refer&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt; is relatively simple. All it does is let you shorten a namespace name for using fully qualified symbols:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&lt;code&gt;refer&lt;/code&gt;&amp;#x76F8;&amp;#x6BD4;&amp;#xFF0C;&lt;code&gt;alias&lt;/code&gt;&amp;#x66F4;&amp;#x7B80;&amp;#x5355;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x5168;&amp;#x90E8;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x7F29;&amp;#x77ED;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5236;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; (clojure.core/alias &amp;apos;taxonomy &amp;apos;cheese.taxonomy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cheese.analysis=&amp;gt; taxonomy/bries&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; [&amp;quot;Wisconsin&amp;quot; &amp;quot;Somerset&amp;quot; &amp;quot;Brie de Meaux&amp;quot; &amp;quot;Brie de Melun&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code lets us use call symbols from the &lt;code&gt;cheese.taxonomy&lt;/code&gt; namespace with the shorter alias &lt;code&gt;taxonomy&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x628A;&lt;code&gt;taxonomy&lt;/code&gt;&amp;#x5F53;&amp;#x4F5C;&lt;code&gt;cheese.taxonomy&lt;/code&gt;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;refer&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; are your two basic tools for referring to objects outside your current namespace! They&amp;#x2019;re great aids to REPL development.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;refer&lt;/code&gt;&amp;#x548C;&lt;code&gt;alias&lt;/code&gt;&amp;#x662F;&amp;#x5F15;&amp;#x7528;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x5916;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;REPL&amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x5F88;&amp;#x597D;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, it&amp;#x2019;s unlikely that you&amp;#x2019;d create your entire program in the REPL. In the next section, I&amp;#x2019;ll cover everything you need to know to organize a real project with source code living on the filesystem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x4E0D;&amp;#x592A;&amp;#x53EF;&amp;#x80FD;&amp;#x6240;&amp;#x6709;&amp;#x7A0B;&amp;#x5E8F;&amp;#x90FD;&amp;#x5728;REPL&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x3002;&amp;#x4E0B;&amp;#x8282;&amp;#x4F1A;&amp;#x8BB2;&amp;#x89E3;&amp;#x5982;&amp;#x4F55;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E0A;&amp;#x7EC4;&amp;#x7EC7;&amp;#x771F;&amp;#x5B9E;&amp;#x9879;&amp;#x76EE;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Real Project Organization&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x771F;&amp;#x5B9E;&amp;#x9879;&amp;#x76EE;&amp;#x7EC4;&amp;#x7EC7;&quot;&gt;&lt;a href=&quot;#&amp;#x771F;&amp;#x5B9E;&amp;#x9879;&amp;#x76EE;&amp;#x7EC4;&amp;#x7EC7;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x771F;&amp;#x5B9E;&amp;#x9879;&amp;#x76EE;&amp;#x7EC4;&amp;#x7EC7;&quot;&gt;&lt;/a&gt;&amp;#x771F;&amp;#x5B9E;&amp;#x9879;&amp;#x76EE;&amp;#x7EC4;&amp;#x7EC7;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Now that I&amp;#x2019;ve covered the building blocks of Clojure&amp;#x2019;s organization system, I&amp;#x2019;ll show you how to use them in real projects. I&amp;#x2019;ll discuss the relationship between file paths and namespace names, explain how to load a file with &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt;, and show how to use &lt;code&gt;ns&lt;/code&gt; to set up a namespace.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8BB2;&amp;#x89E3;&amp;#x4E86;Clojure&amp;#x7EC4;&amp;#x7EC7;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6784;&amp;#x5EFA;&amp;#x6A21;&amp;#x5757;&amp;#xFF0C;&amp;#x6211;&amp;#x4F1A;&amp;#x4E3A;&amp;#x4F60;&amp;#x5C55;&amp;#x793A;&amp;#x5982;&amp;#x4F55;&amp;#x5728;&amp;#x771F;&amp;#x5B9E;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&amp;#x3002;&amp;#x6211;&amp;#x4F1A;&amp;#x89E3;&amp;#x91CA;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&amp;#xFF0C;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;&amp;#x52A0;&amp;#x8F7D;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&lt;code&gt;ns&lt;/code&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Relationship Between File Paths and Namespace Names&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540D;&amp;#x79F0;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&quot;&gt;&lt;a href=&quot;#&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540D;&amp;#x79F0;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540D;&amp;#x79F0;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&quot;&gt;&lt;/a&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0E;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540D;&amp;#x79F0;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;To kill two birds with one stone (or feed two birds with one seed, depending on how much of a hippie you are), I&amp;#x2019;ll cover more on namespaces while we work on catching the pesky international cheese thief by mapping the locations of his heists. Run the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD0;&amp;#x884C;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x547D;&amp;#x4EE4;&amp;#xFF0C;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x6293;&amp;#x5976;&amp;#x916A;&amp;#x8D3C;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E0E;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x8BB2;&amp;#x89E3;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lein new app the-divine-cheese-code&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This should create a directory structure that looks like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x5982;&amp;#x4E0B;&amp;#x7684;&amp;#x76EE;&amp;#x5F55;&amp;#x7ED3;&amp;#x6784;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| doc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | intro.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| project.clj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| resources&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | the_divine_cheese_code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | | core.clj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | the_divine_cheese_code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| | | core_test.clj&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, open &lt;em&gt;src/the_divine_cheese_code/core.clj&lt;/em&gt;. You should see this on the first line:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6253;&amp;#x5F00;&lt;em&gt;src/the_divine_cheese_code/core.clj&lt;/em&gt;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x7B2C;&amp;#x4E00;&amp;#x884C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:gen-class&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ns&lt;/code&gt; is the primary way to create and manage namespaces within Clojure. I&amp;#x2019;ll explain it in full shortly. For now, though, just know that this line is very similar to the &lt;code&gt;in-ns&lt;/code&gt; function we used in Listing 6-1. It creates a namespace if it doesn&amp;#x2019;t exist and then switches to it. I also cover &lt;code&gt;(:gen-class)&lt;/code&gt; in more detail in Chapter 12.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ns&lt;/code&gt;&amp;#x662F;Clojure&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x4F46;&amp;#x73B0;&amp;#x5728;&amp;#x53EA;&amp;#x9700;&amp;#x77E5;&amp;#x9053;&amp;#x5B83;&amp;#x4E0E;&lt;code&gt;in-ns&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;(&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;)&amp;#x5E76;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x5728;12&amp;#x7AE0;&amp;#x4F1A;&amp;#x5BF9;&lt;code&gt;(:gen-class)&lt;/code&gt;&amp;#x8BE6;&amp;#x7EC6;&amp;#x8BB2;&amp;#x89E3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The name of the namespace is &lt;code&gt;the-divine-cheese-code.core&lt;/code&gt;. In Clojure, there&amp;#x2019;s a one-to-one mapping between a namespace name and the path of the file where the namespace is declared, according to the following conventions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x662F;&lt;code&gt;the-divine-cheese-code.core&lt;/code&gt;&amp;#x3002;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x4E0E;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;&amp;#x6309;&amp;#x5982;&amp;#x4E0B;&amp;#x60EF;&amp;#x4F8B;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;When you create a directory with &lt;code&gt;lein&lt;/code&gt; (as you did here), the source code&amp;#x2019;s root is &lt;em&gt;src&lt;/em&gt; by default.&lt;/li&gt;
&lt;li&gt;Dashes in namespace names correspond to underscores in the file&amp;#xAD;system. So &lt;code&gt;the-divine-cheese-code&lt;/code&gt; is mapped to &lt;em&gt;the_divine_cheese_code&lt;/em&gt; on the filesystem.&lt;/li&gt;
&lt;li&gt;The component preceding a period (&lt;code&gt;.&lt;/code&gt;) in a namespace name corresponds to a directory. For example, since &lt;code&gt;the-divine-cheese-code.core&lt;/code&gt; is the namespace name, &lt;em&gt;the_divine_cheese_code&lt;/em&gt; is a directory.&lt;/li&gt;
&lt;li&gt;The final component of a namespace corresponds to a file with the &lt;em&gt;.clj&lt;/em&gt; extension; &lt;code&gt;core&lt;/code&gt; is mapped to &lt;em&gt;core.clj&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7528;&lt;code&gt;lein&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;&amp;#x65F6;&amp;#xFF0C;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x9ED8;&amp;#x8BA4;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x662F;&lt;em&gt;src&lt;/em&gt;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540D;&amp;#x79F0;&amp;#x91CC;&amp;#x7684;&amp;#x7834;&amp;#x6298;&amp;#x53F7;&amp;#x5BF9;&amp;#x5E94;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x4E0B;&amp;#x5212;&amp;#x7EBF;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&lt;code&gt;the-divine-cheese-code&lt;/code&gt;&amp;#x4E0E;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&lt;em&gt;the_divine_cheese_code&lt;/em&gt;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x70B9;(&lt;code&gt;.&lt;/code&gt;)&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x4E2A;&amp;#x76EE;&amp;#x5F55;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&lt;code&gt;the-divine-cheese-code.core&lt;/code&gt;&amp;#x662F;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540D;&amp;#x79F0;&amp;#xFF0C;&lt;em&gt;the_divine_cheese_code&lt;/em&gt; &amp;#x662F;&amp;#x4E2A;&amp;#x76EE;&amp;#x5F55;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x90E8;&amp;#x5206;&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x4E2A;&amp;#x6269;&amp;#x5C55;&amp;#x540D;&amp;#x662F;&lt;em&gt;clj&lt;/em&gt;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF1B;&lt;code&gt;core&lt;/code&gt;&amp;#x4E0E;&lt;em&gt;core.clj&lt;/em&gt;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Your project will have one more namespace, &lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;. Go ahead and create the file for it now:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x589E;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;,&amp;#x5EFA;&amp;#x7ACB;&amp;#x6587;&amp;#x4EF6;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir src/the_divine_cheese_code/visualization&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch src/the_divine_cheese_code/visualization/svg.clj&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that the filesystem path follows these conventions. With the relationship between namespaces and the filesystem down, let&amp;#x2019;s look at &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#x9075;&amp;#x5FAA;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x60EF;&amp;#x4F8B;&amp;#x3002;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E0E;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x770B;&amp;#x770B;&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Requiring and Using Namespaces&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0E;&amp;#x4F7F;&amp;#x7528;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&quot;&gt;&lt;a href=&quot;#&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0E;&amp;#x4F7F;&amp;#x7528;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0E;&amp;#x4F7F;&amp;#x7528;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&quot;&gt;&lt;/a&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0E;&amp;#x4F7F;&amp;#x7528;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;The code in the &lt;code&gt;the-divine-cheese-code.core&lt;/code&gt; namespace will use the functions in the namespace &lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt; to create SVG markup. To use &lt;code&gt;svg&lt;/code&gt;&amp;#x2019;s functions, &lt;code&gt;core&lt;/code&gt; will have to &lt;code&gt;require&lt;/code&gt; it. But first, let&amp;#x2019;s add some code to &lt;em&gt;svg.clj&lt;/em&gt;. Make it look like this (you&amp;#x2019;ll add more later):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;code&gt;the-divine-cheese-code.core&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x521B;&amp;#x5EFA;SVG&amp;#x6807;&amp;#x8BB0;&amp;#x3002;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;svg&lt;/code&gt;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;core&lt;/code&gt;&amp;#x5FC5;&amp;#x987B;&lt;code&gt;require&lt;/code&gt;&amp;#x5B83;&amp;#x3002;&amp;#x5148;&amp;#x5F80;&lt;em&gt;svg.clj&lt;/em&gt;&amp;#x91CC;&amp;#x589E;&amp;#x52A0;&amp;#x4E00;&amp;#x4E9B;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; latlng-&amp;gt;point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Convert lat/lng map to comma-separated string&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [latlng]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; latlng) &lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; latlng)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; points&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [locations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.string/join&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; latlng-&amp;gt;point locations)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This defines two functions, &lt;code&gt;latlng-&amp;gt;point&lt;/code&gt; and &lt;code&gt;points&lt;/code&gt;, which you&amp;#x2019;ll use to convert a seq of latitude/longitude coordinates into a string of points. To use this code from the &lt;em&gt;core.clj&lt;/em&gt; file, you have to &lt;code&gt;require&lt;/code&gt; it. &lt;code&gt;require&lt;/code&gt; takes a symbol designating a namespace and ensures that the namespace exists and is ready to be used; in this case, when you call &lt;code&gt;(require &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/code&gt;, Clojure reads and evaluates the corresponding file. By evaluating the file, it creates the &lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt; namespace and defines the functions &lt;code&gt;latlng-&amp;gt;point&lt;/code&gt; and &lt;code&gt;points&lt;/code&gt; within that namespace. Even though the file &lt;em&gt;svg.clj&lt;/em&gt; is in your project&amp;#x2019;s directory, Clojure doesn&amp;#x2019;t automatically evaluate it when it runs your project; you have to explicitly tell Clojure that you want to use it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;latlng-&amp;gt;point&lt;/code&gt;&amp;#x548C;&lt;code&gt;points&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x7ECF;&amp;#x5EA6;/&amp;#x7EAC;&amp;#x5EA6;&amp;#x5750;&amp;#x6807;&amp;#x5E8F;&amp;#x5217;&amp;#x8F6C;&amp;#x5316;&amp;#x6210;&amp;#x70B9;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x3002;&amp;#x8981;&amp;#x4ECE;&lt;em&gt;core.js&lt;/em&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&lt;code&gt;require&lt;/code&gt;&amp;#x5B83;&amp;#x3002;&lt;code&gt;require&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7B26;&amp;#x53F7;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x786E;&amp;#x4FDD;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x5B83;&amp;#x5904;&amp;#x4E8E;&amp;#x53EF;&amp;#x7528;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5F53;&amp;#x4F60;&amp;#x8C03;&amp;#x7528;&lt;code&gt;(require &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/code&gt;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x8BFB;&amp;#x53D6;&amp;#x5E76;&amp;#x6C42;&amp;#x503C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x5E76;&amp;#x5728;&amp;#x91CC;&amp;#x9762;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x51FD;&amp;#x6570;&lt;code&gt;latlng-&amp;gt;point&lt;/code&gt;&amp;#x548C;&lt;code&gt;points&lt;/code&gt;&amp;#x3002;&amp;#x867D;&amp;#x7136;&amp;#x6587;&amp;#x4EF6;&lt;em&gt;svg.clj&lt;/em&gt;&amp;#x5728;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FD0;&amp;#x884C;&amp;#x9879;&amp;#x76EE;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x660E;&amp;#x786E;&amp;#x8BF4;&amp;#x660E;&amp;#x4F60;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After requiring the namespace, you can refer it so that you don&amp;#x2019;t have to use fully qualified names to reference the functions. Go ahead and require &lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt; and add the &lt;code&gt;heists&lt;/code&gt; seq to make &lt;em&gt;core.clj&lt;/em&gt; match the listing:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x540E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F15;&amp;#x7528;&amp;#x5B83;&amp;#xFF0C;&amp;#x4EE5;&amp;#x907F;&amp;#x514D;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x540D;&amp;#x3002;&amp;#x5728;&lt;em&gt;core.clj&lt;/em&gt;&amp;#x91CC;&amp;#x8BF7;&amp;#x6C42;&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;&amp;#xFF0C;&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&lt;code&gt;heists&lt;/code&gt;&amp;#x5E8F;&amp;#x5217;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; Ensure that the SVG code is evaluated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; Refer the namespace so that you don&amp;apos;t have to use the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; fully qualified name to reference svg functions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; heists [{&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cologne, Germany&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Archbishop Hildebold&amp;apos;s Cheese Pretzel&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50.95&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6.97&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Zurich, Switzerland&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The Standard Emmental&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47.37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8.55&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Marseille, France&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Le Fromage de Cosquer&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;43.30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5.37&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Zurich, Switzerland&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The Lesser Emmental&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47.37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8.55&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Vatican City&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The Cheese of Turin&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;41.90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12.45&lt;/span&gt;}])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; -main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; args]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;points&lt;/span&gt; heists)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now you have a seq of heist locations to work with and you can use functions from the &lt;code&gt;visualization.svg&lt;/code&gt; namespace. The &lt;code&gt;main&lt;/code&gt; function simply applies the &lt;code&gt;points&lt;/code&gt; function to &lt;code&gt;heists&lt;/code&gt;. If you run the project with &lt;code&gt;lein run&lt;/code&gt;, you should see this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6709;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5077;&amp;#x76D7;&amp;#x5730;&amp;#x70B9;&amp;#x5E8F;&amp;#x5217;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&lt;code&gt;visualization.svg&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x662F;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x3002;&lt;code&gt;main&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5BF9;&lt;code&gt;heists&lt;/code&gt;&amp;#x5E94;&amp;#x7528;&amp;#x4E86;&lt;code&gt;points&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD0;&amp;#x884C;&lt;code&gt;lein run&lt;/code&gt;,&amp;#x4F1A;&amp;#x770B;&amp;#x5230;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;50.95,6.97 47.37,8.55 43.3,5.37 47.37,8.55 41.9,12.45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Hooray! You&amp;#x2019;re one step closer to catching that purloiner of the fermented curd! Using &lt;code&gt;require&lt;/code&gt; successfully loaded &lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt; for use.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;require&lt;/code&gt;&amp;#x6210;&amp;#x529F;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E86;&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The details of &lt;code&gt;require&lt;/code&gt; are actually a bit complicated, but for practical purposes you can think of &lt;code&gt;require&lt;/code&gt; as telling Clojure the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;require&lt;/code&gt;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#x6709;&amp;#x70B9;&amp;#x590D;&amp;#x6742;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BA4;&amp;#x4E3A;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x5B83;&amp;#x8BA9;Clojure&amp;#x505A;&amp;#x4E86;&amp;#x4E0B;&amp;#x5217;&amp;#x4E8B;&amp;#x60C5;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Do nothing if you&amp;#x2019;ve already called &lt;code&gt;require&lt;/code&gt; with this symbol (&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Otherwise, find the file that corresponds to this symbol using the rules described in &amp;#x201C;The Relationship Between File Paths and Namespace Names&amp;#x201D; on page 133. In this case, Clojure finds &lt;code&gt;src/the_divine_cheese_code/visualization/svg.clj&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Read and evaluate the contents of that file. Clojure expects the file to declare a namespace corresponding to its path (which ours does).&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5DF2;&amp;#x7ECF;&lt;code&gt;require&lt;/code&gt;&amp;#x8FC7;&lt;code&gt;the-divine-cheese-code.visualization.svg&lt;/code&gt;,&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x4E0D;&amp;#x5E72;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5426;&amp;#x5219;&amp;#xFF0C;&amp;#x7528;&amp;#x4E0A;&amp;#x9762;&amp;#x63CF;&amp;#x8FF0;&amp;#x7684;&amp;#x89C4;&amp;#x5219;&amp;#x627E;&amp;#x5230;&amp;#x7B26;&amp;#x53F7;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&lt;code&gt;src/the_divine_cheese_code/visualization/svg.clj&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x5E76;&amp;#x6C42;&amp;#x503C;&amp;#x90A3;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x5185;&amp;#x5BB9;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;require&lt;/code&gt; also lets you alias a namespace when you require it, using &lt;code&gt;:as&lt;/code&gt; or &lt;code&gt;alias&lt;/code&gt;. This:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;require&lt;/code&gt;&amp;#x65F6;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;:as&lt;/code&gt;&amp;#x6216;&lt;code&gt;alias&lt;/code&gt;&amp;#x7ED9;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x8D77;&amp;#x4E2A;&amp;#x522B;&amp;#x540D;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;[the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; svg])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alias&lt;/span&gt;&lt;/span&gt; &amp;apos;svg &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can now use the aliased namespace:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x522B;&amp;#x540D;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;svg/points&lt;/span&gt; heists)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;50.95,6.97 47.37,8.55 43.3,5.37 47.37,8.55 41.9,12.45&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure provides another shortcut. Instead of calling &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;refer&lt;/code&gt; separately, the function &lt;code&gt;use&lt;/code&gt; does both. It&amp;#x2019;s frowned upon to use &lt;code&gt;use&lt;/code&gt; in production code, but it&amp;#x2019;s handy when you&amp;#x2019;re experimenting in the REPL and you want to quickly get your hands on some functions. For example, this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;use&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6548;&amp;#x679C;&amp;#x4E0E;&amp;#x5148;&amp;#x7528;&lt;code&gt;require&lt;/code&gt;,&amp;#x518D;&amp;#x7528;&lt;code&gt;refer&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x751F;&amp;#x4EA7;&amp;#x73AF;&amp;#x5883;&amp;#x4E0B;&amp;#x4E0D;&amp;#x8D5E;&amp;#x6210;&amp;#x7528;&lt;code&gt;use&lt;/code&gt;,&amp;#x4F46;REPL&amp;#x91CC;&amp;#x7528;&amp;#x5B83;&amp;#x5F88;&amp;#x65B9;&amp;#x4FBF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;use&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can alias a namespace with &lt;code&gt;use&lt;/code&gt; just like you can with &lt;code&gt;require&lt;/code&gt;. This:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x540C;&lt;code&gt;require&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&lt;code&gt;use&lt;/code&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A0;&amp;#x4E0A;&amp;#x522B;&amp;#x540D;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alias&lt;/span&gt;&lt;/span&gt; &amp;apos;svg &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to the code in Listing 6-2, which also shows aliased namespaces being used in function calls.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E5F;&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x522B;&amp;#x540D;&amp;#x88AB;&amp;#x7528;&amp;#x4E8E;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;6-2. Sometimes it&amp;#x2019;s handy to both use and alias a namespace.&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;use&lt;/span&gt;&lt;/span&gt; &amp;apos;[the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; svg])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; svg/points points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; svg/latlng-&amp;gt;point latlng-&amp;gt;point)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;It may seem redundant to alias a namespace with &lt;code&gt;use&lt;/code&gt; here because &lt;code&gt;use&lt;/code&gt; already refers the namespace (which lets you simply call &lt;code&gt;points&lt;/code&gt; instead of &lt;code&gt;svg/points&lt;/code&gt;). In certain situations, though, it&amp;#x2019;s handy because &lt;code&gt;use&lt;/code&gt; takes the same options as &lt;code&gt;refer&lt;/code&gt; (&lt;code&gt;:only&lt;/code&gt;, &lt;code&gt;:exclude&lt;/code&gt;, &lt;code&gt;:as&lt;/code&gt;, and &lt;code&gt;:rename&lt;/code&gt;). You might want to alias a namespace with &lt;code&gt;use&lt;/code&gt; when you&amp;#x2019;ve skipped referring a symbol. You could use this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;use&lt;/code&gt;&amp;#x540E;&amp;#xFF0C;&amp;#x518D;&amp;#x52A0;&amp;#x4E0A;&amp;#x522B;&amp;#x540D;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x6709;&amp;#x70B9;&amp;#x591A;&amp;#x4F59;&amp;#x3002;&amp;#x4F46;&amp;#x56E0;&amp;#x4E3A;&lt;code&gt;use&lt;/code&gt;&amp;#x540C;&lt;code&gt;refer&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4E5F;&amp;#x80FD;&amp;#x63A5;&amp;#x53D7;&lt;code&gt;:only&lt;/code&gt;,&lt;code&gt;:exclude&lt;/code&gt;,&lt;code&gt;:as&lt;/code&gt;&amp;#x548C;&lt;code&gt;:rename&lt;/code&gt;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6709;&amp;#x4E9B;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x7528;&amp;#x8D77;&amp;#x6765;&amp;#x5F88;&amp;#x65B9;&amp;#x4FBF;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF1A;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x53EA;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x90E8;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;use&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:only&lt;/span&gt; [&amp;apos;points])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Or you could use the &lt;code&gt;use&lt;/code&gt; form in Listing 6-3 (which also includes examples of how you can call functions).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;6-3 &amp;#x4F7F;&amp;#x7528;&lt;code&gt;use&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;,&amp;#x8FD9;&amp;#x91CC;&amp;#x4E5F;&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(use &amp;apos;[the-divine-cheese-code.visualization.svg :as svg :only [points]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(= svg/points points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; We can use the alias to reach latlng-&amp;gt;point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;svg/latlng-&amp;gt;point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; This doesn&amp;apos;t throw an exception&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; But we can&amp;apos;t use the bare name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;latlng-&amp;gt;point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; This does throw an exception!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you try Listing 6-3 in a REPL and &lt;code&gt;latlng-&amp;gt;point&lt;/code&gt; doesn&amp;#x2019;t throw an exception, it&amp;#x2019;s because you referred &lt;code&gt;latlng-&amp;gt;point&lt;/code&gt; in Listing 6-2. You&amp;#x2019;ll need to restart your REPL session for the code to behave as shown in Listing 6-3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5728;REPL&amp;#x91CC;&amp;#x5C1D;&amp;#x8BD5;6-3&amp;#xFF0C;&lt;code&gt;latlng-&amp;gt;point&lt;/code&gt;&amp;#x4E0D;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;6-2&amp;#x91CC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5F15;&amp;#x7528;&amp;#x8FC7;&amp;#x4E86;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x540C;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4EE3;&amp;#x7801;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x542F;REPL&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The takeaway here is that &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt; load files and optionally &lt;code&gt;alias&lt;/code&gt; or &lt;code&gt;refer&lt;/code&gt; their namespaces. As you write Clojure programs and read code written by others, you might encounter even more ways of writing &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt;, at which point it&amp;#x2019;ll make sense to read Clojure&amp;#x2019;s API docs (&lt;a href=&quot;http://clojure.org/reference/libs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clojure.org/reference/libs&lt;/a&gt;) to understand what&amp;#x2019;s going on. However, what you&amp;#x2019;ve learned so far about &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt; should cover 95.3 percent of your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;&amp;#x52A0;&amp;#x8F7D;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x53EF;&amp;#x9009;&amp;#x62E9;&amp;#x5730;&amp;#x5BF9;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&lt;code&gt;alias&lt;/code&gt;&amp;#x6216;&lt;code&gt;refer&lt;/code&gt;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;&amp;#x66F4;&amp;#x591A;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&amp;#x6587;&amp;#x6863;( &lt;a href=&quot;http://clojure.org/reference/libs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clojure.org/reference/libs&lt;/a&gt; )&amp;#x3002;&amp;#x4F46;&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;&amp;#x80FD;&amp;#x6EE1;&amp;#x8DB3;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#x9700;&amp;#x8981;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The ns Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;ns&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#ns&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;ns&amp;#x5B8F;&quot;&gt;&lt;/a&gt;ns&amp;#x5B8F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Now it&amp;#x2019;s time to look at the &lt;code&gt;ns&lt;/code&gt; macro. The tools covered so far&amp;#x2014;&lt;code&gt;in-ns&lt;/code&gt;, &lt;code&gt;refer&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, and &lt;code&gt;use&lt;/code&gt;&amp;#x2014;are most often used when you&amp;#x2019;re playing in the REPL. In your source code files, you&amp;#x2019;ll typically use the &lt;code&gt;ns&lt;/code&gt; macro because it allows you to use the tools described so far succinctly and provides other useful functionality. In this section, you&amp;#x2019;ll learn about how one &lt;code&gt;ns&lt;/code&gt; call can incorporate &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;use&lt;/code&gt;, &lt;code&gt;in-ns&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt;, and &lt;code&gt;refer&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x662F;&amp;#x65F6;&amp;#x5019;&amp;#x770B;&lt;code&gt;ns&lt;/code&gt;&amp;#x5B8F;&amp;#x4E86;&amp;#x3002;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x8BB2;&amp;#x89E3;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;-&lt;code&gt;in-ns&lt;/code&gt;,&lt;code&gt;refer&lt;/code&gt;,&lt;code&gt;alias&lt;/code&gt;,&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;-&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x90FD;&amp;#x7528;&amp;#x4E8E;REPL&amp;#x3002;&amp;#x5728;&amp;#x6E90;&amp;#x7801;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;ns&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x80FD;&amp;#x8BA9;&amp;#x4F60;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x8FD8;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5176;&amp;#x4ED6;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#x91CC;&amp;#x4F60;&amp;#x5B66;&amp;#x4E60;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;ns&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&lt;code&gt;require&lt;/code&gt;,&lt;code&gt;use&lt;/code&gt;,&lt;code&gt;in-ns&lt;/code&gt;,&lt;code&gt;alias&lt;/code&gt;&amp;#x548C;&lt;code&gt;refer&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One useful task &lt;code&gt;ns&lt;/code&gt; does is refer the &lt;code&gt;clojure.core&lt;/code&gt; namespace by default. That&amp;#x2019;s why you can call &lt;code&gt;println&lt;/code&gt; from within &lt;code&gt;the-divine-cheese-code.core&lt;/code&gt; without using the fully qualified name, &lt;code&gt;clojure.core/println&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ns&lt;/code&gt;&amp;#x5B8F;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x597D;&amp;#x5904;&amp;#x662F;&amp;#x9ED8;&amp;#x8BA4;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&lt;code&gt;clojure.core&lt;/code&gt;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x5728;&lt;code&gt;the-divine-cheese-code.core&lt;/code&gt;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;&lt;code&gt;println&lt;/code&gt;,&amp;#x800C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&lt;code&gt;clojure.core/println&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can control what gets referred from &lt;code&gt;clojure-core&lt;/code&gt; with &lt;code&gt;:refer-clojure&lt;/code&gt;, which takes the same options as &lt;code&gt;refer&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&lt;code&gt;:refer-clojure&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x9650;&amp;#x5236;&amp;#x5F15;&amp;#x5165;&amp;#x54EA;&amp;#x4E9B;&lt;code&gt;clojure-core&lt;/code&gt;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;,&amp;#x53C2;&amp;#x6570;&amp;#x4E0E;&lt;code&gt;refer&lt;/code&gt;&amp;#x4E00;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:refer-clojure&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:exclude&lt;/span&gt; [println]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you called this at the beginning of &lt;em&gt;divine_cheese_code.core.clj&lt;/em&gt;, it would break your code, forcing you to use &lt;code&gt;clojure.core/println&lt;/code&gt; within the &lt;code&gt;-main&lt;/code&gt; function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5728;&lt;em&gt;divine_cheese_code.core.clj&lt;/em&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x8C03;&amp;#x7528;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x4F1A;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x62A5;&amp;#x9519;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E48;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&lt;code&gt;-main&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x91CC;&amp;#x5FC5;&amp;#x987B;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;clojure.core/println&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Within &lt;code&gt;ns&lt;/code&gt;, the form &lt;code&gt;(:refer-clojure)&lt;/code&gt; is called a &lt;em&gt;reference&lt;/em&gt;. This might look weird to you. Is this reference a function call? A macro? What is it? You&amp;#x2019;ll learn more about the underlying machinery in Chapter 7. For now, you just need to understand how each reference maps to function calls. For example, the preceding code is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&lt;code&gt;ns&lt;/code&gt;&amp;#x91CC;&amp;#xFF0C;&amp;#x5F62;&amp;#x5F0F;&lt;code&gt;(:refer-clojure)&lt;/code&gt;&amp;#x88AB;&amp;#x53EB;&amp;#x505A;&lt;em&gt;&amp;#x5F15;&amp;#x7528;&lt;/em&gt;&amp;#x3002;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x6709;&amp;#x70B9;&amp;#x602A;&amp;#xFF0C;&amp;#x4F46;&amp;#x53EA;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E86;&amp;#xFF0C;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x5F97;&amp;#x7B49;&amp;#x4EF7;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;clojure.core &lt;span class=&quot;symbol&quot;&gt;:exclude&lt;/span&gt; [&amp;apos;println])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;There are six possible kinds of references within &lt;code&gt;ns&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ns&lt;/code&gt;&amp;#x91CC;&amp;#x6709;6&amp;#x79CD;&amp;#x5F15;&amp;#x7528;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(:refer-clojure)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:require)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:use)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:import)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:load)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(:gen-class)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;(:import)&lt;/code&gt; and &lt;code&gt;(:gen-class)&lt;/code&gt; are covered in Chapter 12. I won&amp;#x2019;t cover &lt;code&gt;(:load)&lt;/code&gt; because it is seldom used.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;(:import)&lt;/code&gt;&amp;#x548C;&lt;code&gt;(:gen-class)&lt;/code&gt;&amp;#x5728;12&amp;#x7AE0;&amp;#x8BB2;&amp;#x89E3;&amp;#x3002;&lt;code&gt;(:load)&lt;/code&gt;&amp;#x4E0D;&amp;#x8BB2;&amp;#x89E3;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x7528;&amp;#x7684;&amp;#x5F88;&amp;#x5C11;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;(:require)&lt;/code&gt; works a lot like the &lt;code&gt;require&lt;/code&gt; function. For example, this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;(:require)&lt;/code&gt; &amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#x4E0E;&lt;code&gt;require&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5F88;&amp;#x50CF;,&amp;#x4F8B;&amp;#x5982;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; the-divine-cheese-code.visualization.svg))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that in the &lt;code&gt;ns&lt;/code&gt; form (unlike the &lt;code&gt;in-ns&lt;/code&gt; function call), you don&amp;#x2019;t have to quote your symbol with &lt;code&gt;&amp;apos;&lt;/code&gt;. You never have to quote symbols within &lt;code&gt;ns&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&lt;code&gt;ns&lt;/code&gt;&amp;#x91CC;&amp;#x4E0D;&amp;#x7528;&amp;#x50CF;&lt;code&gt;in-ns&lt;/code&gt;&amp;#x90A3;&amp;#x6837;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x7528;&lt;code&gt;&amp;apos;&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also &lt;code&gt;alias&lt;/code&gt; a library that you &lt;code&gt;require&lt;/code&gt; within &lt;code&gt;ns&lt;/code&gt;, just like when you call the function. This:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;ns&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&lt;code&gt;require&lt;/code&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A0;&amp;#x4E0A;&amp;#x522B;&amp;#x540D;&amp;#xFF0C;&amp;#x8DDF;&lt;code&gt;require&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;,&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; [the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; svg]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; [&amp;apos;the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; &amp;apos;svg])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can require multiple libraries in a &lt;code&gt;(:require)&lt;/code&gt; reference as follows. This:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;(:require)&lt;/code&gt;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x591A;&amp;#x4E2A;&amp;#x5E93;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; [the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; svg]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [clojure.java.browse &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; browse]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; [&amp;apos;the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; &amp;apos;svg])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; [&amp;apos;clojure.java.browse &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; &amp;apos;browse])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, one difference between the &lt;code&gt;(:require)&lt;/code&gt; reference and the &lt;code&gt;require&lt;/code&gt; function is that the reference also allows you to refer names. This:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;(:require)&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&lt;code&gt;require&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0D;&amp;#x540C;&amp;#x662F;&amp;#xFF0C;&amp;#x524D;&amp;#x8005;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x5F15;&amp;#x7528;&amp;#x540D;&amp;#x79F0;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; [the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:refer&lt;/span&gt; [points]]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;is equivalent to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:only&lt;/span&gt; [&amp;apos;points])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also refer all symbols (notice the &lt;code&gt;:all&lt;/code&gt; keyword):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;:all&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x7B26;&amp;#x53F7;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; [the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:refer&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:all&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;which is the same as doing this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;require&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;refer&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.visualization.svg)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the preferred way to require code, alias namespaces, and refer symbols. It&amp;#x2019;s recommended that you not use &lt;code&gt;(:use)&lt;/code&gt;, but since it&amp;#x2019;s likely that you&amp;#x2019;ll come across it, it&amp;#x2019;s good to know how it works. You know the drill. This:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x9996;&amp;#x9009;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x8D77;&amp;#x522B;&amp;#x540D;&amp;#xFF0C;&amp;#x5F15;&amp;#x7528;&amp;#x7B26;&amp;#x53F7;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&amp;#x5EFA;&amp;#x8BAE;&amp;#x4F60;&amp;#x4E0D;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;(:use)&lt;/code&gt;&amp;#xFF0C;&amp;#x4F46;&amp;#x65E2;&amp;#x7136;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x78B0;&amp;#x5230;&amp;#x5B83;&amp;#xFF0C;&amp;#x6700;&amp;#x597D;&amp;#x77E5;&amp;#x9053;&amp;#x5B83;&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x56DE;&amp;#x4E8B;&amp;#x3002;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:use&lt;/span&gt; clojure.java.browse))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;does this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;use&lt;/span&gt;&lt;/span&gt; &amp;apos;clojure.java.browse)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;whereas this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:use&lt;/span&gt; [clojure.java browse io]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;does this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7B49;&amp;#x6548;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;in-ns&lt;/span&gt;&lt;/span&gt; &amp;apos;the-divine-cheese-code.core)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;use&lt;/span&gt;&lt;/span&gt; &amp;apos;clojure.java.browse)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;use&lt;/span&gt;&lt;/span&gt; &amp;apos;clojure.java.io)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that when you follow &lt;code&gt;:use&lt;/code&gt; with a vector, it takes the first symbol as the &lt;em&gt;base&lt;/em&gt; and then calls &lt;code&gt;use&lt;/code&gt; with each symbol that follows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&lt;code&gt;:use&lt;/code&gt;&amp;#x540E;&amp;#x9762;&amp;#x8DDF;&amp;#x7740;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x65F6;&amp;#xFF0C;&amp;#x4EE5;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x4F5C;&amp;#x4E3A;&amp;#x57FA;&amp;#x7840;&amp;#xFF0C;&amp;#x52A0;&amp;#x4E0A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x7EC4;&amp;#x6210;&amp;#x6240;&amp;#x6709;&amp;#x9700;&amp;#x8981;&lt;code&gt;use&lt;/code&gt;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5B83;&amp;#x4EEC;&amp;#x8C03;&amp;#x7528;&lt;code&gt;use&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Oh my god, that&amp;#x2019;s it! Now you can use &lt;code&gt;ns&lt;/code&gt; like a pro! And you&amp;#x2019;re going to need to, dammit, because that &lt;em&gt;voleur des fromages&lt;/em&gt; (as they probably say in French) is still running amok! Remember him/her?!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7EC8;&amp;#x4E8E;&amp;#x8BB2;&amp;#x5B8C;&amp;#x4E86;&amp;#xFF01;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x50CF;&amp;#x4E2A;&amp;#x4E13;&amp;#x5BB6;&amp;#x4E00;&amp;#x6837;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;ns&lt;/code&gt;&amp;#x4E86;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To Catch a Burglar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x6293;&amp;#x5C0F;&amp;#x5077;&quot;&gt;&lt;a href=&quot;#&amp;#x6293;&amp;#x5C0F;&amp;#x5077;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6293;&amp;#x5C0F;&amp;#x5077;&quot;&gt;&lt;/a&gt;&amp;#x6293;&amp;#x5C0F;&amp;#x5077;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;We can&amp;#x2019;t allow this plunderer of parmesan to make off with any more cheese! It&amp;#x2019;s time to finish drawing lines based on the coordinates of the heists! That will surely reveal something!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0D;&amp;#x80FD;&amp;#x8BA9;&amp;#x5C0F;&amp;#x5077;&amp;#x5077;&amp;#x8D70;&amp;#x66F4;&amp;#x591A;&amp;#x5976;&amp;#x916A;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x5B8C;&amp;#x6210;&amp;#x6839;&amp;#x636E;&amp;#x5750;&amp;#x6807;&amp;#x753B;&amp;#x7EBF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E00;&amp;#x5B9A;&amp;#x4F1A;&amp;#x663E;&amp;#x9732;&amp;#x51FA;&amp;#x4E00;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using the latitude coordinates for each heist, you&amp;#x2019;ll connect the dots in an SVG image. But if you draw lines using the given coordinates, the result won&amp;#x2019;t look right for two reasons. First, latitude coordinates ascend from south to north, whereas SVG y-coordinates ascend from top to bottom. In other words, you need to flip the coordinates or the drawing will be upside down.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x628A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5077;&amp;#x76D7;&amp;#x5730;&amp;#x70B9;&amp;#x5750;&amp;#x6807;&amp;#x5728;SVG&amp;#x56FE;&amp;#x7247;&amp;#x91CC;&amp;#x8FDE;&amp;#x6210;&amp;#x7EBF;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x7528;&amp;#x7ED9;&amp;#x51FA;&amp;#x7684;&amp;#x5750;&amp;#x6807;&amp;#x753B;&amp;#x7EBF;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x4E0D;&amp;#x5BF9;&amp;#x3002;&amp;#x539F;&amp;#x56E0;&amp;#x4E00;&amp;#xFF0C;&amp;#x7EAC;&amp;#x5EA6;&amp;#x5750;&amp;#x6807;&amp;#x4ECE;&amp;#x5357;&amp;#x5F80;&amp;#x5317;&amp;#xFF0C;&amp;#x800C;SVG&amp;#x7684;y&amp;#x5750;&amp;#x6807;&amp;#x4ECE;&amp;#x9876;&amp;#x5F80;&amp;#x4E0B;&amp;#x589E;&amp;#x52A0;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x9700;&amp;#x8981;&amp;#x7FFB;&amp;#x8F6C;&amp;#x5750;&amp;#x6807;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x753B;&amp;#x662F;&amp;#x53CD;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Second, the drawing will be very small. To fix that, you&amp;#x2019;ll zoom in on it by translating and scaling it. It&amp;#x2019;s like turning a drawing that looks like Figure 6-1a into Figure 6-1b.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x539F;&amp;#x56E0;&amp;#x4E8C;&amp;#xFF0C;&amp;#x753B;&amp;#x4F1A;&amp;#x5F88;&amp;#x5C0F;&amp;#x3002;&amp;#x4E3A;&amp;#x6B64;&amp;#x9700;&amp;#x8981;&amp;#x653E;&amp;#x5927;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E0B;&amp;#x56FE;&amp;#x4E2D;&amp;#x628A;&amp;#x56FE;&amp;#x5F62;&amp;#x7FFB;&amp;#x8FC7;&amp;#x6765;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;6-1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/29/brave-clojure-organization/svg-before.png&quot; alt=&quot;svg-before&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/29/brave-clojure-organization/svg-after.png&quot; alt=&quot;svg-before&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Honestly, this is all completely arbitrary and it&amp;#x2019;s no longer directly related to code organization, but it&amp;#x2019;s fun and I think you&amp;#x2019;ll have a good time going through the code! Make your &lt;em&gt;svg.clj&lt;/em&gt; file match Listing 6-4:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x8BDD;&amp;#x8BF4;&amp;#xFF0C;&amp;#x8FD9;&amp;#x8DDF;&amp;#x4EE3;&amp;#x7801;&amp;#x7EC4;&amp;#x7EC7;&amp;#x6CA1;&amp;#x4EC0;&amp;#x4E48;&amp;#x5173;&amp;#x7CFB;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x5F88;&amp;#x6709;&amp;#x8DA3;&amp;#xFF01;&amp;#x8BD5;&amp;#x4F60;&amp;#x7684;&lt;em&gt;svg.clj&lt;/em&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E00;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(ns the-divine-cheese-code.visualization.svg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (:require [clojure.string :as s])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (:refer-clojure :exclude [min max]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; (defn comparator-over-maps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [comparison-fn ks]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (fn [maps]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B;     (zipmap ks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278C;             (map (fn [k] (apply comparison-fn (map k maps)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 ks))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278D; (def min (comparator-over-maps clojure.core/min [:lat :lng]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(def max (comparator-over-maps clojure.core/max [:lat :lng]))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You define the &lt;code&gt;comparator-over-maps&lt;/code&gt; function at &amp;#x278A;. This is probably the trickiest bit, so bear with me. &lt;code&gt;comparator-over-maps&lt;/code&gt; is a function that returns a function. The returned function compares the values for the keys provided by the &lt;code&gt;ks&lt;/code&gt; parameter using the supplied comparison function, &lt;code&gt;comparison-fn&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x278A;&amp;#x5904;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x51FD;&amp;#x6570;&lt;code&gt;comparator-over-maps&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x6700;&amp;#x68D8;&amp;#x624B;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x6BD4;&amp;#x8F83;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;comparison-fn&lt;/code&gt;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;key&amp;#x7684;&amp;#x96C6;&amp;#x5408;&lt;code&gt;ks&lt;/code&gt;,&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&lt;code&gt;maps&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x7528;&lt;code&gt;comparison-fn&lt;/code&gt;&amp;#x6BD4;&amp;#x8F83;&amp;#x4E86;&lt;code&gt;ks&lt;/code&gt;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x5BF9;&amp;#x5E94;&amp;#x4E8E;&lt;code&gt;maps&lt;/code&gt;&amp;#x7684;&amp;#x4E00;&amp;#x7EC4;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You use &lt;code&gt;comparator-over-maps&lt;/code&gt; to construct the &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; functions &amp;#x278D;, which you&amp;#x2019;ll use to find the top-left and bottom-right corners of our drawing. Here&amp;#x2019;s &lt;code&gt;min&lt;/code&gt; in action:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x278D;&amp;#x5904;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;comparator-over-maps&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E86;&lt;code&gt;min&lt;/code&gt;&amp;#x548C;&lt;code&gt;max&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x627E;&amp;#x5230;&amp;#x56FE;&amp;#x5F62;&amp;#x7684;&amp;#x5DE6;&amp;#x4E0A;&amp;#x89D2;&amp;#x548C;&amp;#x53F3;&amp;#x4E0B;&amp;#x89D2;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&lt;code&gt;min&lt;/code&gt;&amp;#x7684;&amp;#x5B9E;&amp;#x9645;&amp;#x4F7F;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;min&lt;/span&gt;&lt;/span&gt; [{&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;} {&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;}])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:lat 1, :lng 0}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When you call &lt;code&gt;min&lt;/code&gt;, it calls &lt;code&gt;zipmap&lt;/code&gt; , which takes two arguments, both seqs, and returns a new map. The elements of the first seq become the keys, and the elements of the second seq become the values:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;min&lt;/code&gt;&amp;#x91CC;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&lt;code&gt;zipmap&lt;/code&gt;,&amp;#x4F5C;&amp;#x7528;&amp;#x662F;&amp;#x63A5;&amp;#x53D7;&amp;#x4E24;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;map&amp;#x3002;map&amp;#x7684;key&amp;#x7531;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#x7EC4;&amp;#x6210;&amp;#xFF0C;&amp;#x503C;&amp;#x7531;&amp;#x7B2C;2&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#x7EC4;&amp;#x6210;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;zipmap&lt;/span&gt;&lt;/span&gt; [&lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt;] [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:a 1 :b 2}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;At , the first argument to &lt;code&gt;zipmap&lt;/code&gt; is &lt;code&gt;ks&lt;/code&gt;, so the elements of &lt;code&gt;ks&lt;/code&gt; will be the keys of the returned map. The second argument is the result of the map call at &amp;#x278C;. That map call actually performs the comparison.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;zipmap&lt;/code&gt;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&lt;code&gt;ks&lt;/code&gt;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&lt;code&gt;ks&lt;/code&gt;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x7ED3;&amp;#x679C;map&amp;#x7684;key&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x278C;&amp;#x5904;&amp;#x7684;map&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;map&amp;#x8C03;&amp;#x7528;&amp;#x6267;&amp;#x884C;&amp;#x4E86;&amp;#x4E0A;&amp;#x9762;&amp;#x8BF4;&amp;#x7684;&amp;#x6BD4;&amp;#x8F83;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, at &amp;#x278D; you use &lt;code&gt;comparator-over-maps&lt;/code&gt; to create the comparison functions. If you think of the drawing as being inscribed in a rectangle, &lt;code&gt;min&lt;/code&gt; is the corner of the rectangle closest to (0, 0) and &lt;code&gt;max&lt;/code&gt; is the corner farthest from it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x5728;&amp;#x278D;&amp;#x5904;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;comparator-over-maps&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x6BD4;&amp;#x8F83;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x56FE;&amp;#x5F62;&amp;#x662F;&amp;#x523B;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x957F;&amp;#x65B9;&amp;#x5F62;&amp;#x4E0A;&amp;#xFF0C;&lt;code&gt;min&lt;/code&gt;&amp;#x662F;&amp;#x6700;&amp;#x63A5;&amp;#x8FD1;(0, 0)&amp;#x7684;&amp;#x89D2;&amp;#xFF0C;&lt;code&gt;max&lt;/code&gt;&amp;#x662F;&amp;#x79BB;&amp;#x5B83;&amp;#x6700;&amp;#x8FDC;&amp;#x7684;&amp;#x89D2;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s the next part of the code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5176;&amp;#x4F59;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; translate-to-00&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [locations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [mincoords (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;min&lt;/span&gt;&lt;/span&gt; locations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;merge-with&lt;/span&gt; - % mincoords) locations)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; scale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [width height locations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [maxcoords (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;max&lt;/span&gt;&lt;/span&gt; locations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ratio {&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; (/ height (&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; maxcoords))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; (/ width (&lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; maxcoords))}]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;merge-with&lt;/span&gt; * % ratio) locations)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;translate-to-00&lt;/code&gt;, defined at , works by finding the &lt;code&gt;min&lt;/code&gt; of our locations and subtracting that value from each location. It uses &lt;code&gt;merge-with&lt;/code&gt;, which works like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;translate-to-00&lt;/code&gt;&amp;#x627E;&amp;#x51FA;&amp;#x6240;&amp;#x6709;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7684;&lt;code&gt;min&lt;/code&gt;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x90FD;&amp;#x51CF;&amp;#x6389;&amp;#x5B83;&amp;#x3002;&amp;#x7528;&amp;#x5230;&amp;#x4E86;&lt;code&gt;merge-with&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;merge-with&lt;/span&gt; - {&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;} {&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:lat 45 :lng 5}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Then we define the function &lt;code&gt;scale&lt;/code&gt; at , which multiplies each point by the ratio between the maximum latitude and longitude and the desired height and width.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&lt;code&gt;scale&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x90FD;&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;&amp;#x6BD4;&amp;#x4F8B;&amp;#x76F8;&amp;#x4E58;&amp;#x3002;&amp;#x7ECF;&amp;#x5EA6;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x6BD4;&amp;#x4F8B;&amp;#x662F;&amp;#x56FE;&amp;#x5F62;&amp;#x5BBD;&amp;#x5EA6;&amp;#x4E0E;&lt;code&gt;max&lt;/code&gt;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x70B9;&amp;#x7684;&amp;#x5BBD;&amp;#x5EA6;&amp;#x6BD4;&amp;#xFF0C;&amp;#x7EAC;&amp;#x5EA6;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x6BD4;&amp;#x4F8B;&amp;#x662F;&amp;#x56FE;&amp;#x5F62;&amp;#x9AD8;&amp;#x5EA6;&amp;#x4E0E;&lt;code&gt;max&lt;/code&gt;&amp;#x7684;&amp;#x5230;&amp;#x7684;&amp;#x70B9;&amp;#x7684;&amp;#x9AD8;&amp;#x5EA6;&amp;#x6BD4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s the rest of the code for &lt;em&gt;svg.clj&lt;/em&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&lt;em&gt;svg.clj&lt;/em&gt;&amp;#x7684;&amp;#x5176;&amp;#x4F59;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; latlng-&amp;gt;point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Convert lat/lng map to comma-separated string&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [latlng]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; latlng) &lt;span class=&quot;string&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; latlng)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; points&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Given a seq of lat/lng maps, return string of points joined by space&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [locations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;s/join&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; latlng-&amp;gt;point locations)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; line&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [points]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;polyline points=\&amp;quot;&amp;quot;&lt;/span&gt; points &lt;span class=&quot;string&quot;&gt;&amp;quot;\&amp;quot; /&amp;gt;&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; transform&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Just chains other functions&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [width height locations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; locations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       translate-to-00&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;scale&lt;/span&gt; width height)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; xml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;svg &amp;apos;template&amp;apos;, which also flips the coordinate system&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [width height locations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;svg height=\&amp;quot;&amp;quot;&lt;/span&gt; height &lt;span class=&quot;string&quot;&gt;&amp;quot;\&amp;quot; width=\&amp;quot;&amp;quot;&lt;/span&gt; width &lt;span class=&quot;string&quot;&gt;&amp;quot;\&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;;; These two &amp;lt;g&amp;gt; tags change the coordinate system so that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;;; 0,0 is in the lower-left corner, instead of SVG&amp;apos;s default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;;; upper-left corner&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;g transform=\&amp;quot;translate(0,&amp;quot;&lt;/span&gt; height &lt;span class=&quot;string&quot;&gt;&amp;quot;)\&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;g transform=\&amp;quot;rotate(-90)\&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;transform&lt;/span&gt; width height locations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           points&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           line)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;/g&amp;gt;&amp;lt;/g&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;/svg&amp;gt;&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The functions here are pretty straightforward. They just take &lt;code&gt;{:lat x :lng y}&lt;/code&gt; maps and transform them so that an SVG can be created. &lt;code&gt;latlng-&amp;gt;point&lt;/code&gt; returns a string that can be used to define a point in SVG markup. &lt;code&gt;points&lt;/code&gt; converts a seq of &lt;code&gt;lat/lng&lt;/code&gt; maps into a space-separated string of points. &lt;code&gt;line&lt;/code&gt; returns the SVG markup for a line that connects all given space-separated strings of points. &lt;code&gt;transform&lt;/code&gt; takes a seq of locations, translates them so they start at the point (0, 0), and scales them to the given width and height. Finally, &lt;code&gt;xml&lt;/code&gt; produces the markup for displaying the given locations using SVG.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;&amp;#x90FD;&amp;#x5F88;&amp;#x76F4;&amp;#x89C2;&amp;#x3002;&amp;#x5B83;&amp;#x4EEC;&amp;#x5C31;&amp;#x662F;&amp;#x63A5;&amp;#x53D7;&lt;code&gt;{:lat x :lng y}&lt;/code&gt;map,&amp;#x7136;&amp;#x540E;&amp;#x8FDB;&amp;#x884C;&amp;#x8F6C;&amp;#x6362;&amp;#x7528;&amp;#x4E8E;&amp;#x521B;&amp;#x5EFA;SVG&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With &lt;em&gt;svg.clj&lt;/em&gt; all coded up, now make &lt;em&gt;core.clj&lt;/em&gt; look like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&lt;em&gt;core.clj&lt;/em&gt;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; the-divine-cheese-code.core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:require&lt;/span&gt; [clojure.java.browse &lt;span class=&quot;symbol&quot;&gt;:as&lt;/span&gt; browse]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [the-divine-cheese-code.visualization.svg &lt;span class=&quot;symbol&quot;&gt;:refer&lt;/span&gt; [xml]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;symbol&quot;&gt;:gen-class&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; heists [{&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cologne, Germany&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Archbishop Hildebold&amp;apos;s Cheese Pretzel&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50.95&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6.97&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Zurich, Switzerland&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The Standard Emmental&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47.37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8.55&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Marseille, France&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Le Fromage de Cosquer&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;43.30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5.37&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Zurich, Switzerland&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The Lesser Emmental&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;47.37&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8.55&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             {&lt;span class=&quot;symbol&quot;&gt;:location&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Vatican City&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:cheese-name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The Cheese of Turin&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lat&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;41.90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:lng&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;12.45&lt;/span&gt;}])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [filename]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;file:///&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;System/getProperty&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;user.dir&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       filename))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; template&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [contents]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;style&amp;gt;polyline { fill:none; stroke:#5881d8; stroke-width:3}&amp;lt;/style&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       contents))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; -main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; args]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [filename &lt;span class=&quot;string&quot;&gt;&amp;quot;map.html&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; heists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         (&lt;span class=&quot;name&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         template&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         (&lt;span class=&quot;name&quot;&gt;spit&lt;/span&gt; filename))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;browse/browse-url&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;url&lt;/span&gt; filename))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing too complicated is going on here. Within &lt;code&gt;-main&lt;/code&gt; you build up the drawing using the &lt;code&gt;xml&lt;/code&gt; and &lt;code&gt;template&lt;/code&gt; functions, write the drawing to a file with &lt;code&gt;spit&lt;/code&gt;, and then open it with &lt;code&gt;browse/browse-url&lt;/code&gt;. You should try that now! Run &lt;code&gt;lein run&lt;/code&gt; and you&amp;#x2019;ll see something that looks like Figure 6-2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6CA1;&amp;#x6709;&amp;#x592A;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&lt;code&gt;-main&lt;/code&gt;&amp;#x91CC;&amp;#x7528;&lt;code&gt;xml&lt;/code&gt;&amp;#x548C;&lt;code&gt;template&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E86;&amp;#x56FE;&amp;#x5F62;,&amp;#x7528;&lt;code&gt;spit&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x628A;&amp;#x5B83;&amp;#x5199;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7528;&lt;code&gt;browse/browse-url&lt;/code&gt;&amp;#x6253;&amp;#x5F00;&amp;#x3002;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BD5;&amp;#x8BD5;&amp;#xFF01;&amp;#x8FD0;&amp;#x884C;&lt;code&gt;lein run&lt;/code&gt;,&amp;#x4F60;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/29/brave-clojure-organization/lambda.png&quot; alt=&quot;lamda&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wait a minute . . . that looks a lot like . . . that looks a lot like a lambda. Clojure&amp;#x2019;s logo is a lambda . . . oh my god! Clojure, it was you this whole time!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B49;&amp;#x7B49;&amp;#x2026;&amp;#x8FD9;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x50CF;&amp;#x4E2A;lambda&amp;#x3002;Clojure&amp;#x7684;log&amp;#x662F;&amp;#x4E2A;lambda&amp;#x2026;&amp;#x5929;&amp;#x54EA;&amp;#xFF01;&amp;#x539F;&amp;#x6765;&amp;#x5F04;&amp;#x4E86;&amp;#x534A;&amp;#x5929;&amp;#x662F;&amp;#x4F60;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;You learned a lot in this chapter. At this point, you should have all the tools you need to start organizing your projects. You now know that namespaces organize maps between symbols and vars, and that vars are references to Clojure objects (data structures, functions, and so on). &lt;code&gt;def&lt;/code&gt; stores an object and updates the current namespace with a map between a symbol and a var that points to the object. You can create private functions with &lt;code&gt;defn-&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x5B66;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x62E5;&amp;#x6709;&amp;#x4E86;&amp;#x6240;&amp;#x6709;&amp;#x7EC4;&amp;#x7EC7;&amp;#x9879;&amp;#x76EE;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#xFF1A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7EC4;&amp;#x7EC7;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x53D8;&amp;#x91CF;&amp;#x95F4;&amp;#x7684;&amp;#x6620;&amp;#x5C04;&amp;#xFF0C;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x5BF9;Clojure&amp;#x5BF9;&amp;#x8C61;(&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;&amp;#x7B49;&amp;#x7B49;)&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;code&gt;def&lt;/code&gt;&amp;#x4FDD;&amp;#x5B58;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5E76;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x6307;&amp;#x5411;&amp;#x90A3;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x95F4;&amp;#x7684;&amp;#x6620;&amp;#x5C04;&amp;#x66F4;&amp;#x65B0;&amp;#x4E86;&amp;#x5F53;&amp;#x524D;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x7528;&lt;code&gt;defn-&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x79C1;&amp;#x6709;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure lets you create namespaces with &lt;code&gt;create-ns&lt;/code&gt;, but often it&amp;#x2019;s more useful to use &lt;code&gt;in-ns&lt;/code&gt;, which switches to the namespace as well. You&amp;#x2019;ll probably only use these functions in the REPL. When you&amp;#x2019;re in the REPL, you&amp;#x2019;re always in the current namespace. When you&amp;#x2019;re defining namespaces in a file rather than the REPL, you should use the &lt;code&gt;ns&lt;/code&gt; macro, and there&amp;#x2019;s a one-to-one relationship between a namespace and its path on the filesystem.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&lt;code&gt;create-ns&lt;/code&gt;&amp;#x80FD;&amp;#x521B;&amp;#x5EFA;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x4F46;&amp;#x901A;&amp;#x5E38;&lt;code&gt;in-ns&lt;/code&gt;&amp;#x66F4;&amp;#x6709;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x8FD8;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x90A3;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x3002;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E00;&amp;#x822C;&amp;#x7528;&amp;#x4E8E;REPL&amp;#xFF0C;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x5E94;&amp;#x8BE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;ns&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E0E;&amp;#x5176;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E0A;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&amp;#x6709;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x5173;&amp;#x7CFB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can refer to objects in other namespaces by using the fully qualified name, like &lt;code&gt;cheese.taxonomy/cheddars&lt;/code&gt;. &lt;code&gt;refer&lt;/code&gt; lets you use names from other namespaces without having to fully qualify them, and &lt;code&gt;alias&lt;/code&gt; lets you use a shorter name for a namespace when you&amp;#x2019;re writing out a fully qualified name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F15;&amp;#x7528;&amp;#x5176;&amp;#x4ED6;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;cheese.taxonomy/cheddars&lt;/code&gt;&amp;#x3002;&lt;code&gt;refer&lt;/code&gt;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&lt;code&gt;alias&lt;/code&gt;&amp;#x8BA9;&amp;#x4F60;&amp;#x7ED9;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8C;&amp;#x5168;&amp;#x9650;&amp;#x5B9A;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x8D77;&amp;#x4E00;&amp;#x4E2A;&amp;#x77ED;&amp;#x7684;&amp;#x522B;&amp;#x540D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt; ensure that a namespace exists and is ready to be used, and optionally let you &lt;code&gt;refer&lt;/code&gt; and &lt;code&gt;alias&lt;/code&gt; the corresponding namespaces. You should use &lt;code&gt;ns&lt;/code&gt; to call &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;use&lt;/code&gt; in your source files. &lt;a href=&quot;https://gist.github.com/ghoseb/287710/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gist.github.com/ghoseb/287710/&lt;/a&gt; is a great reference for all the vagaries of using &lt;code&gt;ns&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;&amp;#x786E;&amp;#x4FDD;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x5B58;&amp;#x5728;&amp;#x5E76;&amp;#x53EF;&amp;#x7528;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&lt;code&gt;refter&lt;/code&gt;&amp;#x548C;&lt;code&gt;alias&lt;/code&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x5E94;&amp;#x8BE5;&amp;#x7528;&lt;code&gt;ns&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&lt;code&gt;require&lt;/code&gt;&amp;#x548C;&lt;code&gt;use&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x5F88;&amp;#x68D2;&amp;#x7684;&lt;code&gt;ns&lt;/code&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x53C2;&amp;#x8003; &lt;a href=&quot;https://gist.github.com/ghoseb/287710/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gist.github.com/ghoseb/287710/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lastly and most importantly, it ain&amp;#x2019;t easy being cheesy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x4E5F;&amp;#x662F;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#xFF0C;&amp;#x5E72;&amp;#x916A;&amp;#x771F;&amp;#x4E0D;&amp;#x5BB9;&amp;#x6613;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/29/brave-clojure-organization/cheese.png&quot; alt=&quot;cheese&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>【译】Brave Clojure 第十章:Clojure哲学体系:Atom, Refs, Vars与抱抱僵尸</title>
    <link href="http://yoursite.com/2016/07/22/clojure-metaphysics/"/>
    <id>http://yoursite.com/2016/07/22/clojure-metaphysics/</id>
    <published>2016-07-22T13:51:52.000Z</published>
    <updated>2016-08-04T13:55:46.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x5341;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/zombie-metaphysics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure Metaphysics: Atoms, Refs, Vars, and Cuddle Zombies&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morrxy.github.io/tags/Clojure-For-The-Branve-And-True/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5176;&amp;#x4ED6;&amp;#x7AE0;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The Three Concurrency Goblins are all spawned from the same pit of evil: shared access to mutable state. You can see this in the reference cell discussion in Chapter 9. When two threads make uncoordinated changes to the reference cell, the result is unpredictable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E09;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#x90FD;&amp;#x4EA7;&amp;#x751F;&amp;#x4E8E;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x90AA;&amp;#x6076;&amp;#x9677;&amp;#x9631;&amp;#xFF1A;&amp;#x5171;&amp;#x4EAB;&amp;#x53EF;&amp;#x66F4;&amp;#x6539;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x8BBF;&amp;#x95EE;&amp;#x6743;&amp;#x3002;&amp;#x5728;&amp;#x7B2C;9&amp;#x7AE0;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x7684;&amp;#x8BA8;&amp;#x8BBA;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x3002;&amp;#x5F53;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0D;&amp;#x534F;&amp;#x8C03;&amp;#x5730;&amp;#x4FEE;&amp;#x6539;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x9884;&amp;#x6599;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rich Hickey designed Clojure to specifically address the problems that develop from shared access to mutable state. In fact, Clojure embodies a very clear conception of state that makes it inherently safer for concurrency than most popular programming languages. It&amp;#x2019;s safe all the way down to its &lt;code&gt;meta-freakin-physics&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rich Hickey&amp;#x5BF9;Clojure&amp;#x8FDB;&amp;#x884C;&amp;#x4E86;&amp;#x7279;&amp;#x522B;&amp;#x8BBE;&amp;#x8BA1;&amp;#xFF0C;&amp;#x4EE5;&amp;#x89E3;&amp;#x51B3;&amp;#x5171;&amp;#x4EAB;&amp;#x53EF;&amp;#x66F4;&amp;#x6539;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x8BBF;&amp;#x95EE;&amp;#x6743;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x4E8B;&amp;#x5B9E;&amp;#x4E0A;&amp;#xFF0C;Clojure&amp;#x4F53;&amp;#x73B0;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x975E;&amp;#x5E38;&amp;#x6E05;&amp;#x6670;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x6982;&amp;#x5FF5;&amp;#xFF0C;&amp;#x4F7F;Clojure&amp;#x5728;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0A;&amp;#x5929;&amp;#x751F;&amp;#x5C31;&amp;#x6BD4;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x6D41;&amp;#x884C;&amp;#x7684;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x5B89;&amp;#x5168;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x4E00;&amp;#x5207;&amp;#x90FD;&amp;#x662F;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#xFF0C;&amp;#x8FDE;&amp;#x540C;&amp;#x5B83;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x4E5F;&amp;#x662F;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this chapter, you&amp;#x2019;ll learn about Clojure&amp;#x2019;s underlying metaphysics, as compared to the metaphysics of typical object-oriented (OO) languages. Learning this philosophy will prepare you to handle Clojure&amp;#x2019;s remaining concurrency tools, the atom, ref, and var reference types. (Clojure has one additional reference type, agents, which this book doesn&amp;#x2019;t cover.) Each of these types enables you to safely perform state-modifying operations concurrently. You&amp;#x2019;ll also learn about easy ways to make your program more efficient without introducing state at all.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x5C06;&amp;#x5B66;&amp;#x4E60;Clojure&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0E;&amp;#x5176;&amp;#x4ED6;&amp;#x9762;&amp;#x76F8;&amp;#x5BF9;&amp;#x8C61;&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x8F83;&amp;#x3002;&amp;#x8FD9;&amp;#x5C06;&amp;#x4F7F;&amp;#x4F60;&amp;#x505A;&amp;#x597D;&amp;#x51C6;&amp;#x5907;&amp;#xFF0C;&amp;#x8FD0;&amp;#x7528;Clojure&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;atom, ref, &amp;#x548C; var &amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;(Clojure&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;agents,&amp;#x672C;&amp;#x4E66;&amp;#x6CA1;&amp;#x6709;&amp;#x8BB2;&amp;#x89E3;&amp;#x3002;)&amp;#x6BCF;&amp;#x4E2A;&amp;#x7C7B;&amp;#x578B;&amp;#x90FD;&amp;#x80FD;&amp;#x8BA9;&amp;#x4F60;&amp;#x5B89;&amp;#x5168;&amp;#x5730;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x72B6;&amp;#x6001;&amp;#x4FEE;&amp;#x6539;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x8FD9;&amp;#x7AE0;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x4F1A;&amp;#x5B66;&amp;#x4E60;&amp;#x4E00;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x5B8C;&amp;#x5168;&amp;#x4E0D;&amp;#x7528;&amp;#x5F15;&amp;#x5165;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x66F4;&amp;#x9AD8;&amp;#x6548;&amp;#x5730;&amp;#x7F16;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Metaphysics attempts to answer two basic questions in the broadest possible terms:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x4ECE;&amp;#x5C3D;&amp;#x53EF;&amp;#x80FD;&amp;#x5E7F;&amp;#x6CDB;&amp;#x7684;&amp;#x65B9;&amp;#x9762;&amp;#xFF0C;&amp;#x5C1D;&amp;#x8BD5;&amp;#x56DE;&amp;#x7B54;&amp;#x4E24;&amp;#x4E2A;&amp;#x57FA;&amp;#x672C;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;What is there?&lt;/li&gt;
&lt;li&gt;What is it like?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/li&gt;
&lt;li&gt;&amp;#x50CF;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;To draw out the differences between Clojure and OO languages, I&amp;#x2019;ll explain two different ways of modeling a cuddle zombie. Unlike a regular zombie, a cuddle zombie does not want to devour your brains. It only wants to spoon you and maybe smell your neck. That makes its undead, shuffling, decaying state all the more tragic. How could you try to kill something that only wants love? Who&amp;#x2019;s the real monster here?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BF4;&amp;#x660E;Clojure&amp;#x4E0E;OO&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF0C;&amp;#x6211;&amp;#x5C06;&amp;#x89E3;&amp;#x91CA;&amp;#x4E24;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5EFA;&amp;#x6A21;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x3002;&amp;#x4E0E;&amp;#x666E;&amp;#x901A;&amp;#x50F5;&amp;#x5C38;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x4E0D;&amp;#x60F3;&amp;#x541E;&amp;#x5403;&amp;#x4F60;&amp;#x7684;&amp;#x5927;&amp;#x8111;&amp;#x3002;&amp;#x5B83;&amp;#x53EA;&amp;#x60F3;&amp;#x7231;&amp;#x629A;&amp;#x4F60;&amp;#xFF0C;&amp;#x4E5F;&amp;#x8BB8;&amp;#x4F1A;&amp;#x95FB;&amp;#x95FB;&amp;#x4F60;&amp;#x7684;&amp;#x8116;&amp;#x5B50;&amp;#x3002;&amp;#x8FD9;&amp;#x4F7F;&amp;#x5B83;&amp;#x7684;&amp;#x4E0D;&amp;#x6B7B;&amp;#xFF0C;&amp;#x6447;&amp;#x6643;&amp;#x7740;&amp;#x884C;&amp;#x8D70;&amp;#xFF0C;&amp;#x6B63;&amp;#x5728;&amp;#x8150;&amp;#x70C2;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x66F4;&amp;#x52A0;&amp;#x60B2;&amp;#x60E8;&amp;#x3002;&amp;#x4F60;&amp;#x600E;&amp;#x4E48;&amp;#x80FD;&amp;#x5C1D;&amp;#x8BD5;&amp;#x6740;&amp;#x6B7B;&amp;#x53EA;&amp;#x60F3;&amp;#x8981;&amp;#x7231;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#xFF1F;&amp;#x8C01;&amp;#x624D;&amp;#x662F;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x602A;&amp;#x7269;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Object-Oriented Metaphysics&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&quot;&gt;&lt;a href=&quot;#&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&quot;&gt;&lt;/a&gt;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;OO metaphysics treats the cuddle zombie as an object that exists in the world. The object has properties that may change over time, but it&amp;#x2019;s still treated as a single, constant object. If that seems like a totally obvious, uncontroversial approach to zombie metaphysics, you probably haven&amp;#x2019;t spent hours in an intro philosophy class arguing about what it means for a chair to exist and what really makes it a chair in the first place.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9762;&amp;#x76F8;&amp;#x5BF9;&amp;#x8C61;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x628A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x5F53;&amp;#x4F5C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E16;&amp;#x754C;&amp;#x4E0A;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x968F;&amp;#x7740;&amp;#x65F6;&amp;#x95F4;&amp;#x53D8;&amp;#x5316;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x4ECD;&amp;#x7136;&amp;#x88AB;&amp;#x770B;&amp;#x4F5C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x4E00;&amp;#xFF0C;&amp;#x6301;&amp;#x4E45;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x50CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8C;&amp;#x5168;&amp;#x660E;&amp;#x663E;&amp;#xFF0C;&amp;#x6BEB;&amp;#x65E0;&amp;#x4E89;&amp;#x8BAE;&amp;#x7684;&amp;#x50F5;&amp;#x5C38;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x6CA1;&amp;#x6709;&amp;#x5728;&amp;#x54F2;&amp;#x5B66;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8BFE;&amp;#x91CC;&amp;#x82B1;&amp;#x8D39;&amp;#x8FC7;&amp;#x51E0;&amp;#x4E2A;&amp;#x5C0F;&amp;#x65F6;&amp;#xFF0C;&amp;#x8BA8;&amp;#x8BBA;&amp;#x4E00;&amp;#x4E2A;&amp;#x6905;&amp;#x5B50;&amp;#x5B58;&amp;#x5728;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x548C;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x4F7F;&amp;#x5B83;&amp;#x771F;&amp;#x6B63;&amp;#x5B58;&amp;#x5728;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The tricky part is that the cuddle zombie is always changing. Its body slowly deteriorates. Its undying hunger for cuddles grows fiercer with time. In OO terms, we would say that the cuddle zombie is an object with mutable state and that its state is ever fluctuating. But no matter how much the zombie changes, we still identify it as the same zombie. Here&amp;#x2019;s how you might model and interact with a cuddle zombie in Ruby:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x68D8;&amp;#x624B;&amp;#x7684;&amp;#x662F;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x53D8;&amp;#x5316;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x8EAB;&amp;#x4F53;&amp;#x6162;&amp;#x6162;&amp;#x8150;&amp;#x70C2;&amp;#x3002;&amp;#x5B83;&amp;#x5BF9;&amp;#x62E5;&amp;#x62B1;&amp;#x7684;&amp;#x6E34;&amp;#x671B;&amp;#x968F;&amp;#x7740;&amp;#x65F6;&amp;#x95F4;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x5F3A;&amp;#x70C8;&amp;#x3002;&amp;#x7528;&amp;#x9762;&amp;#x76F8;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x672F;&amp;#x8BED;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF4;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E26;&amp;#x6709;&amp;#x53EF;&amp;#x53D8;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5B83;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x6539;&amp;#x53D8;&amp;#x3002;&amp;#x4F46;&amp;#x65E0;&amp;#x8BBA;&amp;#x5B83;&amp;#x600E;&amp;#x4E48;&amp;#x53D8;&amp;#xFF0C;&amp;#x5B83;&amp;#x4ECD;&amp;#x7136;&amp;#x662F;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x50F5;&amp;#x5C38;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x7528;Ruby&amp;#x5EFA;&amp;#x6A21;&amp;#x5E76;&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;10-1. Modeling cuddle zombie behavior with Ruby&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;10-1. &amp;#x7528;Ruby&amp;#x5EFA;&amp;#x6A21;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CuddleZombie&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# attr_accessor is just a shorthand way for creating getters and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# setters for the listed instance variables&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:cuddle_hunger_level&lt;/span&gt;, &lt;span class=&quot;symbol&quot;&gt;:percent_deteriorated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(cuddle_hunger_level = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, percent_deteriorated = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.cuddle_hunger_level = cuddle_hunger_level&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.percent_deteriorated = percent_deteriorated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fred = CuddleZombie.new(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fred.cuddle_hunger_level  &lt;span class=&quot;comment&quot;&gt;# =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fred.percent_deteriorated &lt;span class=&quot;comment&quot;&gt;# =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fred.cuddle_hunger_level = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fred.cuddle_hunger_level &lt;span class=&quot;comment&quot;&gt;# =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you create a cuddle zombie, &lt;code&gt;fred&lt;/code&gt;, with two attributes: &lt;code&gt;cuddle_hunger_level&lt;/code&gt; and &lt;code&gt;percent_deteriorated&lt;/code&gt;. &lt;code&gt;fred&lt;/code&gt; starts out with a &lt;code&gt;cuddle_hunger_level&lt;/code&gt; of just 2, but you can change it to whatever you want and it&amp;#x2019;s still good ol&amp;#x2019; Fred, the same cuddle zombie. In this case, you changed its &lt;code&gt;cuddle_hunger_level&lt;/code&gt; to 3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#xFF0C;&lt;code&gt;fred&lt;/code&gt;,&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#xFF1A;&lt;code&gt;cuddle_hunger_level&lt;/code&gt;,&amp;#x548C;&lt;code&gt;percent_deteriorated&lt;/code&gt;&amp;#x3002;&lt;code&gt;fred&lt;/code&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&lt;code&gt;cuddle_hunger_level&lt;/code&gt;&amp;#x662F;2&amp;#xFF0C;&amp;#x4F46;&amp;#x4EFB;&amp;#x4F55;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x4F60;&amp;#x613F;&amp;#x610F;&amp;#xFF0C;&amp;#x4F60;&amp;#x90FD;&amp;#x80FD;&amp;#x6539;&amp;#x53D8;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x800C;&amp;#x5B83;&amp;#x8FD8;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x8001;&amp;#x670B;&amp;#x53CB;Fred,&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x628A;&lt;code&gt;cuddle_hunger_level&lt;/code&gt;&amp;#x6539;&amp;#x6210;&amp;#x4E86;3&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/cuddle-zombie.png&quot; alt=&quot;cuddle-zombie&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can see that this object is just a fancy reference cell. It&amp;#x2019;s subject to the same nondeterministic results in a multithreaded environment. For example, if two threads try to increment Fred&amp;#x2019;s hunger level with something like &lt;code&gt;fred.cuddle_hunger_level = fred.cuddle_hunger_level + 1&lt;/code&gt;, one of the increments could be lost, just like in the example with two threads writing to &lt;code&gt;X&lt;/code&gt; in &amp;#x201C;The Three Goblins: Reference Cells, Mutual Exclusion, and Dwarven Berserkers&amp;#x201D; on page 193.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x795E;&amp;#x5947;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x3002;&amp;#x5B83;&amp;#x540C;&amp;#x6837;&amp;#x53D7;&amp;#x5236;&amp;#x4E8E;&amp;#x591A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x73AF;&amp;#x5883;&amp;#x4E0B;&amp;#x7684;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x6027;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5C1D;&amp;#x8BD5;&amp;#x589E;&amp;#x52A0;&amp;#x5F17;&amp;#x96F7;&amp;#x5FB7;&amp;#x7684;&amp;#x6E34;&amp;#x671B;&amp;#x7EA7;&amp;#x522B;&amp;#xFF0C;&amp;#x7528;&amp;#x7C7B;&amp;#x4F3C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&lt;code&gt;fred.cuddle_hunger_level = fred.cuddle_hunger_level + 1&lt;/code&gt;,&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x589E;&amp;#x52A0;&amp;#x4F1A;&amp;#x4E22;&amp;#x5931;&amp;#xFF0C;&amp;#x5C31;&amp;#x50CF;193&amp;#x9875;&amp;#x7684;&amp;#x4E09;&amp;#x4E2A;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5BF9;&lt;code&gt;X&lt;/code&gt;&amp;#x8FDB;&amp;#x884C;&amp;#x5199;&amp;#x64CD;&amp;#x4F5C;,&lt;a href=&quot;https://morrxy.github.io/2016/07/15/braveclojure-concurrency/#&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x70B9;&amp;#x51FB;&amp;#x67E5;&amp;#x770B;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Even if you&amp;#x2019;re only performing reads on a separate thread, the program will still be nondeterministic. For example, suppose you&amp;#x2019;re conducting research on cuddle zombie behavior. You want to log a zombie&amp;#x2019;s hunger level whenever it reaches 50 percent deterioration, but you want to do this on another thread to increase performance, using code like that in Listing 10-1:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5373;&amp;#x4F7F;&amp;#x4F60;&amp;#x53EA;&amp;#x5728;&amp;#x72EC;&amp;#x7ACB;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8FDB;&amp;#x884C;&amp;#x8BFB;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4F9D;&amp;#x7136;&amp;#x662F;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x7684;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x6B63;&amp;#x5728;&amp;#x8FDB;&amp;#x884C;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x7814;&amp;#x7A76;&amp;#x3002;&amp;#x5F53;&amp;#x4E00;&amp;#x4E2A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x6E34;&amp;#x671B;&amp;#x7EA7;&amp;#x522B;&amp;#x5230;&amp;#x8FBE;&amp;#x767E;&amp;#x5206;&amp;#x4E4B;&amp;#x4E94;&amp;#x5341;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F60;&amp;#x5E0C;&amp;#x671B;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0B;&amp;#x6765;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E3A;&amp;#x4E86;&amp;#x63D0;&amp;#x9AD8;&amp;#x6027;&amp;#x80FD;&amp;#xFF0C;&amp;#x4F60;&amp;#x60F3;&amp;#x5728;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x5E72;&amp;#x8FD9;&amp;#x4EF6;&amp;#x4E8B;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x50CF;&amp;#x5217;&amp;#x8868;10-1&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This Ruby code isn&amp;#x2019;t safe for concurrent execution.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;Ruby&amp;#x4EE3;&amp;#x7801;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x662F;&amp;#x4E0D;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; fred.percent_deteriorated &amp;gt;= &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Thread.new { database_logger.log(fred.cuddle_hunger_level) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The problem is that another thread could change fred before the write actually takes place.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x95EE;&amp;#x9898;&amp;#x5728;&amp;#x4E8E;&amp;#xFF0C;&amp;#x5199;&amp;#x64CD;&amp;#x4F5C;&amp;#x771F;&amp;#x6B63;&amp;#x53D1;&amp;#x751F;&amp;#x524D;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53EF;&amp;#x80FD;&amp;#x6539;&amp;#x53D8;&amp;#x5F17;&amp;#x96F7;&amp;#x5FB7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, Figure 10-1 shows two threads executing from top to bottom. In this situation, it would be correct to write 5 to the database, but 10 gets written instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x56FE;10-1&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x4ECE;&amp;#x4E0A;&amp;#x81F3;&amp;#x4E0B;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60C5;&amp;#x51B5;&amp;#x91CC;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x91CC;&amp;#x5199;&amp;#x5165;5&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x5BF9;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;&amp;#x5199;&amp;#x5165;&amp;#x7684;&amp;#x662F;10&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 10-1: Logging inconsistent cuddle zombie data&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&amp;#x56FE; 10-1: &amp;#x8BB0;&amp;#x5F55;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x6570;&amp;#x636E;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/fred-read.png&quot; alt=&quot;fred-read&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This would be unfortunate. You don&amp;#x2019;t want your data to be inconsistent when you&amp;#x2019;re trying to recover from the cuddle zombie apocalypse. However, there&amp;#x2019;s no way to retain the state of an object at a specific moment in time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5F88;&amp;#x4E0D;&amp;#x5E78;&amp;#x3002;&amp;#x5F53;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x707E;&amp;#x53D8;&amp;#x6062;&amp;#x590D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F60;&amp;#x4E0D;&amp;#x60F3;&amp;#x8981;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x4F46;&amp;#x6CA1;&amp;#x6709;&amp;#x529E;&amp;#x6CD5;&amp;#x4FDD;&amp;#x7559;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x67D0;&amp;#x4E00;&amp;#x4E2A;&amp;#x7279;&amp;#x5B9A;&amp;#x65F6;&amp;#x523B;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Additionally, in order to change the &lt;code&gt;cuddle_hunger_level&lt;/code&gt; and &lt;code&gt;percent_deteriorated&lt;/code&gt; simultaneously, you must be extra careful. Otherwise, it&amp;#x2019;s possible for &lt;code&gt;fred&lt;/code&gt; to be viewed in an inconsistent state, because another thread might &lt;code&gt;read&lt;/code&gt; the &lt;code&gt;fred&lt;/code&gt; object in between the two changes that you intend to be simultaneous, like so:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x6539;&amp;#x53D8;&lt;code&gt;cuddle_hunger_level&lt;/code&gt;&amp;#x548C;&lt;code&gt;percent_deteriorated&lt;/code&gt;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x7279;&amp;#x522B;&amp;#x5C0F;&amp;#x5FC3;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x4F7F;&amp;#x5F17;&amp;#x96F7;&amp;#x5FB7;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x53EF;&amp;#x80FD;&amp;#x5728;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4FEE;&amp;#x6539;&amp;#x4E4B;&amp;#x95F4;&amp;#x8BFB;&amp;#x53D6;&amp;#x5F17;&amp;#x96F7;&amp;#x5FB7;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fred.cuddle_hunger_level = fred.cuddle_hunger_level + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# At this time, another thread could read fred&amp;apos;s attributes and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# &amp;quot;perceive&amp;quot; fred in an inconsistent state unless you use a mutex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fred.percent_deteriorated = fred.percent_deteriorated + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is another version of the mutual exclusion problem. In object-oriented programming (OOP), you can manually address this problem with a mutex, which ensures that only one thread can access a resource (in this case, the &lt;code&gt;fred&lt;/code&gt; object) at a time for the duration of the mutex.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7248;&amp;#x672C;&amp;#x7684;&amp;#x4E92;&amp;#x65A5;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x5728;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x7F16;&amp;#x7A0B;&amp;#x91CC;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4E92;&amp;#x65A5;&amp;#x624B;&amp;#x5DE5;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x5728;&amp;#x4E92;&amp;#x65A5;&amp;#x6301;&amp;#x7EED;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E00;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;(&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x662F;&lt;code&gt;fred&lt;/code&gt;&amp;#x5BF9;&amp;#x8C61;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The fact that objects are never stable doesn&amp;#x2019;t stop us from treating them as the fundamental building blocks of programs. In fact, this is considered an advantage of OOP. It doesn&amp;#x2019;t matter how the state changes; you can still interact with a stable interface and everything will work as it should. This conforms to our intuitive sense of the world. A piece of wax is still the same piece of wax even if its properties change: if I change its color, melt it, and pour it on the face of my enemy, I&amp;#x2019;d still think of it as the same wax object I started with.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x8C61;&amp;#x6C38;&amp;#x8FDC;&amp;#x662F;&amp;#x4E0D;&amp;#x7A33;&amp;#x5B9A;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E8B;&amp;#x5B9E;&amp;#x5E76;&amp;#x672A;&amp;#x963B;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x628A;&amp;#x5BF9;&amp;#x8C61;&amp;#x4F5C;&amp;#x4E3A;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x4E8B;&amp;#x5B9E;&amp;#x4E0A;&amp;#xFF0C;&amp;#x8FD9;&amp;#x88AB;&amp;#x770B;&amp;#x4F5C;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F18;&amp;#x70B9;&amp;#x3002;&amp;#x4E0D;&amp;#x7BA1;&amp;#x72B6;&amp;#x6001;&amp;#x5982;&amp;#x4F55;&amp;#x6539;&amp;#x53D8;&amp;#xFF0C;&amp;#x4F60;&amp;#x59CB;&amp;#x7EC8;&amp;#x4E0E;&amp;#x7A33;&amp;#x5B9A;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#x4EA4;&amp;#x4E92;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E00;&amp;#x5207;&amp;#x90FD;&amp;#x6309;&amp;#x9884;&amp;#x60F3;&amp;#x5DE5;&amp;#x4F5C;&amp;#x3002;&amp;#x8FD9;&amp;#x7B26;&amp;#x5408;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;&amp;#x4E16;&amp;#x754C;&amp;#x7684;&amp;#x76F4;&amp;#x89C9;&amp;#x3002;&amp;#x5373;&amp;#x4F7F;&amp;#x4E00;&amp;#x5757;&amp;#x814A;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#x6539;&amp;#x53D8;&amp;#x4E86;&amp;#xFF0C;&amp;#x5B83;&amp;#x59CB;&amp;#x7EC8;&amp;#x8FD8;&amp;#x662F;&amp;#x90A3;&amp;#x5757;&amp;#x814A;&amp;#xFF1A;&amp;#x5982;&amp;#x679C;&amp;#x6211;&amp;#x6539;&amp;#x53D8;&amp;#x4E86;&amp;#x5B83;&amp;#x7684;&amp;#x989C;&amp;#x8272;&amp;#xFF0C;&amp;#x628A;&amp;#x5B83;&amp;#x878D;&amp;#x5316;&amp;#xFF0C;&amp;#x5E76;&amp;#x5012;&amp;#x5728;&amp;#x654C;&amp;#x4EBA;&amp;#x7684;&amp;#x8138;&amp;#x4E0A;&amp;#xFF0C;&amp;#x6211;&amp;#x4ECD;&amp;#x7136;&amp;#x8BA4;&amp;#x4E3A;&amp;#x5B83;&amp;#x662F;&amp;#x5F00;&amp;#x59CB;&amp;#x90A3;&amp;#x4E2A;&amp;#x814A;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also, in OOP, objects do things. They act on each other, changing state as the program runs. Again, this conforms to our intuitive sense of the world: change is the result of objects acting on each other. A Person object pushes on a Door object and enters a House object.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x7F16;&amp;#x7A0B;&amp;#x91CC;&amp;#xFF0C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E5F;&amp;#x505A;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E92;&amp;#x76F8;&amp;#x4F5C;&amp;#x7528;&amp;#xFF0C;&amp;#x968F;&amp;#x7740;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#x6539;&amp;#x53D8;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x8FD9;&amp;#x53C8;&amp;#x4E00;&amp;#x6B21;&amp;#x7B26;&amp;#x5408;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;&amp;#x4E16;&amp;#x754C;&amp;#x7684;&amp;#x76F4;&amp;#x89C9;&amp;#xFF1A;&amp;#x6539;&amp;#x53D8;&amp;#x662F;&amp;#x5BF9;&amp;#x8C61;&amp;#x76F8;&amp;#x4E92;&amp;#x4F5C;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EBA;&amp;#x5BF9;&amp;#x8C61;&amp;#x63A8;&amp;#x4E00;&amp;#x4E2A;&amp;#x95E8;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FDB;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x623F;&amp;#x5B50;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure Metaphysics&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Clojure&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&quot;&gt;&lt;a href=&quot;#Clojure&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&quot; class=&quot;headerlink&quot; title=&quot;Clojure&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&quot;&gt;&lt;/a&gt;Clojure&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In Clojure metaphysics, we would say that we never encounter the same cuddle zombie twice. The cuddle zombie is not a discrete thing that exists in the world independent of its mutations: it&amp;#x2019;s actually a succession of values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;Clojure&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x91CC;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8BF4;&amp;#x9047;&amp;#x5230;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x4E24;&amp;#x6B21;&amp;#x3002;&amp;#x90A3;&amp;#x4E2A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x4E0D;&amp;#x662F;&amp;#x4E16;&amp;#x754C;&amp;#x4E0A;&amp;#x7684;&amp;#x72EC;&amp;#x7ACB;&amp;#x4E8E;&amp;#x5176;&amp;#x6539;&amp;#x53D8;&amp;#x7684;&amp;#x5177;&amp;#x4F53;&amp;#x4E8B;&amp;#x7269;&amp;#xFF1A;&amp;#x5B83;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The term value is used often by Clojurists, and its specific meaning might differ from what you&amp;#x2019;re used to. Values are atomic in the sense that they form a single irreducible unit or component in a larger system; they&amp;#x2019;re indivisible, unchanging, stable entities. Numbers are values: it wouldn&amp;#x2019;t make sense for the number 15 to mutate into another number. When you add or subtract from 15, you don&amp;#x2019;t change the number 15; you just wind up with a different number. Clojure&amp;#x2019;s data structures are also values because they&amp;#x2019;re immutable. When you use &lt;code&gt;assoc&lt;/code&gt; on a map, you don&amp;#x2019;t modify the original map; instead, you derive a new map.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x503C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#x7ECF;&amp;#x5E38;&amp;#x88AB;Clojure&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5176;&amp;#x7279;&amp;#x5B9A;&amp;#x542B;&amp;#x4E49;&amp;#x53EF;&amp;#x80FD;&amp;#x4E0E;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x3002;&amp;#x503C;&amp;#x6784;&amp;#x6210;&amp;#x4E86;&amp;#x66F4;&amp;#x5927;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x7684;&amp;#x5355;&amp;#x4E00;&amp;#x7684;&amp;#x4E0D;&amp;#x53EF;&amp;#x524A;&amp;#x51CF;&amp;#x7684;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x5206;&amp;#x5272;&amp;#x7684;&amp;#xFF0C;&amp;#x4E0D;&amp;#x53D8;&amp;#x7684;&amp;#xFF0C;&amp;#x7A33;&amp;#x5B9A;&amp;#x7684;&amp;#x5B9E;&amp;#x4F53;&amp;#x3002;&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x610F;&amp;#x4E49;&amp;#x4E0A;&amp;#x8BF4;&amp;#xFF0C;&amp;#x503C;&amp;#x662F;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#x3002;&amp;#x6570;&amp;#x5B57;&amp;#x662F;&amp;#x503C;&amp;#xFF1A;&amp;#x6570;&amp;#x5B57;15&amp;#x6539;&amp;#x53D8;&amp;#x6210;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x5B57;&amp;#x662F;&amp;#x65E0;&amp;#x610F;&amp;#x4E49;&amp;#x7684;&amp;#x3002;&amp;#x5BF9;15&amp;#x8FDB;&amp;#x884C;&amp;#x52A0;&amp;#x6216;&amp;#x51CF;&amp;#x65F6;&amp;#xFF0C;&amp;#x4E0D;&amp;#x662F;&amp;#x6539;&amp;#x53D8;&amp;#x6570;&amp;#x5B57;15&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x6700;&amp;#x540E;&amp;#x5F97;&amp;#x5230;&amp;#x4E86;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x5B57;&amp;#x3002;Clojure&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E5F;&amp;#x662F;&amp;#x503C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x53D8;&amp;#x7684;&amp;#x3002;&amp;#x5F53;&amp;#x4F60;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;map&amp;#x4F7F;&amp;#x7528;&lt;code&gt;assco&lt;/code&gt;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F60;&amp;#x6CA1;&amp;#x6709;&amp;#x6539;&amp;#x53D8;&amp;#x539F;&amp;#x6765;&amp;#x7684;map&amp;#xFF0C;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x4F60;&amp;#x5F97;&amp;#x5230;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;map&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So a value doesn&amp;#x2019;t change, but you can apply a process to a value to produce a new value. For example, say we start with a value &lt;em&gt;F1&lt;/em&gt;, and then we apply the &lt;em&gt;Cuddle Zombie&lt;/em&gt; process to &lt;em&gt;F1&lt;/em&gt; to produce the value &lt;em&gt;F2&lt;/em&gt;. The process then gets applied to the value &lt;em&gt;F2&lt;/em&gt; to produce the value &lt;em&gt;F3&lt;/em&gt;, and so on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x503C;&amp;#x4E0D;&amp;#x6539;&amp;#x53D8;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x503C;&amp;#x5E94;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7528;&amp;#x4EE5;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x5F00;&amp;#x59CB;&amp;#x6709;&amp;#x4E2A;&amp;#x503C;&lt;em&gt;F1&lt;/em&gt;,&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&lt;em&gt;F1&lt;/em&gt;&amp;#x5E94;&amp;#x7528;&lt;em&gt;Cuddle Zombie&lt;/em&gt;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x4E86;&amp;#x503C;&lt;em&gt;F2&lt;/em&gt;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53C8;&amp;#x5E94;&amp;#x7528;&amp;#x4E8E;&lt;em&gt;F2&lt;/em&gt;&amp;#x4EA7;&amp;#x751F;&amp;#x4E86;&amp;#x503C;&lt;em&gt;F3&lt;/em&gt;,&amp;#x8BF8;&amp;#x5982;&amp;#x6B64;&amp;#x7C7B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This leads to a different conception of &lt;em&gt;identity&lt;/em&gt;. Instead of understanding identity as inherent to a changing object, as in OO metaphysics, Clojure metaphysics construes identity as something we humans impose on a succession of unchanging values produced by a process over time. We use &lt;em&gt;names&lt;/em&gt; to designate identities. The name &lt;em&gt;Fred&lt;/em&gt; is a handy way to refer to a series of individual states &lt;em&gt;F1&lt;/em&gt;, &lt;em&gt;F2&lt;/em&gt;, &lt;em&gt;F3&lt;/em&gt;, and so on. From this viewpoint, there&amp;#x2019;s no such thing as mutable state. Instead, state means the value of an identity at a point in time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5BFC;&amp;#x81F4;&amp;#x4E86;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&lt;em&gt;&amp;#x8EAB;&amp;#x4EFD;&lt;/em&gt;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x4E0D;&amp;#x50CF;&amp;#x9762;&amp;#x5411;&amp;#x5BF9;&amp;#x8C61;&amp;#x54F2;&amp;#x5B66;&amp;#x90A3;&amp;#x6837;&amp;#xFF0C;&amp;#x8BA4;&amp;#x4E3A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x5BF9;&amp;#x4E8E;&amp;#x53D8;&amp;#x5316;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x662F;&amp;#x56FA;&amp;#x6709;&amp;#x7684;&amp;#xFF0C;Clojure&amp;#x54F2;&amp;#x5B66;&amp;#x8BA4;&amp;#x4E3A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5F3A;&amp;#x52A0;&amp;#x5728;&amp;#x8FDE;&amp;#x7EED;&amp;#x4E0D;&amp;#x53D8;&amp;#x7684;&amp;#x503C;&amp;#x4E0A;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x503C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x968F;&amp;#x7740;&amp;#x65F6;&amp;#x95F4;&amp;#x6D41;&amp;#x901D;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&lt;em&gt;&amp;#x540D;&amp;#x79F0;&lt;/em&gt;&amp;#x6807;&amp;#x51FA;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&amp;#x540D;&amp;#x79F0;&lt;em&gt;Fred&lt;/em&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x65B9;&amp;#x4FBF;&amp;#x5730;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x4E2A;&amp;#x522B;&amp;#x7684;&amp;#x72B6;&amp;#x6001;,&lt;em&gt;F1&lt;/em&gt;, &lt;em&gt;F2&lt;/em&gt;, &lt;em&gt;F3&lt;/em&gt; &amp;#x7B49;&amp;#x7B49;&amp;#x3002;&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x89D2;&amp;#x5EA6;&amp;#x770B;&amp;#xFF0C;&amp;#x6CA1;&amp;#x6709;&amp;#x53EF;&amp;#x53D8;&amp;#x72B6;&amp;#x6001;&amp;#x90A3;&amp;#x6837;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x72B6;&amp;#x6001;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x8EAB;&amp;#x4EFD;&amp;#x5728;&amp;#x67D0;&amp;#x4E2A;&amp;#x65F6;&amp;#x95F4;&amp;#x70B9;&amp;#x4E0A;&amp;#x7684;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rich Hickey has used the analogy of phone numbers to explain state. &lt;em&gt;Alan&amp;#x2019;s phone number&lt;/em&gt; has changed 10 times, but we will always call these numbers by the same name, &lt;em&gt;Alan&amp;#x2019;s phone number&lt;/em&gt;. Alan&amp;#x2019;s phone number five years ago is a different value than Alan&amp;#x2019;s phone number today, and both are two states of Alan&amp;#x2019;s phone number identity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Rich Hickey&amp;#x66FE;&amp;#x7ECF;&amp;#x7528;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&amp;#x7684;&amp;#x7C7B;&amp;#x6BD4;&amp;#x89E3;&amp;#x91CA;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;em&gt;&amp;#x963F;&amp;#x5170;&amp;#x7684;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&lt;/em&gt; &amp;#x53D8;&amp;#x8FC7;10&amp;#x6B21;&amp;#xFF0C;&amp;#x4F46;&amp;#x6211;&amp;#x4EEC;&amp;#x603B;&amp;#x662F;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&lt;em&gt;&amp;#x963F;&amp;#x5170;&amp;#x7684;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&lt;/em&gt; &amp;#x53EB;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53F7;&amp;#x7801;&amp;#x3002;&amp;#x4E94;&amp;#x5E74;&amp;#x524D;&amp;#x7684;&amp;#x963F;&amp;#x5170;&amp;#x7684;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&amp;#x4E0E;&amp;#x4ECA;&amp;#x5929;&amp;#x7684;&amp;#x963F;&amp;#x5170;&amp;#x7684;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&amp;#x662F;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x90FD;&amp;#x662F;&amp;#x963F;&amp;#x5170;&amp;#x7684;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This makes sense when you consider that in your programs you are dealing with information about the world. Rather than saying that information has changed, you would say you&amp;#x2019;ve received new information. At 12:00 pm on Friday, Fred the Cuddle Zombie was in a state of 50 percent decay. At 1:00 pm, he was 60 percent decayed. These are both facts that you can process, and the introduction of a new fact does not invalidate a previous fact. Even though Fred&amp;#x2019;s decay increased from 50 percent to 60 percent, it&amp;#x2019;s still true that at 12:00 pm he was in a state of 50 percent decay.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8003;&amp;#x8651;&amp;#x5230;&amp;#x4F60;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x662F;&amp;#x4E16;&amp;#x754C;&amp;#x4E0A;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x6709;&amp;#x610F;&amp;#x4E49;&amp;#x7684;&amp;#x3002;&amp;#x4E0D;&amp;#x662F;&amp;#x4FE1;&amp;#x606F;&amp;#x5728;&amp;#x6539;&amp;#x53D8;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x63A5;&amp;#x53D7;&amp;#x5230;&amp;#x4E86;&amp;#x65B0;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x5468;&amp;#x4E94;&amp;#x665A;&amp;#x4E0A;12&amp;#x70B9;&amp;#xFF0C;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x5F17;&amp;#x96F7;&amp;#x5FB7;&amp;#x7684;&amp;#x8150;&amp;#x70C2;&amp;#x5EA6;&amp;#x662F;50%&amp;#x3002;&amp;#x591C;&amp;#x91CC;&amp;#x4E00;&amp;#x70B9;&amp;#xFF0C;&amp;#x662F;60%&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E8B;&amp;#x5B9E;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x65B0;&amp;#x4E8B;&amp;#x5B9E;&amp;#x7684;&amp;#x5F15;&amp;#x5165;&amp;#x6CA1;&amp;#x6709;&amp;#x4F7F;&amp;#x524D;&amp;#x4E00;&amp;#x4E2A;&amp;#x65E0;&amp;#x6548;&amp;#x3002;&amp;#x5C3D;&amp;#x7BA1;&amp;#x5F17;&amp;#x96F7;&amp;#x5FB7;&amp;#x7684;&amp;#x8150;&amp;#x70C2;&amp;#x5EA6;&amp;#x4ECE;50%&amp;#x589E;&amp;#x52A0;&amp;#x5230;60%&amp;#xFF0C;&amp;#x4F46;&amp;#x4ED6;&amp;#x5728;12&amp;#x70B9;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x8150;&amp;#x70C2;&amp;#x5EA6;&amp;#x4E3A;50%&amp;#x4ECD;&amp;#x7136;&amp;#x662F;&amp;#x4E8B;&amp;#x5B9E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 10-2 shows how you might visualize values, process, identity, and state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;10-2&amp;#x56FE;&amp;#x5F62;&amp;#x5316;&amp;#x5730;&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x503C;&amp;#xFF0C;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8EAB;&amp;#x4EFD;&amp;#x548C;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 10-2: Values, process, identity, and state&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/fp-metaphysics.png&quot; alt=&quot;fpm&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These values don&amp;#x2019;t act on each other, and they can&amp;#x2019;t be changed. They can&amp;#x2019;t do anything. Change only occurs when a) a process generates a new value and b) we choose to associate the identity with the new value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x503C;&amp;#x4E0D;&amp;#x4E92;&amp;#x76F8;&amp;#x5F71;&amp;#x54CD;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6539;&amp;#x53D8;&amp;#x3002;&amp;#x5B83;&amp;#x4EEC;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x4E0D;&amp;#x505A;&amp;#x3002;&amp;#x53D8;&amp;#x5316;&amp;#x53EA;&amp;#x51FA;&amp;#x73B0;&amp;#x4E8E;&amp;#xFF1A;a) &amp;#x8FC7;&amp;#x7A0B;&amp;#x4EA7;&amp;#x751F;&amp;#x4E86;&amp;#x65B0;&amp;#x503C;&amp;#x3002; b) &amp;#x6211;&amp;#x4EEC;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#x5173;&amp;#x8054;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To handle this sort of change, Clojure uses &lt;em&gt;reference types&lt;/em&gt;. Reference types let you manage identities in Clojure. Using them, you can name an identity and retrieve its state. Let&amp;#x2019;s look at the simplest of these, the &lt;em&gt;atom&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x4F7F;&amp;#x7528;&lt;em&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&lt;/em&gt;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x7C7B;&amp;#x53D8;&amp;#x5316;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x7BA1;&amp;#x7406;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x547D;&amp;#x540D;&amp;#x4E00;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x83B7;&amp;#x53D6;&amp;#x5B83;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x770B;&amp;#x6700;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#xFF1A;&lt;em&gt;&amp;#x539F;&amp;#x5B50;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Atoms&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x539F;&amp;#x5B50;&quot;&gt;&lt;a href=&quot;#&amp;#x539F;&amp;#x5B50;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x539F;&amp;#x5B50;&quot;&gt;&lt;/a&gt;&amp;#x539F;&amp;#x5B50;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Clojure&amp;#x2019;s atom reference type allows you to endow a succession of related values with an identity. Here&amp;#x2019;s how you create one:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x7684;&amp;#x539F;&amp;#x5B50;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x8BA9;&amp;#x4F60;&amp;#x4E3A;&amp;#x8FDE;&amp;#x7EED;&amp;#x76F8;&amp;#x5173;&amp;#x503C;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x521B;&amp;#x5EFA;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; fred (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;atom&lt;/span&gt;&lt;/span&gt; {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;}))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This creates a new atom and binds it to the name &lt;code&gt;fred&lt;/code&gt;. This atom refers to the value &lt;code&gt;{:cuddle-hunger-level 0 :percent-deteriorated 0}&lt;/code&gt;, and you would say that that&amp;#x2019;s its current state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x5B50;&amp;#x5E76;&amp;#x628A;&amp;#x5B83;&amp;#x4E0E;&amp;#x540D;&amp;#x5B57;&lt;code&gt;fred&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5B50;&amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#x503C;&amp;#x662F;&lt;code&gt;{:cuddle-hunger-level 0 :percent-deteriorated 0}&lt;/code&gt;,&amp;#x8FD9;&amp;#x4E5F;&amp;#x662F;&amp;#x5B83;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get an atom&amp;#x2019;s current state, you dereference it. Here&amp;#x2019;s Fred&amp;#x2019;s current state:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53D6;&amp;#x503C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x539F;&amp;#x5B50;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x3002;Fred&amp;#x7684;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@fred&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 0, :percent-deteriorated 0}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike futures, delays, and promises, dereferencing an atom (or any other reference type) will never block. When you dereference futures, delays, and promises, it&amp;#x2019;s like you&amp;#x2019;re saying &amp;#x201C;I need a value now, and I will wait until I get it,&amp;#x201D; so it makes sense that the operation would block. However, when you dereference a reference type, it&amp;#x2019;s like you&amp;#x2019;re saying &amp;#x201C;give me the value I&amp;#x2019;m currently referring to,&amp;#x201D; so it makes sense that the operation doesn&amp;#x2019;t block, because it doesn&amp;#x2019;t have to wait for anything.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0D;&amp;#x50CF;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;(&lt;a href=&quot;https://morrxy.github.io/2016/07/15/braveclojure-concurrency/#&amp;#x672A;&amp;#x6765;-future-&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;-delay-&amp;#x548C;&amp;#x627F;&amp;#x8BFA;-promise&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;)&amp;#xFF0C;&amp;#x5BF9;&amp;#x539F;&amp;#x5B50;(&amp;#x6216;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;)&amp;#x53D6;&amp;#x503C;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x3002;&amp;#x5F53;&amp;#x5BF9;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x53D6;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x5C31;&amp;#x50CF;&amp;#x5728;&amp;#x8BF4;&amp;#xFF1A;&amp;#x6211;&amp;#x73B0;&amp;#x5728;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#xFF0C;&amp;#x6211;&amp;#x4F1A;&amp;#x7B49;&amp;#x7740;&amp;#x76F4;&amp;#x5230;&amp;#x5F97;&amp;#x5230;&amp;#x5B83;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x662F;&amp;#x6709;&amp;#x610F;&amp;#x4E49;&amp;#x7684;&amp;#x3002;&amp;#x4F46;&amp;#x5F53;&amp;#x5BF9;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x53D6;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x5C31;&amp;#x50CF;&amp;#x5728;&amp;#x8BF4;&amp;#xFF1A;&amp;#x7ED9;&amp;#x6211;&amp;#x5F53;&amp;#x524D;&amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E0D;&amp;#x963B;&amp;#x585E;&amp;#x662F;&amp;#x6709;&amp;#x9053;&amp;#x7406;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E0D;&amp;#x7528;&amp;#x7B49;&amp;#x5F85;&amp;#x4EFB;&amp;#x4F55;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the Ruby example in Listing 10-1, we saw how object data could change while you try to log it on a separate thread. There&amp;#x2019;s no danger of that happening when using atoms to manage state, because each state is immutable. Here&amp;#x2019;s how you could log a zombie&amp;#x2019;s state with &lt;code&gt;println&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5217;&amp;#x8868;10-1&amp;#x7684;Ruby&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x5F53;&amp;#x4F60;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5728;&amp;#x72EC;&amp;#x7ACB;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8BB0;&amp;#x5F55;&amp;#x5BF9;&amp;#x8C61;&amp;#x6570;&amp;#x636E;&amp;#x65F6;&amp;#xFF0C;&amp;#x5B83;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x6539;&amp;#x53D8;&amp;#x3002;&amp;#x7528;&amp;#x539F;&amp;#x5B50;&amp;#x7BA1;&amp;#x7406;&amp;#x72B6;&amp;#x6001;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6709;&amp;#x8FD9;&amp;#x79CD;&amp;#x5371;&amp;#x9669;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x53D8;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x7528;&lt;code&gt;print&lt;/code&gt;&amp;#x8BB0;&amp;#x5F55;&amp;#x50F5;&amp;#x5C38;&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [zombie-state @fred]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; zombie-state) &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; zombie-state)))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The problem with the Ruby example in Listing 10-1 was that it took two steps to read the zombie&amp;#x2019;s two attributes, and some other thread could have changed those attributes in between the two steps. However, by using atoms to refer to immutable data structures, you only have to perform one read, and the data structure returned won&amp;#x2019;t get altered by another thread.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5217;&amp;#x8868;10-1&amp;#x7684;Ruby&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x5728;&amp;#x4E8E;&amp;#xFF1A;&amp;#x8BFB;&amp;#x53D6;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#x82B1;&amp;#x4E86;&amp;#x4E24;&amp;#x6B65;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E24;&amp;#x6B65;&amp;#x4E4B;&amp;#x95F4;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53EF;&amp;#x80FD;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6539;&amp;#x53D8;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5C5E;&amp;#x6027;&amp;#x3002;&amp;#x4F46;&amp;#x7528;&amp;#x539F;&amp;#x5B50;&amp;#x5F15;&amp;#x7528;&amp;#x4E0D;&amp;#x53EF;&amp;#x53D8;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#x8BFB;&amp;#x53D6;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E0D;&amp;#x4F1A;&amp;#x88AB;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6539;&amp;#x53D8;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To update the atom so that it refers to a new state, you use &lt;code&gt;swap!&lt;/code&gt;. This might seem contradictory, because I said that atomic values are unchanging. Indeed, they are! But now we&amp;#x2019;re working with the atom &lt;em&gt;reference type&lt;/em&gt;, a construct that refers to atomic values. The atomic values don&amp;#x2019;t change, but the reference type can be updated and assigned a new value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;swap!&lt;/code&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x539F;&amp;#x5B50;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5B83;&amp;#x6307;&amp;#x5411;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x6211;&amp;#x66FE;&amp;#x7ECF;&amp;#x8BF4;&amp;#x8FC7;&amp;#x539F;&amp;#x5B50;&amp;#x503C;&amp;#x662F;&amp;#x4E0D;&amp;#x53D8;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x53EF;&amp;#x80FD;&amp;#x6709;&amp;#x70B9;&amp;#x77DB;&amp;#x76FE;&amp;#x3002;&amp;#x539F;&amp;#x5B50;&amp;#x786E;&amp;#x5B9E;&amp;#x662F;&amp;#x4E0D;&amp;#x53D8;&amp;#x7684;&amp;#xFF01;&amp;#x4F46;&amp;#x73B0;&amp;#x5728;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x662F;&amp;#x539F;&amp;#x5B50;&lt;em&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&lt;/em&gt; &amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6307;&amp;#x5411;&amp;#x539F;&amp;#x5B50;&amp;#x503C;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x539F;&amp;#x5B50;&amp;#x503C;&amp;#x4E0D;&amp;#x53D8;&amp;#xFF0C;&amp;#x4F46;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x5E76;&amp;#x88AB;&amp;#x8D4B;&amp;#x4E88;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;swap!&lt;/code&gt; receives an atom and a function as arguments. It applies the function to the atom&amp;#x2019;s current state to produce a new value, and then it updates the atom to refer to this new value. The new value is also returned. Here&amp;#x2019;s how you might increase Fred&amp;#x2019;s cuddle hunger level by one:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;swap!&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x5B50;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x5BF9;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x5E94;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x66F4;&amp;#x65B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5B50;&amp;#x6307;&amp;#x5411;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#x3002;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x628A;Fred&amp;#x7684;&amp;#x62E5;&amp;#x62B1;&amp;#x6E34;&amp;#x671B;&amp;#x7B49;&amp;#x7EA7;&amp;#x52A0;&amp;#x4E00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; fred&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [current-state]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         (&lt;span class=&quot;name&quot;&gt;merge-with&lt;/span&gt; + current-state {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;})))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 1, :percent-deteriorated 0}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Dereferencing &lt;code&gt;fred&lt;/code&gt; will return the new state:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&lt;code&gt;fred&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x65B0;&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@fred&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 1, :percent-deteriorated 0}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike Ruby, it&amp;#x2019;s not possible for &lt;code&gt;fred&lt;/code&gt; to be in an inconsistent state, because you can update the hunger level and deterioration percentage at the same time, like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0D;&amp;#x50CF;Ruby&amp;#xFF0C;&lt;code&gt;fred&lt;/code&gt;&amp;#x4E0D;&amp;#x53EF;&amp;#x80FD;&amp;#x5904;&amp;#x4E8E;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F60;&amp;#x540C;&amp;#x65F6;&amp;#x66F4;&amp;#x65B0;&amp;#x6E34;&amp;#x671B;&amp;#x7EA7;&amp;#x522B;&amp;#x548C;&amp;#x8150;&amp;#x70C2;&amp;#x767E;&amp;#x5206;&amp;#x6BD4;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; fred&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [current-state]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         (&lt;span class=&quot;name&quot;&gt;merge-with&lt;/span&gt; + current-state {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                      &lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;})))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 2, :percent-deteriorated 1}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code passes &lt;code&gt;swap!&lt;/code&gt; a function that takes only one argument, &lt;code&gt;current-state&lt;/code&gt;. You can also pass &lt;code&gt;swap!&lt;/code&gt; a function that takes multiple arguments. For example, you could create a function that takes two arguments, a zombie state and the amount by which to increase its cuddle hunger level:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;swap!&lt;/code&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&lt;code&gt;current-state&lt;/code&gt;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x53D7;&amp;#x591A;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x50F5;&amp;#x5C38;&amp;#x72B6;&amp;#x6001;&amp;#x548C;&amp;#x6E34;&amp;#x671B;&amp;#x62E5;&amp;#x62B1;&amp;#x7B49;&amp;#x7EA7;&amp;#x589E;&amp;#x52A0;&amp;#x7684;&amp;#x6570;&amp;#x91CF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; increase-cuddle-hunger-level&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [zombie-state increase-by]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;merge-with&lt;/span&gt; + zombie-state {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; increase-by}))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s test &lt;code&gt;increase-cuddle-hunger-level&lt;/code&gt; out real quick on a zombie state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6D4B;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;increase-cuddle-hunger-level&lt;/span&gt; @fred &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 12, :percent-deteriorated 1}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this code doesn&amp;#x2019;t actually update &lt;code&gt;fred&lt;/code&gt;, because we&amp;#x2019;re not using &lt;code&gt;swap!&lt;/code&gt; We&amp;#x2019;re just making a normal function call to &lt;code&gt;increase-cuddle-hunger-level&lt;/code&gt;, which returns a result.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x6CA1;&amp;#x6709;&amp;#x66F4;&amp;#x65B0;&lt;code&gt;fred&lt;/code&gt;,&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x6CA1;&amp;#x6709;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;swap!&lt;/code&gt;,&amp;#x53EA;&amp;#x662F;&amp;#x5BF9;&lt;code&gt;increase-cuddle-hunger-level&lt;/code&gt;&amp;#x505A;&amp;#x4E86;&amp;#x4E00;&amp;#x6B21;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now call &lt;code&gt;swap!&lt;/code&gt; with the additional arguments, and &lt;code&gt;@fred&lt;/code&gt; will be updated, like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x5E26;&amp;#x7740;&amp;#x9644;&amp;#x52A0;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&lt;code&gt;swap!&lt;/code&gt;,&lt;code&gt;@fred&lt;/code&gt;&amp;#x5C06;&amp;#x4F1A;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(swap! fred increase-cuddle-hunger-level 10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 12, :percent-deteriorated 1}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@fred&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 12, :percent-deteriorated 1}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Or you could express the whole thing using Clojure&amp;#x2019;s built-in functions. The &lt;code&gt;update-in&lt;/code&gt; function takes three arguments: a collection, a vector for identifying which value to update, and a function to update that value. It can also take additional arguments that get passed to the update function. Here are a couple of examples:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;Clojure&amp;#x7684;&amp;#x5185;&amp;#x7F6E;&amp;#x51FD;&amp;#x6570;&amp;#x5B8C;&amp;#x6210;&amp;#x6574;&amp;#x4E2A;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&lt;code&gt;update-in&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x63A5;&amp;#x53D7;&amp;#x4E09;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x7528;&amp;#x4E8E;&amp;#x6307;&amp;#x660E;&amp;#x66F4;&amp;#x65B0;&amp;#x54EA;&amp;#x4E2A;&amp;#x503C;&amp;#xFF0C;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7528;&amp;#x4E8E;&amp;#x66F4;&amp;#x65B0;&amp;#x90A3;&amp;#x4E2A;&amp;#x503C;&amp;#x3002;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x53D7;&amp;#x66F4;&amp;#x591A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x7ED9;&amp;#x90A3;&amp;#x4E2A;&amp;#x66F4;&amp;#x65B0;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x51E0;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;update-in&lt;/span&gt;&lt;/span&gt; {&lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; {&lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;}} [&lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt;] inc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:a {:b 4}}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;update-in&lt;/span&gt;&lt;/span&gt; {&lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; {&lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;}} [&lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:a {:b 13}}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the first example, you&amp;#x2019;re updating the map &lt;code&gt;{:a {:b 3}}&lt;/code&gt;. Clojure uses the vector &lt;code&gt;[:a :b]&lt;/code&gt; to traverse the nested maps; &lt;code&gt;:a&lt;/code&gt; yields the nested map &lt;code&gt;{:b 3}&lt;/code&gt;, and &lt;code&gt;:b&lt;/code&gt; yields the value &lt;code&gt;3&lt;/code&gt;. Clojure applies the &lt;code&gt;inc&lt;/code&gt; function to &lt;code&gt;3&lt;/code&gt; and returns a new map with &lt;code&gt;3&lt;/code&gt; replaced by &lt;code&gt;4&lt;/code&gt;. The second example is similar. The only difference is that you&amp;#x2019;re using the addition function and you&amp;#x2019;re supplying &lt;code&gt;10&lt;/code&gt; as an additional argument; Clojure ends up calling &lt;code&gt;(+ 3 10)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x8981;&amp;#x66F4;&amp;#x65B0;map&lt;code&gt;{:a {:b 3}}&lt;/code&gt;&amp;#x3002;&amp;#x7528;vector&lt;code&gt;[:a :b]&lt;/code&gt;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E2A;map&amp;#xFF0C;&amp;#x5E76;&amp;#x5F97;&amp;#x5230;&amp;#x503C;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&amp;#x5BF9;&lt;code&gt;3&lt;/code&gt;&amp;#x5E94;&amp;#x7528;&lt;code&gt;inc&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5F97;&amp;#x5230;&lt;code&gt;4&lt;/code&gt;,&amp;#x5E76;&amp;#x66FF;&amp;#x6362;map&amp;#x91CC;&amp;#x7684;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x7528;&amp;#x4E86;&lt;code&gt;+&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x9644;&amp;#x52A0;&amp;#x53C2;&amp;#x6570;&lt;code&gt;10&lt;/code&gt;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;&lt;code&gt;(+ 3 10)&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s how you can use the &lt;code&gt;update-in&lt;/code&gt; function to change Fred&amp;#x2019;s state:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;update-in&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4FEE;&amp;#x6539;Fred&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; fred update-in [&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:cuddle-hunger-level 22, :percent-deteriorated 1}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By using atoms, you can retain past state. You can dereference an atom to retrieve State 1, and then update the atom, creating State 2, and still make use of State 1:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x539F;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x4FDD;&amp;#x7559;&amp;#x8FC7;&amp;#x53BB;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x539F;&amp;#x5B50;&amp;#x53D6;&amp;#x503C;&amp;#x83B7;&amp;#x5F97;&amp;#x72B6;&amp;#x6001;1&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x66F4;&amp;#x65B0;&amp;#x539F;&amp;#x5B50;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x72B6;&amp;#x6001;2&amp;#xFF0C;&amp;#x5E76;&amp;#x7EE7;&amp;#x7EED;&amp;#x4F7F;&amp;#x7528;&amp;#x72B6;&amp;#x6001;1:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [num (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;atom&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      s1 @num]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; num inc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;State 1:&amp;quot;&lt;/span&gt; s1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Current state:&amp;quot;&lt;/span&gt; @num))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; State 1: 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Current state: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code creates an atom named &lt;code&gt;num&lt;/code&gt;, retrieves its state, updates its state, and then prints its past state and its current state, showing that I wasn&amp;#x2019;t trying to trick you when I said you can retain past state, and therefore you can trust me with all manner of things&amp;#x2014;including your true name, which I promise to utter only to save you from mortal danger.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x5B57;&amp;#x662F;&lt;code&gt;num&lt;/code&gt;&amp;#x7684;&amp;#x539F;&amp;#x5B50;&amp;#xFF0C;&amp;#x53D6;&amp;#x5F97;&amp;#x4E86;&amp;#x5B83;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x66F4;&amp;#x65B0;&amp;#x4E86;&amp;#x5B83;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6253;&amp;#x5370;&amp;#x5B83;&amp;#x7684;&amp;#x8FC7;&amp;#x53BB;&amp;#x548C;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is all interesting and fun, but what happens if two separate threads call &lt;code&gt;(swap! fred increase-cuddle-hunger-level 1)&lt;/code&gt;? Is it possible for one of the increments to get lost the way it did in the Ruby example at Listing 10-1?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5F88;&amp;#x6709;&amp;#x8DA3;&amp;#xFF0C;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4E24;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8C03;&amp;#x7528;&lt;code&gt;(swap! fred increase-cuddle-hunger-level 1)&lt;/code&gt;&amp;#x4F1A;&amp;#x600E;&amp;#x4E48;&amp;#x6837;&amp;#x5462;&amp;#xFF1F;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x589E;&amp;#x52A0;&amp;#x4F1A;&amp;#x4E0D;&amp;#x4F1A;&amp;#x50CF;&amp;#x5217;&amp;#x8868;10-1&amp;#x7684;Ruby&amp;#x4F8B;&amp;#x5B50;&amp;#x90A3;&amp;#x6837;&amp;#x4E22;&amp;#x5931;&amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The answer is no! &lt;code&gt;swap!&lt;/code&gt; implements compare-and-set semantics, meaning it does the following internally:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B54;&amp;#x6848;&amp;#x662F;&amp;#x4E0D;&amp;#x4F1A;&amp;#xFF01;&lt;code&gt;swap!&lt;/code&gt;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x6BD4;&amp;#x8F83;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x8BED;&amp;#x610F;&amp;#xFF0C;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x5B83;&amp;#x5185;&amp;#x90E8;&amp;#x505A;&amp;#x4E86;&amp;#x4E0B;&amp;#x5217;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;It reads the current state of the atom.&lt;/li&gt;
&lt;li&gt;It then applies the update function to that state.&lt;/li&gt;
&lt;li&gt;Next, it checks whether the value it read in step 1 is identical to the atom&amp;#x2019;s current value.&lt;/li&gt;
&lt;li&gt;If it is, then &lt;code&gt;swap!&lt;/code&gt; updates the atom to refer to the result of step 2.&lt;/li&gt;
&lt;li&gt;If it isn&amp;#x2019;t, then &lt;code&gt;swap!&lt;/code&gt; retries, going through the process again with step 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x8BFB;&amp;#x53D6;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#x5F53;&amp;#x524D;&amp;#x503C;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#x5E94;&amp;#x7528;&amp;#x66F4;&amp;#x65B0;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x68C0;&amp;#x67E5;&amp;#x539F;&amp;#x5B50;&amp;#x5F53;&amp;#x524D;&amp;#x503C;&amp;#x4E0E;&amp;#x6B65;&amp;#x9AA4;1&amp;#x8BFB;&amp;#x5230;&amp;#x7684;&amp;#x503C;&amp;#x662F;&amp;#x5426;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&lt;code&gt;swap!&lt;/code&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x539F;&amp;#x5B50;&amp;#x6307;&amp;#x5411;&amp;#x6B65;&amp;#x9AA4;2&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&lt;code&gt;swap!&lt;/code&gt;&amp;#x4ECE;&amp;#x6B65;&amp;#x9AA4;1&amp;#x5F00;&amp;#x59CB;&amp;#x91CD;&amp;#x65B0;&amp;#x5C1D;&amp;#x8BD5;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;This process ensures that no swaps will ever get lost.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;swap&amp;#x4E0D;&amp;#x4F1A;&amp;#x4E22;&amp;#x5931;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One detail to note about &lt;code&gt;swap!&lt;/code&gt; is that atom updates happen synchronously; they will block their thread. For example, if your update function calls &lt;code&gt;Thread/sleep 1000&lt;/code&gt; for some reason, the thread will block for at least a second while &lt;code&gt;swap!&lt;/code&gt; completes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&lt;code&gt;swap!&lt;/code&gt;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#x662F;&amp;#x539F;&amp;#x5B50;&amp;#x66F4;&amp;#x65B0;&amp;#x662F;&amp;#x540C;&amp;#x6B65;&amp;#x7684;&amp;#xFF0C;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x66F4;&amp;#x65B0;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&lt;code&gt;Thread/sleep 1000&lt;/code&gt;,&lt;code&gt;swap!&lt;/code&gt;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x81F3;&amp;#x5C11;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x4E00;&amp;#x79D2;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes you&amp;#x2019;ll want to update an atom without checking its current value. For example, you might develop a serum that sets a cuddle zombie&amp;#x2019;s hunger level and deterioration back to zero. For those cases, you can use the &lt;code&gt;reset!&lt;/code&gt; function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x66F4;&amp;#x65B0;&amp;#x539F;&amp;#x5B50;&amp;#x65F6;&amp;#x5019;&amp;#x4E0D;&amp;#x60F3;&amp;#x68C0;&amp;#x67E5;&amp;#x5B83;&amp;#x7684;&amp;#x5F53;&amp;#x524D;&amp;#x503C;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x7814;&amp;#x7A76;&amp;#x51FA;&amp;#x4E00;&amp;#x79CD;&amp;#x8840;&amp;#x6E05;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x62B1;&amp;#x62B1;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x6E34;&amp;#x671B;&amp;#x7EA7;&amp;#x522B;&amp;#x548C;&amp;#x8150;&amp;#x70C2;&amp;#x7EA7;&amp;#x522B;&amp;#x90FD;&amp;#x53D8;&amp;#x6210;&amp;#x96F6;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;reset!&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reset!&lt;/span&gt;&lt;/span&gt; fred {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;And that covers all the core functionality of atoms! To recap: atoms implement Clojure&amp;#x2019;s concept of state. They allow you to endow a series of immutable values with an identity. They offer a solution to the reference cell and mutual exclusion problems through their compare-and-set semantics. They also allow you to work with past states without fear of them mutating in place.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x6838;&amp;#x5FC3;&amp;#x529F;&amp;#x80FD;&amp;#xFF01;&amp;#x603B;&amp;#x7ED3;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&amp;#x539F;&amp;#x5B50;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;Clojre&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x5B83;&amp;#x5141;&amp;#x8BB8;&amp;#x7ED9;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x4E0D;&amp;#x53EF;&amp;#x53D8;&amp;#x7684;&amp;#x503C;&amp;#x8D4B;&amp;#x4E88;&amp;#x4E00;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x6BD4;&amp;#x8F83;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x8BED;&amp;#x610F;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x548C;&amp;#x4E92;&amp;#x65A5;&amp;#x95EE;&amp;#x9898;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6848;&amp;#x3002;&amp;#x5B83;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x4F7F;&amp;#x7528;&amp;#x8FC7;&amp;#x53BB;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x800C;&amp;#x4E0D;&amp;#x7528;&amp;#x5BB3;&amp;#x6015;&amp;#x5B83;&amp;#x4EEC;&amp;#x88AB;&amp;#x4FEE;&amp;#x6539;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In addition to these core features, atoms also share two features with the other reference types. You can attach both &lt;em&gt;watches&lt;/em&gt; and &lt;em&gt;validators&lt;/em&gt; to atoms. Let&amp;#x2019;s look at those now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9664;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6838;&amp;#x5FC3;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x539F;&amp;#x5B50;&amp;#x8DDF;&amp;#x5176;&amp;#x4ED6;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x539F;&amp;#x5B50;&amp;#x9644;&amp;#x52A0;&lt;em&gt;&amp;#x76D1;&amp;#x89C6;&lt;/em&gt;&amp;#x548C;&lt;em&gt;&amp;#x6821;&amp;#x9A8C;&lt;/em&gt;&amp;#x3002;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Watches and Validators&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x76D1;&amp;#x89C6;&amp;#x4E0E;&amp;#x6821;&amp;#x9A8C;&quot;&gt;&lt;a href=&quot;#&amp;#x76D1;&amp;#x89C6;&amp;#x4E0E;&amp;#x6821;&amp;#x9A8C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x76D1;&amp;#x89C6;&amp;#x4E0E;&amp;#x6821;&amp;#x9A8C;&quot;&gt;&lt;/a&gt;&amp;#x76D1;&amp;#x89C6;&amp;#x4E0E;&amp;#x6821;&amp;#x9A8C;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Watches allow you to be super creepy and check in on your reference types&amp;#x2019; every move. Validators allow you to be super controlling and restrict what states are allowable. Both watches and validators are plain ol&amp;#x2019; functions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x76D1;&amp;#x89C6;&amp;#x8BA9;&amp;#x4F60;&amp;#x5F88;&amp;#x7D27;&amp;#x5F20;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x76D1;&amp;#x89C6;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x770B;&amp;#x5230;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6BCF;&amp;#x6B65;&amp;#x52A8;&amp;#x4F5C;&amp;#x3002;&amp;#x6821;&amp;#x9A8C;&amp;#x8BA9;&amp;#x4F60;&amp;#x5F88;&amp;#x6709;&amp;#x63A7;&amp;#x5236;&amp;#x529B;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6821;&amp;#x9A8C;&amp;#x9650;&amp;#x5236;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x8BB8;&amp;#x53EF;&amp;#x7684;&amp;#x3002;&amp;#x76D1;&amp;#x89C6;&amp;#x548C;&amp;#x6821;&amp;#x9A8C;&amp;#x90FD;&amp;#x662F;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Watches&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x76D1;&amp;#x89C6;&quot;&gt;&lt;a href=&quot;#&amp;#x76D1;&amp;#x89C6;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x76D1;&amp;#x89C6;&quot;&gt;&lt;/a&gt;&amp;#x76D1;&amp;#x89C6;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A &lt;em&gt;watch&lt;/em&gt; is a function that takes four arguments: a key, the reference being watched, its previous state, and its new state. You can register any number of watches with a reference type.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x76D1;&amp;#x89C6;&lt;/em&gt; &amp;#x662F;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x56DB;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;key&amp;#xFF0C;&amp;#x88AB;&amp;#x76D1;&amp;#x89C6;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x65B0;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x6CE8;&amp;#x518C;&amp;#x4EFB;&amp;#x610F;&amp;#x4E2A;&amp;#x76D1;&amp;#x89C6;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s say that a zombie&amp;#x2019;s shuffle speed (measured in shuffles per hour, or SPH) is dependent on its hunger level and deterioration. Here&amp;#x2019;s how you&amp;#x2019;d calculate it, multiplying the cuddle hunger level by how whole it is:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x79FB;&amp;#x52A8;&amp;#x901F;&amp;#x5EA6;(&amp;#x6BCF;&amp;#x5C0F;&amp;#x65F6;&amp;#x79FB;&amp;#x52A8;&amp;#x6B65;&amp;#x6570;&amp;#xFF0C;SPH)&amp;#x4F9D;&amp;#x8D56;&amp;#x5B83;&amp;#x7684;&amp;#x6E34;&amp;#x671B;&amp;#x7EA7;&amp;#x522B;&amp;#x548C;&amp;#x8150;&amp;#x70C2;&amp;#x7EA7;&amp;#x522B;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x8BA1;&amp;#x7B97;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6E34;&amp;#x671B;&amp;#x7B49;&amp;#x7EA7;&amp;#x4E0E;&amp;#x5B8C;&amp;#x6574;&amp;#x5EA6;&amp;#x76F8;&amp;#x4E58;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; shuffle-speed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [zombie]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;*&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; zombie)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; zombie))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s also say that you want to be alerted whenever a zombie&amp;#x2019;s shuffle speed reaches the dangerous level of 5,000 SPH. Otherwise, you want to be told that everything&amp;#x2019;s okay. Here&amp;#x2019;s a watch function you could use to print a warning message if the SPH is above 5,000 and print an all&amp;#x2019;s-well message otherwise:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x79FB;&amp;#x52A8;&amp;#x901F;&amp;#x5EA6;&amp;#x5230;&amp;#x8FBE;5000SPH&amp;#x8FD9;&amp;#x4E2A;&amp;#x5371;&amp;#x9669;&amp;#x7EA7;&amp;#x522B;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x62A5;&amp;#x8B66;&amp;#x3002;&amp;#x6CA1;&amp;#x5230;&amp;#x8FBE;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x544A;&amp;#x77E5;&amp;#x4E00;&amp;#x5207;ok&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x76D1;&amp;#x89C6;&amp;#x51FD;&amp;#x6570;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; shuffle-alert&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [key watched old-state new-state]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [sph (&lt;span class=&quot;name&quot;&gt;shuffle-speed&lt;/span&gt; new-state)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; sph &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Run, you fool!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The zombie&amp;apos;s SPH is now &amp;quot;&lt;/span&gt; sph)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;This message brought to your courtesy of &amp;quot;&lt;/span&gt; key))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;All&amp;apos;s well with &amp;quot;&lt;/span&gt; key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cuddle hunger: &amp;quot;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; new-state))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Percent deteriorated: &amp;quot;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; new-state))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;SPH: &amp;quot;&lt;/span&gt; sph)))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Watch functions take four arguments: a key that you can use for reporting, the atom being watched, the state of the atom before its update, and the state of the atom after its update. This watch function calculates the shuffle speed of the new state and prints a warning message if it&amp;#x2019;s too high and an all&amp;#x2019;s-well message when the shuffle speed is safe, as mentioned above. In both sets of messages, the key is used to let you know the source of the message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x76D1;&amp;#x89C6;&amp;#x51FD;&amp;#x6570;&amp;#x63A5;&amp;#x53D7;&amp;#x56DB;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&amp;#x7528;&amp;#x4E8E;&amp;#x62A5;&amp;#x544A;&amp;#x7684;key&amp;#xFF0C;&amp;#x88AB;&amp;#x76D1;&amp;#x89C6;&amp;#x7684;&amp;#x539F;&amp;#x5B50;&amp;#xFF0C;&amp;#x539F;&amp;#x5B50;&amp;#x66F4;&amp;#x65B0;&amp;#x524D;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x539F;&amp;#x5B50;&amp;#x66F4;&amp;#x65B0;&amp;#x540E;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x76D1;&amp;#x89C6;&amp;#x51FD;&amp;#x6570;&amp;#x7528;&amp;#x65B0;&amp;#x72B6;&amp;#x6001;&amp;#x8BA1;&amp;#x7B97;&amp;#x51FA;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&amp;#x79FB;&amp;#x52A8;&amp;#x901F;&amp;#x5EA6;&amp;#xFF0C;&amp;#x5E76;&amp;#x505A;&amp;#x51FA;&amp;#x76F8;&amp;#x5E94;&amp;#x62A5;&amp;#x544A;&amp;#x3002;&amp;#x62A5;&amp;#x544A;&amp;#x91CC;&amp;#x7684;key&amp;#x4F7F;&amp;#x4F60;&amp;#x77E5;&amp;#x9053;&amp;#x4FE1;&amp;#x606F;&amp;#x6765;&amp;#x6E90;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can attach this function to &lt;code&gt;fred&lt;/code&gt; with &lt;code&gt;add-watch&lt;/code&gt;. The general form of &lt;code&gt;add-watch&lt;/code&gt; is &lt;code&gt;(add-watch ref key watch-fn)&lt;/code&gt;. In this example, we&amp;#x2019;re resetting &lt;code&gt;fred&lt;/code&gt;&amp;#x2019;s state, adding the &lt;code&gt;shuffle-alert&lt;/code&gt; watch function, and then updating &lt;code&gt;fred&lt;/code&gt;&amp;#x2019;s state a couple of times to trigger &lt;code&gt;shuffle-alert&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&lt;code&gt;add-watch&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x9644;&amp;#x52A0;&amp;#x5230;&lt;code&gt;fred&lt;/code&gt;&amp;#x4E0A;&amp;#x3002;&lt;code&gt;add-watch&lt;/code&gt;&amp;#x7684;&amp;#x901A;&amp;#x7528;&amp;#x5F62;&amp;#x5F0F;&amp;#x662F;&lt;code&gt;(add-watch ref key watch-fn)&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x91CD;&amp;#x7F6E;&amp;#x4E86;&lt;code&gt;fred&lt;/code&gt;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x52A0;&amp;#x4E0A;&amp;#x4E86;&lt;code&gt;shuffle-alert&lt;/code&gt;&amp;#x76D1;&amp;#x89C6;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x66F4;&amp;#x65B0;&amp;#x4E86;&amp;#x51E0;&amp;#x6B21;&lt;code&gt;fred&lt;/code&gt;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4EE5;&amp;#x89E6;&amp;#x53D1;&lt;code&gt;shuffle-alert&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reset!&lt;/span&gt;&lt;/span&gt; fred {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;add-watch&lt;/span&gt;&lt;/span&gt; fred &lt;span class=&quot;symbol&quot;&gt;:fred-shuffle-alert&lt;/span&gt; shuffle-alert)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; fred update-in [&lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; All&amp;apos;s well with  :fred-shuffle-alert&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Cuddle hunger:  22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Percent deteriorated:  3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; SPH:  2134&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; fred update-in [&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Run, you fool!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; The zombie&amp;apos;s SPH is now 5044&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; This message brought to your courtesy of :fred-shuffle-alert&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This example watch function didn&amp;#x2019;t use &lt;code&gt;watched&lt;/code&gt; or &lt;code&gt;old-state&lt;/code&gt;, but they&amp;#x2019;re there for you if the need arises. Now let&amp;#x2019;s cover validators.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x76D1;&amp;#x89C6;&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&amp;#x6CA1;&amp;#x6709;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;watched&lt;/code&gt;&amp;#x548C;&lt;code&gt;old-state&lt;/code&gt;,&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x770B;&amp;#x770B;&amp;#x9A8C;&amp;#x8BC1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Validators&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x9A8C;&amp;#x8BC1;&quot;&gt;&lt;a href=&quot;#&amp;#x9A8C;&amp;#x8BC1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x9A8C;&amp;#x8BC1;&quot;&gt;&lt;/a&gt;&amp;#x9A8C;&amp;#x8BC1;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Validators&lt;/em&gt; let you specify what states are allowable for a reference. For example, here&amp;#x2019;s a validator that you could use to ensure that a zombie&amp;#x2019;s &lt;code&gt;:percent-deteriorated&lt;/code&gt; is between 0 and 100:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x9A8C;&amp;#x8BC1;&lt;/em&gt; &amp;#x7528;&amp;#x6765;&amp;#x6807;&amp;#x660E;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x8BB8;&amp;#x53EF;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7528;&amp;#x6765;&amp;#x786E;&amp;#x4FDD;&amp;#x50F5;&amp;#x5C38;&amp;#x7684;&lt;code&gt;:percent-deteriorated&lt;/code&gt;&amp;#x5728;0&amp;#x548C;100&amp;#x4E4B;&amp;#x95F4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; percent-deteriorated-validator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [{&lt;span class=&quot;symbol&quot;&gt;:keys&lt;/span&gt; [percent-deteriorated]}]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;and&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;/span&gt; percent-deteriorated &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;/span&gt; percent-deteriorated &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, the validator takes only one argument. When you add a validator to a reference, the reference is modified so that, whenever it&amp;#x2019;s updated, it will call this validator with the value returned from the update function as its argument. If the validator fails by returning &lt;code&gt;false&lt;/code&gt; or throwing an exception, the reference won&amp;#x2019;t change to point to the new value.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6B63;&amp;#x5982;&amp;#x4F60;&amp;#x770B;&amp;#x5230;&amp;#x7684;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x53EA;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x628A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x5F15;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x5F15;&amp;#x7528;&amp;#x88AB;&amp;#x4FEE;&amp;#x6539;&amp;#x6210;&amp;#xFF1A;&amp;#x65E0;&amp;#x8BBA;&amp;#x4F55;&amp;#x65F6;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x88AB;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x5B83;&amp;#x90FD;&amp;#x4F1A;&amp;#x7528;&amp;#x66F4;&amp;#x65B0;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x503C;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&amp;#x5931;&amp;#x8D25;&amp;#xFF0C;&amp;#x5373;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;false&lt;/code&gt;&amp;#x6216;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6539;&amp;#x6210;&amp;#x6307;&amp;#x5411;&amp;#x90A3;&amp;#x4E2A;&amp;#x65B0;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can attach a validator during atom creation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x539F;&amp;#x5B50;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x53EF;&amp;#x4EE5;&amp;#x9644;&amp;#x52A0;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; bobby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;atom&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;:validator&lt;/span&gt; percent-deteriorated-validator))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; bobby update-in [&lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; This throws &amp;quot;Invalid reference state&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, &lt;code&gt;percent-deteriorated-validator&lt;/code&gt; returned &lt;code&gt;false&lt;/code&gt; and the atom update failed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;percent-deteriorated-validator&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;false&lt;/code&gt;,&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5B50;&amp;#x66F4;&amp;#x65B0;&amp;#x5931;&amp;#x8D25;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can throw an exception to get a more descriptive error message:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BA9;&amp;#x9519;&amp;#x8BEF;&amp;#x63CF;&amp;#x8FF0;&amp;#x66F4;&amp;#x6E05;&amp;#x695A;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; percent-deteriorated-validator&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [{&lt;span class=&quot;symbol&quot;&gt;:keys&lt;/span&gt; [percent-deteriorated]}]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;or&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;and&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;/span&gt; percent-deteriorated &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;/span&gt; percent-deteriorated &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;throw&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;IllegalStateException.&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;That&amp;apos;s not mathy!&amp;quot;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; bobby&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;atom&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   {&lt;span class=&quot;symbol&quot;&gt;:cuddle-hunger-level&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;:validator&lt;/span&gt; percent-deteriorated-validator))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;swap!&lt;/span&gt;&lt;/span&gt; bobby update-in [&lt;span class=&quot;symbol&quot;&gt;:percent-deteriorated&lt;/span&gt;] + &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; This throws &amp;quot;IllegalStateException: That&amp;apos;s not mathy!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Pretty great! Now let&amp;#x2019;s look at refs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x975E;&amp;#x5E38;&amp;#x68D2;&amp;#xFF01;&amp;#x73B0;&amp;#x5728;&amp;#x770B;&amp;#x770B;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Atoms are ideal for managing the state of independent identities. Sometimes, though, we need to express that an event should update the state of more than one identity simultaneously. &lt;em&gt;Refs&lt;/em&gt; are the perfect tool for this scenario.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x539F;&amp;#x5B50;&amp;#x7BA1;&amp;#x7406;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x8EAB;&amp;#x4EFD;&amp;#x5F88;&amp;#x7406;&amp;#x60F3;&amp;#x3002;&amp;#x4F46;&amp;#x6709;&amp;#x65F6;&amp;#x9700;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x66F4;&amp;#x65B0;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x573A;&amp;#x5408;&amp;#x4F7F;&amp;#x7528;&lt;em&gt;&amp;#x5F15;&amp;#x7528;&lt;/em&gt;&amp;#x5F88;&amp;#x5B8C;&amp;#x7F8E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A classic example of this is recording sock gnome transactions. As we all know, sock gnomes take a single sock from every clothes dryer around the world. They use these socks to incubate their young. In return for this &amp;#x201C;gift,&amp;#x201D; sock gnomes protect your home from El Chupacabra. If you haven&amp;#x2019;t been visited by El Chupacabra lately, you have sock gnomes to thank.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ECF;&amp;#x5178;&amp;#x4F8B;&amp;#x5B50;&amp;#x662F;&amp;#x8BB0;&amp;#x5F55;&amp;#x889C;&amp;#x5B50;&amp;#x77EE;&amp;#x4EBA;&amp;#x4E8B;&amp;#x52A1;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x90FD;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x889C;&amp;#x5B50;&amp;#x77EE;&amp;#x4EBA;&amp;#x4ECE;&amp;#x904D;&amp;#x5E03;&amp;#x4E16;&amp;#x754C;&amp;#x7684;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x62FF;&amp;#x8D70;&amp;#x4E00;&amp;#x53EA;&amp;#x889C;&amp;#x5B50;&amp;#xFF0C;&amp;#x7528;&amp;#x6765;&amp;#x517B;&amp;#x80B2;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&amp;#x5C0F;&amp;#x5B69;&amp;#x3002;&amp;#x4F5C;&amp;#x4E3A;&amp;#x56DE;&amp;#x62A5;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4FDD;&amp;#x62A4;&amp;#x4F60;&amp;#x7684;&amp;#x5BB6;&amp;#x5EAD;&amp;#xFF0C;&amp;#x514D;&amp;#x53D7;&amp;#x5438;&amp;#x8840;&amp;#x9B3C;&amp;#x7684;&amp;#x5165;&amp;#x4FB5;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x8FD8;&amp;#x6CA1;&amp;#x6709;&amp;#x88AB;&amp;#x5438;&amp;#x8840;&amp;#x9B3C;&amp;#x62DC;&amp;#x8BBF;&amp;#x8FC7;&amp;#xFF0C;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x611F;&amp;#x8C22;&amp;#x889C;&amp;#x5B50;&amp;#x77EE;&amp;#x4EBA;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/sock-gnome.png&quot; alt=&quot;sock-gnome&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To model sock transfers, we need to express that a dryer has lost a sock and a gnome has gained a sock simultaneously. One moment the sock belongs to the dryer; the next it belongs to the gnome. The sock should never appear to belong to both the dryer and the gnome, nor should it appear to belong to neither.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x5BF9;&amp;#x889C;&amp;#x5B50;&amp;#x8F6C;&amp;#x6362;&amp;#x5EFA;&amp;#x6A21;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x8868;&amp;#x793A;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x5C11;&amp;#x4E86;&amp;#x4E00;&amp;#x53EA;&amp;#x889C;&amp;#x5B50;&amp;#x548C;&amp;#x77EE;&amp;#x4EBA;&amp;#x83B7;&amp;#x5F97;&amp;#x4E86;&amp;#x4E00;&amp;#x53EA;&amp;#x889C;&amp;#x5B50;&amp;#x3002;&amp;#x67D0;&amp;#x4E2A;&amp;#x65F6;&amp;#x523B;&amp;#x889C;&amp;#x5B50;&amp;#x5C5E;&amp;#x4E8E;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#xFF0C;&amp;#x4E0B;&amp;#x4E00;&amp;#x65F6;&amp;#x523B;&amp;#x5B83;&amp;#x5C5E;&amp;#x4E8E;&amp;#x77EE;&amp;#x4EBA;&amp;#x3002;&amp;#x889C;&amp;#x5B50;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x4F1A;&amp;#x540C;&amp;#x65F6;&amp;#x5C5E;&amp;#x4E8E;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x548C;&amp;#x77EE;&amp;#x4EBA;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8C01;&amp;#x90FD;&amp;#x4E0D;&amp;#x5C5E;&amp;#x4E8E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Modeling Sock Transfers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5EFA;&amp;#x6A21;&amp;#x889C;&amp;#x5B50;&amp;#x8F6C;&amp;#x6362;&quot;&gt;&lt;a href=&quot;#&amp;#x5EFA;&amp;#x6A21;&amp;#x889C;&amp;#x5B50;&amp;#x8F6C;&amp;#x6362;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EFA;&amp;#x6A21;&amp;#x889C;&amp;#x5B50;&amp;#x8F6C;&amp;#x6362;&quot;&gt;&lt;/a&gt;&amp;#x5EFA;&amp;#x6A21;&amp;#x889C;&amp;#x5B50;&amp;#x8F6C;&amp;#x6362;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;You can model this sock transfer with refs. Refs allow you to update the state of multiple identities using transaction semantics. These transactions have three features:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x5EFA;&amp;#x6A21;&amp;#x889C;&amp;#x5B50;&amp;#x8F6C;&amp;#x6362;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x53EF;&amp;#x4EE5;&amp;#x6309;&amp;#x4E8B;&amp;#x52A1;&amp;#x8BED;&amp;#x610F;&amp;#x66F4;&amp;#x65B0;&amp;#x591A;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E8B;&amp;#x52A1;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x7279;&amp;#x5F81;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;They are atomic, meaning that all refs are updated or none of them are.&lt;/li&gt;
&lt;li&gt;They are consistent, meaning that the refs always appear to have valid states. A sock will always belong to a dryer or a gnome, but never both or neither.&lt;/li&gt;
&lt;li&gt;They are isolated, meaning that transactions behave as if they executed serially; if two threads are simultaneously running transactions that alter the same ref, one transaction will retry. This is similar to the compare-and-set semantics of atoms.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#xFF0C;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x6240;&amp;#x6709;&amp;#x5F15;&amp;#x7528;&amp;#x6216;&amp;#x8005;&amp;#x5168;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x5168;&amp;#x4E0D;&amp;#x66F4;&amp;#x65B0;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#xFF0C;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x603B;&amp;#x662F;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x3002;&amp;#x4E00;&amp;#x53EA;&amp;#x889C;&amp;#x5B50;&amp;#x603B;&amp;#x662F;&amp;#x5C5E;&amp;#x4E8E;&amp;#x4E00;&amp;#x4E2A;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x6216;&amp;#x4E00;&amp;#x4E2A;&amp;#x77EE;&amp;#x4EBA;&amp;#xFF0C;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x4F1A;&amp;#x540C;&amp;#x65F6;&amp;#x5C5E;&amp;#x4E8E;&amp;#x6216;&amp;#x90FD;&amp;#x4E0D;&amp;#x5C5E;&amp;#x4E8E;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x9694;&amp;#x79BB;&amp;#x7684;&amp;#xFF0C;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x6240;&amp;#x6709;&amp;#x4E8B;&amp;#x52A1;&amp;#x5C31;&amp;#x50CF;&amp;#x662F;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6837;&amp;#xFF1B;&amp;#x5982;&amp;#x679C;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x540C;&amp;#x65F6;&amp;#x8FD0;&amp;#x884C;&amp;#x66F4;&amp;#x6539;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4E8B;&amp;#x52A1;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5C06;&amp;#x91CD;&amp;#x8BD5;&amp;#x3002;&amp;#x8FD9;&amp;#x4E0E;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#x6BD4;&amp;#x8F83;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x8BED;&amp;#x610F;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You might recognize these as the A, C, and I in the ACID properties of database transactions. You can think of refs as giving you the same concurrency safety as database transactions, only with in-memory data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x8BA4;&amp;#x51FA;&amp;#x8FD9;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E8B;&amp;#x52A1;&amp;#x7684;ACID&amp;#x91CC;&amp;#x7684;A,C,I&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BA4;&amp;#x4E3A;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E8B;&amp;#x52A1;&amp;#x7684;&amp;#x5B89;&amp;#x5168;&amp;#x5E76;&amp;#x53D1;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x53EA;&amp;#x4E0D;&amp;#x8FC7;&amp;#x662F;&amp;#x5BF9;&amp;#x5185;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure uses &lt;em&gt;software transactional memory (STM)&lt;/em&gt; to implement this behavior. STM is very cool, but when you&amp;#x2019;re starting with Clojure, you don&amp;#x2019;t need to know much about it; you just need to know how to use it, which is what this section shows you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x7528;&lt;em&gt;&amp;#x8F6F;&amp;#x4EF6;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&amp;#x5B58;(STM)&lt;/em&gt; &amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x884C;&amp;#x4E3A;&amp;#x3002;STM&amp;#x975E;&amp;#x5E38;&amp;#x9177;&amp;#xFF0C;&amp;#x4F46;&amp;#x521A;&amp;#x5F00;&amp;#x59CB;&amp;#x5B66;&amp;#x4E60;Clojure&amp;#x65F6;&amp;#xFF0C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&amp;#x5B83;&amp;#x4E86;&amp;#x89E3;&amp;#x592A;&amp;#x591A;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x600E;&amp;#x4E48;&amp;#x7528;&amp;#x5B83;&amp;#xFF0C;&amp;#x8FD9;&amp;#x8282;&amp;#x5C31;&amp;#x4F1A;&amp;#x6F14;&amp;#x793A;&amp;#x7ED9;&amp;#x4F60;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s start transferring some socks! First, you&amp;#x2019;ll need to code up some sock- and gnome-creation technology. The following code defines some sock varieties, then defines a couple of helper functions: &lt;code&gt;sock-count&lt;/code&gt; will be used to help keep track of how many of each kind of sock belongs to either a gnome or a dryer, and &lt;code&gt;generate-sock-gnome&lt;/code&gt; creates a fresh, sockless gnome:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x5F00;&amp;#x59CB;&amp;#x8F6C;&amp;#x6362;&amp;#x889C;&amp;#x5B50;&amp;#xFF01;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E9B;&amp;#x521B;&amp;#x5EFA;&amp;#x889C;&amp;#x5B50;&amp;#x548C;&amp;#x77EE;&amp;#x4EBA;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x889C;&amp;#x5B50;&amp;#x54C1;&amp;#x79CD;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x51E0;&amp;#x4E2A;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;code&gt;sock-count&lt;/code&gt;&amp;#x7528;&amp;#x4E8E;&amp;#x8BB0;&amp;#x5F55;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x548C;&amp;#x77EE;&amp;#x4EBA;&amp;#x7684;&amp;#x6BCF;&amp;#x79CD;&amp;#x889C;&amp;#x5B50;&amp;#x6709;&amp;#x591A;&amp;#x5C11;&amp;#xFF0C;&lt;code&gt;generate-sock-gnome&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x889C;&amp;#x5B50;&amp;#x77EE;&amp;#x4EBA;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; sock-varieties&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #{&lt;span class=&quot;string&quot;&gt;&amp;quot;darned&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;argyle&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;wool&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;horsehair&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;mulleted&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;passive-aggressive&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;striped&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;polka-dotted&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;athletic&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;business&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;power&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;invisible&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;gollumed&amp;quot;&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; sock-count&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [sock-variety count]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:variety&lt;/span&gt; sock-variety&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:count&lt;/span&gt; count})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; generate-sock-gnome&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Create an initial sock gnome state with no socks&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [name]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:name&lt;/span&gt; name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt; #{}})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now you can create your actual refs. The gnome will have 0 socks. The dryer, on the other hand, will have a set of sock pairs generated from the set of sock varieties. Here are our refs:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x3002;&amp;#x77EE;&amp;#x4EBA;&amp;#x6CA1;&amp;#x6709;&amp;#x889C;&amp;#x5B50;&amp;#x3002;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x53CC;&amp;#x889C;&amp;#x5B50;&amp;#xFF0C;&amp;#x6309;&amp;#x889C;&amp;#x5B50;&amp;#x54C1;&amp;#x724C;&amp;#x96C6;&amp;#x5408;&amp;#x751F;&amp;#x6210;&amp;#x3002;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; sock-gnome (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ref&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;generate-sock-gnome&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Barumpharumph&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; dryer (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ref&lt;/span&gt;&lt;/span&gt; {&lt;span class=&quot;symbol&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;LG 1337&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;set&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;sock-count&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) sock-varieties))}))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can dereference refs just like you can dereference atoms. In this example, the order of your socks will probably be different because we&amp;#x2019;re using an unordered set:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x540C;&amp;#x539F;&amp;#x5B50;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x5F15;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x3002;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x889C;&amp;#x5B50;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x53EF;&amp;#x80FD;&amp;#x4E0E;&amp;#x4F60;&amp;#x7684;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x65E0;&amp;#x5E8F;&amp;#x96C6;&amp;#x5408;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(:socks @dryer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{{:variety &amp;quot;passive-aggressive&amp;quot;, :count 2} {:variety &amp;quot;power&amp;quot;, :count 2}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       {:variety &amp;quot;athletic&amp;quot;, :count 2} {:variety &amp;quot;business&amp;quot;, :count 2}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       {:variety &amp;quot;argyle&amp;quot;, :count 2} {:variety &amp;quot;horsehair&amp;quot;, :count 2}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       {:variety &amp;quot;gollumed&amp;quot;, :count 2} {:variety &amp;quot;darned&amp;quot;, :count 2}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       {:variety &amp;quot;polka-dotted&amp;quot;, :count 2} {:variety &amp;quot;wool&amp;quot;, :count 2}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       {:variety &amp;quot;mulleted&amp;quot;, :count 2} {:variety &amp;quot;striped&amp;quot;, :count 2}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       {:variety &amp;quot;invisible&amp;quot;, :count 2}}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now everything&amp;#x2019;s in place to perform the transfer. We&amp;#x2019;ll want to modify the &lt;code&gt;sock-gnome&lt;/code&gt; ref to show that it has gained a sock and modify the &lt;code&gt;dryer&lt;/code&gt; ref to show that it&amp;#x2019;s lost a sock. You modify refs using &lt;code&gt;alter&lt;/code&gt;, and you must use &lt;code&gt;alter&lt;/code&gt; within a transaction. &lt;code&gt;dosync&lt;/code&gt; initiates a transaction and defines its extent; you put all transaction operations in its body. Here we use these tools to define a &lt;code&gt;steal-sock&lt;/code&gt; function, and then call it on our two refs:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6267;&amp;#x884C;&amp;#x8F6C;&amp;#x6362;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4E1C;&amp;#x897F;&amp;#x90FD;&amp;#x5DF2;&amp;#x5C31;&amp;#x7EEA;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x60F3;&amp;#x4FEE;&amp;#x6539;&lt;code&gt;sock-gnome&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x5B83;&amp;#x5F97;&amp;#x5230;&amp;#x4E86;&amp;#x4E00;&amp;#x53EA;&amp;#x889C;&amp;#x5B50;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4FEE;&amp;#x6539;&lt;code&gt;dryer&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x5B83;&amp;#x5931;&amp;#x53BB;&amp;#x4E86;&amp;#x4E00;&amp;#x53EA;&amp;#x889C;&amp;#x5B50;&amp;#x3002;&amp;#x7528;&lt;code&gt;alter&lt;/code&gt;&amp;#x4FEE;&amp;#x6539;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&lt;code&gt;alter&lt;/code&gt;&amp;#x5FC5;&amp;#x987B;&amp;#x653E;&amp;#x5728;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&amp;#x3002;&lt;code&gt;dosync&lt;/code&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E8B;&amp;#x52A1;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B9A;&amp;#x4E49;&amp;#x5176;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x4E8B;&amp;#x52A1;&amp;#x64CD;&amp;#x4F5C;&amp;#x90FD;&amp;#x653E;&amp;#x5728;&lt;code&gt;dosync&lt;/code&gt;&amp;#x4E3B;&amp;#x4F53;&amp;#x5185;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5DE5;&amp;#x5177;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;steal-sock&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; steal-sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [gnome dryer]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dosync&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;when-let&lt;/span&gt;&lt;/span&gt; [pair (&lt;span class=&quot;name&quot;&gt;some&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:count&lt;/span&gt; %) &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) %) (&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt; @dryer))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [updated-count (&lt;span class=&quot;name&quot;&gt;sock-count&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:variety&lt;/span&gt; pair) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alter&lt;/span&gt;&lt;/span&gt; gnome update-in [&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt;] conj updated-count)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alter&lt;/span&gt;&lt;/span&gt; dryer update-in [&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt;] disj pair)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alter&lt;/span&gt;&lt;/span&gt; dryer update-in [&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt;] conj updated-count)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;steal-sock&lt;/span&gt; sock-gnome dryer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt; @sock-gnome)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; #{{:variety &amp;quot;passive-aggressive&amp;quot;, :count 1}}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now the gnome has one &lt;code&gt;passive-aggressive&lt;/code&gt; sock, and the dryer has one less (your gnome may have stolen a different sock because the socks are stored in an unordered set). Let&amp;#x2019;s make sure all &lt;code&gt;passive-aggressive&lt;/code&gt; socks are accounted for:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x77EE;&amp;#x4EBA;&amp;#x6709;&amp;#x4E00;&amp;#x53EA;&lt;code&gt;passive-aggressive&lt;/code&gt;&amp;#x889C;&amp;#x5B50;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x5C11;&amp;#x4E86;&amp;#x4E00;&amp;#x53EA;(&amp;#x56E0;&amp;#x4E3A;&amp;#x889C;&amp;#x5B50;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x65E0;&amp;#x5E8F;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x4F60;&amp;#x7684;&amp;#x77EE;&amp;#x4EBA;&amp;#x53EF;&amp;#x80FD;&amp;#x5077;&amp;#x7684;&amp;#x662F;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x889C;&amp;#x5B50;)&amp;#x3002;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x786E;&amp;#x8BA4;&amp;#x4E00;&amp;#x4E0B;&amp;#x53CC;&amp;#x65B9;&amp;#x7684;&lt;code&gt;passive-aggressive&lt;/code&gt;&amp;#x889C;&amp;#x5B50;&amp;#x90FD;&amp;#x6539;&amp;#x53D8;&amp;#x4E86;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; similar-socks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [target-sock sock-set]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;filter&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:variety&lt;/span&gt; %) (&lt;span class=&quot;symbol&quot;&gt;:variety&lt;/span&gt; target-sock)) sock-set))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;similar-socks&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt; @sock-gnome)) (&lt;span class=&quot;symbol&quot;&gt;:socks&lt;/span&gt; @dryer))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ({:variety &amp;quot;passive-aggressive&amp;quot;, :count 1})&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;There are a couple of details to note here: when you &lt;code&gt;alter&lt;/code&gt; a ref, the change isn&amp;#x2019;t immediately visible outside of the current transaction. This is what lets you call &lt;code&gt;alter&lt;/code&gt; on the &lt;code&gt;dryer&lt;/code&gt; twice within a transaction without worry&amp;#xAD;ing about whether &lt;code&gt;dryer&lt;/code&gt; will be read in an inconsistent state. Similarly, if you &lt;code&gt;alter&lt;/code&gt; a ref and then &lt;code&gt;deref&lt;/code&gt; it within the same transaction, the &lt;code&gt;deref&lt;/code&gt; will return the new state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6709;&amp;#x51E0;&amp;#x4E2A;&amp;#x7EC6;&amp;#x8282;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&lt;code&gt;alter&lt;/code&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4FEE;&amp;#x6539;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5F53;&amp;#x524D;&amp;#x4E8B;&amp;#x52A1;&amp;#x5916;&amp;#x9762;&amp;#x4E0D;&amp;#x662F;&amp;#x7ACB;&amp;#x523B;&amp;#x53EF;&amp;#x89C1;&amp;#x7684;&amp;#x3002;&amp;#x6B63;&amp;#x662F;&amp;#x8FD9;&amp;#x70B9;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x5728;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&lt;code&gt;alter&lt;/code&gt;&amp;#x4E24;&amp;#x6B21;&lt;code&gt;dryer&lt;/code&gt;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x7528;&amp;#x62C5;&amp;#x5FC3;&lt;code&gt;dryer&lt;/code&gt;&amp;#x88AB;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#x5730;&amp;#x8BFB;&amp;#x53D6;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x540C;&amp;#x4E00;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&lt;code&gt;alter&lt;/code&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&lt;code&gt;deref&lt;/code&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&lt;code&gt;deref&lt;/code&gt;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x65B0;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s an example to demonstrate this idea of in-transaction state:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&amp;#x72B6;&amp;#x6001;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; counter (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ref&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dosync&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alter&lt;/span&gt;&lt;/span&gt; counter inc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @counter)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;alter&lt;/span&gt;&lt;/span&gt; counter inc)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @counter)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @counter)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This prints 1, 0 , and 2, in that order. First, you create a ref, &lt;code&gt;counter&lt;/code&gt;, which holds the number 0. Then you use &lt;code&gt;future&lt;/code&gt; to create a new thread to run a transaction on. On the transaction thread, you increment the counter and print it, and the number 1 gets printed. Meanwhile, the main thread waits 250 milliseconds and prints the counter&amp;#x2019;s value, too. However, the value of counter on the main thread is still 0&amp;#x2014;the main thread is outside of the transaction and doesn&amp;#x2019;t have access to the transaction&amp;#x2019;s state. It&amp;#x2019;s like the transaction has its own private area for trying out changes to the state, and the rest of the world can&amp;#x2019;t know about them until the transaction is done. This is further illustrated in the transaction code: after it prints the first time, it increments the counter again from 1 to 2 and prints the result, 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x6309;1&amp;#xFF0C;0&amp;#xFF0C;2&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x6253;&amp;#x5370;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x5F15;&amp;#x7528;&lt;code&gt;counter&lt;/code&gt;,&amp;#x503C;&amp;#x662F;0&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x7528;&lt;code&gt;future&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8FD0;&amp;#x884C;&amp;#x4E8B;&amp;#x52A1;&amp;#x3002;&amp;#x4E8B;&amp;#x52A1;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8BA1;&amp;#x6570;&amp;#x5668;&amp;#x52A0;&amp;#x4E00;&amp;#x5E76;&amp;#x6253;&amp;#x5370;&amp;#x3002;&amp;#x540C;&amp;#x65F6;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7B49;&amp;#x5F85;250&amp;#x6BEB;&amp;#x79D2;&amp;#x5E76;&amp;#x6253;&amp;#x5370;&amp;#x8BA1;&amp;#x6570;&amp;#x5668;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8BA1;&amp;#x6570;&amp;#x5668;&amp;#x7684;&amp;#x503C;&amp;#x4ECD;&amp;#x7136;&amp;#x662F;0&amp;#xFF0C;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5728;&amp;#x4E8B;&amp;#x52A1;&amp;#x5916;&amp;#x9762;&amp;#xFF0C;&amp;#x65E0;&amp;#x6743;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E8B;&amp;#x52A1;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x5C31;&amp;#x597D;&amp;#x50CF;&amp;#x4E8B;&amp;#x52A1;&amp;#x6709;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x79C1;&amp;#x6709;&amp;#x533A;&amp;#x57DF;&amp;#x7528;&amp;#x4E8E;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4FEE;&amp;#x6539;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x800C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x533A;&amp;#x57DF;&amp;#x5916;&amp;#x7684;&amp;#x4E16;&amp;#x754C;&amp;#x76F4;&amp;#x5230;&amp;#x4E8B;&amp;#x52A1;&amp;#x5B8C;&amp;#x6210;&amp;#x624D;&amp;#x4F1A;&amp;#x77E5;&amp;#x9053;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4FEE;&amp;#x6539;&amp;#x3002;&amp;#x4E8B;&amp;#x52A1;&amp;#x4EE3;&amp;#x7801;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x70B9;&amp;#xFF1A;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x6253;&amp;#x5370;&amp;#x540E;&amp;#xFF0C;&amp;#x628A;&amp;#x8BA1;&amp;#x6570;&amp;#x5668;&amp;#x4ECE;1&amp;#x589E;&amp;#x52A0;&amp;#x5230;2&amp;#xFF0C;&amp;#x5E76;&amp;#x6253;&amp;#x5370;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;2&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The transaction will try to commit its changes only when it ends. The commit works similarly to the compare-and-set semantics of atoms. Each ref is checked to see whether it&amp;#x2019;s changed since you first tried to alter it. If any of the refs have changed, then none of the refs is updated and the transaction is retried. For example, if Transaction A and Transaction B are both attempted at the same time and events occur in the following order, Transaction A will be retried:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x6709;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#xFF0C;&amp;#x4E8B;&amp;#x52A1;&amp;#x624D;&amp;#x5C1D;&amp;#x8BD5;&amp;#x63D0;&amp;#x4EA4;&amp;#x4FEE;&amp;#x6539;&amp;#x3002;&amp;#x63D0;&amp;#x4EA4;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x65B9;&amp;#x5F0F;&amp;#x4E0E;&amp;#x539F;&amp;#x5B50;&amp;#x7684;&amp;#x6BD4;&amp;#x8F83;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x8BED;&amp;#x610F;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x5F15;&amp;#x7528;&amp;#x88AB;&amp;#x4FEE;&amp;#x6539;&amp;#x4E86;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x6240;&amp;#x6709;&amp;#x5F15;&amp;#x7528;&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x4E8B;&amp;#x52A1;&amp;#x5C06;&amp;#x91CD;&amp;#x8BD5;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E8B;&amp;#x52A1;A&amp;#x548C;&amp;#x4E8B;&amp;#x52A1;B&amp;#x5728;&amp;#x540C;&amp;#x4E00;&amp;#x65F6;&amp;#x95F4;&amp;#x53D1;&amp;#x751F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E8B;&amp;#x4EF6;&amp;#x6309;&amp;#x4E0B;&amp;#x5217;&amp;#x987A;&amp;#x5E8F;&amp;#x53D1;&amp;#x751F;&amp;#xFF0C;&amp;#x4E8B;&amp;#x52A1;A&amp;#x4F1A;&amp;#x91CD;&amp;#x8BD5;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Transaction A: alter gnome&lt;/li&gt;
&lt;li&gt;Transaction B: alter gnome&lt;/li&gt;
&lt;li&gt;Transaction B: alter dryer&lt;/li&gt;
&lt;li&gt;Transaction B: alter dryer&lt;/li&gt;
&lt;li&gt;Transaction B: commit&amp;#x2014;successfully updates gnome and dryer&lt;/li&gt;
&lt;li&gt;Transaction A: alter dryer&lt;/li&gt;
&lt;li&gt;Transaction A: alter dryer&lt;/li&gt;
&lt;li&gt;Transaction A: commit&amp;#x2014;fails because dryer and gnome have changed; retries.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;A: &amp;#x4FEE;&amp;#x6539;&amp;#x77EE;&amp;#x4EBA;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;B: &amp;#x4FEE;&amp;#x6539;&amp;#x77EE;&amp;#x4EBA;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;B: &amp;#x4FEE;&amp;#x6539;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;B: &amp;#x4FEE;&amp;#x6539;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;B: &amp;#x63D0;&amp;#x4EA4;&amp;#x6210;&amp;#x529F;&amp;#xFF0C;&amp;#x66F4;&amp;#x65B0;&amp;#x77EE;&amp;#x4EBA;&amp;#x548C;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;A: &amp;#x4FEE;&amp;#x6539;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;A: &amp;#x4FEE;&amp;#x6539;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&lt;/li&gt;
&lt;li&gt;&amp;#x4E8B;&amp;#x52A1;A: &amp;#x63D0;&amp;#x4EA4;&amp;#x5931;&amp;#x8D25;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x77EE;&amp;#x4EBA;&amp;#x548C;&amp;#x70D8;&amp;#x5E72;&amp;#x673A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6539;&amp;#x53D8;&amp;#xFF1B;&amp;#x91CD;&amp;#x8BD5;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;And there you have it! Safe, easy, concurrent coordination of state changes. But that&amp;#x2019;s not all! Refs have one more trick up their suspiciously long sleeve: &lt;code&gt;commute&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7ED9;&amp;#x4F60;&amp;#xFF01;&amp;#x8FD9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B89;&amp;#x5168;&amp;#xFF0C;&amp;#x5BB9;&amp;#x6613;&amp;#xFF0C;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x6539;&amp;#x53D8;&amp;#x534F;&amp;#x8C03;&amp;#x5DE5;&amp;#x5177;&amp;#xFF01;&amp;#x4F46;&amp;#x8FD9;&amp;#x8FD8;&amp;#x4E0D;&amp;#x662F;&amp;#x5168;&amp;#x90E8;&amp;#xFF01;&amp;#x5728;&amp;#x51FA;&amp;#x5947;&amp;#x7684;&amp;#x957F;&amp;#x8896;&amp;#x91CC;&amp;#xFF0C;&amp;#x5F15;&amp;#x7528;&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x628A;&amp;#x620F;&amp;#xFF1A;&lt;code&gt;commute&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;commute&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4EA4;&amp;#x6362;&quot;&gt;&lt;a href=&quot;#&amp;#x4EA4;&amp;#x6362;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EA4;&amp;#x6362;&quot;&gt;&lt;/a&gt;&amp;#x4EA4;&amp;#x6362;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;commute&lt;/code&gt; allows you to update a ref&amp;#x2019;s state within a transaction, just like &lt;code&gt;alter&lt;/code&gt;. However, its behavior at commit time is completely different. Here&amp;#x2019;s how &lt;code&gt;alter&lt;/code&gt; behaves:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x50CF;&lt;code&gt;alter&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;commute&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&amp;#x66F4;&amp;#x65B0;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x4F46;&amp;#x5B83;&amp;#x63D0;&amp;#x4EA4;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x5B8C;&amp;#x5168;&amp;#x4E0D;&amp;#x540C;&amp;#x3002;&lt;code&gt;alter&lt;/code&gt;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Reach outside the transaction and read the ref&amp;#x2019;s current state.&lt;/li&gt;
&lt;li&gt;Compare the current state to the state the ref started with within the transaction.&lt;/li&gt;
&lt;li&gt;If the two differ, make the transaction retry.&lt;/li&gt;
&lt;li&gt;Otherwise, commit the altered ref state.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x53BB;&amp;#x4E8B;&amp;#x52A1;&amp;#x5916;&amp;#x9762;&amp;#x8BFB;&amp;#x53D6;&amp;#x5F15;&amp;#x7528;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#x4E0E;&amp;#x4E8B;&amp;#x52A1;&amp;#x5185;&amp;#x5F15;&amp;#x7528;&amp;#x5F00;&amp;#x59CB;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x6BD4;&amp;#x8F83;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x91CD;&amp;#x8BD5;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E8B;&amp;#x52A1;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5426;&amp;#x5219;&amp;#x63D0;&amp;#x4EA4;&amp;#x4FEE;&amp;#x6539;&amp;#x540E;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;commute&lt;/code&gt;, on the other hand, behaves like this at commit time:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;commute&lt;/code&gt;&amp;#x63D0;&amp;#x4EA4;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Reach outside the transaction and read the ref&amp;#x2019;s current state.&lt;/li&gt;
&lt;li&gt;Run the commute function again using the current state.&lt;/li&gt;
&lt;li&gt;Commit the result.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x53BB;&amp;#x4E8B;&amp;#x52A1;&amp;#x5916;&amp;#x9762;&amp;#x8BFB;&amp;#x53D6;&amp;#x5F15;&amp;#x7528;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x518D;&amp;#x6B21;&amp;#x8FD0;&amp;#x884C;&amp;#x4EA4;&amp;#x6362;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x63D0;&amp;#x4EA4;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, &lt;code&gt;commute&lt;/code&gt; doesn&amp;#x2019;t ever force a transaction retry. This can help improve performance, but it&amp;#x2019;s important that you only use &lt;code&gt;commute&lt;/code&gt; when you&amp;#x2019;re sure that it&amp;#x2019;s not possible for your refs to end up in an invalid state. Let&amp;#x2019;s look at examples of safe and unsafe uses of &lt;code&gt;commute&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x89C1;&amp;#xFF0C;&lt;code&gt;commute&lt;/code&gt;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5F3A;&amp;#x5236;&amp;#x4E8B;&amp;#x52A1;&amp;#x91CD;&amp;#x8BD5;&amp;#x3002;&amp;#x8FD9;&amp;#x6709;&amp;#x52A9;&amp;#x4E8E;&amp;#x63D0;&amp;#x5347;&amp;#x6027;&amp;#x80FD;&amp;#xFF0C;&amp;#x4F46;&amp;#x53EA;&amp;#x6709;&amp;#x5F53;&amp;#x4F60;&amp;#x786E;&amp;#x8BA4;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x6700;&amp;#x7EC8;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#xFF0C;&amp;#x4F60;&amp;#x624D;&amp;#x80FD;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;commute&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x70B9;&amp;#x975E;&amp;#x5E38;&amp;#x91CD;&amp;#x8981;&amp;#x3002;&amp;#x6765;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x5B89;&amp;#x5168;&amp;#x548C;&amp;#x4E0D;&amp;#x5B89;&amp;#x5168;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;commute&lt;/code&gt;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s an example of a safe use. The &lt;code&gt;sleep-print-update&lt;/code&gt; function returns the updated state but also sleeps the specified number of milliseconds so we can force transaction overlap. It prints the state that it&amp;#x2019;s attempting to update so we can gain insight into what&amp;#x2019;s going on:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x5B89;&amp;#x5168;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&lt;code&gt;sleep-print-update&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x66F4;&amp;#x65B0;&amp;#x540E;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4E3A;&amp;#x4E86;&amp;#x5F3A;&amp;#x5236;&amp;#x4E8B;&amp;#x52A1;&amp;#x91CD;&amp;#x53E0;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7761;&amp;#x7720;&amp;#x6307;&amp;#x5B9A;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x7406;&amp;#x89E3;&amp;#x5185;&amp;#x90E8;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x4E5F;&amp;#x6253;&amp;#x5370;&amp;#x4E86;&amp;#x5B83;&amp;#x6B63;&amp;#x5728;&amp;#x4FEE;&amp;#x6539;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; sleep-print-update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [sleep-time thread-name update-fn]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [state]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; sleep-time)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; thread-name &lt;span class=&quot;string&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt; state))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;update-fn&lt;/span&gt; state)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; counter (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;ref&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dosync&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;commute&lt;/span&gt;&lt;/span&gt; counter (&lt;span class=&quot;name&quot;&gt;sleep-print-update&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Thread A&amp;quot;&lt;/span&gt; inc))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dosync&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;commute&lt;/span&gt;&lt;/span&gt; counter (&lt;span class=&quot;name&quot;&gt;sleep-print-update&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Thread B&amp;quot;&lt;/span&gt; inc))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s a timeline of what prints:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4EE3;&amp;#x7801;&amp;#x6253;&amp;#x5370;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x7EBF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Thread A: 0 | 100ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread B: 0 | 150ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread A: 0 | 200ms&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Thread B: 1 | 300ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that the last printed line reads &lt;code&gt;Thread B: 1&lt;/code&gt;. That means that &lt;code&gt;sleep-print-update&lt;/code&gt; receives &lt;code&gt;1&lt;/code&gt; as the argument for state the second time it runs. That makes sense, because Thread A has committed its result by that point. If you dereference &lt;code&gt;counter&lt;/code&gt; after the transactions run, you&amp;#x2019;ll see that the value is &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x884C;&amp;#x6253;&amp;#x5370;&amp;#x7684;&amp;#x662F;&lt;code&gt;Thread B: 1&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x610F;&amp;#x5473;&amp;#x7740;&lt;code&gt;sleep-print-update&lt;/code&gt;&amp;#x7B2C;&amp;#x4E8C;&amp;#x6B21;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&lt;code&gt;1&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x5BF9;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x7EBF;&amp;#x7A0B;A&amp;#x5DF2;&amp;#x7ECF;&amp;#x63D0;&amp;#x4EA4;&amp;#x4E86;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E8B;&amp;#x52A1;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x4F60;&amp;#x5BF9;&lt;code&gt;counter&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x503C;&amp;#x662F;&lt;code&gt;2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;[&amp;#x8BD1;&amp;#x8005;&amp;#x589E;&amp;#x52A0;]&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@counter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, here&amp;#x2019;s an example of unsafe commuting:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0D;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x4EA4;&amp;#x6362;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(def receiver-a (ref #{}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(def receiver-b (ref #{}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(def giver (ref #{1}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(do (future (dosync (let [gift (first @giver)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (Thread/sleep 10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (commute receiver-a conj gift)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (commute giver disj gift))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (future (dosync (let [gift (first @giver)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (Thread/sleep 50)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (commute receiver-b conj gift)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (commute giver disj gift)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@receiver-a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{1}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@receiver-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{1}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@giver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;1&lt;/code&gt; was given to both &lt;code&gt;receiver-a&lt;/code&gt; and &lt;code&gt;receiver-b&lt;/code&gt;, and you&amp;#x2019;ve ended up with two instances of &lt;code&gt;1&lt;/code&gt;, which isn&amp;#x2019;t valid for your program. What&amp;#x2019;s different about this example is that the functions that are applied, essentially &lt;code&gt;#(conj % gift)&lt;/code&gt; and &lt;code&gt;#(disj % gift)&lt;/code&gt;, are derived from the state of &lt;code&gt;giver&lt;/code&gt;. Once &lt;code&gt;giver&lt;/code&gt; changes, the derived functions produce an invalid state, but &lt;code&gt;commute&lt;/code&gt; doesn&amp;#x2019;t care that the resulting state is invalid and commits the result anyway. The lesson here is that although &lt;code&gt;commute&lt;/code&gt; can help speed up your programs, you have to be judicious about when to use it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;1&lt;/code&gt;&amp;#x540C;&amp;#x65F6;&amp;#x7ED9;&amp;#x4E86;&lt;code&gt;receiver-a&lt;/code&gt;&amp;#x548C;&lt;code&gt;receiver-b&lt;/code&gt;,&amp;#x6700;&amp;#x540E;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&lt;code&gt;1&lt;/code&gt;,&amp;#x5BF9;&amp;#x4E8E;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD9;&amp;#x662F;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x5DEE;&amp;#x522B;&amp;#x5728;&amp;#x4E8E;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x672C;&amp;#x8D28;&amp;#x4E0A;&amp;#x8BF4;&amp;#xFF0C;&lt;code&gt;#(conj % gift)&lt;/code&gt; &amp;#x548C; &lt;code&gt;#(disj % gift)&lt;/code&gt; &amp;#x662F;&amp;#x4ECE;&lt;code&gt;giver&lt;/code&gt;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x3002;&amp;#x4E00;&amp;#x65E6;&lt;code&gt;giver&lt;/code&gt;&amp;#x6539;&amp;#x53D8;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5C31;&amp;#x4F1A;&amp;#x4EA7;&amp;#x751F;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4F46;&lt;code&gt;commute&lt;/code&gt;&amp;#x4E0D;&amp;#x5173;&amp;#x5FC3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E76;&amp;#x63D0;&amp;#x4EA4;&amp;#x4E86;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6559;&amp;#x8BAD;&amp;#x662F;&amp;#x867D;&amp;#x7136;&lt;code&gt;commute&lt;/code&gt;&amp;#x6709;&amp;#x52A9;&amp;#x4E8E;&amp;#x52A0;&amp;#x5FEB;&amp;#x7A0B;&amp;#x5E8F;&amp;#x901F;&amp;#x5EA6;&amp;#xFF0C;&amp;#x4F46;&amp;#x5FC5;&amp;#x987B;&amp;#x8003;&amp;#x8651;&amp;#x597D;&amp;#x518D;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;[&amp;#x8BD1;&amp;#x8005;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x5BF9;&amp;#x6BD4;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;alter&lt;/code&gt;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;]&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(def receiver-a (ref #{}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(def receiver-b (ref #{}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(def giver (ref #{1}))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(do (future (dosync (let [gift (first @giver)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (Thread/sleep 10)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (alter receiver-a conj gift)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (alter giver disj gift))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (future (dosync (let [gift (first @giver)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (Thread/sleep 50)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (alter receiver-b conj gift)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (alter giver disj gift)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@receiver-a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{1}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@receiver-b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{nil}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@giver&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #{}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now you&amp;#x2019;re ready to start using refs safely and sanely. Refs have a few more nuances that I won&amp;#x2019;t cover here, but if you&amp;#x2019;re curious about them, you can research the &lt;code&gt;ensure&lt;/code&gt; function and the phenomenon &lt;em&gt;write skew&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x51C6;&amp;#x5907;&amp;#x597D;&amp;#x5B89;&amp;#x5168;&amp;#x5E76;&amp;#x660E;&amp;#x667A;&amp;#x5730;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x8FD8;&amp;#x6709;&amp;#x51E0;&amp;#x4E2A;&amp;#x6211;&amp;#x6CA1;&amp;#x6709;&amp;#x8BB2;&amp;#x5230;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x611F;&amp;#x5174;&amp;#x8DA3;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7814;&amp;#x7A76;&lt;code&gt;ensure&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&lt;em&gt;write skew&lt;/em&gt;&amp;#x73B0;&amp;#x8C61;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On to the final reference type that this book covers: &lt;em&gt;vars&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672C;&amp;#x4E66;&amp;#x6700;&amp;#x540E;&amp;#x8BB2;&amp;#x89E3;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x662F;&lt;em&gt;&amp;#x53D8;&amp;#x91CF;&lt;/em&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vars&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x53D8;&amp;#x91CF;&quot;&gt;&lt;a href=&quot;#&amp;#x53D8;&amp;#x91CF;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x53D8;&amp;#x91CF;&quot;&gt;&lt;/a&gt;&amp;#x53D8;&amp;#x91CF;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;You&amp;#x2019;ve already learned a bit about vars in Chapter 6. To recap briefly, vars are associations between symbols and objects. You create new vars with &lt;code&gt;def&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x516D;&amp;#x7AE0;&amp;#x4F60;&amp;#x5BF9;&amp;#x53D8;&amp;#x91CF;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6709;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x4E86;&amp;#x89E3;&amp;#x3002;&amp;#x7B80;&amp;#x8981;&amp;#x6982;&amp;#x62EC;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x7528;&lt;code&gt;def&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x65B0;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although vars aren&amp;#x2019;t used to manage state in the same way as atoms and refs, they do have a couple of concurrency tricks: you can dynamically bind them, and you can alter their roots. Let&amp;#x2019;s look at dynamic binding first.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x53D8;&amp;#x91CF;&amp;#x4E0D;&amp;#x50CF;&amp;#x539F;&amp;#x5B50;&amp;#x548C;&amp;#x5F15;&amp;#x7528;&amp;#x90A3;&amp;#x6837;&amp;#x7528;&amp;#x4E8E;&amp;#x7BA1;&amp;#x7406;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x786E;&amp;#x5B9E;&amp;#x6709;&amp;#x51E0;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x82B1;&amp;#x62DB;&amp;#xFF1A;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4FEE;&amp;#x6539;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x6839;&amp;#x3002;&amp;#x5148;&amp;#x770B;&amp;#x770B;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dynamic Binding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&quot;&gt;&lt;a href=&quot;#&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&quot;&gt;&lt;/a&gt;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;When I first introduced &lt;code&gt;def&lt;/code&gt;, I implored you to treat it as if it&amp;#x2019;s defining a constant. It turns out that vars are a bit more flexible than that: you can create a dynamic var whose binding can be changed. Dynamic vars can be useful for creating a global name that should refer to different values in different contexts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x4ECB;&amp;#x7ECD;&lt;code&gt;def&lt;/code&gt;,&amp;#x6211;&amp;#x8BF7;&amp;#x6C42;&amp;#x4F60;&amp;#x5C31;&amp;#x5F53;&amp;#x5B83;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x4EAE;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x53D8;&amp;#x91CF;&amp;#x66F4;&amp;#x7075;&amp;#x6D3B;&amp;#xFF1A;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;&amp;#x80FD;&amp;#x6539;&amp;#x53D8;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x4E0D;&amp;#x540C;&amp;#x60C5;&amp;#x51B5;&amp;#x6307;&amp;#x5411;&amp;#x4E0D;&amp;#x540C;&amp;#x503C;&amp;#x7684;&amp;#x5168;&amp;#x5C40;&amp;#x540D;&amp;#x5B57;&amp;#x65F6;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Creating and Binding Dynamic Vars&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&quot;&gt;&lt;a href=&quot;#&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&quot;&gt;&lt;/a&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;First, create a dynamic var:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; ^&lt;span class=&quot;symbol&quot;&gt;:dynamic&lt;/span&gt; *notification-address* &lt;span class=&quot;string&quot;&gt;&amp;quot;dobby@elf.org&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice two important details here. First, you use &lt;code&gt;^:dynamic&lt;/code&gt; to signal to Clojure that a var is dynamic. Second, the var&amp;#x2019;s name is enclosed by asterisks. Lispers call these &lt;em&gt;earmuffs&lt;/em&gt;, which is adorable. Clojure requires you to enclose the names of dynamic vars in earmuffs. This helps signal the var&amp;#x2019;s &lt;em&gt;dynamicaltude&lt;/em&gt; to other programmers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x4E24;&amp;#x4E2A;&amp;#x8981;&amp;#x70B9;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;^:dynamic&lt;/code&gt;&amp;#x544A;&amp;#x8BC9;Clojure&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x52A8;&amp;#x6001;&amp;#x7684;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#xFF0C;&amp;#x53D8;&amp;#x91CF;&amp;#x540D;&amp;#x7528;&amp;#x661F;&amp;#x53F7;&amp;#x5305;&amp;#x56F4;&amp;#x3002;Lisp&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x7BA1;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53EB;&lt;em&gt;&amp;#x8033;&amp;#x5957;&lt;/em&gt;&amp;#xFF0C;Clojure&amp;#x8981;&amp;#x6C42;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x540D;&amp;#x5B57;&amp;#x5305;&amp;#x542B;&amp;#x5728;&amp;#x8033;&amp;#x5957;&amp;#x91CC;&amp;#x3002;&amp;#x8FD9;&amp;#x6709;&amp;#x52A9;&amp;#x4E8E;&amp;#x544A;&amp;#x8BC9;&amp;#x5176;&amp;#x4ED6;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x52A8;&amp;#x6001;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unlike regular vars, you can temporarily change the value of dynamic vars by using &lt;code&gt;binding&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x666E;&amp;#x901A;&amp;#x53D8;&amp;#x91CF;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;binding&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E34;&amp;#x65F6;&amp;#x6539;&amp;#x53D8;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*notification-address* &lt;span class=&quot;string&quot;&gt;&amp;quot;test@elf.org&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  *notification-address*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;test@elf.org&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also stack bindings ( just like you can with &lt;code&gt;let&lt;/code&gt;):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x7ED1;&amp;#x5B9A;(&amp;#x50CF;&lt;code&gt;let&lt;/code&gt;&amp;#x4E00;&amp;#x6837;):&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*notification-address* &lt;span class=&quot;string&quot;&gt;&amp;quot;tester-1@elf.org&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; *notification-address*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*notification-address* &lt;span class=&quot;string&quot;&gt;&amp;quot;tester-2@elf.org&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; *notification-address*))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; *notification-address*))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; tester-1@elf.org&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; tester-2@elf.org&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; tester-1@elf.org&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that you know how to dynamically bind a var, let&amp;#x2019;s look at a real-world application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x6765;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x771F;&amp;#x5B9E;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dynamic Var Uses&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x4F7F;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x4F7F;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x4F7F;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x4F7F;&amp;#x7528;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s say you have a function that sends a notification email. In this example, we&amp;#x2019;ll just return a string but pretend that the function actually sends the email:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x6709;&amp;#x4E2A;&amp;#x53D1;&amp;#x9001;&amp;#x901A;&amp;#x77E5;&amp;#x90AE;&amp;#x4EF6;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x53EA;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E86;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x53D1;&amp;#x9001;&amp;#x4E86;&amp;#x90AE;&amp;#x4EF6;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; notify&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [message]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;TO: &amp;quot;&lt;/span&gt; *notification-address* &lt;span class=&quot;string&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;string&quot;&gt;&amp;quot;MESSAGE: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;notify&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I fell.&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;TO: dobby@elf.org\nMESSAGE: I fell.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;What if you want to test this function without spamming Dobby every time your specs run? Here comes &lt;code&gt;binding&lt;/code&gt; to the rescue:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x60F3;&amp;#x6BCF;&amp;#x6B21;&amp;#x6D4B;&amp;#x8BD5;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x65F6;&amp;#x5019;&amp;#x90FD;&amp;#x53D1;&amp;#x90AE;&amp;#x4EF6;&amp;#x7ED9;Dobby&amp;#xFF0C;&amp;#x8BE5;&amp;#x600E;&amp;#x4E48;&amp;#x529E;&amp;#x5462;&amp;#xFF1F;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&lt;code&gt;binding&lt;/code&gt;&amp;#x5C31;&amp;#x6709;&amp;#x7528;&amp;#x4E86;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*notification-address* &lt;span class=&quot;string&quot;&gt;&amp;quot;test@elf.org&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;notify&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;test!&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;TO: test@elf.org\nMESSAGE: test!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Of course, you could have just defined &lt;code&gt;notify&lt;/code&gt; to take an email address as an argument. In fact, that&amp;#x2019;s often the right choice. Why would you want to use dynamic vars instead?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x7136;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;notify&lt;/code&gt;,&amp;#x8BA9;&amp;#x5B83;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x90AE;&amp;#x4EF6;&amp;#x5730;&amp;#x5740;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x8FD9;&amp;#x7ECF;&amp;#x5E38;&amp;#x662F;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x9009;&amp;#x62E9;&amp;#x3002;&amp;#x90A3;&amp;#x4E48;&amp;#x6211;&amp;#x4EEC;&amp;#x5230;&amp;#x5E95;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x4F7F;&amp;#x7528;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dynamic vars are most often used to name a resource that one or more functions target. In this example, you can view the email address as a resource that you write to. In fact, Clojure comes with a ton of built-in dynamic vars for this purpose. &lt;code&gt;*out*&lt;/code&gt;, for example, represents the standard output for print operations. In your program, you could re-bind &lt;code&gt;*out*&lt;/code&gt; so that print statements write to a file, like so:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x6700;&amp;#x7ECF;&amp;#x5E38;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x662F;&amp;#xFF1A;&amp;#x547D;&amp;#x540D;&amp;#x4E00;&amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x76EE;&amp;#x6807;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x90AE;&amp;#x4EF6;&amp;#x5730;&amp;#x5740;&amp;#x770B;&amp;#x6210;&amp;#x5199;&amp;#x5165;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x4E8B;&amp;#x5B9E;&amp;#x4E0A;&amp;#xFF0C;Clojure&amp;#x6709;&amp;#x5927;&amp;#x91CF;&amp;#x7528;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x76EE;&amp;#x7684;&amp;#x7684;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;*out*&lt;/code&gt;&amp;#x8868;&amp;#x793A;&amp;#x6253;&amp;#x5370;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x6807;&amp;#x51C6;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x65B0;&amp;#x7ED1;&amp;#x5B9A;&lt;code&gt;*out*&lt;/code&gt;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6253;&amp;#x5370;&amp;#x76EE;&amp;#x6807;&amp;#x53D8;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(binding [*out* (clojure.java.io/writer &amp;quot;print-output&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (println &amp;quot;A man who carries a cat by the tail learns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;something he can learn in no other way.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- Mark Twain&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(slurp &amp;quot;print-output&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; A man who carries a cat by the tail learns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     something he can learn in no other way.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     -- Mark Twain&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is much less burdensome than passing an output destination to every invocation of &lt;code&gt;println&lt;/code&gt;. Dynamic vars are a great way to specify a common resource while retaining the flexibility to change it on an ad hoc basis.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BD4;&amp;#x6BCF;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&lt;code&gt;println&lt;/code&gt;&amp;#x65F6;&amp;#x5019;&amp;#x90FD;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B83;&amp;#x8F93;&amp;#x51FA;&amp;#x76EE;&amp;#x7701;&amp;#x4E8B;&amp;#x591A;&amp;#x4E86;&amp;#x3002;&amp;#x60F3;&amp;#x8981;&amp;#x6307;&amp;#x5B9A;&amp;#x901A;&amp;#x7528;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x53C8;&amp;#x80FD;&amp;#x5728;&amp;#x7279;&amp;#x5B9A;&amp;#x60C5;&amp;#x51B5;&amp;#x6539;&amp;#x53D8;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x4E2A;&amp;#x5F88;&amp;#x68D2;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dynamic vars are also used for configuration. For example, the built-in var &lt;code&gt;*print-length*&lt;/code&gt; allows you to specify how many items in a collection Clojure should print:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4E8E;&amp;#x914D;&amp;#x7F6E;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&lt;code&gt;*print-length*&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x5B9A;&amp;#x6253;&amp;#x5370;&amp;#x591A;&amp;#x5C11;&amp;#x96C6;&amp;#x5408;&amp;#x91CC;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;quot;Print&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;the&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;things!&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; [Print all the things!]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*print-length* &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;quot;Print&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;just&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;one!&amp;quot;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; [Print ...]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, it&amp;#x2019;s possible to &lt;code&gt;set!&lt;/code&gt; dynamic vars that have been bound. Whereas the examples you&amp;#x2019;ve seen so far allow you to convey information in to a function without having to pass in the information as an argument, &lt;code&gt;set!&lt;/code&gt; allows you convey information out of a function without having to return it as an argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;set!&lt;/code&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E0A;&amp;#x9762;&amp;#x770B;&amp;#x5230;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x8BA9;&amp;#x4F60;&amp;#x65E0;&amp;#x9700;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&amp;#x4F20;&amp;#x53C2;&amp;#xFF0C;&amp;#x5C31;&amp;#x80FD;&amp;#x628A;&amp;#x4FE1;&amp;#x606F;&amp;#x4F20;&amp;#x8FDB;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;set!&lt;/code&gt;&amp;#x4F7F;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x9700;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x5C31;&amp;#x80FD;&amp;#x628A;&amp;#x4FE1;&amp;#x606F;&amp;#x4F20;&amp;#x5230;&amp;#x51FD;&amp;#x6570;&amp;#x5916;&amp;#x9762;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, let&amp;#x2019;s say you&amp;#x2019;re a telepath, but your mind-reading powers are a bit delayed. You can read people&amp;#x2019;s thoughts only after the moment when it would have been useful for you to know them. Don&amp;#x2019;t feel too bad, though; you&amp;#x2019;re still a telepath, which is awesome. Anyway, say you&amp;#x2019;re trying to cross a bridge guarded by a troll who will eat you if you don&amp;#x2019;t answer his riddle. His riddle is &amp;#x201C;What number between 1 and 2 am I thinking of?&amp;#x201D; In the event that the troll devours you, you can at least die knowing what the troll was actually thinking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x662F;&amp;#x4E2A;&amp;#x5FC3;&amp;#x7075;&amp;#x611F;&amp;#x5E94;&amp;#x8005;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x7684;&amp;#x8BFB;&amp;#x5FC3;&amp;#x672F;&amp;#x6709;&amp;#x70B9;&amp;#x6162;&amp;#x3002;&amp;#x4F60;&amp;#x53EA;&amp;#x80FD;&amp;#x5728;&amp;#x67D0;&amp;#x4E00;&amp;#x65F6;&amp;#x523B;&amp;#x8BFB;&amp;#x5230;&amp;#x5BF9;&amp;#x65B9;&amp;#x7684;&amp;#x60F3;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65F6;&amp;#x523B;&amp;#x5C31;&amp;#x662F;&amp;#x77E5;&amp;#x9053;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60F3;&amp;#x6CD5;&amp;#x65F6;&amp;#x5BF9;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6CA1;&amp;#x7528;&amp;#x4E86;&amp;#x3002;&amp;#x4E0D;&amp;#x8981;&amp;#x89C9;&amp;#x5F97;&amp;#x592A;&amp;#x7CDF;&amp;#x7CD5;&amp;#xFF0C;&amp;#x4F60;&amp;#x4ECD;&amp;#x7136;&amp;#x662F;&amp;#x5FC3;&amp;#x7075;&amp;#x611F;&amp;#x5E94;&amp;#x8005;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5F88;&amp;#x4E86;&amp;#x4E0D;&amp;#x8D77;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x4F60;&amp;#x6B63;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E2A;&amp;#x98DF;&amp;#x4EBA;&amp;#x9B54;&amp;#x628A;&amp;#x5B88;&amp;#x7684;&amp;#x6865;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x6CA1;&amp;#x6709;&amp;#x89E3;&amp;#x5F00;&amp;#x98DF;&amp;#x4EBA;&amp;#x9B54;&amp;#x7684;&amp;#x8FF7;&amp;#x9898;&amp;#xFF0C;&amp;#x5B83;&amp;#x5C31;&amp;#x4F1A;&amp;#x5403;&amp;#x4E86;&amp;#x4F60;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x8C1C;&amp;#x9898;&amp;#x662F;&amp;#x201D;&amp;#x6211;&amp;#x73B0;&amp;#x5728;&amp;#x60F3;&amp;#x7684;&amp;#x6570;&amp;#x5B57;&amp;#x662F;1&amp;#x8FD8;&amp;#x662F;2&amp;#xFF1F;&amp;#x201D;&amp;#x3002;&amp;#x5F53;&amp;#x98DF;&amp;#x4EBA;&amp;#x9B54;&amp;#x5403;&amp;#x4F60;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F60;&amp;#x81F3;&amp;#x5C11;&amp;#x53EF;&amp;#x4EE5;&amp;#x77E5;&amp;#x9053;&amp;#x5B83;&amp;#x5B9E;&amp;#x9645;&amp;#x60F3;&amp;#x7684;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/troll.png&quot; alt=&quot;troll&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you create the dynamic var &lt;code&gt;*troll-thought*&lt;/code&gt; to convey the troll&amp;#x2019;s thought out of the &lt;code&gt;troll-riddle&lt;/code&gt; function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5728;&amp;#x51FD;&amp;#x6570;&lt;code&gt;troll-riddle&lt;/code&gt;&amp;#x5916;&amp;#x9762;&amp;#x521B;&amp;#x5EFA;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&lt;code&gt;*troll-thought*&lt;/code&gt;&amp;#xFF0C;&amp;#x4F20;&amp;#x8FBE;&amp;#x98DF;&amp;#x4EBA;&amp;#x9B54;&amp;#x7684;&amp;#x60F3;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; ^&lt;span class=&quot;symbol&quot;&gt;:dynamic&lt;/span&gt; *troll-thought* &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; troll-riddle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [your-answer]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [number &lt;span class=&quot;string&quot;&gt;&amp;quot;man meat&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;when&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;thread-bound?&lt;/span&gt; #&amp;apos;*troll-thought*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;set!&lt;/span&gt;&lt;/span&gt; *troll-thought* number))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; number your-answer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&amp;quot;TROLL: You can cross the bridge!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&amp;quot;TROLL: Time to eat you, succulent human!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*troll-thought* &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;troll-riddle&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;SUCCULENT HUMAN: Oooooh! The answer was&amp;quot;&lt;/span&gt; *troll-thought*))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; TROLL: Time to eat you, succulent human!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; SUCCULENT HUMAN: Oooooh! The answer was man meat&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You use the &lt;code&gt;thread-bound?&lt;/code&gt; function at &amp;#x278A; to check that the var has been bound, and if it has, you &lt;code&gt;set! *troll-thought*&lt;/code&gt; to the troll&amp;#x2019;s thought at &amp;#x278B;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x278A;&amp;#x5904;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;thread-bound&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x68C0;&amp;#x67E5;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x5426;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#xFF0C;&amp;#x5728;&amp;#x278B;&amp;#x5904;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5DE8;&amp;#x9B54;&amp;#x7684;&amp;#x60F3;&amp;#x6CD5;&lt;code&gt;set! *troll-thought*&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The var returns to its original value outside of binding:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5916;&amp;#x9762;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x8FD4;&amp;#x56DE;&amp;#x5B83;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x503C;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*troll-thought*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; nil&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that you have to pass &lt;code&gt;#&amp;apos;*troll-thought*&lt;/code&gt; (including &lt;code&gt;#&amp;apos;&lt;/code&gt;), not &lt;code&gt;*troll-thought*&lt;/code&gt;, to the function &lt;code&gt;thread-bound?&lt;/code&gt;. This is because &lt;code&gt;thread-bound?&lt;/code&gt; takes the var itself as an argument, not the value it refers to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&lt;code&gt;thread-bound?&lt;/code&gt;&amp;#x7684;&amp;#x5FC5;&amp;#x987B;&amp;#x662F;&lt;code&gt;#&amp;apos;*troll-thought*&lt;/code&gt;(&amp;#x5305;&amp;#x542B;&lt;code&gt;#&amp;apos;&lt;/code&gt;),&amp;#x800C;&amp;#x4E0D;&amp;#x80FD;&amp;#x662F;&lt;code&gt;*troll-thought*&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&lt;code&gt;thread-bound?&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x53D8;&amp;#x91CF;&amp;#x672C;&amp;#x8EAB;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x5B83;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;[&amp;#x8BD1;&amp;#x8005;&amp;#x6CE8;]&lt;br&gt;&lt;code&gt;#&amp;apos;*troll-thought*&lt;/code&gt; &amp;#x7B49;&amp;#x4E8E;&lt;code&gt;(var *troll-thought*)&lt;/code&gt;,&amp;#x800C;&amp;#x540E;&amp;#x8005;&amp;#x5C31;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;&amp;#x8FD9;&amp;#x4E2A;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x5BF9;&amp;#x8C61;&amp;#x672C;&amp;#x8EAB;,&lt;a href=&quot;http://clojuredocs.org/clojure.core/var&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&amp;#x3002;&amp;#x524D;&amp;#x8005;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x7684;&amp;#x4E00;&amp;#x79CD;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x53EF;&amp;#x53C2;&amp;#x8003;&amp;#x7B2C;&amp;#x516D;&amp;#x7AE0;,Clojure&amp;#x70BC;&amp;#x91D1;&amp;#x672F;:&amp;#x8BFB;&amp;#x53D6;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5B8F;&amp;#x7684;&lt;a href=&quot;https://morrxy.github.io/2016/05/11/braveclojure-read-and-eval/#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x76F8;&amp;#x5E94;&amp;#x90E8;&amp;#x5206;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Per-Thread Binding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x6BCF;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7ED1;&amp;#x5B9A;&quot;&gt;&lt;a href=&quot;#&amp;#x6BCF;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7ED1;&amp;#x5B9A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6BCF;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7ED1;&amp;#x5B9A;&quot;&gt;&lt;/a&gt;&amp;#x6BCF;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7ED1;&amp;#x5B9A;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;One final point to note about binding: if you access a dynamically bound var from within a manually created thread, the var will evaluate to the original value. If you&amp;#x2019;re new to Clojure (and Java), this feature won&amp;#x2019;t be immediately relevant; you can probably skip this section and come back to it later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5173;&amp;#x4E8E;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;&amp;#xFF1A;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x624B;&amp;#x52A8;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x91CC;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E00;&amp;#x4E2A;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x4F1A;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x5B83;&amp;#x7684;&amp;#x6700;&amp;#x521D;&amp;#x503C;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x521A;&amp;#x63A5;&amp;#x89E6;Clojure(&amp;#x548C;Java)&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7279;&amp;#x6027;&amp;#x4E0D;&amp;#x4F1A;&amp;#x9A6C;&amp;#x4E0A;&amp;#x5BF9;&amp;#x4F60;&amp;#x4EA7;&amp;#x751F;&amp;#x610F;&amp;#x4E49;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8DF3;&amp;#x8FC7;&amp;#x8FD9;&amp;#x8282;&amp;#xFF0C;&amp;#x4EE5;&amp;#x540E;&amp;#x518D;&amp;#x770B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ironically, this binding behavior prevents us from easily creating a fun demonstration in the REPL, because the REPL binds &lt;code&gt;*out*&lt;/code&gt;. It&amp;#x2019;s as if all the code you run in the REPL is implicitly wrapped in something like &lt;code&gt;(binding [*out* repl-printer] your-code&lt;/code&gt;. If you create a new thread, &lt;code&gt;*out*&lt;/code&gt; won&amp;#x2019;t be bound to the REPL printer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BBD;&amp;#x523A;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x884C;&amp;#x4E3A;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x65E0;&amp;#x6CD5;&amp;#x5728;REPL&amp;#x91CC;&amp;#x521B;&amp;#x9020;&amp;#x4E00;&amp;#x4E2A;&amp;#x597D;&amp;#x73A9;&amp;#x7684;&amp;#x6F14;&amp;#x793A;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x4E2A;REPL&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E86;&lt;code&gt;*out*&lt;/code&gt;&amp;#x3002;&amp;#x5C31;&amp;#x597D;&amp;#x50CF;&amp;#x6240;&amp;#x6709;&amp;#x8FD0;&amp;#x884C;&amp;#x5728;REPL&amp;#x91CC;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x90FD;&amp;#x9690;&amp;#x542B;&amp;#x5730;&amp;#x88AB;&amp;#x5305;&amp;#x5728;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;(binding [*out* repl-printer] your-code)&lt;/code&gt;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&lt;code&gt;*out*&lt;/code&gt;&amp;#x5C06;&amp;#x4E0D;&amp;#x88AB;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;REPL&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following example uses some basic Java interop. Even if it looks unfamiliar, the gist of the following code should be clear, and you&amp;#x2019;ll learn exactly what&amp;#x2019;s going on in Chapter 12.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x57FA;&amp;#x672C;&amp;#x7684;Java&amp;#x4E92;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x867D;&amp;#x7136;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x4E0D;&amp;#x592A;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x4F46;&amp;#x5927;&amp;#x610F;&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x6E05;&amp;#x695A;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;12&amp;#x7AE0;&amp;#x5C06;&amp;#x4F1A;&amp;#x4E86;&amp;#x89E3;&amp;#x5177;&amp;#x4F53;&amp;#x90FD;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This code prints output to the REPL:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x5411;REPL&amp;#x6253;&amp;#x5370;&amp;#x8F93;&amp;#x51FA;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;.write&lt;/span&gt; *out* &lt;span class=&quot;string&quot;&gt;&amp;quot;prints to repl&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; prints to repl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The following code doesn&amp;#x2019;t print output to the REPL, because &lt;code&gt;*out*&lt;/code&gt; is not bound to the REPL printer:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5411;REPL&amp;#x6253;&amp;#x5370;&amp;#x8F93;&amp;#x51FA;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&lt;code&gt;*out*&lt;/code&gt;&amp;#x6CA1;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;REPL&amp;#x6253;&amp;#x5370;&amp;#x673A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;.start&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread.&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;.write&lt;/span&gt; *out* &lt;span class=&quot;string&quot;&gt;&amp;quot;prints to standard out&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can work around this by using this goofy code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x6BB5;&amp;#x602A;&amp;#x5F02;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x907F;&amp;#x5F00;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [out *out*]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;.start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;Thread.&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;binding&lt;/span&gt; [*out* out]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               (&lt;span class=&quot;name&quot;&gt;.write&lt;/span&gt; *out* &lt;span class=&quot;string&quot;&gt;&amp;quot;prints to repl from thread&amp;quot;&lt;/span&gt;)))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Or you can use &lt;code&gt;bound-fn&lt;/code&gt;, which carries all the current bindings to the new thread:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;bound-fn&lt;/code&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#xFF0C;&amp;#x5B83;&amp;#x628A;&amp;#x5F53;&amp;#x524D;&amp;#x6240;&amp;#x6709;&amp;#x7ED1;&amp;#x5B9A;&amp;#x90FD;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;.start&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread.&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;bound-fn&lt;/span&gt; [] (&lt;span class=&quot;name&quot;&gt;.write&lt;/span&gt; *out* &lt;span class=&quot;string&quot;&gt;&amp;quot;prints to repl from thread&amp;quot;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;let&lt;/code&gt; binding captures &lt;code&gt;*out*&lt;/code&gt; so we can then rebind it in the child thread, which is goofy as hell. The point is that bindings don&amp;#x2019;t get passed on to manually created threads. They do, however, get passed on to futures. This is called binding conveyance. Throughout this chapter, we&amp;#x2019;ve been printing from futures without any problem, for example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x91CC;&amp;#x6355;&amp;#x83B7;&amp;#x4E86;&lt;code&gt;*out*&lt;/code&gt;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x5B50;&amp;#x7EBF;&amp;#x7A0B;&amp;#x91CC;&amp;#x91CD;&amp;#x65B0;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5B83;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x602A;&amp;#x5F02;&amp;#x3002;&amp;#x91CD;&amp;#x70B9;&amp;#x662F;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x624B;&amp;#x52A8;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x4F46;&amp;#x786E;&amp;#x5B9E;&amp;#x80FD;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x672A;&amp;#x6765;&amp;#x3002;&amp;#x8FD9;&amp;#x53EB;&amp;#x7ED1;&amp;#x5B9A;&amp;#x8F93;&amp;#x9001;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7AE0;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x672A;&amp;#x6765;&amp;#x91CC;&amp;#x6253;&amp;#x5370;&amp;#xFF0C;&amp;#x800C;&amp;#x6CA1;&amp;#x53D1;&amp;#x751F;&amp;#x4EFB;&amp;#x4F55;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That&amp;#x2019;s it for dynamic binding. Let&amp;#x2019;s turn our attention to the last var topic: altering var &lt;em&gt;roots&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x52A8;&amp;#x6001;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5C31;&amp;#x8BA8;&amp;#x8BBA;&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x628A;&amp;#x6CE8;&amp;#x610F;&amp;#x8F6C;&amp;#x5230;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x4E3B;&amp;#x9898;&amp;#xFF1A;&amp;#x4FEE;&amp;#x6539;&lt;em&gt;&amp;#x6839;&lt;/em&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Altering the Var Root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4FEE;&amp;#x6539;&amp;#x6839;&amp;#x53D8;&amp;#x91CF;&quot;&gt;&lt;a href=&quot;#&amp;#x4FEE;&amp;#x6539;&amp;#x6839;&amp;#x53D8;&amp;#x91CF;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4FEE;&amp;#x6539;&amp;#x6839;&amp;#x53D8;&amp;#x91CF;&quot;&gt;&lt;/a&gt;&amp;#x4FEE;&amp;#x6539;&amp;#x6839;&amp;#x53D8;&amp;#x91CF;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;When you create a new var, the initial value that you supply is its &lt;em&gt;root&lt;/em&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x65B0;&amp;#x53D8;&amp;#x91CF;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F60;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x503C;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&lt;em&gt;&amp;#x6839;&lt;/em&gt;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; power-source &lt;span class=&quot;string&quot;&gt;&amp;quot;hair&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, &lt;code&gt;&amp;quot;hair&amp;quot;&lt;/code&gt; is the root value of &lt;code&gt;power-source&lt;/code&gt;. Clojure lets you permanently change this root value with the function &lt;code&gt;alter-var-root&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&lt;code&gt;&amp;quot;hair&amp;quot;&lt;/code&gt;&amp;#x662F;&lt;code&gt;power-source&lt;/code&gt;&amp;#x7684;&amp;#x6839;&amp;#x503C;&amp;#x3002;Clojure&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7528;&lt;code&gt;alter-var-root&lt;/code&gt;&amp;#x6C38;&amp;#x4E45;&amp;#x6539;&amp;#x53D8;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6839;&amp;#x503C;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(alter-var-root #&amp;apos;power-source (fn [_] &amp;quot;7-eleven parking lot&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;power-source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; &amp;quot;7-eleven parking lot&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Just like when using &lt;code&gt;swap!&lt;/code&gt; to update an atom or &lt;code&gt;alter!&lt;/code&gt; to update a ref, you use &lt;code&gt;alter-var-root&lt;/code&gt; along with a function to update the state of a var. In this case, the function is just returning a new string that bears no relation to the previous value, unlike the &lt;code&gt;alter!&lt;/code&gt; examples where we used &lt;code&gt;inc&lt;/code&gt; to derive a new number from the current number.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C31;&amp;#x50CF;&amp;#x7528;&lt;code&gt;swap!&lt;/code&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x539F;&amp;#x5B50;&amp;#xFF0C;&amp;#x6216;&amp;#x7528;&lt;code&gt;alter!&lt;/code&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;alter-var-root&lt;/code&gt;&amp;#x52A0;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x66F4;&amp;#x65B0;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x524D;&amp;#x9762;&amp;#x7684;&lt;code&gt;alter!&lt;/code&gt;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&lt;code&gt;inc&lt;/code&gt;&amp;#x4ECE;&amp;#x5F53;&amp;#x524D;&amp;#x6570;&amp;#x5F97;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x6570;&amp;#xFF0C;&amp;#x4E0E;&amp;#x6B64;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x4E0E;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x503C;&amp;#x6CA1;&amp;#x6709;&amp;#x5173;&amp;#x7CFB;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You&amp;#x2019;ll hardly ever want to do this. You especially don&amp;#x2019;t want to do this to perform simple variable assignment. If you did, you&amp;#x2019;d be going out of your way to create the binding as a mutable variable, which goes against Clojure&amp;#x2019;s philosophy; it&amp;#x2019;s best to use the functional programming techniques you learned in Chapter 5.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x51E0;&amp;#x4E4E;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x3002;&amp;#x5BF9;&amp;#x4E8E;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x8D4B;&amp;#x503C;&amp;#xFF0C;&amp;#x4F60;&amp;#x66F4;&amp;#x4E0D;&amp;#x60F3;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x3002;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x662F;&amp;#x628A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5F53;&amp;#x6210;&amp;#x53EF;&amp;#x53D8;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E0E;Clojure&amp;#x539F;&amp;#x5219;&amp;#x76F8;&amp;#x80CC;&amp;#xFF0C;&amp;#x6700;&amp;#x597D;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x662F;&amp;#x7528;&amp;#x7B2C;5&amp;#x7AE0;&amp;#x5B66;&amp;#x5230;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5F0F;&amp;#x7F16;&amp;#x7A0B;&amp;#x6280;&amp;#x5DE7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also temporarily alter a var&amp;#x2019;s root with &lt;code&gt;with-redefs&lt;/code&gt;. This works similarly to &lt;code&gt;binding&lt;/code&gt; except the alteration will appear in child threads. Here&amp;#x2019;s an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;with-redefs&lt;/code&gt;&amp;#x4E34;&amp;#x65F6;&amp;#x66F4;&amp;#x6539;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x6839;&amp;#x503C;&amp;#x3002;&amp;#x8FD9;&amp;#x4E0E;&lt;code&gt;binding&lt;/code&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x9664;&amp;#x4E86;&amp;#x66F4;&amp;#x6539;&amp;#x5C06;&amp;#x51FA;&amp;#x73B0;&amp;#x5728;&amp;#x5B50;&amp;#x7EBF;&amp;#x7A0B;&amp;#x91CC;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;with-redefs&lt;/span&gt; [*out* *out*]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doto&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread.&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;with redefs allows me to show up in the REPL&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          .start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          .join))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;with-redefs&lt;/code&gt; can be used with any var, not just dynamic ones. Because it has has such far-reaching effects, you should only use it during testing. For example, you could use it to redefine a function that returns data from a network call, so that the function returns mock data without having to actually make a network request.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;with-redefs&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4E8E;&amp;#x4EFB;&amp;#x4F55;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x4E0D;&amp;#x53EA;&amp;#x662F;&amp;#x52A8;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x628A;&amp;#x5B83;&amp;#x53EA;&amp;#x7528;&amp;#x4E8E;&amp;#x6D4B;&amp;#x8BD5;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5B83;&amp;#x91CD;&amp;#x65B0;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x4ECE;&amp;#x7F51;&amp;#x7EDC;&amp;#x8C03;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8BA9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x6A21;&amp;#x62DF;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x800C;&amp;#x65E0;&amp;#x9700;&amp;#x8FDB;&amp;#x884C;&amp;#x771F;&amp;#x5B9E;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now you know all about vars! Try not to hurt yourself or anyone you know with them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x4E00;&amp;#x5207;&amp;#x4F60;&amp;#x90FD;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#xFF01;&amp;#x4E0D;&amp;#x8981;&amp;#x7528;&amp;#x5B83;&amp;#x4F24;&amp;#x5BB3;&amp;#x4F60;&amp;#x81EA;&amp;#x5DF1;&amp;#x6216;&amp;#x4EFB;&amp;#x4F55;&amp;#x4EBA;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Stateless Concurrency and Parallelism with pmap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x7528;pmap&amp;#x5E76;&amp;#x884C;&quot;&gt;&lt;a href=&quot;#&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x7528;pmap&amp;#x5E76;&amp;#x884C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x7528;pmap&amp;#x5E76;&amp;#x884C;&quot;&gt;&lt;/a&gt;&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x7528;pmap&amp;#x5E76;&amp;#x884C;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;So far, this chapter has focused on tools that are designed to mitigate the risks inherent in concurrent programming. You&amp;#x2019;ve learned about the dangers born of shared access to mutable state and how Clojure implements a reconceptualization of state that helps you write concurrent programs safely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x4E3A;&amp;#x6B62;&amp;#x672C;&amp;#x7AE0;&amp;#x7684;&amp;#x7126;&amp;#x70B9;&amp;#x90FD;&amp;#x662F;&amp;#xFF1A;&amp;#x4E3A;&amp;#x51CF;&amp;#x5C11;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x5929;&amp;#x751F;&amp;#x5E26;&amp;#x6709;&amp;#x7684;&amp;#x98CE;&amp;#x9669;&amp;#x800C;&amp;#x8BBE;&amp;#x8BA1;&amp;#x51FA;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;&amp;#x5171;&amp;#x4EAB;&amp;#x53EF;&amp;#x53D8;&amp;#x72B6;&amp;#x6001;&amp;#x8BBF;&amp;#x95EE;&amp;#x6743;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x5371;&amp;#x9669;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;Clojure&amp;#x91CD;&amp;#x65B0;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x6982;&amp;#x5FF5;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B89;&amp;#x5168;&amp;#x5730;&amp;#x5199;&amp;#x5E76;&amp;#x53D1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Often, though, you&amp;#x2019;ll want to concurrent-ify tasks that are completely independent of each other. There is no shared access to a mutable state; therefore, there are no risks to running the tasks concurrently and you don&amp;#x2019;t have to bother with using any of the tools I&amp;#x2019;ve just been blabbing on about.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x4F60;&amp;#x7ECF;&amp;#x5E38;&amp;#x60F3;&amp;#x8981;&amp;#x628A;&amp;#x4E92;&amp;#x76F8;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5E76;&amp;#x53D1;&amp;#x5316;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x5BF9;&amp;#x53EF;&amp;#x53D8;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x5171;&amp;#x4EAB;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5E76;&amp;#x53D1;&amp;#x8FD0;&amp;#x884C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EFB;&amp;#x52A1;&amp;#x6CA1;&amp;#x6709;&amp;#x98CE;&amp;#x9669;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5FC5;&amp;#x8D39;&amp;#x5FC3;&amp;#x4F7F;&amp;#x7528;&amp;#x524D;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As it turns out, Clojure makes it easy for you to write code for achieving stateless concurrency. In this section, you&amp;#x2019;ll learn about &lt;code&gt;pmap&lt;/code&gt;, which gives you concurrency performance benefits virtually for free.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E8B;&amp;#x5B9E;&amp;#x8BC1;&amp;#x660E;&amp;#xFF0C;&amp;#x7528;Clojure&amp;#x5199;&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x5E76;&amp;#x53D1;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x5BB9;&amp;#x6613;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#x5C06;&amp;#x4E86;&amp;#x89E3;&lt;code&gt;pmap&lt;/code&gt;,&amp;#x5B83;&amp;#x4E3A;&amp;#x4F60;&amp;#x514D;&amp;#x8D39;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5E76;&amp;#x53D1;&amp;#x6027;&amp;#x80FD;&amp;#x6536;&amp;#x76CA;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt; is a perfect candidate for parallelization: when you use it, all you&amp;#x2019;re doing is deriving a new collection from an existing collection by applying a function to each element of the existing collection. There&amp;#x2019;s no need to maintain state; each function application is completely independent. Clojure makes it easy to perform a parallel map with &lt;code&gt;pmap&lt;/code&gt;. With &lt;code&gt;pmap&lt;/code&gt;, Clojure handles the running of each application of the mapping function on a separate thread.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5E76;&amp;#x884C;&amp;#x5316;&amp;#xFF0C;&lt;code&gt;map&lt;/code&gt;&amp;#x662F;&amp;#x4E2A;&amp;#x5B8C;&amp;#x7F8E;&amp;#x7684;&amp;#x5019;&amp;#x9009;&amp;#x4EBA;&amp;#xFF1A;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5168;&amp;#x90E8;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x5E94;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5F97;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x96C6;&amp;#x5408;&amp;#x3002;&amp;#x6CA1;&amp;#x6709;&amp;#x7EF4;&amp;#x62A4;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x9700;&amp;#x8981;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x90FD;&amp;#x662F;&amp;#x5B8C;&amp;#x5168;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;pmap&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x5BB9;&amp;#x6613;&amp;#x5730;&amp;#x8FDB;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E76;&amp;#x884C;map&amp;#x3002;&lt;code&gt;pmap&lt;/code&gt;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6620;&amp;#x5C04;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x90FD;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8FDB;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To compare &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt;, we need a lot of example data, and to generate this data, we&amp;#x2019;ll use the &lt;code&gt;repeatedly&lt;/code&gt; function. This function takes another function as an argument and returns a lazy sequence. The elements of the lazy sequence are generated by calling the passed function, like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x6BD4;&amp;#x8F83;&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;pmap&lt;/code&gt;,&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x5F88;&amp;#x591A;&amp;#x6837;&amp;#x672C;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;repeatedly&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x60F0;&amp;#x6027;&amp;#x5E8F;&amp;#x5217;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60F0;&amp;#x6027;&amp;#x5E8F;&amp;#x5217;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x4EA7;&amp;#x751F;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#xFF1A;&amp;#x8C03;&amp;#x7528;&amp;#x90A3;&amp;#x4E2A;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;repeatedly&lt;/code&gt;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; always-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;take&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;repeatedly&lt;/span&gt; always-1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (1 1 1 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s how you&amp;#x2019;d create a lazy seq of random numbers between 0 and 9:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;0&amp;#x5230;9&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x60F0;&amp;#x6027;&amp;#x5E8F;&amp;#x5217;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;take&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;repeatedly&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;partial&lt;/span&gt;&lt;/span&gt; rand-int &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (1 5 0 3 4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s use &lt;code&gt;repeatedly&lt;/code&gt; to create example data that consists of a sequence of 3,000 random strings, each 7,000 characters long. We&amp;#x2019;ll compare &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; by using them to run &lt;code&gt;clojure.string/lowercase&lt;/code&gt; on the &lt;code&gt;orc-names&lt;/code&gt; sequence created here:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;repeatedly&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x6837;&amp;#x672C;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5305;&amp;#x542B;3000&amp;#x4E2A;&amp;#x968F;&amp;#x673A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6709;7000&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;pmap&lt;/code&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53EB;&amp;#x505A;&lt;code&gt;orc-names&lt;/code&gt;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#x4E0A;&amp;#x8FD0;&amp;#x884C;&lt;code&gt;clojure.string/lowercase&lt;/code&gt;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x8F83;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; alphabet-length &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; Vector of chars, A-Z&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; letters (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;mapv&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;comp&lt;/span&gt;&lt;/span&gt; str char (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;partial&lt;/span&gt;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;)) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;range&lt;/span&gt;&lt;/span&gt; alphabet-length)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; random-string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Returns a random string of specified length&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [length]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; str (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;take&lt;/span&gt;&lt;/span&gt; length (&lt;span class=&quot;name&quot;&gt;repeatedly&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;rand-nth&lt;/span&gt; letters)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; random-string-list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [list-length string-length]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doall&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;take&lt;/span&gt;&lt;/span&gt; list-length (&lt;span class=&quot;name&quot;&gt;repeatedly&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;partial&lt;/span&gt;&lt;/span&gt; random-string string-length)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; orc-names (&lt;span class=&quot;name&quot;&gt;random-string-list&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7000&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Because &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;pmap&lt;/code&gt; are lazy, we have to force them to be realized. We don&amp;#x2019;t want the result to be printed to the REPL, though, because that would take forever. The &lt;code&gt;dorun&lt;/code&gt; function does just what we need: it realizes the sequence but returns &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;pmap&lt;/code&gt;&amp;#x662F;&amp;#x60F0;&amp;#x6027;&amp;#x7684;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x5F3A;&amp;#x5236;&amp;#x5B83;&amp;#x4EEC;&amp;#x88AB;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x3002;&amp;#x4F46;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x60F3;&amp;#x8BA9;&amp;#x7ED3;&amp;#x679C;&amp;#x6253;&amp;#x5370;&amp;#x5230;REPL&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x82B1;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x592A;&amp;#x957F;&amp;#x4E86;&amp;#x3002;&lt;code&gt;dorun&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x6B63;&amp;#x597D;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#xFF1A;&amp;#x5B83;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dorun&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; clojure.string/lower-case orc-names)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 270.182 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dorun&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;pmap&lt;/span&gt; clojure.string/lower-case orc-names)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 147.562 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The serial execution with &lt;code&gt;map&lt;/code&gt; took about 1.8 times longer than &lt;code&gt;pmap&lt;/code&gt;, and all you had to do was add one extra letter! Your performance may be even better, depending on the number of cores your computer has; this code was run on a dual-core machine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E32;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&lt;code&gt;map&lt;/code&gt;&amp;#x7528;&amp;#x65F6;&amp;#x5927;&amp;#x7EA6;&amp;#x6BD4;&lt;code&gt;pmap&lt;/code&gt;&amp;#x957F;1.8&amp;#x500D;&amp;#xFF0C;&amp;#x800C;&amp;#x4F60;&amp;#x8981;&amp;#x505A;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x591A;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x6BCD;&amp;#xFF01;&amp;#x4F60;&amp;#x7684;&amp;#x6027;&amp;#x80FD;&amp;#x53EF;&amp;#x80FD;&amp;#x66F4;&amp;#x597D;&amp;#xFF0C;&amp;#x53D6;&amp;#x51B3;&amp;#x4E8E;&amp;#x4F60;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x4E2A;&amp;#x6570;&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x662F;&amp;#x53CC;&amp;#x6838;&amp;#x673A;&amp;#x5668;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You might be wondering why the parallel version didn&amp;#x2019;t take exactly half as long as the serial version. After all, it should take two cores only half as much time as a single core, shouldn&amp;#x2019;t it? The reason is that there&amp;#x2019;s always some overhead involved with creating and coordinating threads. Sometimes, in fact, the time taken by this overhead can dwarf the time of each function application, and &lt;code&gt;pmap&lt;/code&gt; can actually take longer than &lt;code&gt;map&lt;/code&gt;. Figure 10-3 shows how you can visualize this.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x5947;&amp;#x602A;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x5E76;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x4E0D;&amp;#x662F;&amp;#x4E32;&amp;#x884C;&amp;#x7684;&amp;#x6B63;&amp;#x597D;&amp;#x4E00;&amp;#x534A;&amp;#x3002;&amp;#x53CC;&amp;#x6838;&amp;#x53EA;&amp;#x9700;&amp;#x82B1;&amp;#x8D39;&amp;#x5355;&amp;#x6838;&amp;#x4E00;&amp;#x534A;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5417;&amp;#xFF1F;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x534F;&amp;#x8C03;&amp;#x7EBF;&amp;#x7A0B;&amp;#x603B;&amp;#x4F1A;&amp;#x635F;&amp;#x8017;&amp;#x4E00;&amp;#x4E9B;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x635F;&amp;#x8017;&amp;#x65F6;&amp;#x95F4;&amp;#x53EF;&amp;#x80FD;&amp;#x6BD4;&amp;#x6BCF;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x8FD8;&amp;#x957F;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&lt;code&gt;pmap&lt;/code&gt;&amp;#x53EF;&amp;#x80FD;&amp;#x6BD4;&lt;code&gt;map&lt;/code&gt;&amp;#x7528;&amp;#x65F6;&amp;#x957F;&amp;#x3002;&amp;#x56FE;10-3&amp;#x5C55;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60C5;&amp;#x51B5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 10-3: Parallelization overhead can dwarf task time, resulting in a performance decrease.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;10-3: &amp;#x5E76;&amp;#x884C;&amp;#x5316;&amp;#x635F;&amp;#x8017;&amp;#x65F6;&amp;#x95F4;&amp;#x53EF;&amp;#x80FD;&amp;#x8D85;&amp;#x8FC7;&amp;#x4EFB;&amp;#x52A1;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x5F15;&amp;#x8D77;&amp;#x6027;&amp;#x80FD;&amp;#x4E0B;&amp;#x964D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/pmap-small-grain.png&quot; alt=&quot;pmap&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We can see this effect at work if we run a function on 20,000 abbreviated orc names, each 300 characters long:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6548;&amp;#x5E94;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x628A;&amp;#x5E8F;&amp;#x5217;&amp;#x4E2A;&amp;#x6570;&amp;#x6539;&amp;#x6210;&amp;#x4E24;&amp;#x4E07;&amp;#x4E2A;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x540D;&amp;#x5B57;&amp;#x7684;&amp;#x957F;&amp;#x5EA6;&amp;#x6539;&amp;#x6210;300:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; orc-name-abbrevs (&lt;span class=&quot;name&quot;&gt;random-string-list&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20000&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dorun&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; clojure.string/lower-case orc-name-abbrevs)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 78.23 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dorun&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;pmap&lt;/span&gt; clojure.string/lower-case orc-name-abbrevs)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 124.727 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now &lt;code&gt;pmap&lt;/code&gt; actually takes 1.6 times &lt;em&gt;longer&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&lt;code&gt;pmap&lt;/code&gt;&amp;#x7684;&amp;#x7528;&amp;#x65F6;&amp;#x662F;&lt;code&gt;map&lt;/code&gt;&amp;#x7684;1.6&amp;#x500D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The solution to this problem is to increase the grain size, or the amount of work done by each parallelized task. In this case, the task is to apply the mapping function to one element of the collection. Grain size isn&amp;#x2019;t measured in any standard unit, but you&amp;#x2019;d say that the grain size of &lt;code&gt;pmap&lt;/code&gt; is one by default. Increasing the grain size to two would mean that you&amp;#x2019;re applying the mapping function to two elements instead of one, so the thread that the task is on is doing more work. Figure 10-4 shows how an increased grain size can improve performance.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x52A0;&amp;#x5927;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#xFF0C;&amp;#x5373;&amp;#x6BCF;&amp;#x6B21;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x6570;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x6BCF;&amp;#x6B21;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x5BF9;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x8C03;&amp;#x7528;&amp;#x6620;&amp;#x5C04;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#x662F;1&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x589E;&amp;#x52A0;&amp;#x5230;2&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x91CC;&amp;#x5C31;&amp;#x4F1A;&amp;#x5BF9;&amp;#x4E24;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x6267;&amp;#x884C;&amp;#x6620;&amp;#x5C04;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x56FE;10-4&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x589E;&amp;#x52A0;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#x80FD;&amp;#x63D0;&amp;#x5347;&amp;#x6027;&amp;#x80FD;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 10-4: Visualizing grain size in relation to parallelization overhead&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;10-4: &amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x635F;&amp;#x8017;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/22/clojure-metaphysics/ppmap.png&quot; alt=&quot;ppmap&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To actually accomplish this in Clojure, you can increase the grain size by making each thread apply &lt;code&gt;clojure.string/lower-case&lt;/code&gt; to multiple elements instead of just one, using &lt;code&gt;partition-all&lt;/code&gt;. &lt;code&gt;partition-all&lt;/code&gt; takes a seq and divides it into seqs of the specified length:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;partition-all&lt;/code&gt;&amp;#x628A;&amp;#x5E8F;&amp;#x5217;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;&amp;#x6307;&amp;#x5B9A;&amp;#x957F;&amp;#x5EA6;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#xFF0C;&amp;#x7528;&amp;#x6765;&amp;#x589E;&amp;#x52A0;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; numbers [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;partition-all&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; numbers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ((1 2 3) (4 5 6) (7 8 9) (10))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now suppose you started out with code that looked like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x5F00;&amp;#x59CB;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;pmap&lt;/span&gt; inc numbers)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, the grain size is one because each thread applies &lt;code&gt;inc&lt;/code&gt; to an element.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#x662F;1&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x8C03;&amp;#x7528;&lt;code&gt;inc&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now suppose you changed the code to this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x628A;&amp;#x4EE3;&amp;#x7801;&amp;#x6539;&amp;#x6210;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;pmap&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [number-group] (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doall&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; inc number-group)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;partition-all&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; numbers))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ((2 3 4) (5 6 7) (8 9 10) (11))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;There are a few things going on here. First, you&amp;#x2019;ve now increased the grain size to three because each thread now executes three applications of the &lt;code&gt;inc&lt;/code&gt; function instead of one. Second, notice that you have to call &lt;code&gt;doall&lt;/code&gt; within the mapping function. This forces the lazy sequence returned by &lt;code&gt;(map inc number-group)&lt;/code&gt; to be realized within the thread. Third, we need to ungroup the result. Here&amp;#x2019;s how we can do that:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x51E0;&amp;#x4EF6;&amp;#x4E8B;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;3&amp;#x6B21;&lt;code&gt;inc&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x800C;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#x589E;&amp;#x52A0;&amp;#x5230;3&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x8C03;&amp;#x7528;&lt;code&gt;doall&lt;/code&gt;,&amp;#x8FD9;&amp;#x5F3A;&amp;#x5236;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5185;&lt;code&gt;(map inc number-group)&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x60F0;&amp;#x6027;&amp;#x5E8F;&amp;#x5217;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x3002;&amp;#x7B2C;&amp;#x4E09;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x5408;&amp;#x5E76;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; concat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;pmap&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [number-group] (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doall&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; inc number-group)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             (&lt;span class=&quot;name&quot;&gt;partition-all&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; numbers)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Using this technique, we can increase the grain size of the orc name lowercase-ification so each thread runs &lt;code&gt;clojure.string/lower-case&lt;/code&gt; on 1,000 names instead of just one:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6280;&amp;#x5DE7;&amp;#xFF0C;&amp;#x628A;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x9897;&amp;#x7C92;&amp;#x5EA6;&amp;#x589E;&amp;#x52A0;&amp;#x5230;1000&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;1:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;dorun&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; concat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         (&lt;span class=&quot;name&quot;&gt;pmap&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [name] (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doall&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; clojure.string/lower-case name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               (&lt;span class=&quot;name&quot;&gt;partition-all&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; orc-name-abbrevs)))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 44.677 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Once again the parallel version takes nearly half the time. Just for fun, we can generalize this technique into a function called &lt;code&gt;ppmap&lt;/code&gt;, for &lt;em&gt;partitioned pmap&lt;/em&gt;. It can receive more than one collection, just like &lt;code&gt;map&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x53C8;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x82B1;&amp;#x4E86;&amp;#x51E0;&amp;#x4E4E;&amp;#x4E00;&amp;#x534A;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x901A;&amp;#x7528;&amp;#x5316;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x53EB;&lt;code&gt;ppmap&lt;/code&gt;,&amp;#x4EE3;&amp;#x8868;&lt;em&gt;partitioned pmap&lt;/em&gt;&amp;#x3002;&amp;#x5B83;&amp;#x80FD;&amp;#x63A5;&amp;#x53D7;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x50CF;&lt;code&gt;map&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defn ppmap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;Partitioned pmap, for grouping map ops together to make parallel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  overhead worthwhile&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [grain-size f &amp;amp; colls]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (apply concat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (apply pmap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (fn [&amp;amp; pgroups] (doall (apply map f pgroups)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          (map (partial partition-all grain-size) colls))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(time (dorun (ppmap 1000 clojure.string/lower-case orc-name-abbrevs)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 44.902 msecs&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;I don&amp;#x2019;t know about you, but I think this stuff is just fun. For even more fun, check out the clojure.core.reducers library (&lt;a href=&quot;http://clojure.org/reference/reducers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://clojure.org/reference/reducers&lt;/a&gt;). This library provides alternative implementations of seq functions like &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;reduce&lt;/code&gt; that are usually speedier than their cousins in &lt;code&gt;clojure.core&lt;/code&gt;. The trade-off is that they&amp;#x2019;re not lazy. Overall, the clojure.core.reducers library offers a more refined and composable way of creating and using functions like &lt;code&gt;ppmap&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x8BA4;&amp;#x4E3A;&amp;#x8FD9;&amp;#x5F88;&amp;#x6709;&amp;#x8DA3;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#x66F4;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#xFF0C;&amp;#x53BB;&amp;#x770B;&amp;#x770B;&lt;a href=&quot;http://clojure.org/reference/reducers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;clojure.core.reducers&lt;/a&gt;&amp;#x5E93;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E93;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5E8F;&amp;#x5217;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5982;&lt;code&gt;map&lt;/code&gt;,&lt;code&gt;reduce&lt;/code&gt;&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF0C;&amp;#x901A;&amp;#x5E38;&amp;#x6BD4;&lt;code&gt;clojure.core&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x901F;&amp;#x5EA6;&amp;#x66F4;&amp;#x5FEB;&amp;#x3002;&amp;#x4EE3;&amp;#x4EF7;&amp;#x5C31;&amp;#x662F;&amp;#x5B83;&amp;#x4EEC;&amp;#x4E0D;&amp;#x662F;&amp;#x60F0;&amp;#x6027;&amp;#x7684;&amp;#x3002;&amp;#x603B;&amp;#x4F53;&amp;#x4E0A;&amp;#x8BF4;&amp;#xFF0C;clojure.core.reducers&amp;#x5E93;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7528;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x53EF;&amp;#x4EE5;&amp;#x50CF;&lt;code&gt;ppmap&lt;/code&gt;&amp;#x90A3;&amp;#x6837;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x4F7F;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x66F4;&amp;#x52A0;&amp;#x7CBE;&amp;#x81F4;&amp;#x5E76;&amp;#x4E14;&amp;#x53EF;&amp;#x7EC4;&amp;#x5408;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned more than most people know about safely handling concurrent tasks. You learned about the metaphysics that underlies Clojure&amp;#x2019;s reference types. In Clojure metaphysics, state is the value of an identity at a point in time, and identity is a handy way to refer to a succession of values produced by some process. Values are atomic in the same way numbers are atomic. They&amp;#x2019;re immutable, and this makes them safe to work with concurrently; you don&amp;#x2019;t have to worry about other threads changing them while you&amp;#x2019;re using them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x4F60;&amp;#x5B66;&amp;#x4E60;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x5B89;&amp;#x5168;&amp;#x5904;&amp;#x7406;&amp;#x5E76;&amp;#x53D1;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x77E5;&amp;#x8BC6;&amp;#x3002;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;Clojure&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x3002;Clojure&amp;#x54F2;&amp;#x5B66;&amp;#x4F53;&amp;#x7CFB;&amp;#x91CC;&amp;#xFF0C;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x8EAB;&amp;#x4EFD;&amp;#x67D0;&amp;#x4E00;&amp;#x65F6;&amp;#x95F4;&amp;#x70B9;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x8EAB;&amp;#x4EFD;&amp;#x6307;&amp;#x67D0;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x8FDE;&amp;#x7EED;&amp;#x503C;&amp;#x3002;&amp;#x503C;&amp;#x540C;&amp;#x6570;&amp;#x5B57;&amp;#x4E00;&amp;#x6837;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x5206;&amp;#x7684;&amp;#x3002;&amp;#x503C;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x53D8;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x5E76;&amp;#x53D1;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&amp;#x662F;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x65F6;&amp;#x4E0D;&amp;#x7528;&amp;#x62C5;&amp;#x5FC3;&amp;#x5B83;&amp;#x4EEC;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6539;&amp;#x53D8;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The atom reference type allows you to create an identity that you can safely update to refer to new values using &lt;code&gt;swap!&lt;/code&gt; and &lt;code&gt;reset!&lt;/code&gt;. The ref reference type is handy when you want to update more than one identity using transaction semantics, and you update it with &lt;code&gt;alter&lt;/code&gt; and &lt;code&gt;commute&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x539F;&amp;#x5B50;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;swap!&lt;/code&gt;&amp;#x548C;&lt;code&gt;reset!&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B89;&amp;#x5168;&amp;#x5730;&amp;#x66F4;&amp;#x65B0;&amp;#x539F;&amp;#x5B50;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5B83;&amp;#x6307;&amp;#x5411;&amp;#x65B0;&amp;#x503C;&amp;#x3002;&amp;#x5F53;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x4E8B;&amp;#x52A1;&amp;#x8BED;&amp;#x610F;&amp;#x66F4;&amp;#x65B0;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E2A;&amp;#x8EAB;&amp;#x4EFD;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x975E;&amp;#x5E38;&amp;#x65B9;&amp;#x4FBF;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;alter&lt;/code&gt;&amp;#x548C;&lt;code&gt;commute&lt;/code&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Additionally, you learned how to increase performance by performing stateless data transformations with &lt;code&gt;pmap&lt;/code&gt; and the core.reducers library. Woohoo!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;&amp;#x8FD8;&amp;#x5B66;&amp;#x4E60;&amp;#x4E86;&amp;#x7528;&lt;code&gt;pmap&lt;/code&gt;&amp;#x548C;core.reducers&amp;#x5E93;&amp;#x6267;&amp;#x884C;&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8F6C;&amp;#x6362;&amp;#x4EE5;&amp;#x63D0;&amp;#x9AD8;&amp;#x6027;&amp;#x80FD;&amp;#x3002;&amp;#x54C7;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create an atom with the initial value 0, use swap! to increment it a couple of times, and then dereference it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a function that uses futures to parallelize the task of downloading random quotes from &lt;a href=&quot;http://www.braveclojure.com/random-quote&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.braveclojure.com/random-quote&lt;/a&gt; using (slurp &amp;#x201C;&lt;a href=&quot;http://www.braveclojure.com/random-quote&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.braveclojure.com/random-quote&lt;/a&gt;&amp;#x201C;). The futures should update an atom that refers to a total word count for all quotes. The function will take the number of quotes to download as an argument and return the atom&amp;#x2019;s final value. Keep in mind that you&amp;#x2019;ll need to ensure that all futures have finished before returning the atom&amp;#x2019;s final value. Here&amp;#x2019;s how you would call it and an example result:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;quote-word-count&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {&amp;quot;ochre&amp;quot; 8, &amp;quot;smoothie&amp;quot; 2}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create representations of two characters in a game. The first character has 15 hit points out of a total of 40. The second character has a healing potion in his inventory. Use refs and transactions to model the consumption of the healing potion and the first character healing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>【译】Brave Clojure 第九章:并发与并行编程</title>
    <link href="http://yoursite.com/2016/07/15/braveclojure-concurrency/"/>
    <id>http://yoursite.com/2016/07/15/braveclojure-concurrency/</id>
    <published>2016-07-15T14:37:55.000Z</published>
    <updated>2016-08-04T13:55:53.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x4E5D;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/concurrency/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Sacred Art of Concurrent and Parallel Programming&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morrxy.github.io/tags/Clojure-For-The-Branve-And-True/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5176;&amp;#x4ED6;&amp;#x7AE0;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;If I were the lord of a manor and you were my heir, I would sit you down on your 13th name day and tell you, &amp;#x201C;The world of computing is changing, lass, and ye must be prepared for the new world of multi-core processors lest ye be trampled by it.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Listen well: In recent years, CPU clock speeds have barely increased, but dual-core and quad-core computers have become common. The laws of physics are cruel and absolute, and they demand that increasing clock speed requires exponentially more power. The realm&amp;#x2019;s best engineers are unlikely to overcome this limitation anytime soon, if ever. Therefore, you can expect the trend of increasing cores on a single machine to continue&amp;#x2014;as will the expectation that you as a programmer will know how to make the most of modern hardware.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;Learning to program in this new paradigm will be fun and fascinating, verily. But beware: it is also fraught with peril. You must learn &lt;em&gt;concurrent and parallel programming&lt;/em&gt;, which is the sacred art of structuring your application to safely manage multiple, simultaneously executing tasks.&lt;/p&gt;
&lt;p&gt;&amp;#x201C;You begin your instruction in this art with an overview of concurrency and parallelism concepts. You&amp;#x2019;ll then study the three goblins that harry every practitioner: reference cells, mutual exclusion, and dwarven berserkers. And you&amp;#x2019;ll learn three tools that will aid you: futures, promises, and delays.&amp;#x201D;&lt;/p&gt;
&lt;p&gt;And then I&amp;#x2019;d tap you on the shoulder with a keyboard, signaling that you were ready to begin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x5148;&amp;#x8BB2;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x5B66;&amp;#x4E60;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4ECE;&amp;#x4E1A;&amp;#x8005;&amp;#x90FD;&amp;#x4F1A;&amp;#x9047;&amp;#x5230;&amp;#x7684;&amp;#x4E09;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;(reference cells),&amp;#x4E92;&amp;#x65A5;(mutual exclusion),&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&amp;#x95EE;&amp;#x9898;(dwarven berserkers)&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x5B66;&amp;#x4E60;&amp;#x4E09;&amp;#x4E2A;&amp;#x8F85;&amp;#x52A9;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x672A;&amp;#x6765;(futures),&amp;#x627F;&amp;#x8BFA;(promises),&amp;#x5EF6;&amp;#x671F;(delays)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrency and Parallelism Concepts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&quot;&gt;&lt;a href=&quot;#&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&quot;&gt;&lt;/a&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x6982;&amp;#x5FF5;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Concurrent and parallel programming involves a lot of messy details at all levels of program execution, from the hardware to the operating system to programming language libraries to the code that springs from your heart and lands in your editor. But before you worry your head with any of those details, in this section I&amp;#x2019;ll walk through the high-level concepts that surround concurrency and parallelism.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#x5728;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5C42;&amp;#x6B21;&amp;#x4E0A;&amp;#x90FD;&amp;#x6D89;&amp;#x53CA;&amp;#x5927;&amp;#x91CF;&amp;#x4E71;&amp;#x4E03;&amp;#x516B;&amp;#x7CDF;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF1A;&amp;#x4ECE;&amp;#x786C;&amp;#x4EF6;&amp;#x5230;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#xFF0C;&amp;#x5230;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x5E93;&amp;#xFF0C;&amp;#x5230;&amp;#x4F60;&amp;#x7F16;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x5728;&amp;#x8003;&amp;#x8651;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC6;&amp;#x8282;&amp;#x524D;&amp;#xFF0C;&amp;#x5148;&amp;#x9886;&amp;#x7565;&amp;#x4E00;&amp;#x4E0B;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x9AD8;&amp;#x5C42;&amp;#x6B21;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Managing Multiple Tasks vs. Executing Tasks Simultaneously&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;a href=&quot;#&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;/a&gt;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0E;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4EFB;&amp;#x52A1;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Concurrency&lt;/em&gt; refers to managing more than one task at the same time. &lt;em&gt;Task&lt;/em&gt; just means &amp;#x201C;something that needs to get done,&amp;#x201D; and it doesn&amp;#x2019;t imply anything regarding implementation in your hardware or software. We can illustrate concurrency with the song &amp;#x201C;Telephone&amp;#x201D; by Lady Gaga. Gaga sings,&lt;br&gt;I will put down this drink to text you, then put my phone away and continue drinking, eh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x5E76;&amp;#x53D1;&lt;/em&gt; &amp;#x6307;&amp;#x540C;&amp;#x65F6;&amp;#x7BA1;&amp;#x7406;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;em&gt;&amp;#x4EFB;&amp;#x52A1;&lt;/em&gt; &amp;#x6307;&amp;#x201C;&amp;#x9700;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x201D;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E0D;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x4EFB;&amp;#x4F55;&amp;#x8F6F;&amp;#x4EF6;&amp;#x6216;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x76F8;&amp;#x5173;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;Lady Gaga&amp;#x7684;&amp;#x6B4C;&amp;#x201C;Telephone&amp;#x201D;&amp;#x6F14;&amp;#x793A;&amp;#x5E76;&amp;#x53D1;&amp;#x3002;&amp;#x5979;&amp;#x5531;&amp;#x5230;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x5C06;&amp;#x653E;&amp;#x4E0B;&amp;#x996E;&amp;#x6599;&amp;#xFF0C;&amp;#x7ED9;&amp;#x4F60;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x653E;&amp;#x4E0B;&amp;#x7535;&amp;#x8BDD;&amp;#xFF0C;&amp;#x7EE7;&amp;#x7EED;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this hypothetical universe, Lady Gaga is managing two tasks: drinking and texting. However, she is not executing both tasks at the same time. Instead, she&amp;#x2019;s switching between the two, or &lt;em&gt;interleaving&lt;/em&gt;. Note that, while interleaving, you don&amp;#x2019;t have to fully complete a task before switching: Gaga could type one word, put down her phone, pick up her drink and take a sip, and then switch back to her phone and type another word.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5047;&amp;#x60F3;&amp;#x7684;&amp;#x4E16;&amp;#x754C;&amp;#x91CC;&amp;#xFF0C;Lady Gaga&amp;#x6B63;&amp;#x5728;&amp;#x7BA1;&amp;#x7406;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x548C;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x3002;&amp;#x4F46;&amp;#x5979;&amp;#x4E0D;&amp;#x662F;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x800C;&amp;#x662F;&amp;#x5728;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x95F4;&amp;#x5207;&amp;#x6362;&amp;#x6216; &lt;em&gt;&amp;#x4EA4;&amp;#x66FF;&lt;/em&gt;&amp;#x3002;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x4EA4;&amp;#x66FF;&amp;#x8FDB;&amp;#x884C;&amp;#x65F6;&amp;#xFF0C;&amp;#x5207;&amp;#x6362;&amp;#x524D;&amp;#x4E0D;&amp;#x5FC5;&amp;#x5B8C;&amp;#x5168;&amp;#x5B8C;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;Gaga&amp;#x53EF;&amp;#x4EE5;&amp;#x8F93;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x8BCD;&amp;#xFF0C;&amp;#x653E;&amp;#x4E0B;&amp;#x7535;&amp;#x8BDD;&amp;#xFF0C;&amp;#x62FF;&amp;#x8D77;&amp;#x996E;&amp;#x6599;&amp;#x559D;&amp;#x4E00;&amp;#x53E3;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x62FF;&amp;#x8D77;&amp;#x7535;&amp;#x8BDD;&amp;#x8F93;&amp;#x5165;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x8BCD;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Parallelism&lt;/em&gt; refers to executing more than one task at the same time. If Madame Gaga were to execute her two tasks in parallel, she would sing,&lt;/p&gt;
&lt;p&gt;I can text you with one hand while I use the other to drink, eh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x5E76;&amp;#x884C;&lt;/em&gt; &amp;#x6307;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x5982;&amp;#x679C;Gaga&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5979;&amp;#x5C06;&amp;#x5531;&amp;#x5230;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x80FD;&amp;#x7528;&amp;#x4E00;&amp;#x53EA;&amp;#x624B;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x7528;&amp;#x53E6;&amp;#x4E00;&amp;#x53EA;&amp;#x624B;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Parallelism is a subclass of concurrency: before you execute multiple tasks simultaneously, you first have to manage multiple tasks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x884C;&amp;#x662F;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B50;&amp;#x7C7B;&amp;#xFF1A;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x7BA1;&amp;#x7406;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure has many features that allow you to achieve parallelism easily. While the Lady Gaga system achieves parallelism by simultaneously executing tasks on multiple hands, computer systems generally achieve parallelism by simultaneously executing tasks on multiple processors.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x7279;&amp;#x6027;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x5BB9;&amp;#x6613;&amp;#x5730;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x884C;&amp;#x3002;Lady Gaga&amp;#x5728;&amp;#x4E24;&amp;#x53EA;&amp;#x624B;&amp;#x4E0A;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x5E76;&amp;#x884C;&amp;#x3002;&amp;#x4E0E;&amp;#x6B64;&amp;#x76F8;&amp;#x6BD4;&amp;#xFF0C;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x884C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x901A;&amp;#x5E38;&amp;#x662F;&amp;#xFF1A;&amp;#x5728;&amp;#x591A;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s important to distinguish parallelism from distribution. Distributed computing is a special version of parallel computing where the processors are in different computers and tasks are distributed to computers over a network. It&amp;#x2019;d be like Lady Gaga asking Beyonc&amp;#xE9;, &amp;#x201C;Please text this guy while I drink.&amp;#x201D; Although you can do distributed programming in Clojure with the aid of libraries, this book covers only parallel programming, and here I&amp;#x2019;ll use &lt;em&gt;parallel&lt;/em&gt; to refer only to cohabiting processors. If you&amp;#x2019;re interested in distributed programming, check out Kyle Kingsbury&amp;#x2019;s Call Me Maybe series at &lt;a href=&quot;https://aphyr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aphyr.com/&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x533A;&amp;#x5206;&amp;#x5E76;&amp;#x884C;&amp;#x4E0E;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x8BA1;&amp;#x7B97;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x3002;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x8BA1;&amp;#x7B97;&amp;#x662F;&amp;#x5E76;&amp;#x884C;&amp;#x8BA1;&amp;#x7B97;&amp;#x7684;&amp;#x7279;&amp;#x6B8A;&amp;#x7248;&amp;#x672C;&amp;#xFF0C;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x8BA1;&amp;#x7B97;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5904;&amp;#x4E8E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4EFB;&amp;#x52A1;&amp;#x88AB;&amp;#x5206;&amp;#x914D;&amp;#x5230;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E0A;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x4E0A;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;Lady Gaga&amp;#x8BF7;&amp;#x6C42;Beyonc&amp;#xE9;&amp;#xFF0C;&amp;#x201C;&amp;#x6211;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x8BF7;&amp;#x7ED9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EBA;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x201D;&amp;#x3002;&amp;#x867D;&amp;#x7136;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5E93;&amp;#x5728;Clojure&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x7F16;&amp;#x7A0B;&amp;#xFF0C;&amp;#x672C;&amp;#x4E66;&amp;#x53EA;&amp;#x8986;&amp;#x76D6;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14; &lt;em&gt;&amp;#x5E76;&amp;#x884C;&lt;/em&gt; &amp;#x53EA;&amp;#x7528;&amp;#x6765;&amp;#x6307;&amp;#x540C;&amp;#x4E00;&amp;#x53F0;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x5185;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;&amp;#x5206;&amp;#x5E03;&amp;#x5F0F;&amp;#x7F16;&amp;#x7A0B;&amp;#x611F;&amp;#x5174;&amp;#x8DA3;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x53BB;&amp;#x770B; &lt;a href=&quot;https://aphyr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://aphyr.com/&lt;/a&gt; &amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blocking and Asynchronous Tasks&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;a href=&quot;#&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;/a&gt;&amp;#x963B;&amp;#x585E;&amp;#x4E0E;&amp;#x5F02;&amp;#x6B65;&amp;#x4EFB;&amp;#x52A1;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One of the major use cases for concurrent programming is for blocking operations. Blocking really just means waiting for an operation to finish. You&amp;#x2019;ll most often hear it used in relation to I/O operations, like reading a file or waiting for an HTTP request to finish. Let&amp;#x2019;s examine this using the concurrent Lady Gaga example.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3B;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x5408;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x963B;&amp;#x585E;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#x662F;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&amp;#x5728;I/O&amp;#x76F8;&amp;#x5173;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6587;&amp;#x4EF6;&amp;#x8BFB;&amp;#x53D6;&amp;#x6216;&amp;#x7B49;&amp;#x5F85;HTTP&amp;#x8BF7;&amp;#x6C42;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x7ECF;&amp;#x5E38;&amp;#x542C;&amp;#x8BF4;&amp;#x963B;&amp;#x585E;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x7528;&amp;#x5E76;&amp;#x884C;Lady Gaga&amp;#x4E3E;&amp;#x4F8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If Lady Gaga texts her interlocutor and then stands there with her phone in her hand, staring at the screen for a response and not drinking, then you would say that the &lt;em&gt;read next text message&lt;/em&gt; operation is blocking and that these tasks are executing &lt;em&gt;synchronously&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;Lady Gaga&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x7ED9;&amp;#x5BF9;&amp;#x8BDD;&amp;#x8005;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7AD9;&amp;#x5728;&amp;#x90A3;&amp;#xFF0C;&amp;#x624B;&amp;#x91CC;&amp;#x62FF;&amp;#x7740;&amp;#x624B;&amp;#x673A;&amp;#xFF0C;&amp;#x76EF;&amp;#x7740;&amp;#x5C4F;&amp;#x5E55;&amp;#x7B49;&amp;#x54CD;&amp;#x5E94;&amp;#xFF0C;&amp;#x4E0D;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF4; &lt;em&gt;&amp;#x8BFB;&amp;#x4E0B;&amp;#x4E00;&amp;#x6761;&amp;#x77ED;&amp;#x4FE1;&lt;/em&gt; &amp;#x64CD;&amp;#x4F5C;&amp;#x662F;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F; &lt;em&gt;&amp;#x540C;&amp;#x6B65;&lt;/em&gt; &amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If, instead, she tucks her phone away so she can drink until it alerts her by beeping or vibrating, then the &lt;em&gt;read next text message&lt;/em&gt; task is not blocking and you would say she&amp;#x2019;s handling the task &lt;em&gt;asynchronously&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E3A;&amp;#x4E86;&amp;#x80FD;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#xFF0C;&amp;#x5979;&amp;#x628A;&amp;#x624B;&amp;#x673A;&amp;#x653E;&amp;#x5728;&amp;#x4E00;&amp;#x8FB9;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x624B;&amp;#x673A;&amp;#x54CD;&amp;#x94C3;&amp;#x6216;&amp;#x9707;&amp;#x52A8;&amp;#x63D0;&amp;#x9192;&amp;#x5979;&amp;#x3002;&amp;#x90A3;&amp;#x4E48; &lt;em&gt;&amp;#x8BFB;&amp;#x4E0B;&amp;#x4E00;&amp;#x6761;&amp;#x77ED;&amp;#x4FE1;&lt;/em&gt; &amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x975E;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F; &lt;em&gt;&amp;#x5F02;&amp;#x6B65;&lt;/em&gt; &amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrent Programming and Parallel Programming&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Concurrent programming and parallel programming refer to techniques for decomposing a task into subtasks that can execute in parallel and managing the risks that arise when your program executes more than one task at the same time. For the rest of the chapter, I&amp;#x2019;ll use the two terms interchangeably because the risks are pretty much the same for both.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#x6307;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6280;&amp;#x672F;(&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x53EF;&amp;#x4EE5;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x5B50;&amp;#x4EFB;&amp;#x52A1;)&amp;#xFF0C;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x98CE;&amp;#x9669;&amp;#x6280;&amp;#x672F;(&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x65F6;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x98CE;&amp;#x9669;)&amp;#x3002;&amp;#x672C;&amp;#x7AE0;&amp;#x7684;&amp;#x5269;&amp;#x4F59;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C5E;&amp;#x4E8E;&amp;#x53EF;&amp;#x4EE5;&amp;#x4EA4;&amp;#x6362;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F7F;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&amp;#x98CE;&amp;#x9669;&amp;#x51E0;&amp;#x4E4E;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To better understand those risks and how Clojure helps you avoid them, let&amp;#x2019;s examine how concurrency and parallelism are implemented in Clojure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x66F4;&amp;#x597D;&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#x548C;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x770B;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x53D1;&amp;#x4E0E;&amp;#x5E76;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure Implementation: JVM Threads&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;Clojure&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;JVM&amp;#x7EBF;&amp;#x7A0B;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ve been using the term task in an abstract sense to refer to a series of related operations without regard for how a computer might implement the task concept. For example, texting is a task that consists of a series of related operations that are totally separate from the operations involved in pouring a drink into your face.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x4E3A;&amp;#x6B62;&amp;#xFF0C;&amp;#x6211;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x4EE5;&amp;#x4E00;&amp;#x79CD;&amp;#x62BD;&amp;#x8C61;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x52A1;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BCD;&amp;#xFF0C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x6307;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x76F8;&amp;#x5173;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x4E0E;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x65E0;&amp;#x5173;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x53D1;&amp;#x77ED;&amp;#x4FE1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7531;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x76F8;&amp;#x5173;&amp;#x64CD;&amp;#x4F5C;&amp;#x6784;&amp;#x6210;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E0E;&amp;#x559D;&amp;#x996E;&amp;#x6599;&amp;#x7684;&amp;#x90A3;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#x5B8C;&amp;#x5168;&amp;#x5206;&amp;#x5F00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Clojure, you can think of your normal, &lt;em&gt;serial&lt;/em&gt; code as a sequence of tasks. You indicate that tasks can be performed concurrently by placing them on JVM &lt;em&gt;threads&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;Clojure&amp;#x91CC;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FDE;&amp;#x7EED;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F53;&amp;#x6210;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x653E;&amp;#x5728;JVM&amp;#x7EBF;&amp;#x7A0B;&amp;#x91CC;&amp;#xFF0C;&amp;#x8868;&amp;#x660E;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EFB;&amp;#x52A1;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What&amp;#x2019;s a Thread?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF1F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;m glad you asked! A thread is a subprogram. A program can have many threads, and each thread executes its own set of instructions while enjoying shared access to the program&amp;#x2019;s state.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x9AD8;&amp;#x5174;&amp;#x4F60;&amp;#x95EE;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF01;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x5B50;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x7A0B;&amp;#x5E8F;&amp;#x80FD;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x96C6;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x62E5;&amp;#x6709;&amp;#x5BF9;&amp;#x7A0B;&amp;#x5E8F;&amp;#x72B6;&amp;#x6001;&amp;#x5171;&amp;#x540C;&amp;#x7684;&amp;#x8BBF;&amp;#x95EE;&amp;#x6743;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread management functionality can exist at multiple levels in a computer. For example, the operating system kernel typically provides system calls to create and manage threads. The JVM provides its own platform-independent thread management functionality, and since Clojure programs run in the JVM, they use JVM threads. You&amp;#x2019;ll learn more about the JVM in Chapter 12.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7684;&amp;#x5F88;&amp;#x591A;&amp;#x5C42;&amp;#x6B21;&amp;#x90FD;&amp;#x6709;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7BA1;&amp;#x7406;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x64CD;&amp;#x4F5C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5185;&amp;#x6838;&amp;#x901A;&amp;#x5E38;&amp;#x63D0;&amp;#x4F9B;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8C03;&amp;#x7528;&amp;#x7528;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;JVM&amp;#x63D0;&amp;#x4F9B;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x72EC;&amp;#x7ACB;&amp;#x4E8E;&amp;#x5E73;&amp;#x53F0;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7BA1;&amp;#x7406;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;Clojure&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#x5728;JVM&amp;#x91CC;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can think of a thread as an actual, physical piece of thread that strings together a sequence of instructions. In my mind, the instructions are marshmallows, because marshmallows are delicious. The processor executes these instructions in order. I picture this as an alligator consuming the instructions, because alligators love marsh&amp;#xAD;mallows (true fact!). So executing a program looks like a bunch of marshmallows strung out on a line with an alligator traveling down the line and eating them one by one. Figure 9-1 shows this model for a single-core processor executing a single-threaded program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x60F3;&amp;#x8C61;&amp;#x6210;&amp;#x4E00;&amp;#x6839;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x7EBF;&amp;#xFF0C;&amp;#x628A;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x6307;&amp;#x4EE4;&amp;#x4E32;&amp;#x4E86;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x5728;&amp;#x6211;&amp;#x7684;&amp;#x8111;&amp;#x6D77;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6307;&amp;#x4EE4;&amp;#x662F;&amp;#x8F6F;&amp;#x7CD6;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8F6F;&amp;#x7CD6;&amp;#x5F88;&amp;#x7F8E;&amp;#x5473;&amp;#x3002;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x9CC4;&amp;#x9C7C;&amp;#x6328;&amp;#x4E2A;&amp;#x5403;&amp;#x6389;&amp;#x4E32;&amp;#x6210;&amp;#x4E00;&amp;#x4E32;&amp;#x7684;&amp;#x8F6F;&amp;#x7CD6;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x56FE;9-1&amp;#x663E;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5355;&amp;#x6838;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6267;&amp;#x884C;&amp;#x5355;&amp;#x4E00;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6A21;&amp;#x578B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-1&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-1.png&quot; alt=&quot;9-1&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A thread can &lt;em&gt;spawn&lt;/em&gt; a new thread to execute tasks concurrently. In a single-processor system, the processor switches back and forth between the threads (interleaving). Here&amp;#x2019;s where potential concurrency issues get introduced. Although the processor executes the instructions on each thread in order, it makes no guarantees about when it will switch back and forth between threads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD; &lt;em&gt;&amp;#x751F;&amp;#x4EA7;&lt;/em&gt; &amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7528;&amp;#x4E8E;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x5728;&amp;#x5355;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5728;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6765;&amp;#x56DE;&amp;#x5207;&amp;#x6362;&amp;#x3002;&amp;#x6F5C;&amp;#x5728;&amp;#x7684;&amp;#x5E76;&amp;#x884C;&amp;#x95EE;&amp;#x9898;&amp;#x7531;&amp;#x6B64;&amp;#x4EA7;&amp;#x751F;&amp;#x3002;&amp;#x5C3D;&amp;#x7BA1;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x4FDD;&amp;#x8BC1;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x8FDB;&amp;#x884C;&amp;#x5207;&amp;#x6362;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 9-2 shows an illustration of two threads, A and B, and a timeline of how their instructions could be executed. I&amp;#x2019;ve shaded the instructions on thread B to help distinguish them from the instructions on thread A.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;9-2&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;A&amp;#x548C;B&amp;#xFF0C;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x7EBF;&amp;#x3002;&amp;#x7EBF;&amp;#x7A0B;B&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x753B;&amp;#x4E0A;&amp;#x4E86;&amp;#x9634;&amp;#x5F71;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E0E;A&amp;#x533A;&amp;#x5206;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-2&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-2.png&quot; alt=&quot;&amp;#x56FE;9-2&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that this is just one possible order of instruction execution. The processor could also have executed the instructions in the order A1, A2, A3, B1, A4, B2, B3 for example. This makes the program &lt;em&gt;nondeterministic&lt;/em&gt;. You can&amp;#x2019;t know beforehand what the result will be because you can&amp;#x2019;t know the execution order, and different execution orders can yield different results.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x6307;&amp;#x4EE4;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x4E5F;&amp;#x53EF;&amp;#x80FD;&amp;#x6309;&amp;#x7167;&amp;#xFF0C;A1, A2, A3, B1, A4, B2, B3&amp;#xFF0C;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&amp;#x8FD9;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53D8;&amp;#x5F97; &lt;em&gt;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&lt;/em&gt; &amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E0D;&amp;#x80FD;&amp;#x786E;&amp;#x5B9A;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x65E0;&amp;#x6CD5;&amp;#x9884;&amp;#x5148;&amp;#x77E5;&amp;#x9053;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x53EF;&amp;#x80FD;&amp;#x4EA7;&amp;#x751F;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This example shows concurrent execution on a single processor through interleaving, whereas a multi-core system assigns a thread to each core, allowing the computer to execute more than one thread simultaneously. Each core executes its thread&amp;#x2019;s instructions in order, as shown in Figure 9-3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x5355;&amp;#x6838;&amp;#x7CFB;&amp;#x7EDF;&amp;#x901A;&amp;#x8FC7;&amp;#x7A7F;&amp;#x63D2;&amp;#x5B9E;&amp;#x73B0;&amp;#x5E76;&amp;#x53D1;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x800C;&amp;#x591A;&amp;#x6838;&amp;#x7CFB;&amp;#x7EDF;&amp;#x628A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5206;&amp;#x914D;&amp;#x5230;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x4E0A;&amp;#x4F7F;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x80FD;&amp;#x540C;&amp;#x65F6;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&amp;#x5982;&amp;#x56FE;9-3&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-3&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-3.png&quot; alt=&quot;9-3&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As with interleaving on a single core, there are no guarantees for the overall execution order, so the program is nondeterministic. When you add a second thread to a program, it becomes nondeterministic, and this makes it possible for your program to fall prey to three kinds of problems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x540C;&amp;#x5355;&amp;#x6838;&amp;#x4E0A;&amp;#x7A7F;&amp;#x63D2;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x6574;&amp;#x4F53;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x4E0D;&amp;#x80FD;&amp;#x786E;&amp;#x5B9A;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7A0B;&amp;#x5E8F;&amp;#x662F;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x7684;&amp;#x3002;&amp;#x5F53;&amp;#x5F80;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x52A0;&amp;#x5165;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53D8;&amp;#x7684;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x4E86;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BB9;&amp;#x6613;&amp;#x53D7;&amp;#x5230;&amp;#x4E09;&amp;#x7C7B;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x5F71;&amp;#x54CD;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Three Goblins: Reference Cells, Mutual Exclusion, and Dwarven Berserkers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot;&gt;&lt;a href=&quot;#&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&quot;&gt;&lt;/a&gt;&amp;#x4E09;&amp;#x53EA;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;There are three central challenges in concurrent programming, also known as the &lt;em&gt;The Three Concurrency Goblins&lt;/em&gt;. To see why these are scary, imagine that the program in the image in Figure 9-3 includes the pseudo&amp;#xAD;instructions in Table 9-1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x4E3B;&amp;#x8981;&amp;#x6311;&amp;#x6218;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EB; &lt;em&gt;&amp;#x4E09;&amp;#x53EA;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&lt;/em&gt; &amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BF4;&amp;#x660E;&amp;#x5176;&amp;#x4EE4;&amp;#x4EBA;&amp;#x56F0;&amp;#x6270;&amp;#x4E4B;&amp;#x5904;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x56FE;9-3&amp;#x5305;&amp;#x542B;&amp;#x8868;9-1&amp;#x7684;&amp;#x4F2A;&amp;#x6307;&amp;#x4EE4;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x8868;9-1&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ID&lt;/th&gt;
&lt;th&gt;instruction&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A1&lt;/td&gt;
&lt;td&gt;WRITE X = 0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A2&lt;/td&gt;
&lt;td&gt;READ X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A3&lt;/td&gt;
&lt;td&gt;WRITE X = X + 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B1&lt;/td&gt;
&lt;td&gt;READ X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B2&lt;/td&gt;
&lt;td&gt;WRITE X = X + 1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;If the processor follows the order A1, A2, A3, B1, B2, then &lt;code&gt;X&lt;/code&gt; will have a value of &lt;code&gt;2&lt;/code&gt;, as you&amp;#x2019;d expect. But if it follows the order A1, A2, B1, A3, B2, &lt;code&gt;X&lt;/code&gt;&amp;#x2019;s value will be &lt;code&gt;1&lt;/code&gt;, as you can see in Figure 9-4.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x987A;&amp;#x5E8F;&amp;#x662F;:A1, A2, A3, B1, B2,&amp;#x90A3;&amp;#x4E48;&lt;code&gt;x&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#x5C06;&amp;#x662F;&lt;code&gt;2&lt;/code&gt;,&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x613F;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x987A;&amp;#x5E8F;&amp;#x662F;:A1, A2, B1, A3, B2,&lt;code&gt;x&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#x5C06;&amp;#x662F;&lt;code&gt;1&lt;/code&gt;,&amp;#x5982;&amp;#x56FE;9-4&amp;#x6240;&amp;#x793A;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-4 &amp;#x4E24;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x4EA4;&amp;#x4E92;&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-4.png&quot; alt=&quot;9-4&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&amp;#x2019;ll call this the &lt;em&gt;reference cell&lt;/em&gt; problem (the first Concurrency Goblin). The reference cell problem occurs when two threads can read and write to the same location, and the value at the location depends on the order of the reads and writes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x7BA1;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53EB; &lt;em&gt;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&lt;/em&gt; &amp;#x95EE;&amp;#x9898;(&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;)&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x95EE;&amp;#x9898;&amp;#x53D1;&amp;#x751F;&amp;#x5728;&amp;#xFF1A;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x8BFB;&amp;#x5199;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7684;&amp;#x503C;&amp;#x53D6;&amp;#x51B3;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5199;&amp;#x987A;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The second Concurrency Goblin is mutual exclusion. Imagine two threads, each trying to write a spell to a file. Without any way to claim exclusive write access to the file, the spell will end up garbled because the write instructions will be interleaved. Consider the following two spells:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#x662F;&amp;#x4E92;&amp;#x65A5;&amp;#x3002;&amp;#x5047;&amp;#x8BBE;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x90FD;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5411;&amp;#x4E00;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x5199;&amp;#x5165;&amp;#x5185;&amp;#x5BB9;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x65B9;&amp;#x6CD5;&amp;#x83B7;&amp;#x5F97;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x72EC;&amp;#x5360;&amp;#x5199;&amp;#x6743;&amp;#x9650;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x5199;&amp;#x6307;&amp;#x4EE4;&amp;#x7A7F;&amp;#x63D2;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x6587;&amp;#x4EF6;&amp;#x5185;&amp;#x5BB9;&amp;#x5C06;&amp;#x662F;&amp;#x6DF7;&amp;#x4E71;&amp;#x7684;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x4E24;&amp;#x6BB5;&amp;#x6587;&amp;#x5B57;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the power invested in me&lt;br&gt;by the state of California,&lt;br&gt;I now pronounce you man and wife&lt;/p&gt;
&lt;p&gt;Thunder, lightning, wind, and rain,&lt;br&gt;a delicious sandwich, I summon again&lt;/p&gt;
&lt;p&gt;If you write these to a file without mutual exclusion, you could end up with this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5E26;&amp;#x4E92;&amp;#x65A5;&amp;#x5730;&amp;#x5199;&amp;#x5165;&amp;#xFF0C;&amp;#x6700;&amp;#x7EC8;&amp;#x53EF;&amp;#x80FD;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the power invested in me&lt;br&gt;by Thunder, lightning, wind, and rain,&lt;br&gt;the state of California,&lt;br&gt;I now pronounce you a delicious man sandwich, and wife&lt;br&gt;I summon again&lt;/p&gt;
&lt;p&gt;The third Concurrency Goblin is what I&amp;#x2019;ll call the dwarven berserker problem (aka deadlock). Imagine four berserkers sitting around a rough-hewn, circular wooden table comforting each other. &amp;#x201C;I know I&amp;#x2019;m distant toward my children, but I just don&amp;#x2019;t know how to communicate with them,&amp;#x201D; one growls. The rest sip their coffee and nod knowingly, care lines creasing their eye places.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#x662F;&amp;#x77EE;&amp;#x4EBA;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&amp;#x95EE;&amp;#x9898;(&amp;#x5373;&amp;#x6B7B;&amp;#x9501;)&amp;#x3002;&amp;#x60F3;&amp;#x8C61;&amp;#x4E00;&amp;#x4E0B;&amp;#x56DB;&amp;#x4E2A;&amp;#x72C2;&amp;#x66B4;&amp;#x8005;&amp;#x56F4;&amp;#x7740;&amp;#x4E00;&amp;#x4E2A;&amp;#x6728;&amp;#x5934;&amp;#x684C;&amp;#x5B50;&amp;#x804A;&amp;#x5929;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now, as everyone knows, the dwarven berserker ritual for ending a comforting coffee klatch is to pick up their &amp;#x201C;comfort sticks&amp;#x201D; (double-bladed war axes) and scratch each other&amp;#x2019;s backs. One war axe is placed between each pair of dwarves, as shown in Figure 9-5.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x5BF9;&amp;#x77EE;&amp;#x4EBA;&amp;#x4E4B;&amp;#x95F4;&amp;#x90FD;&amp;#x653E;&amp;#x6709;&amp;#x4E00;&amp;#x628A;&amp;#x65A7;&amp;#x5934;&amp;#x3002;&amp;#x5982;&amp;#x56FE;9-5&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-5&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-5.png&quot; alt=&quot;&amp;#x56FE;9-5&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Their ritual proceeds thusly:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pick up the left war axe, when available.&lt;/li&gt;
&lt;li&gt;Pick up the right war axe, when available.&lt;/li&gt;
&lt;li&gt;Comfort your neighbor with vigorous swings of your &amp;#x201C;comfort sticks.&amp;#x201D;&lt;/li&gt;
&lt;li&gt;Release both war axes.&lt;/li&gt;
&lt;li&gt;Repeat.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EEA;&amp;#x5F0F;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x53EF;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x62FF;&amp;#x8D77;&amp;#x5DE6;&amp;#x8FB9;&amp;#x7684;&amp;#x6218;&amp;#x65A7;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x53EF;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x62FF;&amp;#x8D77;&amp;#x53F3;&amp;#x8FB9;&amp;#x7684;&amp;#x6218;&amp;#x65A7;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7528;&amp;#x5B83;&amp;#x4EEC;&amp;#x7ED9;&amp;#x90BB;&amp;#x5C45;&amp;#x6320;&amp;#x75D2;&amp;#x75D2;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x653E;&amp;#x4E0B;&amp;#x4E24;&amp;#x628A;&amp;#x65A7;&amp;#x5934;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x91CD;&amp;#x590D;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Following this ritual, it&amp;#x2019;s entirely possible that all the dwarven berserkers will pick up their left comfort stick and then block indefinitely while waiting for the comfort stick to their right to become available, resulting in deadlock. (By the way, if you want to look into this phenomenon further, it&amp;#x2019;s usually referred to as the dining philosophers problem, but that&amp;#x2019;s a more boring scenario.) This book doesn&amp;#x2019;t discuss deadlock in much detail, but it&amp;#x2019;s good to know the concept and its terminology.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6309;&amp;#x7167;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EEA;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5B8C;&amp;#x5168;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x6240;&amp;#x6709;&amp;#x77EE;&amp;#x4EBA;&amp;#x90FD;&amp;#x4E3E;&amp;#x7740;&amp;#x5DE6;&amp;#x624B;&amp;#x65A7;&amp;#x5934;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7B49;&amp;#x7740;&amp;#x53F3;&amp;#x8FB9;&amp;#x7684;&amp;#x65A7;&amp;#x5934;&amp;#xFF0C;&amp;#x9677;&amp;#x5165;&amp;#x65E0;&amp;#x9650;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x5BFC;&amp;#x81F4;&amp;#x6B7B;&amp;#x9501;&amp;#x3002;(&amp;#x987A;&amp;#x4FBF;&amp;#x63D0;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x7814;&amp;#x7A76;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x901A;&amp;#x5E38;&amp;#x53EB;&amp;#x8FDB;&amp;#x9910;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x5BB6;&amp;#x95EE;&amp;#x9898;)&amp;#x3002;&amp;#x672C;&amp;#x4E66;&amp;#x4E0D;&amp;#x5BF9;&amp;#x6B7B;&amp;#x9501;&amp;#x8FDB;&amp;#x884C;&amp;#x7EC6;&amp;#x8282;&amp;#x8BA8;&amp;#x8BBA;&amp;#xFF0C;&amp;#x4F46;&amp;#x77E5;&amp;#x9053;&amp;#x6982;&amp;#x5FF5;&amp;#x548C;&amp;#x672F;&amp;#x8BED;&amp;#x662F;&amp;#x4EF6;&amp;#x597D;&amp;#x4E8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrent programming has its goblins, but with the right tools, it&amp;#x2019;s manageable and even fun. Let&amp;#x2019;s start looking at the right tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x6709;&amp;#x8FD9;&amp;#x4E9B;&amp;#x54E5;&amp;#x5E03;&amp;#x6797;&amp;#xFF0C;&amp;#x4F46;&amp;#x7528;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x662F;&amp;#x53EF;&amp;#x7BA1;&amp;#x7406;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x3002;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x5F00;&amp;#x59CB;&amp;#x67E5;&amp;#x770B;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures, Delays, and Promises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x672A;&amp;#x6765;-future-&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;-delay-&amp;#x548C;&amp;#x627F;&amp;#x8BFA;-promise&quot;&gt;&lt;a href=&quot;#&amp;#x672A;&amp;#x6765;-future-&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;-delay-&amp;#x548C;&amp;#x627F;&amp;#x8BFA;-promise&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x672A;&amp;#x6765;(future)&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;(delay)&amp;#x548C;&amp;#x627F;&amp;#x8BFA;(promise)&quot;&gt;&lt;/a&gt;&amp;#x672A;&amp;#x6765;(future)&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;(delay)&amp;#x548C;&amp;#x627F;&amp;#x8BFA;(promise)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Futures, delays, and promises are easy, lightweight tools for concurrent programming. In this section, you&amp;#x2019;ll learn how each one works and how to use them together to defend against the reference cell Concurrency Goblin and the mutual exclusion Concurrency Goblin. You&amp;#x2019;ll discover that, although simple, these tools go a long way toward meeting your concurrency needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x8F7B;&amp;#x91CF;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C06;&amp;#x4E86;&amp;#x89E3;&amp;#x4ED6;&amp;#x4EEC;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B66;&amp;#x4E60;&amp;#x5982;&amp;#x4F55;&amp;#x4F7F;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x9632;&amp;#x6B62;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x95EE;&amp;#x9898;&amp;#x548C;&amp;#x4E92;&amp;#x65A5;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5DE5;&amp;#x5177;&amp;#x867D;&amp;#x7136;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x4F46;&amp;#x5BF9;&amp;#x4F60;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x6709;&amp;#x5F88;&amp;#x5927;&amp;#x5E2E;&amp;#x52A9;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They do this by giving you more flexibility than is possible with serial code. When you write serial code, you bind together these three events:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x76F8;&amp;#x6BD4;&amp;#x8FDE;&amp;#x7EED;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E3A;&amp;#x4F60;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x7075;&amp;#x6D3B;&amp;#x6027;&amp;#x3002;&amp;#x5199;&amp;#x8FDE;&amp;#x7EED;&amp;#x4EE3;&amp;#x7801;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x628A;&amp;#x8FD9;&amp;#x4E09;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;&amp;#x4E86;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Task definition&lt;/li&gt;
&lt;li&gt;Task execution&lt;/li&gt;
&lt;li&gt;Requiring the task&amp;#x2019;s result&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&lt;/li&gt;
&lt;li&gt;&amp;#x4EFB;&amp;#x52A1;&amp;#x6267;&amp;#x884C;&lt;/li&gt;
&lt;li&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x679C;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;As an example, look at this hypothetical code, which defines a simple API call task:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5047;&amp;#x5B9A;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x5355;&amp;#x7684;API&amp;#x8C03;&amp;#x7528;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;web-api/get&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:dwarven-beard-waxes&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As soon as Clojure encounters this task definition, it executes it. It also requires the result right now, blocking until the API call finishes. Part of learning concurrent programming is learning to identify when these chronological couplings aren&amp;#x2019;t necessary. Futures, delays, and promises allow you to separate task definition, task execution, and requiring the result. Onward!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x65E6;Clojure&amp;#x9047;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ACB;&amp;#x523B;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4E00;&amp;#x76F4;&amp;#x7B49;&amp;#x5F85;&amp;#x76F4;&amp;#x5230;API&amp;#x8C03;&amp;#x7528;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&amp;#x5B66;&amp;#x4E60;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x9700;&amp;#x8981;&amp;#x5B66;&amp;#x4F1A;&amp;#x8BC6;&amp;#x522B;&amp;#x8FD9;&amp;#x4E9B;&amp;#x65F6;&amp;#x95F4;&amp;#x4E0A;&amp;#x7684;&amp;#x85D5;&amp;#x5408;&amp;#x4F55;&amp;#x65F6;&amp;#x4E0D;&amp;#x662F;&amp;#x5FC5;&amp;#x987B;&amp;#x7684;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x5206;&amp;#x79BB;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x4EFB;&amp;#x52A1;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x548C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x672A;&amp;#x6765;&quot;&gt;&lt;a href=&quot;#&amp;#x672A;&amp;#x6765;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x672A;&amp;#x6765;&quot;&gt;&lt;/a&gt;&amp;#x672A;&amp;#x6765;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;In Clojure, you can use futures to define a task and place it on another thread without requiring the result immediately. You can create a &lt;code&gt;future&lt;/code&gt; with the future macro. Try this in a REPL:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;Clojure&amp;#x4E2D;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x672A;&amp;#x6765;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x628A;&amp;#x5B83;&amp;#x653E;&amp;#x8FDB;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4E0D;&amp;#x7528;&amp;#x9A6C;&amp;#x4E0A;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x7528;&lt;code&gt;future&lt;/code&gt;&amp;#x5B8F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x672A;&amp;#x6765;&amp;#x3002;&amp;#x5728;REPL&amp;#x91CC;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;apos;ll print after 4 seconds&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;apos;ll print immediately&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Thread/sleep&lt;/code&gt; tells the current thread to just sit on its bum and do nothing for the specified number of milliseconds. Normally, if you evaluated &lt;code&gt;Thread/sleep&lt;/code&gt; in your REPL, you wouldn&amp;#x2019;t be able to evaluate any other statements until the REPL was done sleeping; the thread executing your REPL would be blocked. However, &lt;code&gt;future&lt;/code&gt; creates a new thread and places each expression you pass it on the new thread, including &lt;code&gt;Thread/sleep&lt;/code&gt;, allowing the REPL&amp;#x2019;s thread to continue, unblocked.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Thread/sleep&lt;/code&gt;&amp;#x544A;&amp;#x8BC9;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5728;&amp;#x6307;&amp;#x5B9A;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x5185;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x4E0D;&amp;#x5E72;&amp;#x3002;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5728;&amp;#x4F60;&amp;#x7684;REPL&amp;#x91CC;&amp;#x6267;&amp;#x884C;&lt;code&gt;Thread/sleep&lt;/code&gt;,&amp;#x4F60;&amp;#x5C06;&amp;#x65E0;&amp;#x6CD5;&amp;#x6C42;&amp;#x503C;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x53E5;&amp;#xFF0C;sleep&amp;#x7ED3;&amp;#x675F;&amp;#x524D;&amp;#x4F60;&amp;#x7684;REPL&amp;#x90FD;&amp;#x5C06;&amp;#x5904;&amp;#x4E8E;&amp;#x963B;&amp;#x585E;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x4F46;&lt;code&gt;future&lt;/code&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x628A;&amp;#x4F20;&amp;#x7ED9;future&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x90FD;&amp;#x653E;&amp;#x5728;&amp;#x65B0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&lt;code&gt;Thread/sleep&lt;/code&gt;,&amp;#x8FD9;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;REPL&amp;#x7EBF;&amp;#x7A0B;&amp;#x7EE7;&amp;#x7EED;&amp;#xFF0C;&amp;#x4FDD;&amp;#x6301;&amp;#x975E;&amp;#x963B;&amp;#x585E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can use futures to run tasks on a separate thread and then forget about them, but often you&amp;#x2019;ll want to use the result of the task. The &lt;code&gt;future&lt;/code&gt; function returns a reference value that you can use to request the result. The reference is like the ticket that a dry cleaner gives you: at any time you can use it to request your clean dress, but if your dress isn&amp;#x2019;t clean yet, you&amp;#x2019;ll have to wait. Similarly, you can use the reference value to request a future&amp;#x2019;s result, but if the future isn&amp;#x2019;t done computing the result, you&amp;#x2019;ll have to wait.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x672A;&amp;#x6765;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x653E;&amp;#x5728;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4E0D;&amp;#x518D;&amp;#x7BA1;&amp;#x5B83;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x4EFB;&amp;#x52A1;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;code&gt;future&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x50CF;&amp;#x5E72;&amp;#x6D17;&amp;#x5E97;&amp;#x5458;&amp;#x53D1;&amp;#x7ED9;&amp;#x4F60;&amp;#x7684;&amp;#x7968;&amp;#x636E;&amp;#xFF1A;&amp;#x4EFB;&amp;#x4F55;&amp;#x65F6;&amp;#x5019;&amp;#x4F60;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5B83;&amp;#x6765;&amp;#x53D6;&amp;#x56DE;&amp;#x4F60;&amp;#x7684;&amp;#x5E72;&amp;#x51C0;&amp;#x8863;&amp;#x670D;&amp;#xFF0C;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x8863;&amp;#x670D;&amp;#x8FD8;&amp;#x6CA1;&amp;#x6D17;&amp;#x597D;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x7B49;&amp;#x5F85;&amp;#x3002;&amp;#x7C7B;&amp;#x4F3C;&amp;#x5730;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F15;&amp;#x7528;&amp;#x503C;&amp;#x6765;&amp;#x8BF7;&amp;#x6C42;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x8FD8;&amp;#x6CA1;&amp;#x8BA1;&amp;#x7B97;&amp;#x51FA;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x7B49;&amp;#x5F85;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Requesting a future&amp;#x2019;s result is called dereferencing the future, and you do it with either the &lt;code&gt;deref&lt;/code&gt; function or the &lt;code&gt;@&lt;/code&gt; reader macro. A future&amp;#x2019;s result value is the value of the last expression evaluated in its body. A future&amp;#x2019;s body executes only once, and its value gets cached. Try the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x53EB;&amp;#x505A;&amp;#x5BF9;&amp;#x672A;&amp;#x6765;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;defef&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&lt;code&gt;@&lt;/code&gt;&amp;#x8BFB;&amp;#x53D6;&amp;#x5B8F;&amp;#x53D6;&amp;#x503C;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x662F;&amp;#x5176;&amp;#x4E3B;&amp;#x4F53;&amp;#x91CC;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x53EA;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5176;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x8BD5;&amp;#x8BD5;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;this prints once&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;deref: &amp;quot;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;@: &amp;quot;&lt;/span&gt; @result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;this prints once&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; deref: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; @: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that the string &lt;code&gt;&amp;quot;this prints once&amp;quot;&lt;/code&gt; indeed prints only once, even though you dereference the future twice. This shows that the future&amp;#x2019;s body ran only once and the result, &lt;code&gt;2&lt;/code&gt;, got cached.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;this prints once&amp;quot;&lt;/code&gt;&amp;#x786E;&amp;#x5B9E;&amp;#x53EA;&amp;#x6253;&amp;#x5370;&amp;#x4E86;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x4F60;&amp;#x53D6;&amp;#x503C;&amp;#x4E86;&amp;#x4E24;&amp;#x6B21;&amp;#x3002;&amp;#x8FD9;&amp;#x8BF4;&amp;#x660E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x53EA;&amp;#x8FD0;&amp;#x884C;&amp;#x4E86;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x7ED3;&amp;#x679C;,&lt;code&gt;2&lt;/code&gt;&amp;#x88AB;&amp;#x7F13;&amp;#x5B58;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dereferencing a future will block if the future hasn&amp;#x2019;t finished running, like so:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53D6;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x8FD0;&amp;#x884C;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x50CF;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;The result is: &amp;quot;&lt;/span&gt; @result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;It will be at least 3 seconds before I print&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; The result is: 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; It will be at least 3 seconds before I print&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Sometimes you want to place a time limit on how long to wait for a future. To do that, you can pass &lt;code&gt;deref&lt;/code&gt; a number of milliseconds to wait along with the value to return if the &lt;code&gt;deref&lt;/code&gt; times out:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x65F6;&amp;#x95F4;&amp;#x9650;&amp;#x5236;&amp;#xFF0C;&amp;#x9650;&amp;#x5236;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x4E0A;&amp;#x9650;&amp;#x3002;&amp;#x7ED9;&lt;code&gt;defef&lt;/code&gt;&amp;#x4F20;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B49;&amp;#x5F85;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x5373;&amp;#x53EF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code tells &lt;code&gt;deref&lt;/code&gt; to return the value &lt;code&gt;5&lt;/code&gt; if the future doesn&amp;#x2019;t return a value within 10 milliseconds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x4E3A;&lt;code&gt;defef&lt;/code&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;10&amp;#x6BEB;&amp;#x79D2;&amp;#x7684;&amp;#x7B49;&amp;#x5F85;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x548C;&lt;code&gt;5&lt;/code&gt;&amp;#xFF0C;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5230;&amp;#x671F;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, you can interrogate a future using &lt;code&gt;realized?&lt;/code&gt; to see if it&amp;#x2019;s done running:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;code&gt;realized?&lt;/code&gt;&amp;#x67E5;&amp;#x8BE2;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x662F;&amp;#x5426;&amp;#x8FD0;&amp;#x884C;&amp;#x5B8C;&amp;#x6210;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;realized?&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [f (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  @f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;realized?&lt;/span&gt; f))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures are a dead-simple way to sprinkle some concurrency on your program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#x662F;&amp;#x8D85;&amp;#x7EA7;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On their own, they give you the power to chuck tasks onto other threads, which can make your program more efficient. They also let your program behave more flexibly by giving you control over when a task&amp;#x2019;s result is required.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C31;&amp;#x5176;&amp;#x672C;&amp;#x8EAB;&amp;#x800C;&amp;#x8A00;&amp;#xFF0C;&amp;#x4ED6;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x653E;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x66F4;&amp;#x9AD8;&amp;#x6548;&amp;#x3002;&amp;#x4E5F;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x63A7;&amp;#x5236;&amp;#x4F55;&amp;#x65F6;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x66F4;&amp;#x52A0;&amp;#x7075;&amp;#x6D3B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you dereference a future, you indicate that the result is required right now and that evaluation should stop until the result is obtained. You&amp;#x2019;ll see how this can help you deal with the mutual exclusion problem in just a bit.  Alternatively, you can ignore the result. For example, you can use futures to write to a log file asynchronously, in which case you don&amp;#x2019;t need to dereference the future to get any value back.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x53D6;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x73B0;&amp;#x5728;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&amp;#x6C42;&amp;#x503C;&amp;#x4F1A;&amp;#x505C;&amp;#x6B62;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x83B7;&amp;#x5F97;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x4ED6;&amp;#x5982;&amp;#x4F55;&amp;#x5E2E;&amp;#x4F60;&amp;#x5904;&amp;#x7406;&amp;#x4E92;&amp;#x65A5;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5FFD;&amp;#x7565;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x672A;&amp;#x6765;&amp;#x5F02;&amp;#x6B65;&amp;#x5730;&amp;#x5199;&amp;#x65E5;&amp;#x5FD7;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x53D6;&amp;#x56DE;&amp;#x4EFB;&amp;#x4F55;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The flexibility that futures give you is very cool. Clojure also allows you to treat task definition and requiring the result independently with delays and promises.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x7684;&amp;#x7075;&amp;#x6D3B;&amp;#x6027;&amp;#x5F88;&amp;#x9177;&amp;#x3002;Clojure&amp;#x4E5F;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7528;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x5206;&amp;#x522B;&amp;#x5904;&amp;#x7406;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B9A;&amp;#x4E49;&amp;#x548C;&amp;#x7ED3;&amp;#x679C;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Delays&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5EF6;&amp;#x671F;&quot;&gt;&lt;a href=&quot;#&amp;#x5EF6;&amp;#x671F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EF6;&amp;#x671F;&quot;&gt;&lt;/a&gt;&amp;#x5EF6;&amp;#x671F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Delays&lt;/code&gt; allow you to define a task without having to execute it or require the result immediately. You can create a delay using &lt;code&gt;delay&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;Delays&lt;/code&gt;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x7528;&amp;#x7ACB;&amp;#x523B;&amp;#x6267;&amp;#x884C;&amp;#x5E76;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x7528;&lt;code&gt;delay&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x5EF6;&amp;#x671F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; jackson-5-delay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;delay&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [message &lt;span class=&quot;string&quot;&gt;&amp;quot;Just call my name and I&amp;apos;ll be there&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;First deref:&amp;quot;&lt;/span&gt; message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           message)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, nothing is printed, because we haven&amp;#x2019;t yet asked the &lt;code&gt;let&lt;/code&gt; form to be evaluated. You can evaluate the delay and get its result by dereferencing it or by using &lt;code&gt;force&lt;/code&gt;. &lt;code&gt;force&lt;/code&gt; behaves identically to &lt;code&gt;deref&lt;/code&gt; in that it communicates more clearly that you&amp;#x2019;re causing a task to start as opposed to waiting for a task to finish:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x6CA1;&amp;#x6253;&amp;#x5370;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x6CA1;&amp;#x8BA9;&lt;code&gt;let&lt;/code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x6216;&amp;#x7528;&lt;code&gt;force&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x5EF6;&amp;#x671F;&amp;#x6C42;&amp;#x503C;&amp;#x5E76;&amp;#x5F97;&amp;#x5230;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;code&gt;force&lt;/code&gt;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x4E0E;&lt;code&gt;defef&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x5730;&amp;#x8868;&amp;#x660E;&amp;#x4F60;&amp;#x4F7F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B8C;&amp;#x6210;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;force&lt;/span&gt;&lt;/span&gt; jackson-5-delay)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; First deref: Just call my name and I&amp;apos;ll be there&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Just call my name and I&amp;apos;ll be there&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Like futures, a delay is run only once and its result is cached. Subsequent dereferencing will return the Jackson 5 message without printing anything:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x672A;&amp;#x6765;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x53EA;&amp;#x8FD0;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x53D6;&amp;#x503C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6253;&amp;#x5370;&amp;#x4EFB;&amp;#x4F55;&amp;#x4E1C;&amp;#x897F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@jackson-5-delay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; &amp;quot;Just call my name and I&amp;apos;ll be there&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;One way you can use a delay is to fire off a statement the first time one future out of a group of related futures finishes. For example, pretend your app uploads a set of headshots to a headshot-sharing site and notifies the owner as soon as the first one is up, as in the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5EF6;&amp;#x671F;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x6CD5;&amp;#x662F;&amp;#xFF1A;&amp;#x5F53;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x4E00;&amp;#x7EC4;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#x4E2D;&amp;#x7684;&amp;#x67D0;&amp;#x4E2A;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#xFF0C;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x7684;app&amp;#x4E0A;&amp;#x4F20;&amp;#x4E00;&amp;#x7EC4;&amp;#x5934;&amp;#x50CF;&amp;#x7167;&amp;#x7247;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x5934;&amp;#x50CF;&amp;#x7167;&amp;#x7247;&amp;#x5206;&amp;#x4EAB;&amp;#x7F51;&amp;#x7AD9;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&amp;#x5F53;&amp;#x7B2C;&amp;#x4E00;&amp;#x5F20;&amp;#x4E0A;&amp;#x4F20;&amp;#x5B8C;&amp;#x6210;&amp;#x65F6;&amp;#x901A;&amp;#x77E5;&amp;#x7528;&amp;#x6237;&amp;#xFF0C;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; gimli-headshots [&lt;span class=&quot;string&quot;&gt;&amp;quot;serious.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;fun.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;playful.jpg&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; email-user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [email-address]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sending headshot notification to&amp;quot;&lt;/span&gt; email-address))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; upload-document&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Needs to be implemented&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [headshot]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [notify (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;delay&lt;/span&gt;&lt;/span&gt; &amp;#x278A;(&lt;span class=&quot;name&quot;&gt;email-user&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;and-my-axe@gmail.com&amp;quot;&lt;/span&gt;))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [headshot gimli-headshots]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;upload-document&lt;/span&gt; headshot)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#x278B;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;force&lt;/span&gt;&lt;/span&gt; notify))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you define a vector of headshots to upload (&lt;code&gt;gimli-headshots&lt;/code&gt;) and two functions (&lt;code&gt;email-user&lt;/code&gt; and &lt;code&gt;upload-document&lt;/code&gt;) to pretend-perform the two operations. Then you use &lt;code&gt;let&lt;/code&gt; to bind &lt;code&gt;notify&lt;/code&gt; to a delay. The body of the delay, &lt;code&gt;(email-user &amp;quot;and-my-axe@gmail.com&amp;quot;)&lt;/code&gt; &amp;#x278A;, isn&amp;#x2019;t evaluated when the delay is created. Instead, it gets evaluated the first time one of the futures created by the &lt;code&gt;doseq&lt;/code&gt; form evaluates (&lt;code&gt;force notify&lt;/code&gt;) &amp;#x278B;. Even though &lt;code&gt;(force notify)&lt;/code&gt; will be evaluated three times, the delay body is evaluated only once. Gimli will be grateful to know when the first headshot is available so he can begin tweaking it and sharing it. He&amp;#x2019;ll also appreciate not being spammed, and you&amp;#x2019;ll appreciate not facing his dwarven wrath.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5B50;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x7EC4;&amp;#x8981;&amp;#x4E0A;&amp;#x4F20;&amp;#x7684;&amp;#x5934;&amp;#x50CF;(&lt;code&gt;gimli-headshots&lt;/code&gt;)&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;(&lt;code&gt;email-user&lt;/code&gt; &amp;#x548C; &lt;code&gt;upload-document&lt;/code&gt;)&amp;#x6A21;&amp;#x62DF;&amp;#x6267;&amp;#x884C;&amp;#x4E24;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x7528;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&lt;code&gt;nodify&lt;/code&gt;&amp;#x81F3;&amp;#x4E00;&amp;#x4E2A;&amp;#x5EF6;&amp;#x671F;&amp;#x3002;&amp;#x5EF6;&amp;#x671F;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;,&lt;code&gt;(email-user &amp;quot;and-my-axe@gmail.com&amp;quot;)&lt;/code&gt;&amp;#x278A;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x6CA1;&amp;#x6709;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x53D1;&amp;#x751F;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x662F;&amp;#xFF1A;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&lt;code&gt;doseq&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x67D0;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x6C42;&amp;#x503C;&lt;code&gt;(force notify)&lt;/code&gt;&amp;#x278B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x3002;&amp;#x867D;&amp;#x7136;&lt;code&gt;(force notify)&lt;/code&gt;&amp;#x5C06;&amp;#x6C42;&amp;#x503C;&amp;#x4E09;&amp;#x6B21;&amp;#xFF0C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5EF6;&amp;#x671F;&amp;#x4E3B;&amp;#x4F53;&amp;#x53EA;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x6B21;&amp;#x3002;&amp;#x4E0A;&amp;#x4F20;&amp;#x8005;&amp;#x77E5;&amp;#x9053;&amp;#x7B2C;&amp;#x4E00;&amp;#x5F20;&amp;#x7167;&amp;#x7247;&amp;#x4E0A;&amp;#x4F20;&amp;#x5B8C;&amp;#x6210;&amp;#x4F1A;&amp;#x5F88;&amp;#x9AD8;&amp;#x5174;&amp;#xFF0C;&amp;#x4ED6;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F00;&amp;#x59CB;&amp;#x7F16;&amp;#x8F91;&amp;#x7167;&amp;#x7247;&amp;#xFF0C;&amp;#x4ED6;&amp;#x4E5F;&amp;#x56E0;&amp;#x4E3A;&amp;#x6CA1;&amp;#x6536;&amp;#x5230;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#x5783;&amp;#x573E;&amp;#x90AE;&amp;#x4EF6;&amp;#x800C;&amp;#x9AD8;&amp;#x5174;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This technique can help protect you from the mutual exclusion Concurrency Goblin&amp;#x2014;the problem of making sure that only one thread can access a particular resource at a time. In this example, the delay guards the email server resource. Because the body of a delay is guaranteed to fire only once, you can be sure that you will never run into a situation where two threads send the same email. Of course, no thread will ever be able to use the delay to send an email again. That might be too drastic a constraint for most situations, but in cases like this example, it works perfectly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6280;&amp;#x5DE7;&amp;#x53EF;&amp;#x4EE5;&amp;#x9632;&amp;#x6B62;&amp;#x4E92;&amp;#x65A5;&amp;#x5E76;&amp;#x53D1;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x786E;&amp;#x4FDD;&amp;#x4E00;&amp;#x4E2A;&amp;#x65F6;&amp;#x95F4;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E00;&amp;#x4E2A;&amp;#x7279;&amp;#x5B9A;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x4FDD;&amp;#x62A4;&amp;#x4E86;&amp;#x90AE;&amp;#x4EF6;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8D44;&amp;#x6E90;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x5EF6;&amp;#x671F;&amp;#x4E3B;&amp;#x4F53;&amp;#x4FDD;&amp;#x8BC1;&amp;#x53EA;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x4F60;&amp;#x80FD;&amp;#x786E;&amp;#x4FE1;&amp;#x7EDD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53D1;&amp;#x9001;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&amp;#x5F53;&amp;#x7136;&amp;#xFF0C;&amp;#x6CA1;&amp;#x6709;&amp;#x7EBF;&amp;#x7A0B;&amp;#x80FD;&amp;#x518D;&amp;#x6B21;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5EF6;&amp;#x671F;&amp;#x53D1;&amp;#x9001;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9650;&amp;#x5236;&amp;#x53EF;&amp;#x80FD;&amp;#x592A;&amp;#x6FC0;&amp;#x8FDB;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9650;&amp;#x5236;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5F88;&amp;#x5B8C;&amp;#x7F8E;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Promise&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x627F;&amp;#x8BFA;&quot;&gt;&lt;a href=&quot;#&amp;#x627F;&amp;#x8BFA;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x627F;&amp;#x8BFA;&quot;&gt;&lt;/a&gt;&amp;#x627F;&amp;#x8BFA;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Promises&lt;/em&gt; allow you to express that you expect a result without having to define the task that should produce it or when that task should run. You create promises using &lt;code&gt;promise&lt;/code&gt; and deliver a result to them using &lt;code&gt;deliver&lt;/code&gt;. You obtain the result by dereferencing:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x627F;&amp;#x8BFA;&lt;/em&gt; &amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x8868;&amp;#x8FBE;&amp;#xFF1A;&amp;#x671F;&amp;#x671B;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x7528;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x6216;&amp;#x4E0D;&amp;#x7528;&amp;#x6307;&amp;#x5B9A;&amp;#x90A3;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5E94;&amp;#x8BE5;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&amp;#x7528;&lt;code&gt;promise&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;deliver&lt;/code&gt;&amp;#x4EA4;&amp;#x4ED8;&amp;#x627F;&amp;#x8BFA;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x83B7;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(def my-promise (promise))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(deliver my-promise (+ 1 2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@my-promise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, you create a promise and then deliver a value to it. Finally, you obtain the value by dereferencing the promise. Dereferencing is how you express that you expect a result, and if you had tried to dereference &lt;code&gt;my-promise&lt;/code&gt; without first delivering a value, the program would block until a promise was delivered, just like with futures and delays. You can only deliver a result to a promise once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&amp;#x5B83;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x7528;&amp;#x53D6;&amp;#x503C;&amp;#x83B7;&amp;#x5F97;&amp;#x4E86;&amp;#x90A3;&amp;#x4E2A;&amp;#x503C;&amp;#x3002;&amp;#x53D6;&amp;#x503C;&amp;#x662F;&amp;#x8868;&amp;#x8FBE;&amp;#x4E86;&amp;#x4F60;&amp;#x671F;&amp;#x671B;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5148;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#xFF0C;&amp;#x5C31;&amp;#x5BF9;&lt;code&gt;my-promise&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C06;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x76F4;&amp;#x81F3;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x88AB;&amp;#x4EA4;&amp;#x4ED8;&amp;#xFF0C;&amp;#x4E0E;&amp;#x672A;&amp;#x6765;(futures)&amp;#x548C;&amp;#x5EF6;&amp;#x671F;(delay)&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x53EA;&amp;#x80FD;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x6B21;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One use for promises is to find the first satisfactory element in a collection of data. Suppose, for example, that you&amp;#x2019;re gathering ingredients to make your parrot sound like James Earl Jones. Because James Earl Jones has the smoothest voice on earth, one of the ingredients is premium yak butter with a smoothness rating of 97 or greater. You have a budget of $100 for one pound.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x627F;&amp;#x8BFA;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x5904;&amp;#x662F;&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x5408;&amp;#x91CC;&amp;#x627E;&amp;#x5230;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6EE1;&amp;#x8DB3;&amp;#x6761;&amp;#x4EF6;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x4F60;&amp;#x6B63;&amp;#x5728;&amp;#x6536;&amp;#x96C6;&amp;#x4F7F;&amp;#x4F60;&amp;#x7684;&amp;#x9E66;&amp;#x9E49;&amp;#x53D1;&amp;#x51FA;&amp;#x540C;James Earl Jones&amp;#x58F0;&amp;#x97F3;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x58F0;&amp;#x97F3;&amp;#x7684;&amp;#x914D;&amp;#x65B9;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x914D;&amp;#x65B9;&amp;#x662F;&amp;#x5149;&amp;#x6ED1;&amp;#x5EA6;&amp;#x4E3A;97%&amp;#x6216;&amp;#x66F4;&amp;#x9AD8;&amp;#x7684;&amp;#x4F18;&amp;#x8D28;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#x3002;&amp;#x4F60;&amp;#x6709;100&amp;#x7F8E;&amp;#x5143;&amp;#x7684;&amp;#x9884;&amp;#x7B97;&amp;#x7528;&amp;#x4E8E;&amp;#x8D2D;&amp;#x4E70;&amp;#x4E00;&amp;#x78C5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You are a modern practitioner of the magico-ornithological arts, so rather than tediously navigating each yak butter retail site, you create a script to give you the URL of the first yak butter that meets your needs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x51B3;&amp;#x5B9A;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x811A;&amp;#x672C;&amp;#x7528;&amp;#x6765;&amp;#x83B7;&amp;#x5F97;&amp;#x7B26;&amp;#x5408;&amp;#x9700;&amp;#x6C42;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7266;&amp;#x725B;&amp;#x6CB9;&amp;#x7684;URL&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The following code defines some yak butter products, creates a function to mock up an API call, and creates another function to test whether a product is satisfactory:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#x4EA7;&amp;#x54C1;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7528;&amp;#x6765;&amp;#x6A21;&amp;#x62DF;API&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6D4B;&amp;#x8BD5;&amp;#x4EA7;&amp;#x54C1;&amp;#x662F;&amp;#x5426;&amp;#x6EE1;&amp;#x8DB3;&amp;#x9700;&amp;#x8981;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; yak-butter-international&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:store&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Yak Butter International&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; butter-than-nothing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:store&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Butter Than Nothing&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;83&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; This is the butter that meets our requirements&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; baby-got-yak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:store&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Baby Got Yak&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; mock-api-call&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [result]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; satisfactory?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;If the butter meets our criteria, return the butter, else return false&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [butter]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;and&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:price&lt;/span&gt; butter) &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;symbol&quot;&gt;:smoothness&lt;/span&gt; butter) &lt;span class=&quot;number&quot;&gt;97&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       butter))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The API call waits one second before returning a result to simulate the time it would take to perform an actual call.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;API&amp;#x8C03;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x524D;&amp;#x7B49;&amp;#x5F85;&amp;#x4E86;&amp;#x4E00;&amp;#x79D2;&amp;#xFF0C;&amp;#x7528;&amp;#x6765;&amp;#x6A21;&amp;#x62DF;&amp;#x5B9E;&amp;#x9645;&amp;#x8C03;&amp;#x7528;&amp;#x82B1;&amp;#x8D39;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To show how long it will take to check the sites synchronously, we&amp;#x2019;ll use &lt;code&gt;some&lt;/code&gt; to apply the &lt;code&gt;satisfactory?&lt;/code&gt; function to each element of the collection and return the first truthy result, or nil if there are none. When you check each site synchronously, it could take more than one second per site to obtain a result, as the following code shows:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x663E;&amp;#x793A;&amp;#x540C;&amp;#x6B65;&amp;#x68C0;&amp;#x67E5;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7F51;&amp;#x7AD9;&amp;#x9700;&amp;#x8981;&amp;#x591A;&amp;#x4E45;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;&amp;#x4EA7;&amp;#x54C1;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x6BCF;&amp;#x9879;&amp;#x4EA7;&amp;#x54C1;&amp;#x6A21;&amp;#x62DF;api&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x53D6;&amp;#x5F97;&amp;#x4EA7;&amp;#x54C1;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x7B26;&amp;#x5408;&amp;#x8981;&amp;#x6C42;&amp;#x3002;&amp;#x5E76;&amp;#x7528;&lt;code&gt;some&lt;/code&gt;&amp;#x53D6;&amp;#x51FA;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x5408;&amp;#x8981;&amp;#x6C42;&amp;#x7684;&amp;#x4EA7;&amp;#x54C1;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x7B26;&amp;#x5408;&amp;#x7684;&amp;#x4EA7;&amp;#x54C1;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;nil&amp;#x3002;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;some&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;comp&lt;/span&gt;&lt;/span&gt; satisfactory? mock-api-call)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [yak-butter-international butter-than-nothing baby-got-yak]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 3002.132 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:store &amp;quot;Baby Got Yak&amp;quot;, :smoothness 99, :price 94}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here I&amp;#x2019;ve used &lt;code&gt;comp&lt;/code&gt; to compose functions, and I&amp;#x2019;ve used &lt;code&gt;time&lt;/code&gt; to print the time taken to evaluate a form. You can use a promise and futures to perform each check on a separate thread. If your computer has multiple cores, this could reduce the time it takes to about one second:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&lt;code&gt;comp&lt;/code&gt;&amp;#x7EC4;&amp;#x5408;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&lt;code&gt;time&lt;/code&gt;&amp;#x6253;&amp;#x5370;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x548C;&amp;#x672A;&amp;#x6765;&amp;#x5728;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6267;&amp;#x884C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x68C0;&amp;#x67E5;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x662F;&amp;#x591A;&amp;#x6838;&amp;#x7684;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x82B1;&amp;#x8D39;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x51CF;&amp;#x5C11;&amp;#x5230;&amp;#x5927;&amp;#x7EA6;&amp;#x4E00;&amp;#x79D2;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [butter-promise (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [butter [yak-butter-international butter-than-nothing baby-got-yak]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if-let&lt;/span&gt;&lt;/span&gt; [satisfactory-butter (&lt;span class=&quot;name&quot;&gt;satisfactory?&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;mock-api-call&lt;/span&gt; butter))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; butter-promise satisfactory-butter))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;And the winner is:&amp;quot;&lt;/span&gt; @butter-promise)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 1002.652 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; And the winner is: {:store Baby Got Yak, :smoothness 99, :price 94}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you first create a promise, &lt;code&gt;butter-promise&lt;/code&gt;, and then create three futures with access to that promise. Each future&amp;#x2019;s task is to evaluate a yak butter site and to deliver the site&amp;#x2019;s data to the promise if it&amp;#x2019;s satisfactory. Finally, you dereference &lt;code&gt;butter-promise&lt;/code&gt;, causing the program to block until the site data is delivered. This takes about one second instead of three because the site evaluations happen in parallel. By decoupling the requirement for a result from how the result is actually computed, you can perform multiple computations in parallel and save some time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;,&lt;code&gt;butter-promise&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E09;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7528;&amp;#x4E8E;&amp;#x8BBF;&amp;#x95EE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x5E72;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x662F;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7AD9;&amp;#x7684;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5982;&amp;#x679C;&amp;#x6EE1;&amp;#x8DB3;&amp;#x9700;&amp;#x8981;&amp;#xFF0C;&amp;#x5C31;&amp;#x628A;&amp;#x5B83;&amp;#x4EA4;&amp;#x4ED8;&amp;#x7ED9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x5BF9;&lt;code&gt;butter-promise&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7A0B;&amp;#x5E8F;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x76F4;&amp;#x5230;&amp;#x6709;&amp;#x6570;&amp;#x636E;&amp;#x4EA4;&amp;#x4ED8;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#x5E76;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x82B1;&amp;#x8D39;&amp;#x4E86;&amp;#x4E00;&amp;#x79D2;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x4E09;&amp;#x79D2;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&amp;#x7ED3;&amp;#x679C;&amp;#x8BA1;&amp;#x7B97;&amp;#x548C;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x5206;&amp;#x79BB;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x591A;&amp;#x4E2A;&amp;#x8BA1;&amp;#x7B97;&amp;#x5E76;&amp;#x8282;&amp;#x7EA6;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can view this as a way to protect yourself from the reference cell Concurrency Goblin. Because promises can be written to only once, you prevent the kind of inconsistent state that arises from nondeterministic reads and writes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F53;&amp;#x4F5C;&amp;#x9632;&amp;#x6B62;&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x627F;&amp;#x8BFA;&amp;#x53EA;&amp;#x80FD;&amp;#x88AB;&amp;#x5199;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x9632;&amp;#x6B62;&amp;#x4E86;&amp;#x4E0D;&amp;#x786E;&amp;#x5B9A;&amp;#x7684;&amp;#x8BFB;&amp;#x5199;&amp;#x4E2D;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You might be wondering what happens if none of the yak butter is satisfactory. If that happens, the dereference would block forever and tie up the thread. To avoid that, you can include a timeout:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x60F3;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x7B26;&amp;#x5408;&amp;#x8981;&amp;#x6C42;&amp;#x7684;&amp;#x7266;&amp;#x725B;&amp;#x9EC4;&amp;#x6CB9;&amp;#x600E;&amp;#x4E48;&amp;#x529E;&amp;#xFF1F;&amp;#x5982;&amp;#x679C;&amp;#x53D1;&amp;#x751F;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x53D6;&amp;#x503C;&amp;#x5C06;&amp;#x6C38;&amp;#x4E45;&amp;#x963B;&amp;#x585E;&amp;#xFF0C;&amp;#x5E76;&amp;#x5360;&amp;#x7528;&amp;#x90A3;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x4E3A;&amp;#x907F;&amp;#x514D;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x589E;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x8D85;&amp;#x65F6;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [p (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; p &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;timed out&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This creates a promise, &lt;code&gt;p&lt;/code&gt;, and tries to dereference it. The number 100 tells &lt;code&gt;deref&lt;/code&gt; to wait 100 milliseconds, and if no value is available by then, to use the timeout value, &lt;code&gt;&amp;quot;timed out&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&lt;code&gt;p&lt;/code&gt;,&amp;#x5E76;&amp;#x4E14;&amp;#x5BF9;&amp;#x5B83;&amp;#x53D6;&amp;#x503C;&amp;#x3002;&amp;#x6570;&amp;#x5B57;100&amp;#x544A;&amp;#x8BC9;&lt;code&gt;deref&lt;/code&gt;&amp;#x7B49;&amp;#x5F85;100&amp;#x6BEB;&amp;#x79D2;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E4B;&amp;#x540E;&amp;#x6CA1;&amp;#x6709;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x5C31;&amp;#x7528;&amp;#x8D85;&amp;#x65F6;&amp;#x503C;&lt;code&gt;&amp;quot;timeed out&amp;quot;&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The last detail I should mention is that you can also use promises to register callbacks, achieving the same functionality that you might be used to in JavaScript. JavaScript callbacks are a way of defining code that should execute asynchronously once some other code finishes. Here&amp;#x2019;s how to do it in Clojure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EC6;&amp;#x8282;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x627F;&amp;#x8BFA;&amp;#x6CE8;&amp;#x518C;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x83B7;&amp;#x5F97;&amp;#x4E0E;JavaScript&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x76F8;&amp;#x540C;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x3002;JavaScript&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&amp;#x4E00;&amp;#x65E6;&amp;#x67D0;&amp;#x4E9B;&amp;#x5176;&amp;#x4ED6;&amp;#x4EE3;&amp;#x7801;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4F1A;&amp;#x5F02;&amp;#x6B65;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x5728;Clojure&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [ferengi-wisdom-promise (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s some Ferengi wisdom:&amp;quot;&lt;/span&gt; @ferengi-wisdom-promise))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; ferengi-wisdom-promise &lt;span class=&quot;string&quot;&gt;&amp;quot;Whisper your way to success.&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Here&amp;apos;s some Ferengi wisdom: Whisper your way to success.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This example creates a future that begins executing immediately. However, the future&amp;#x2019;s thread is blocking because it&amp;#x2019;s waiting for a value to be delivered to &lt;code&gt;ferengi-wisdom-promise&lt;/code&gt;. After 100 milliseconds, you deliver the value and the &lt;code&gt;println&lt;/code&gt; statement in the future runs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ACB;&amp;#x523B;&amp;#x5F00;&amp;#x59CB;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#x3002;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x963B;&amp;#x585E;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x4EA4;&amp;#x4ED8;&amp;#x7ED9;&lt;code&gt;ferengi-wisdom-promise&lt;/code&gt;&amp;#x3002;100&amp;#x6BEB;&amp;#x79D2;&amp;#x540E;&amp;#xFF0C;&amp;#x503C;&amp;#x88AB;&amp;#x4EA4;&amp;#x4ED8;&amp;#xFF0C;&amp;#x672A;&amp;#x6765;&amp;#x91CC;&amp;#x7684;&lt;code&gt;println&lt;/code&gt;&amp;#x8BED;&amp;#x53E5;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Futures, delays, and promises are great, simple ways to manage concurrency in your application. In the next section, we&amp;#x2019;ll look at one more fun way to keep your concurrent applications under control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x662F;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x7BA1;&amp;#x7406;&amp;#x5E76;&amp;#x53D1;&amp;#x7684;&amp;#x597D;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x4E0B;&amp;#x8282;&amp;#x6211;&amp;#x4EEC;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x66F4;&amp;#x591A;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x63A7;&amp;#x5236;&amp;#x5E76;&amp;#x53D1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rolling Your Own Queue&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot;&gt;&lt;a href=&quot;#&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&quot;&gt;&lt;/a&gt;&amp;#x81EA;&amp;#x5EFA;&amp;#x961F;&amp;#x5217;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;So far you&amp;#x2019;ve looked at some simple ways to combine futures, delays, and promises to make your concurrent programs a little safer. In this section, you&amp;#x2019;ll use a macro to combine futures and promises in a slightly more complex manner. You might not necessarily ever use this code, but it&amp;#x2019;ll show the power of these modest tools a bit more. The macro will require you to hold runtime logic and macro expansion logic in your head at the same time to understand what&amp;#x2019;s going on; if you get stuck, just skip ahead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x770B;&amp;#x5230;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&amp;#x6765;&amp;#x7EC4;&amp;#x5408;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#xFF0C;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5E76;&amp;#x53D1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x66F4;&amp;#x52A0;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C06;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4EE5;&amp;#x66F4;&amp;#x590D;&amp;#x6742;&amp;#x4E9B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x7EC4;&amp;#x5408;&amp;#x672A;&amp;#x6765;&amp;#x548C;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x4F60;&amp;#x4E0D;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x80FD;&amp;#x8BA9;&amp;#x4F60;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6734;&amp;#x7D20;&amp;#x5DE5;&amp;#x5177;&amp;#x7684;&amp;#x529B;&amp;#x91CF;&amp;#x3002;&amp;#x4E3A;&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F60;&amp;#x5934;&amp;#x8111;&amp;#x4E2D;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x60F3;&amp;#x7740;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x548C;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x903B;&amp;#x8F91;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5361;&amp;#x4F4F;&amp;#x4E86;&amp;#xFF0C;&amp;#x8DF3;&amp;#x8FC7;&amp;#x5373;&amp;#x53EF;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One characteristic The Three Concurrency Goblins have in common is that they all involve tasks concurrently accessing a shared resource&amp;#x2014;a variable, a printer, a dwarven war axe&amp;#x2014;in an uncoordinated way. If you want to ensure that only one task will access a resource at a time, you can place the resource access portion of a task on a queue that&amp;#x2019;s executed serially. It&amp;#x2019;s kind of like making a cake: you and a friend can separately retrieve the ingredients (eggs, flour, eye of newt, what have you), but some steps you&amp;#x2019;ll have to perform serially. You have to prepare the batter before you put it in the oven. Figure 9-6 illustrates this strategy.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E09;&amp;#x4E2A;&amp;#x5E76;&amp;#x53D1;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5171;&amp;#x540C;&amp;#x7279;&amp;#x70B9;&amp;#x662F;&amp;#xFF1A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x90FD;&amp;#x4E0E;&amp;#x4E0D;&amp;#x534F;&amp;#x8C03;&amp;#x5730;&amp;#x8BBF;&amp;#x95EE;&amp;#x5171;&amp;#x4EAB;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x6709;&amp;#x5173;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8D44;&amp;#x6E90;&amp;#x5305;&amp;#x62EC;&amp;#xFF1A;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x673A;&amp;#xFF0C;&amp;#x77EE;&amp;#x4EBA;&amp;#x6218;&amp;#x65A7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x786E;&amp;#x4FDD;&amp;#x4E00;&amp;#x6B21;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x8BBF;&amp;#x95EE;&amp;#x67D0;&amp;#x4E2A;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E2D;&amp;#x8BBF;&amp;#x95EE;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#x3002;&amp;#x8FD9;&amp;#x6709;&amp;#x70B9;&amp;#x60F3;&amp;#x505A;&amp;#x86CB;&amp;#x7CD5;&amp;#xFF1A;&amp;#x4F60;&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x670B;&amp;#x53CB;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x522B;&amp;#x53D6;&amp;#x5F97;&amp;#x5236;&amp;#x4F5C;&amp;#x6750;&amp;#x6599;(&amp;#x9E21;&amp;#x86CB;&amp;#xFF0C;&amp;#x9762;&amp;#x7C89;&amp;#xFF0C;&amp;#x877E;&amp;#x8788;&amp;#x773C;&amp;#x775B;&amp;#x7B49;&amp;#x4E1C;&amp;#x897F;)&amp;#xFF0C;&amp;#x4F46;&amp;#x67D0;&amp;#x4E9B;&amp;#x6B65;&amp;#x9AA4;&amp;#x4F60;&amp;#x4EEC;&amp;#x5FC5;&amp;#x987B;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x5148;&amp;#x51C6;&amp;#x5907;&amp;#x597D;&amp;#x9762;&amp;#x7CCA;&amp;#xFF0C;&amp;#x518D;&amp;#x653E;&amp;#x5165;&amp;#x70E4;&amp;#x7BB1;&amp;#x3002;&amp;#x56FE;9-6&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B56;&amp;#x7565;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;9-6&lt;br&gt;&lt;img src=&quot;/2016/07/15/braveclojure-concurrency/9-6.png&quot; alt=&quot;Dividing tasks&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To implement the queuing macro, you&amp;#x2019;ll pay homage to the British, because they invented queues. You&amp;#x2019;ll use a queue to ensure that the customary British greeting &amp;#x201C;Ello, gov&amp;#x2019;na! Pip pip! Cheerio!&amp;#x201D; is delivered in the correct order. This demonstration will involve an abundance of &lt;code&gt;sleep&lt;/code&gt;ing, so here&amp;#x2019;s a macro to do that more concisely:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x5C06;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x961F;&amp;#x5217;&amp;#x7528;&amp;#x4EE5;&amp;#x786E;&amp;#x4FDD;&amp;#x95EE;&amp;#x5019;&amp;#x8BED; &amp;#x201C;Ello, gov&amp;#x2019;na! Pip pip! Cheerio!&amp;#x201D; &amp;#x6309;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x88AB;&amp;#x4EA4;&amp;#x4ED8;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x793A;&amp;#x4F8B;&amp;#x91CC;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&lt;code&gt;sleep&lt;/code&gt;,&amp;#x6240;&amp;#x4EE5;&amp;#x7528;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; wait&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Sleep `timeout` seconds before evaluating body&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [timeout &amp;amp; body]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; ~timeout) ~@body))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;All this code does is take whatever forms you give it and insert a call to &lt;code&gt;Thread/sleep&lt;/code&gt; before them, all wrapped up in &lt;code&gt;do&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x5168;&amp;#x90E8;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x5728;&amp;#x6240;&amp;#x6709;&amp;#x5F62;&amp;#x5F0F;&amp;#x524D;&amp;#x63D2;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528; &lt;code&gt;Thread/sleep&lt;/code&gt;,&amp;#x5E76;&amp;#x5168;&amp;#x90E8;&amp;#x7528;&lt;code&gt;do&lt;/code&gt;&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The code in Listing 9-1 splits up tasks into a concurrent portion and a serialized portion:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;9-1&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x6210;&amp;#x5E76;&amp;#x884C;&amp;#x90E8;&amp;#x5206;&amp;#x548C;&amp;#x4E32;&amp;#x884C;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Listing 9-1. The expansion of an enqueue macro call&amp;#xFF1A;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5217;&amp;#x8868; 9-1&amp;#x3002;enqueue&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x5C55;&amp;#x5F00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [saying3 (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; saying3 (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cheerio!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  @(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [saying2 (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; saying2 (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Pip pip!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A;      @(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [saying1 (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; saying1 (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        saying1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     saying2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  saying3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The overall strategy is to create a promise for each task (in this case, printing part of the greeting) to create a corresponding future that will deliver a concurrently computed value to the promise. This ensures that all of the futures are created before any of the promises are dereferenced, and it ensures that the serialized portions are executed in the correct order. The value of &lt;code&gt;saying1&lt;/code&gt; is printed first&amp;#x2014;&lt;code&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/code&gt;&amp;#x2014;then the value of &lt;code&gt;saying2&lt;/code&gt;, and finally &lt;code&gt;saying3&lt;/code&gt;. Returning &lt;code&gt;saying1&lt;/code&gt; in a &lt;code&gt;let&lt;/code&gt; block and dereferencing the &lt;code&gt;let&lt;/code&gt; block at &amp;#x278A; ensures that you&amp;#x2019;ll be completely finished with &lt;code&gt;saying1&lt;/code&gt; before the code moves on to do anything to &lt;code&gt;saying2&lt;/code&gt;, and this pattern is repeated with &lt;code&gt;saying2&lt;/code&gt; and &lt;code&gt;saying3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x6574;&amp;#x4F53;&amp;#x7B56;&amp;#x7565;&amp;#x662F;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6253;&amp;#x5370;&amp;#x4EFB;&amp;#x52A1;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x5C06;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E76;&amp;#x884C;&amp;#x8BA1;&amp;#x7B97;&amp;#x503C;&amp;#x7ED9;&amp;#x90A3;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x8FD9;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x6240;&amp;#x6709;&amp;#x672A;&amp;#x6765;&amp;#x90FD;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E8E;&amp;#x4EFB;&amp;#x4F55;&amp;#x627F;&amp;#x8BFA;&amp;#x88AB;&amp;#x53D6;&amp;#x503C;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x4E32;&amp;#x884C;&amp;#x90E8;&amp;#x5206;&amp;#x6309;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;code&gt;saying1&lt;/code&gt;&amp;#x7684;&amp;#x503C;&lt;code&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/code&gt;&amp;#x88AB;&amp;#x9996;&amp;#x5148;&amp;#x6253;&amp;#x5370;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x662F;&lt;code&gt;saying2&lt;/code&gt;,&lt;code&gt;saying3&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x5728;&amp;#x278A;&amp;#x5904;&amp;#xFF0C;&lt;code&gt;let&lt;/code&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;saying1&lt;/code&gt;,&amp;#x5E76;&amp;#x5BF9;&amp;#x5B83;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x786E;&amp;#x4FDD;&amp;#x4E86;&amp;#x4EE3;&amp;#x7801;&amp;#x524D;&amp;#x8FDB;&amp;#x5230;&lt;code&gt;saying2&lt;/code&gt;&amp;#x524D;&amp;#xFF0C;&lt;code&gt;saying1&lt;/code&gt;&amp;#x5C06;&amp;#x5B8C;&amp;#x5168;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#xFF0C;&lt;code&gt;saying2&lt;/code&gt;&amp;#x548C;&lt;code&gt;saying3&lt;/code&gt;&amp;#x4E5F;&amp;#x91CD;&amp;#x590D;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It might seem silly to dereference the &lt;code&gt;let&lt;/code&gt; block, but doing so lets you abstract this code with a macro. And you will definitely want to use a macro, because writing out code like the previous example would drive you mental (as the British would say). Ideally, the macro would work as shown in Listing 9-2:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&lt;code&gt;let&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#x53EF;&amp;#x80FD;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x5F88;&amp;#x50BB;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x7528;&amp;#x5B8F;&amp;#x62BD;&amp;#x8C61;&amp;#x8FD9;&amp;#x5757;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x800C;&amp;#x4E14;&amp;#x4F60;&amp;#x80AF;&amp;#x5B9A;&amp;#x60F3;&amp;#x7528;&amp;#x5B8F;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x50CF;&amp;#x524D;&amp;#x9762;&amp;#x90A3;&amp;#x6837;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x4F1A;&amp;#x4F7F;&amp;#x4F60;&amp;#x5934;&amp;#x8111;&amp;#x53D1;&amp;#x75AF;&amp;#x3002;&amp;#x7406;&amp;#x60F3;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E48;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;Listing 9-2:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; &amp;#x278A;saying &amp;#x278B;(&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/span&gt;) &amp;#x278C;(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#x278D;(&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Pip pip!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cheerio!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The macro lets you name the promise that gets created &amp;#x278A;, define how to derive the value to deliver that promise &amp;#x278B;, and define what to do with the promise &amp;#x278C;. The macro can also take another &lt;code&gt;enqueue&lt;/code&gt; macro call as its first argument, which lets you thread it &amp;#x278D;. Listing 9-3 shows how you can define the &lt;code&gt;enqueue&lt;/code&gt; macro. After defining &lt;code&gt;enqueue&lt;/code&gt;, the code in Listing 9-2 will expand into the code in Listing 9-1, with all the nested &lt;code&gt;let&lt;/code&gt; expressions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F4D;&amp;#x7F6E;&amp;#x278A;&amp;#xFF1A;&amp;#x547D;&amp;#x540D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x278B;&amp;#xFF1A;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4F55;&amp;#x5F97;&amp;#x5230;&amp;#x4EA4;&amp;#x4ED8;&amp;#x7ED9;&amp;#x627F;&amp;#x8BFA;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x278C;:&amp;#x5B9A;&amp;#x4E49;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x5E72;&amp;#x4EC0;&amp;#x4E48;&amp;#x3002;&amp;#x278D;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E5F;&amp;#x80FD;&amp;#x63A5;&amp;#x53D7;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5176;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E8E;&amp;#x628A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x5217;&amp;#x8868;9-3&amp;#x5C55;&amp;#x793A;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x5217;&amp;#x8868;9-2&amp;#x5C06;&amp;#x88AB;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x5217;&amp;#x8868;9-1&amp;#xFF0C;&amp;#x5E26;&amp;#x7740;&amp;#x6240;&amp;#x6709;&amp;#x5F97;&amp;#x5D4C;&amp;#x5957;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;Listing 9-3:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; enqueue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A;   ([q concurrent-promise-name concurrent serialized]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278B;    `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [~concurrent-promise-name (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;promise&lt;/span&gt;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;deliver&lt;/span&gt; ~concurrent-promise-name ~concurrent))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278C;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;deref&lt;/span&gt;&lt;/span&gt; ~q)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ~serialized&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ~concurrent-promise-name))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278D;   ([concurrent-promise-name concurrent serialized]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   `(&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;future&lt;/span&gt;&lt;/span&gt;) ~concurrent-promise-name ~concurrent ~serialized)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice first that this macro has two arities in order to supply a default value. The first arity &amp;#x278A; is where the real work is done. It has the parameter &lt;code&gt;q&lt;/code&gt;, and the second arity does not. The second arity &amp;#x278D; calls the first with value &lt;code&gt;(future)&lt;/code&gt; supplied for &lt;code&gt;q&lt;/code&gt;; you&amp;#x2019;ll see why in a minute. At &amp;#x278B;, the macro returns a form that creates a promise, delivers its value in a future, dereferences whatever form is supplied for &lt;code&gt;q&lt;/code&gt;, evaluates the serialized code, and finally returns the promise. &lt;code&gt;q&lt;/code&gt; will usually be a nested &lt;code&gt;let&lt;/code&gt; expression returned by another call to &lt;code&gt;enqueue&lt;/code&gt;, like in Listing 9-2. If no value is supplied for &lt;code&gt;q&lt;/code&gt;, the macro supplies a future so that the &lt;code&gt;deref&lt;/code&gt; at &amp;#x278C; doesn&amp;#x2019;t cause an exception.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x6709;&amp;#x4E24;&amp;#x5957;&amp;#x53C2;&amp;#x6570;&amp;#x4EE5;&amp;#x4FBF;&amp;#x4E8E;&amp;#x63D0;&amp;#x4F9B;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x5957;&amp;#x53C2;&amp;#x6570;(&amp;#x278A;&amp;#x5904;)&amp;#x505A;&amp;#x4E86;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x3002;&amp;#x4ED6;&amp;#x6709;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&lt;code&gt;q&lt;/code&gt;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x5957;&amp;#x6CA1;&amp;#x6709;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x5957;&amp;#x53C2;&amp;#x6570;(&amp;#x278D;&amp;#x5904;)&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&amp;#x7B2C;&amp;#x4E00;&amp;#x5957;&amp;#xFF0C;&amp;#x4E3A;&lt;code&gt;q&lt;/code&gt;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x503C;&lt;code&gt;(future)&lt;/code&gt;&amp;#xFF0C;&amp;#x9A6C;&amp;#x4E0A;&amp;#x5C31;&amp;#x4F1A;&amp;#x89E3;&amp;#x91CA;&amp;#x8FD9;&amp;#x4E48;&amp;#x505A;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x3002;&amp;#x5728;&amp;#x278B;&amp;#x5904;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#xFF0C;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#x91CC;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x5BF9;&lt;code&gt;q&lt;/code&gt;&amp;#x53D6;&amp;#x503C;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x4E32;&amp;#x884C;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x901A;&amp;#x5E38;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&lt;code&gt;q&lt;/code&gt;&amp;#x5C06;&amp;#x662F;&amp;#x4E2A;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x50CF;&amp;#x5217;&amp;#x8868;9-2&amp;#x90A3;&amp;#x6837;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x503C;&amp;#x63D0;&amp;#x4F9B;&amp;#x7ED9;&lt;code&gt;q&lt;/code&gt;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x4F7F;&amp;#x278C;&amp;#x5904;&amp;#x7684;&lt;code&gt;deref&lt;/code&gt;&amp;#x4E0D;&amp;#x4F1A;&amp;#x9020;&amp;#x6210;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that we&amp;#x2019;ve written the &lt;code&gt;enqueue&lt;/code&gt; macro, let&amp;#x2019;s try it out to see whether it reduces the execution time!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6709;&amp;#x4E86;&lt;code&gt;enqueue&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#x5B83;&amp;#x80FD;&amp;#x5426;&amp;#x51CF;&amp;#x5C11;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#xFF01;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;time&lt;/span&gt;&lt;/span&gt; @(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;Ello, gov&amp;apos;na!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Pip pip!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;enqueue&lt;/span&gt; saying (&lt;span class=&quot;name&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cheerio!&amp;quot;&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; @saying))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;apos;Ello, gov&amp;apos;na!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Pip pip!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Cheerio!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Elapsed time: 401.635 msecs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Blimey! The greeting is delivered in the correct order, and you can see by the elapsed time that the &amp;#x201C;work&amp;#x201D; of sleeping was handled concurrently.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x554A;&amp;#xFF01;&amp;#x7ED3;&amp;#x679C;&amp;#x6B63;&amp;#x786E;&amp;#xFF0C;&amp;#x4ECE;&amp;#x65F6;&amp;#x95F4;&amp;#x770B;&amp;#x90A3;&amp;#x4E9B;&amp;#x4F11;&amp;#x7720;&amp;#x90E8;&amp;#x5206;&amp;#x4E5F;&amp;#x662F;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;It&amp;#x2019;s important for programmers like you to learn concurrent and parallel programming techniques so you can design programs that run efficiently on modern hardware. Concurrency refers to a program&amp;#x2019;s ability to carry out more than one task, and in Clojure you achieve this by placing tasks on separate threads. Programs execute in parallel when a computer has more than one CPU, which allows more than one thread to be executed at the same time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B66;&amp;#x4E60;&amp;#x5E76;&amp;#x53D1;&amp;#x548C;&amp;#x5E76;&amp;#x884C;&amp;#x7F16;&amp;#x7A0B;&amp;#x6280;&amp;#x672F;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x8BBE;&amp;#x8BA1;&amp;#x51FA;&amp;#x80FD;&amp;#x5728;&amp;#x73B0;&amp;#x4EE3;&amp;#x786C;&amp;#x4EF6;&amp;#x4E0A;&amp;#x9AD8;&amp;#x6548;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x4F60;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x662F;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&amp;#x5E76;&amp;#x53D1;&amp;#x6307;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x5728;Clojure&amp;#x91CC;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&amp;#x4EFB;&amp;#x52A1;&amp;#x653E;&amp;#x5728;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E0A;&amp;#x83B7;&amp;#x5F97;&amp;#x8FD9;&amp;#x79CD;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&amp;#x5F53;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x6709;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;CPU&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5E76;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x540C;&amp;#x4E00;&amp;#x65F6;&amp;#x95F4;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Concurrent programming refers to the techniques used to manage three concurrency risks: reference cells, mutual exclusion, and deadlock. Clojure gives you three basic tools that help you mitigate those risks: futures, delays, and promises. Each tool lets you decouple the three events of defining a task, executing a task, and requiring a task&amp;#x2019;s result. Futures let you define a task and execute it immediately, allowing you to require the result later or never. Futures also cache their results. Delays let you define a task that doesn&amp;#x2019;t get executed until later, and a delay&amp;#x2019;s result gets cached. Promises let you express that you require a result without having to know about the task that produces that result. You can only deliver a value to a promise once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x6307;&amp;#x7528;&amp;#x4E8E;&amp;#x7BA1;&amp;#x7406;&amp;#x4E09;&amp;#x79CD;&amp;#x5E76;&amp;#x53D1;&amp;#x98CE;&amp;#x9669;(&amp;#x5F15;&amp;#x7528;&amp;#x5355;&amp;#x5143;&amp;#xFF0C;&amp;#x4E92;&amp;#x65A5;&amp;#xFF0C;&amp;#x6B7B;&amp;#x9501;)&amp;#x7684;&amp;#x6280;&amp;#x672F;&amp;#x3002;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E09;&amp;#x4E2A;&amp;#x57FA;&amp;#x672C;&amp;#x5DE5;&amp;#x5177;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x51CF;&amp;#x5C11;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#xFF1A;&amp;#x672A;&amp;#x6765;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#xFF0C;&amp;#x627F;&amp;#x8BFA;&amp;#x3002;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x89E3;&amp;#x8026;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x83B7;&amp;#x53D6;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#x5B9A;&amp;#x4E49;&amp;#x5E76;&amp;#x7ACB;&amp;#x523B;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x6216;&amp;#x4E0D;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x672A;&amp;#x6765;&amp;#x4E5F;&amp;#x7F13;&amp;#x5B58;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x5EF6;&amp;#x671F;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EE5;&amp;#x540E;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5EF6;&amp;#x671F;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x4E5F;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x627F;&amp;#x8BFA;&amp;#x8BA9;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x7528;&amp;#x5FC5;&amp;#x987B;&amp;#x77E5;&amp;#x9053;&amp;#x5982;&amp;#x4F55;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x627F;&amp;#x8BFA;&amp;#x53EA;&amp;#x80FD;&amp;#x4EA4;&amp;#x4ED8;&amp;#x4E00;&amp;#x6B21;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the next chapter, you&amp;#x2019;ll explore the philosophical side of concurrent programming and learn more sophisticated tools for managing the risks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x7AE0;&amp;#x5C06;&amp;#x63A2;&amp;#x7D22;&amp;#x5E76;&amp;#x53D1;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x54F2;&amp;#x5B66;&amp;#x65B9;&amp;#x9762;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5B66;&amp;#x4E60;&amp;#x66F4;&amp;#x591A;&amp;#x7BA1;&amp;#x7406;&amp;#x8FD9;&amp;#x4E9B;&amp;#x98CE;&amp;#x9669;&amp;#x590D;&amp;#x6742;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Write a function that takes a string as an argument and searches for it on Bing and Google using the &lt;code&gt;slurp&lt;/code&gt; function. Your function should return the HTML of the first page returned by the search.&lt;/li&gt;
&lt;li&gt;Update your function so it takes a second argument consisting of the search engines to use.&lt;/li&gt;
&lt;li&gt;Create a new function that takes a search term and search engines as arguments, and returns a vector of the URLs from the first page of search results from each search engine.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;slurp&lt;/code&gt;&amp;#x5728;Google&amp;#x548C;Bing&amp;#x4E0A;&amp;#x641C;&amp;#x7D22;&amp;#x5B83;&amp;#x3002;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x641C;&amp;#x7D22;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;HTML&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x66F4;&amp;#x65B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x641C;&amp;#x7D22;&amp;#x5F15;&amp;#x64CE;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x641C;&amp;#x7D22;&amp;#x9879;&amp;#x548C;&amp;#x591A;&amp;#x4E2A;&amp;#x5F15;&amp;#x64CE;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x6BCF;&amp;#x4E2A;&amp;#x641C;&amp;#x7D22;&amp;#x5F15;&amp;#x64CE;&amp;#x7B2C;&amp;#x4E00;&amp;#x9875;&amp;#x641C;&amp;#x7D22;&amp;#x7ED3;&amp;#x679C;&amp;#x91CC;&amp;#x7684;URL&amp;#x7EC4;&amp;#x6210;&amp;#x7684;vector&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>用Express搭建Api演示</title>
    <link href="http://yoursite.com/2016/06/03/express-demo/"/>
    <id>http://yoursite.com/2016/06/03/express-demo/</id>
    <published>2016-06-03T10:07:47.000Z</published>
    <updated>2016-06-03T13:24:43.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x6F14;&amp;#x793A;&amp;#x7528;Express&amp;#x642D;&amp;#x5EFA;Api&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5185;&amp;#x5BB9;&amp;#x6D89;&amp;#x53CA;&amp;#xFF1A;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;Promise,&amp;#x7528;bluebird&amp;#x8BBF;&amp;#x95EE;MySQL,&amp;#x7528;Express&amp;#x5B9E;&amp;#x73B0;&amp;#x975E;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x548C;RESTful&amp;#x98CE;&amp;#x683C;api&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x5305;&amp;#x542B;&amp;#x4E00;&amp;#x4E2A;demo&amp;#x9879;&amp;#x76EE;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x5730;&amp;#x5740;&amp;#xFF1A;&lt;a href=&quot;https://github.com/morrxy/express-demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;express-demo&lt;/a&gt;&amp;#x3002;&amp;#x8FD0;&amp;#x884C;&amp;#x9879;&amp;#x76EE;&amp;#x9700;&amp;#x8981;&amp;#x672C;&amp;#x5730;&amp;#x5B89;&amp;#x88C5;Node.js,MySQL,&amp;#x4E00;&amp;#x4E2A;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7BA1;&amp;#x7406;&amp;#x5DE5;&amp;#x5177;(&amp;#x6211;&amp;#x7528;&amp;#x7684;&amp;#x662F;Sequel Pro),postman&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x4EE4;&amp;#x514B;&amp;#x9686;&amp;#x5230;&amp;#x672C;&amp;#x5730;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/morrxy/express-demo.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;demo&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x6587;&amp;#x7AE0;&amp;#x91CC;&amp;#x7684;&amp;#x6B65;&amp;#x9AA4;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;step1-npm-init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step2-hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step3-module-route&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step4-middleware&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step5-db-access&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step6-db-more&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step7-restful-todos&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x67E5;&amp;#x770B;&amp;#x67D0;&amp;#x6B65;&amp;#x9AA4;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step1-npm-init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&quot;&gt;&lt;a href=&quot;#&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&quot;&gt;&lt;/a&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x9879;&amp;#x76EE;&amp;#x76EE;&amp;#x5F55;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step1-npm-init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir express-todolist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd express-todolist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;npm init&lt;/code&gt;&amp;#x540E;&amp;#x4E00;&amp;#x8DEF;&amp;#x56DE;&amp;#x8F66;&amp;#xFF0C;&amp;#x751F;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;package.json&lt;/code&gt;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7528;&amp;#x4E0E;&amp;#x4FDD;&amp;#x5B58;&amp;#x9879;&amp;#x76EE;&amp;#x4F9D;&amp;#x8D56;&amp;#xFF0C;&amp;#x9879;&amp;#x76EE;&amp;#x63CF;&amp;#x8FF0;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5B89;&amp;#x88C5;Express&quot;&gt;&lt;a href=&quot;#&amp;#x5B89;&amp;#x88C5;Express&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B89;&amp;#x88C5;Express&quot;&gt;&lt;/a&gt;&amp;#x5B89;&amp;#x88C5;Express&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save express&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&quot;&gt;&lt;a href=&quot;#&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&quot;&gt;&lt;/a&gt;&amp;#x542F;&amp;#x52A8;App&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;JSON&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-1&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-1&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step2-hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-1&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-1&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x6587;&amp;#x4EF6;&lt;code&gt;app.js&lt;/code&gt;,&amp;#x4F5C;&amp;#x4E3A;&amp;#x9879;&amp;#x76EE;&amp;#x542F;&amp;#x52A8;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5E76;&amp;#x7F16;&amp;#x8F91;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;express&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&amp;apos;Hello World!&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;Example app listening on port 3000!&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x7528;&lt;code&gt;express()&lt;/code&gt;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;app&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x7684;&lt;code&gt;get&lt;/code&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;app.listen()&lt;/code&gt;&amp;#x542F;&amp;#x52A8;app&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x5728;&amp;#x547D;&amp;#x4EE4;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;,&amp;#x542F;&amp;#x52A8;Node&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x7528;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x8BBF;&amp;#x95EE;&lt;code&gt;http://localhost:3000/&lt;/code&gt;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x54CD;&amp;#x5E94;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;node app.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/hello.png&quot; alt=&quot;&amp;#x54CD;&amp;#x5E94;&amp;#x7ED3;&amp;#x679C;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5907;&amp;#x6CE8;&amp;#xFF1A;&amp;#x60F3;&amp;#x770B;&amp;#x5230;&amp;#x6574;&amp;#x9F50;&amp;#x7684;json&amp;#x7ED3;&amp;#x679C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5B89;&amp;#x88C5;&lt;a href=&quot;https://chrome.google.com/webstore/detail/json-handle/iahnhfdhidomcpggpaimmmahffihkfnj&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8FD9;&amp;#x4E2A;chrom&amp;#x63D2;&amp;#x4EF6;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&quot;&gt;&lt;a href=&quot;#&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&quot;&gt;&lt;/a&gt;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-2&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-2&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step3-module-route&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-2&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-2&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x5B9E;&amp;#x9645;&amp;#x9879;&amp;#x76EE;&amp;#x4F1A;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x4E0D;&amp;#x628A;&amp;#x8DEF;&amp;#x7531;&amp;#x76F4;&amp;#x63A5;&amp;#x653E;&amp;#x5728;&amp;#x542F;&amp;#x52A8;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x6839;&amp;#x636E;&amp;#x9700;&amp;#x8981;&amp;#x5212;&amp;#x5206;&amp;#x6210;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5177;&amp;#x4F53;&amp;#x8DEF;&amp;#x7531;&amp;#x653E;&amp;#x5728;&amp;#x5404;&amp;#x81EA;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4ECE;&amp;#x542F;&amp;#x52A8;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x52A0;&amp;#x8F7D;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x9700;&amp;#x8981;&amp;#x4E24;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&lt;code&gt;user&lt;/code&gt;&amp;#x548C;&lt;code&gt;mission&lt;/code&gt;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x4E0B;&amp;#x5404;&amp;#x81EA;&amp;#x9700;&amp;#x8981;&lt;code&gt;r1&lt;/code&gt;,&lt;code&gt;r2&lt;/code&gt;&amp;#x4E24;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x5373;&amp;#x9700;&amp;#x8981;&amp;#x8FD9;4&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&lt;code&gt;/user/r1&lt;/code&gt;&amp;#xFF0C;&lt;code&gt;/user/r2&lt;/code&gt;,&lt;code&gt;/mission/r1&lt;/code&gt;,&lt;code&gt;/mission/r2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7528;&lt;code&gt;user&lt;/code&gt;&amp;#x5F53;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6A21;&amp;#x5757;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;&lt;code&gt;route&lt;/code&gt;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;s&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x548C;&amp;#x7D22;&amp;#x5F15;&amp;#x5404;&amp;#x81EA;&amp;#x7684;&amp;#x76EE;&amp;#x5F55;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;route&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x6587;&amp;#x4EF6;&lt;code&gt;user.js&lt;/code&gt;,&amp;#x4F5C;&amp;#x4E3A;user&amp;#x6A21;&amp;#x5757;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;route&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;user&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6240;&amp;#x6709;user&amp;#x6A21;&amp;#x5757;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x6587;&amp;#x4EF6;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;/route/user&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;r1.js&lt;/code&gt;&amp;#x548C;&lt;code&gt;r2.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;app.js&amp;#x5F15;&amp;#x5165;user&amp;#x6A21;&amp;#x5757;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;user.js&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = router;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;/r1&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./user/r1&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;/r2&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./user/r2&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;,&amp;#x7528;&lt;code&gt;Express.Router()&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B50;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5BB9;&amp;#x7EB3;&amp;#x6240;&amp;#x6709;&lt;code&gt;/user&lt;/code&gt;&amp;#x4E0B;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5F80;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;get&amp;#x8DEF;&amp;#x7531;&lt;code&gt;/user/r1&lt;/code&gt;&amp;#x548C;&lt;code&gt;/user/r2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;/route/user/r1.js,&amp;#x5B9A;&amp;#x4E49;&amp;#x5177;&amp;#x4F53;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (req, res) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&amp;apos;GET /user/r1 result&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;app.js&amp;#x6DFB;&amp;#x52A0;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5F15;&amp;#x5165;user&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/user&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/user&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6309;&amp;#x4E0A;&amp;#x8FF0;&amp;#x6B65;&amp;#x9AA4;&amp;#x5EFA;&amp;#x7ACB;mission&amp;#x6A21;&amp;#x5757;&amp;#xFF0C;&amp;#x53E6;&amp;#x5916;&amp;#x987A;&amp;#x624B;&amp;#x628A;&amp;#x524D;&amp;#x9762;&amp;#x5BF9;&lt;code&gt;/&lt;/code&gt;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E5F;&amp;#x653E;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x3002;app.js&amp;#x6539;&amp;#x6210;&amp;#x4E86;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;express&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/index&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/user&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/user&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/mission&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/mission&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;Example app listening on port 3000!&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x91CD;&amp;#x542F;app&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;/user/r1,/mission/r1&amp;#x7B49;4&amp;#x4E2A;&amp;#x65B0;&amp;#x8DEF;&amp;#x7531;&amp;#x4E86;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/user-r1.png&quot; alt=&quot;user/r1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&quot;&gt;&lt;a href=&quot;#&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&quot;&gt;&lt;/a&gt;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;a href=&quot;#&amp;#x7B80;&amp;#x4ECB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x4ECB;&lt;/h3&gt;&lt;p&gt;&amp;#x5B98;&amp;#x65B9;&amp;#x4ECB;&amp;#x7ECD;: &lt;a href=&quot;http://expressjs.com/en/guide/using-middleware.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/a&gt;,&lt;a href=&quot;http://expressjs.com/en/guide/writing-middleware.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5199;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5177;&amp;#x4F53;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x90FD;&amp;#x5904;&amp;#x7406;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#xFF0C;&amp;#x4F46;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x6216;&amp;#x67D0;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x4E0B;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x90FD;&amp;#x8FDB;&amp;#x884C;&amp;#x67D0;&amp;#x4E9B;&amp;#x4E1A;&amp;#x52A1;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#x3002;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4E4B;&amp;#x6240;&amp;#x4EE5;&amp;#x53EB;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5176;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x5904;&amp;#x4E8E;&amp;#x63A5;&amp;#x53D7;&amp;#x8BF7;&amp;#x6C42;&amp;#x81F3;&amp;#x8FD4;&amp;#x56DE;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#x4E2D;&amp;#x95F4;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x80FD;&amp;#x8BBF;&amp;#x95EE;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x54CD;&amp;#x5E94;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x548C;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x3002;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x80FD;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x4F55;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1B;&amp;#x80FD;&amp;#x4FEE;&amp;#x6539;&amp;#x8BF7;&amp;#x6C42;&amp;#x548C;&amp;#x54CD;&amp;#x5E94;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF1B;&amp;#x80FD;&amp;#x7ED3;&amp;#x675F;&amp;#x8BF7;&amp;#x6C42;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#xFF1B;&amp;#x80FD;&amp;#x8C03;&amp;#x7528;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x3002;Express&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x548C;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;web&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;Express app&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x8FD9;&amp;#x4E2A;app&amp;#x6709;&amp;#x4E9B;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x5305;&amp;#x62EC;&lt;code&gt;/secret&lt;/code&gt;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8DEF;&amp;#x7531;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x3002;&amp;#x7528;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9700;&amp;#x6C42;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x68C0;&amp;#x6D4B;&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8EAB;&amp;#x4EFD;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8DEF;&amp;#x7531;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF0C;&amp;#x8DF3;&amp;#x8FC7;&amp;#x540E;&amp;#x7EED;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4EA4;&amp;#x51FA;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x6267;&amp;#x884C;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x8EAB;&amp;#x4EFD;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x6210;&amp;#x529F;&amp;#x5219;&amp;#x4EA4;&amp;#x51FA;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#xFF0C;secret&amp;#x8DEF;&amp;#x7531;&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x7ED3;&amp;#x675F;&amp;#x8BF7;&amp;#x6C42;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5931;&amp;#x8D25;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-3&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-3&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step4-middleware&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-3&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-3&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;1&amp;#xFF1A;&amp;#x6309;&amp;#x4E0A;&amp;#x9762;&amp;#x6A21;&amp;#x5757;&amp;#x5316;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;secret&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&lt;/li&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;2&amp;#xFF1A;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;middleware&amp;#x76EE;&amp;#x5F55;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6240;&amp;#x6709;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/li&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;3&amp;#xFF1A;&amp;#x5728;middleware&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E24;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&lt;code&gt;route-test.js&lt;/code&gt;&amp;#x548C;&lt;code&gt;session-test.js&lt;/code&gt;,&amp;#x7528;&amp;#x4E8E;&amp;#x68C0;&amp;#x6D4B;&amp;#x8DEF;&amp;#x7531;&amp;#x548C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8EAB;&amp;#x4EFD;&lt;/li&gt;
&lt;li&gt;&amp;#x6B65;&amp;#x9AA4;4&amp;#xFF1A;&amp;#x5728;app.js&amp;#x91CC;&amp;#x5F15;&amp;#x5165;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3&amp;#x7684;route-test.js:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; url = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;url&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; pathname = url.parse(req.originalUrl).pathname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pathname === &lt;span class=&quot;string&quot;&gt;&amp;apos;/secret&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    next(&lt;span class=&quot;string&quot;&gt;&amp;apos;route&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x4ECE;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x83B7;&amp;#x5F97;&amp;#x8BF7;&amp;#x6C42;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;&amp;#x4E0E;&amp;#x9700;&amp;#x8981;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&amp;#x5BF9;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x5219;&amp;#x7528;&lt;code&gt;next()&lt;/code&gt;&amp;#x628A;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#x8F6C;&amp;#x4EA4;&amp;#x7ED9;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;next(&amp;apos;route&amp;apos;)&lt;/code&gt;&amp;#x8DF3;&amp;#x8FC7;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8F6C;&amp;#x4EA4;&amp;#x5176;&amp;#x4ED6;&amp;#x8DEF;&amp;#x7531;&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3&amp;#x7684;&lt;code&gt;session-test.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; key = req.query.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (key === &lt;span class=&quot;string&quot;&gt;&amp;apos;secretkey&amp;apos;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: &lt;span class=&quot;string&quot;&gt;&amp;apos;access deny!&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x4ECE;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x83B7;&amp;#x53D6;&amp;#x7528;&amp;#x6237;&amp;#x63D0;&amp;#x4EA4;&amp;#x7684;key&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;key&amp;#x5BF9;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6210;&amp;#x529F;&amp;#xFF0C;&amp;#x5219;&amp;#x7528;&lt;code&gt;next()&lt;/code&gt;&amp;#x4EA4;&amp;#x51FA;&amp;#x63A7;&amp;#x5236;&amp;#x6743;&amp;#xFF0C;&amp;#x8F6C;&amp;#x4EA4;/secret&amp;#x7EE7;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x4E2D;&amp;#x6B62;&amp;#x8BF7;&amp;#x6C42;&amp;#x54CD;&amp;#x5E94;&amp;#x5468;&amp;#x671F;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5931;&amp;#x8D25;&amp;#x4FE1;&amp;#x606F;&amp;#x2019;access deny!&amp;#x2019;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;4&amp;#x4E4B;&amp;#x540E;&amp;#x7684;app.js:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;express&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.all(&lt;span class=&quot;string&quot;&gt;&amp;apos;*&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./middleware/route-test&amp;apos;&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./middleware/session-test&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/index&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/user&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/user&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/mission&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/mission&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;string&quot;&gt;&amp;apos;/secret&amp;apos;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./route/secret&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;Example app listening on port 3000!&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;app.all()&lt;/code&gt;&amp;#x4E0E;&lt;code&gt;app.get()&lt;/code&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5339;&amp;#x914D;&amp;#x6240;&amp;#x6709;&amp;#x5F97;http&amp;#x52A8;&amp;#x8BCD;&amp;#x3002;&lt;code&gt;*&lt;/code&gt;&amp;#x5339;&amp;#x914D;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x3002;&amp;#x628A;&amp;#x8FD9;&amp;#x884C;&amp;#x653E;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x4E0A;&amp;#x9762;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x8BF7;&amp;#x6C42;&amp;#x5C31;&amp;#x4F1A;&amp;#x5148;&amp;#x88AB;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E2D;&amp;#x95F4;&amp;#x4EF6;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x91CD;&amp;#x542F;app&amp;#xFF0C;&amp;#x5728;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x6D4B;&amp;#x8BD5;/secret&amp;#x8DEF;&amp;#x7531;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/secret-fail.png&quot; alt=&quot;fail&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/secret-success.png&quot; alt=&quot;success&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Promise&quot;&gt;&lt;a href=&quot;#Promise&quot; class=&quot;headerlink&quot; title=&quot;Promise&quot;&gt;&lt;/a&gt;Promise&lt;/h2&gt;&lt;p&gt;Promise&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x5904;&amp;#x7406;&amp;#x5F02;&amp;#x6B65;io&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x6765;&amp;#x89E3;&amp;#x51B3;Node&amp;#x7684;&amp;#x56DE;&amp;#x8C03;&amp;#x5730;&amp;#x72F1;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x7F16;&amp;#x5199;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#x90FD;&amp;#x5BB9;&amp;#x6613;&amp;#x5F88;&amp;#x591A;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E2A;&amp;#x4ECB;&amp;#x7ECD;&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-promises-and-asynchronous-programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Promises and Asynchronous Programming&lt;/a&gt;&amp;#x3002;bluebird&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;Promise&amp;#x5E93;&amp;#xFF0C;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x5199;&amp;#x8FC7;&amp;#x4E00;&amp;#x7BC7;&amp;#x4F7F;&amp;#x7528;&amp;#x611F;&amp;#x53D7;&amp;#xFF0C;&lt;a href=&quot;http://morrxy.github.io/2016/03/13/bluebird-serendipity/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluebird&amp;#x5E26;&amp;#x7ED9;&amp;#x6211;&amp;#x7684;&amp;#x60CA;&amp;#x559C;&lt;/a&gt;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;demo&amp;#x5C31;&amp;#x7528;bluebird&amp;#x6F14;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8BBF;&amp;#x95EE;&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&quot;&gt;&lt;a href=&quot;#&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&quot;&gt;&lt;/a&gt;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x914D;&amp;#x7F6E;&amp;#x4E0E;&amp;#x6D4B;&amp;#x8BD5;&lt;/h2&gt;&lt;p&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x8FD9;&amp;#x4E2A;app&amp;#x662F;&amp;#x4E2A;todolist&amp;#x7BA1;&amp;#x7406;app&amp;#xFF0C;&amp;#x7528;mysql&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x63D0;&amp;#x4F9B;&amp;#x5BF9;todo&amp;#x8868;&amp;#x7684;&amp;#x8BFB;&amp;#x53D6;&amp;#xFF0C;&amp;#x65B0;&amp;#x589E;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&amp;#x3002;&amp;#x8FD9;&amp;#x8282;&amp;#x914D;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF0C;&amp;#x5E76;&amp;#x7528;/todo/list&amp;#x6D4B;&amp;#x8BD5;&amp;#x3002;&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-4&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-4&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step5-db-access&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-4&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-4&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x5B89;&amp;#x88C5;mysql&amp;#xFF0C;&amp;#x5E76;&amp;#x521B;&amp;#x5EFA;&amp;#x597D;todo&amp;#x8868;&lt;/li&gt;
&lt;li&gt;2.&amp;#x5B89;&amp;#x88C5;bluebird&amp;#x548C;mysql&amp;#xFF0C;bluebird&amp;#x7528;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;Promise&amp;#x8BED;&amp;#x6CD5;&amp;#xFF0C;mysql&amp;#x7528;&amp;#x4E8E;&amp;#x8FDE;&amp;#x63A5;mysql&lt;/li&gt;
&lt;li&gt;3.&amp;#x914D;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;,&amp;#x5E76;&amp;#x7528;/todo/list&amp;#x6D4B;&amp;#x8BD5;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;1:&lt;/p&gt;
&lt;p&gt;&amp;#x672C;&amp;#x5730;&amp;#x5B89;&amp;#x88C5;&amp;#x597D;mysql&amp;#xFF0C;&amp;#x5E76;&amp;#x7528;&amp;#x5982;&amp;#x4E0B;&amp;#x547D;&amp;#x4EE4;&amp;#x542F;&amp;#x52A8;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql.server start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x542F;&amp;#x52A8;&amp;#x6210;&amp;#x529F;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Starting MySQL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. SUCCESS!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E4B;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x4F55;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7BA1;&amp;#x7406;&amp;#x5DE5;&amp;#x5177;(&amp;#x6211;&amp;#x7528;&amp;#x7684;&amp;#x662F;Sequel Pro)&amp;#xFF0C;&amp;#x8FDE;&amp;#x4E0A;&amp;#x672C;&amp;#x5730;mysql&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/connect-local-db.png&quot; alt=&quot;conncet to local db&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x53EB;&lt;code&gt;todolit&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/add-db.png&quot; alt=&quot;add db&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#xFF0C;&amp;#x53EB;&lt;code&gt;todo&lt;/code&gt;&amp;#x3002;&amp;#x8868;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`todo`&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`title`&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x6807;&amp;#x9898;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;`done`&lt;/span&gt; tinyint(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;0&amp;apos;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;1&amp;#x5B8C;&amp;#x6210; 0&amp;#x672A;&amp;#x5B8C;&amp;#x6210;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;`id`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; AUTO_INCREMENT=&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5F80;&amp;#x91CC;&amp;#x9762;&amp;#x624B;&amp;#x52A8;&amp;#x63D2;&amp;#x5165;&amp;#x4E24;&amp;#x6761;&amp;#x6570;&amp;#x636E;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-table.png&quot; alt=&quot;todo table&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;2:&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x9879;&amp;#x76EE;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x6267;&amp;#x884C;&amp;#x5982;&amp;#x4E0B;&amp;#x547D;&amp;#x4EE4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save bluebird mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3-&amp;#x914D;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;:&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x65B0;&amp;#x5EFA;&amp;#x76EE;&amp;#x5F55;&lt;code&gt;config&lt;/code&gt;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x914D;&amp;#x7F6E;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5728;config&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x65B0;&amp;#x5EFA;&lt;code&gt;db.js&lt;/code&gt;&amp;#x7528;&amp;#x4E8E;&amp;#x8FDE;&amp;#x63A5;mysql&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; mysql = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;mysql&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;bluebird&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.promisifyAll(mysql);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.promisifyAll(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;mysql/lib/Connection&amp;apos;&lt;/span&gt;).prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.promisifyAll(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;mysql/lib/Pool&amp;apos;&lt;/span&gt;).prototype);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; local = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host: &lt;span class=&quot;string&quot;&gt;&amp;apos;127.0.0.1&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  user: &lt;span class=&quot;string&quot;&gt;&amp;apos;root&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  password: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  database: &lt;span class=&quot;string&quot;&gt;&amp;apos;todolist&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port: &lt;span class=&quot;number&quot;&gt;3306&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  charset: &lt;span class=&quot;string&quot;&gt;&amp;apos;utf8mb4&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; pool = mysql.createPool(local);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; pool.getConnectionAsync().disposer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;connection&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    connection.release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;mysql&amp;#x81EA;&amp;#x5E26;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#x662F;&amp;#x56DE;&amp;#x8C03;&amp;#x5F0F;&amp;#x7684;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8FDE;&amp;#x63A5;&amp;#x7528;&amp;#x5B8C;&amp;#x4EE5;&amp;#x540E;&amp;#x90FD;&amp;#x6709;&amp;#x624B;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#x3002;&amp;#x53EF;&amp;#x53BB;&lt;a href=&quot;https://www.npmjs.com/package/mysql&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5B98;&amp;#x7F51;&lt;/a&gt;&amp;#x4E86;&amp;#x89E3;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0E;&amp;#x4E0B;&amp;#x8FF0;&amp;#x7684;db&amp;#x8BBF;&amp;#x95EE;&amp;#x65B9;&amp;#x5F0F;&amp;#x5BF9;&amp;#x6BD4;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E00;&amp;#x4E9B;&amp;#x7528;bluebird&amp;#x5E93;&amp;#x8FDE;&amp;#x63A5;mysql&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;bluebird&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;Promisify&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x628A;mysql&amp;#x5305;&amp;#x81EA;&amp;#x5E26;&amp;#x7684;callback&amp;#x65B9;&amp;#x5F0F;&amp;#x8F6C;&amp;#x6210;&amp;#x4E86;promise&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x8BBF;&amp;#x95EE;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x5165;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;Promise&amp;#x94FE;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;bluebird&amp;#x8D44;&amp;#x6E90;&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x5BFC;&amp;#x51FA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDE;&amp;#x63A5;mysql&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F9B;&amp;#x6240;&amp;#x6709;db&amp;#x8BBF;&amp;#x95EE;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&amp;#x65F6;&amp;#x5019;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;Promise.using()&lt;/code&gt;&amp;#x5373;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FDE;&amp;#x5E93;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x7528;&amp;#x7BA1;&amp;#x91CA;&amp;#x653E;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF0C;&amp;#x8FDE;&amp;#x63A5;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x65B9;&amp;#x4FBF;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x7EC6;&amp;#x8282;&amp;#x53EF;&amp;#x53C2;&amp;#x8003;bluebird&amp;#x5B98;&amp;#x65B9;&amp;#x53C2;&amp;#x8003;&amp;#xFF1A;&lt;a href=&quot;http://bluebirdjs.com/docs/api/promise.promisifyall.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;promisifyAll&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/disposer.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8FDE;&amp;#x5E93;&amp;#x4E0E;&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/promise.using.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8D44;&amp;#x6E90;&amp;#x4F7F;&amp;#x7528;&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6B65;&amp;#x9AA4;3-&amp;#x7528;/todo/list&amp;#x6D4B;&amp;#x8BD5;db&amp;#x8BBF;&amp;#x95EE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x7528;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x65B0;&amp;#x5EFA;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&lt;code&gt;todo&lt;/code&gt;&amp;#xFF0C;&amp;#x548C;/todo/list&amp;#x8DEF;&amp;#x7531;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x8FD4;&amp;#x56DE;&amp;#x6240;&amp;#x6709;todo&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;bluebird&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; todoDao = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;../../model/todo&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sendError = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;../../helper/sendError&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (req, res) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getTodoList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then((data) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      data: data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      status: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;ok&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendError(res, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTodoList&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; todoDao.list();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;Promise&amp;#x94FE;&amp;#x63A7;&amp;#x5236;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6D41;&amp;#xFF0C;&amp;#x4F7F;&amp;#x8DEF;&amp;#x7531;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E00;&amp;#x76EE;&amp;#x4E86;&amp;#x7136;&amp;#xFF0C;&amp;#x65B9;&amp;#x4FBF;&amp;#x5F00;&amp;#x53D1;&amp;#x548C;&amp;#x4FEE;&amp;#x6539;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x72EC;&amp;#x7ACB;&amp;#x5230;&amp;#x5355;&amp;#x72EC;&amp;#x7684;model&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#xFF0C;&amp;#x7ED3;&amp;#x6784;&amp;#x4E0E;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x91CD;&amp;#x590D;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x6570;&amp;#x636E;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;/model/todo/list.js:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;bluebird&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; db = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;../../config/db&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.using(db(), conn =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sql = &lt;span class=&quot;string&quot;&gt;`select * from todo`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; conn.queryAsync(sql, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;bluebird&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x8D44;&amp;#x6E90;&amp;#x4F7F;&amp;#x7528;api:&lt;code&gt;using()&lt;/code&gt;,&amp;#x8FD9;&amp;#x91CC;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7684;Promise(using&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;promise),&amp;#x4F7F;&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x878D;&amp;#x5165;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;Promise&amp;#x94FE;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x67E5;&amp;#x5E93;&amp;#x6570;&amp;#x636E;&amp;#x65E0;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x5230;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x591A;&amp;#x4E2A;db&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;&amp;#x53EF;&amp;#x5728;using&amp;#x540E;&amp;#x589E;&amp;#x52A0;&lt;code&gt;.then()&lt;/code&gt;&amp;#x7EE7;&amp;#x7EED;&amp;#x5176;&amp;#x4ED6;io&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = () =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.using(db(), conn =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sql = &lt;span class=&quot;string&quot;&gt;`select * from todo`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; conn.queryAsync(sql, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7528;data&amp;#x7EE7;&amp;#x7EED;&amp;#x5176;&amp;#x4ED6;io&amp;#x64CD;&amp;#x4F5C;,&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Promise&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x597D;&amp;#x5904;&amp;#x662F;&amp;#xFF0C;Promise&amp;#x94FE;&amp;#x4E2D;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#x90FD;&amp;#x80FD;&amp;#x4F20;&amp;#x7ED9;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x4E00;&amp;#x4E2A;Promise&amp;#x94FE;&amp;#x91CC;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E2A;&amp;#x6700;&amp;#x540E;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x51FD;&amp;#x6570;&amp;#x5C31;&amp;#x884C;&amp;#x4E86;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;sendError&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x628A;&amp;#x5B83;&amp;#x653E;&amp;#x8FDB;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x7684;helper&amp;#x76EE;&amp;#x5F55;(&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6240;&amp;#x6709;&amp;#x5F97;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;)&amp;#xFF0C;&amp;#x907F;&amp;#x514D;&amp;#x91CD;&amp;#x590D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x91CD;&amp;#x542F;app&amp;#xFF0C;&amp;#x5728;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x8BBF;&amp;#x95EE;&lt;code&gt;http://localhost:3000/todo/list&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-list.png&quot; alt=&quot;todo list&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&quot;&gt;&lt;a href=&quot;#&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&quot;&gt;&lt;/a&gt;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&lt;/h2&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x6B65;&amp;#x9700;&amp;#x8981;&amp;#x7528;POST&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x63D0;&amp;#x4EA4;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x8981;&amp;#x5B89;&amp;#x88C5;npm&amp;#x5305;&lt;code&gt;body-parser&lt;/code&gt;&amp;#x7528;&amp;#x6765;&amp;#x89E3;&amp;#x6790;&amp;#x6570;&amp;#x636E;,&amp;#x5728;&amp;#x9879;&amp;#x76EE;&amp;#x6839;&amp;#x76EE;&amp;#x5F55;&amp;#x6267;&amp;#x884C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install --save body-parser&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-5&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-5&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step6-db-more&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-5&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-5&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x6309;&amp;#x7167;&amp;#x4E0A;&amp;#x4E00;&amp;#x6B65;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&lt;code&gt;/todo/list&lt;/code&gt;&amp;#x6DFB;&amp;#x52A0;todo&amp;#x65B0;&amp;#x589E;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;api&amp;#xFF0C;&amp;#x5206;&amp;#x522B;&amp;#x662F;&lt;code&gt;/todo/add&lt;/code&gt;,&lt;code&gt;/todo/update&lt;/code&gt;,&lt;code&gt;/todo/remove&lt;/code&gt;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x4E9B;&amp;#x63A5;&amp;#x53E3;&amp;#x7684;method&amp;#x4E0D;&amp;#x662F;get&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7528;&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?utm_source=chrome-ntp-launcher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;postman&lt;/a&gt;&amp;#x4EE3;&amp;#x66FF;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x6D4B;&amp;#x8BD5;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x53C2;&amp;#x6570;&amp;#x548C;&amp;#x6D4B;&amp;#x8BD5;&amp;#x7ED3;&amp;#x679C;&amp;#x5206;&amp;#x522B;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-add-result.png&quot; alt=&quot;add&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-update-result.png&quot; alt=&quot;update&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-remove-result.png&quot; alt=&quot;remove&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;&amp;#x6240;&amp;#x6709;todo&amp;#x7684;api&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;a href=&quot;#RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&quot; class=&quot;headerlink&quot; title=&quot;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;/a&gt;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;todo&amp;#x63A5;&amp;#x53E3;&lt;/h2&gt;&lt;p&gt;&amp;#x4E0A;&amp;#x8FF0;todo&amp;#x63A5;&amp;#x53E3;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5217;&amp;#x8868;&amp;#xFF1A;GET &lt;code&gt;/todos&lt;/code&gt;, &amp;#x663E;&amp;#x793A;&amp;#x6240;&amp;#x6709;todo&lt;br&gt;&amp;#x589E;&amp;#x52A0;&amp;#xFF1A;POST &lt;code&gt;/todos&lt;/code&gt;, &amp;#x65B0;&amp;#x589E;todo&lt;br&gt;&amp;#x5355;&amp;#x4E2A;&amp;#xFF1A;GET &lt;code&gt;/todos/:todo_id&lt;/code&gt;, &amp;#x663E;&amp;#x793A;&amp;#x67D0;&amp;#x4E2A;todo&lt;br&gt;&amp;#x4FEE;&amp;#x6539;&amp;#xFF1A;PUT &lt;code&gt;/todos/:todo_id&lt;/code&gt;, &amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;todo&lt;br&gt;&amp;#x5220;&amp;#x9664;&amp;#xFF1A;DELETE &lt;code&gt;/todos/:todo_id&lt;/code&gt;, &amp;#x5220;&amp;#x9664;&amp;#x67D0;&amp;#x4E2A;todo&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-6&quot;&gt;&lt;a href=&quot;#&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;-6&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&quot;&gt;&lt;/a&gt;&amp;#x67E5;&amp;#x770B;&amp;#x6E90;&amp;#x7801;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout step7-restful-todos&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;&amp;#x6B65;&amp;#x9AA4;-6&quot;&gt;&lt;a href=&quot;#&amp;#x6B65;&amp;#x9AA4;-6&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B65;&amp;#x9AA4;&quot;&gt;&lt;/a&gt;&amp;#x6B65;&amp;#x9AA4;&lt;/h3&gt;&lt;p&gt;&amp;#x4E0E;&amp;#x4E0A;&amp;#x9762;&amp;#x975E;restful&amp;#x5B9E;&amp;#x73B0;&amp;#x76F8;&amp;#x6BD4;&amp;#xFF0C;model&amp;#x91CC;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8BBF;&amp;#x95EE;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x590D;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x4E0D;&amp;#x540C;&amp;#x4E4B;&amp;#x5904;&amp;#xFF1A;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7D22;&amp;#x5F15;&amp;#xFF1B;&amp;#x8DEF;&amp;#x7531;&amp;#x53C2;&amp;#x6570;&amp;#x83B7;&amp;#x53D6;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8DEF;&amp;#x7531;&amp;#x6A21;&amp;#x5757;&amp;#x7D22;&amp;#x5F15;&lt;code&gt;todos.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;express&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = router;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;).get(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/list&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;).post(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/add&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/:todo_id&amp;apos;&lt;/span&gt;).get(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/single&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/:todo_id&amp;apos;&lt;/span&gt;).put(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/update&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.route(&lt;span class=&quot;string&quot;&gt;&amp;apos;/:todo_id&amp;apos;&lt;/span&gt;).delete(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./todos/remove&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;route&lt;/code&gt;&amp;#x662F;Express&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;api&amp;#xFF0C;&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A0;&amp;#x4E0A;&amp;#x5192;&amp;#x53F7;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x52A8;&amp;#x6001;&amp;#x8DEF;&amp;#x7531;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&lt;code&gt;/:todo_id&lt;/code&gt;&amp;#xFF0C;&amp;#x540E;&amp;#x9762;&amp;#x518D;&amp;#x8DDF;&amp;#x7740;&amp;#x52A8;&amp;#x8BCD;&amp;#x548C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x52A8;&amp;#x6001;&amp;#x8DEF;&amp;#x7531;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;req.params.todo_id&lt;/code&gt;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; todoId = req.params.todo_id;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x770B;&amp;#x4E0B;RESTful&amp;#x98CE;&amp;#x683C;&amp;#x7684;postman&amp;#x53C2;&amp;#x6570;&amp;#x5F62;&amp;#x5F0F;&amp;#x548C;&amp;#x6D4B;&amp;#x8BD5;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-list.png&quot; alt=&quot;list&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-add.png&quot; alt=&quot;add&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-single.png&quot; alt=&quot;single&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-update.png&quot; alt=&quot;update&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/06/03/express-demo/todo-rest-delete.png&quot; alt=&quot;delete&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5168;&amp;#x6587;&amp;#x5B8C;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x6F14;&amp;#x793A;&amp;#x7528;Express&amp;#x642D;&amp;#x5EFA;Api&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5185;&amp;#x5BB9;&amp;#x6D89;&amp;#x53CA;&amp;#xFF1A
    
    </summary>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="Express.js" scheme="http://yoursite.com/tags/Express-js/"/>
    
  </entry>
  
  <entry>
    <title>【译】Brave Clojure 第八章:写宏</title>
    <link href="http://yoursite.com/2016/05/20/braveclojure-writing-macros/"/>
    <id>http://yoursite.com/2016/05/20/braveclojure-writing-macros/</id>
    <published>2016-05-20T09:03:14.000Z</published>
    <updated>2016-08-04T13:56:01.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x516B;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/writing-macros/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing Macros&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morrxy.github.io/tags/Clojure-For-The-Branve-And-True/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5176;&amp;#x4ED6;&amp;#x7AE0;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;Clojure&amp;#x5B8F;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6A21;&amp;#x578B;(&amp;#x7279;&amp;#x522B;&amp;#x662F;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;)&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x770B;&lt;a href=&quot;http://www.braveclojure.com/read-and-eval&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x539F;&amp;#x6587;&amp;#x7B2C;&amp;#x4E03;&amp;#x7AE0;&lt;/a&gt;,&amp;#x6216;&lt;a href=&quot;http://morrxy.github.io/2016/05/11/braveclojure-read-and-eval/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x82F1;&amp;#x4E2D;&amp;#x5BF9;&amp;#x7167;&amp;#x7FFB;&amp;#x8BD1;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;Clojure&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x7B2C;3&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/do-things/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Clojure Crash Course&lt;/a&gt;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x67D0;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&lt;a href=&quot;http://clojuredocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coojuredocs&lt;/a&gt;&amp;#x7684;&amp;#x53C2;&amp;#x8003;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6587;&amp;#x6863;&amp;#x90FD;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;When I was 18, I got a job as a night auditor at a hotel in Santa Fe, New Mexico, working four nights a week from 11 pm till 7 am. After a few months of this sleepless schedule, my emotions took on a life of their own. One night, at about 3 am, I was watching an infomercial for a product claiming to restore men&amp;#x2019;s hair. As I watched the story of a formerly bald individual, I became overwhelmed with sincere joy. &amp;#x201C;At last!&amp;#x201D; my brain gushed. &amp;#x201C;This man has gotten the love and success he deserves! What an incredible product, giving hope to the hopeless!&amp;#x201D;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;18&amp;#x5C81;&amp;#x7684;&amp;#x4E8B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just as a potion would allow me to temporarily alter my fundamental nature, macros allow you to modify Clojure in ways that just aren&amp;#x2019;t possible with other languages. With macros, you can extend Clojure to suit your problem space, building up the language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x7528;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x4FEE;&amp;#x6539;Clojure&amp;#x3002;&amp;#x6709;&amp;#x4E86;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x6269;&amp;#x5C55;Clojure&amp;#x4F7F;&amp;#x5176;&amp;#x7B26;&amp;#x5408;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x589E;&amp;#x5F3A;&amp;#x8FD9;&amp;#x95E8;&amp;#x8BED;&amp;#x8A00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this chapter, you&amp;#x2019;ll thoroughly examine how to write macros, starting with basic examples and moving up in complexity. You&amp;#x2019;ll close by donning your make-believe cap and using macros to validate customer orders in your imaginary online potion store.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x4F1A;&amp;#x900F;&amp;#x5F7B;&amp;#x8BB2;&amp;#x89E3;&amp;#x5199;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4F1A;&amp;#x7528;&amp;#x5B8F;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5BA2;&amp;#x6237;&amp;#x8BA2;&amp;#x5355;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;By the end of the chapter, you&amp;#x2019;ll understand all the tools you&amp;#x2019;ll use to write macros: quote, syntax quote, unquote, unquote splicing (aka the pi&amp;#xF1;ata tool), and gensym. You&amp;#x2019;ll also learn about the dangers lying in wait for unsuspecting macro authors: double evaluation, variable capture, and macro infection.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B66;&amp;#x4E60;&amp;#x5B8C;&amp;#x8FD9;&amp;#x7AE0;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x7406;&amp;#x89E3;&amp;#x6240;&amp;#x6709;&amp;#x5199;&amp;#x5B8F;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x5F15;&amp;#x7528;(quote),&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;(syntax quote),&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;(unquote),&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;(unquote splicing)&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;(gensym)&amp;#x3002;&amp;#x4F60;&amp;#x4E5F;&amp;#x4F1A;&amp;#x4E86;&amp;#x89E3;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x5019;&amp;#x9047;&amp;#x5230;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4F20;&amp;#x67D3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros Are Essential&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x7684;&amp;#x5FC5;&amp;#x8981;&amp;#x6027;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Before you start writing macros, I want to help you put them in the proper context. Yes, macros are cooler than a polar bear&amp;#x2019;s toenails, but you shouldn&amp;#x2019;t think of macros as some esoteric tool you pull out when you feel like getting extra fancy with your code. In fact, macros allow Clojure to derive a lot of its built-in functionality from a tiny core of functions and special forms. Take &lt;code&gt;when&lt;/code&gt;, for example. &lt;code&gt;when&lt;/code&gt; has this general form:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x5199;&amp;#x5B8F;&amp;#x524D;&amp;#xFF0C;&amp;#x4F60;&amp;#x5E94;&amp;#x8BE5;&amp;#x5BF9;&amp;#x5B8F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#x6709;&amp;#x4E2A;&amp;#x6070;&amp;#x5F53;&amp;#x7684;&amp;#x8BA4;&amp;#x8BC6;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x9177;&amp;#xFF0C;&amp;#x4F46;&amp;#x4E0D;&amp;#x5E94;&amp;#x8BE5;&amp;#x628A;&amp;#x5B83;&amp;#x5F53;&amp;#x6210;&amp;#x4EC0;&amp;#x4E48;&amp;#x6DF1;&amp;#x5965;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5229;&amp;#x7528;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7528;&amp;#x975E;&amp;#x5E38;&amp;#x5C11;&amp;#x91CF;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5C31;&amp;#x80FD;&amp;#x5F97;&amp;#x5230;&amp;#x8BB8;&amp;#x591A;Clojure&amp;#x5185;&amp;#x7F6E;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;when&lt;/code&gt;&amp;#x901A;&amp;#x5E38;&amp;#x662F;&amp;#x8FD9;&amp;#x79CD;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;when&lt;/span&gt;&lt;/span&gt; boolean-expression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  expression-x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You might think that &lt;code&gt;when&lt;/code&gt; is a special form like &lt;code&gt;if&lt;/code&gt;. Well guess what? It&amp;#x2019;s not! In most other languages, you can only create conditional expressions using special keywords, and there&amp;#x2019;s no way to create your own conditional operators. However, &lt;code&gt;when&lt;/code&gt; is actually a macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x8BB8;&amp;#x4F60;&amp;#x89C9;&amp;#x5F97;&lt;code&gt;when&lt;/code&gt;&amp;#x50CF;&lt;code&gt;if&lt;/code&gt;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x662F;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x5B83;&amp;#x4E0D;&amp;#x662F;&amp;#x3002;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EA;&amp;#x80FD;&amp;#x7528;&amp;#x4E13;&amp;#x95E8;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#x521B;&amp;#x5EFA;&amp;#x6761;&amp;#x4EF6;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x65E0;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x4F60;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x6761;&amp;#x4EF6;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x3002;&amp;#x4F46;&lt;code&gt;when&lt;/code&gt;&amp;#x662F;&amp;#x4E2A;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this macro expansion, you can see that &lt;code&gt;when&lt;/code&gt; is implemented in terms of &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x89C1;&amp;#xFF0C;&lt;code&gt;when&lt;/code&gt;&amp;#x662F;&amp;#x7528;&lt;code&gt;if&lt;/code&gt;&amp;#x548C;&lt;code&gt;do&lt;/code&gt;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(macroexpand &amp;apos;(when boolean-expression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                expression-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                expression-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                expression-3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (if boolean-expression&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (do expression-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           expression-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           expression-3))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This shows that macros are an integral part of Clojure development&amp;#x2014;they&amp;#x2019;re even used to provide fundamental operations. Macros aren&amp;#x2019;t reserved for exotic special cases; you should think of macro writing as just another tool in your tool satchel. As you learn to write your own macros, you&amp;#x2019;ll see how they allow you to extend the language even further so that it fits the shape of your particular problem domain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8BF4;&amp;#x660E;&amp;#x5B8F;&amp;#x662F;Clojure&amp;#x5F00;&amp;#x53D1;&amp;#x5FC5;&amp;#x4E0D;&amp;#x53EF;&amp;#x5C11;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x2013;&amp;#x751A;&amp;#x81F3;&amp;#x7528;&amp;#x6765;&amp;#x63D0;&amp;#x4F9B;&amp;#x57FA;&amp;#x7840;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x5B8F;&amp;#x4E0D;&amp;#x662F;&amp;#x7559;&amp;#x7ED9;&amp;#x7279;&amp;#x6B8A;&amp;#x60C5;&amp;#x51B5;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x5B8F;&amp;#x53EA;&amp;#x662F;&amp;#x5DE5;&amp;#x5177;&amp;#x888B;&amp;#x91CC;&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x4F60;&amp;#x81EA;&amp;#x5DF1;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x5B8F;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x6269;&amp;#x5C55;&amp;#x8BED;&amp;#x8A00;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4E4B;&amp;#x7B26;&amp;#x5408;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anatomy of a Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x7ED3;&amp;#x6784;&amp;#x5206;&amp;#x6790;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Macro definitions look much like function definitions. They have a name, an optional document string, an argument list, and a body. The body will almost always return a list. This makes sense because macros are a way of transforming a data structure into a form Clojure can evaluate, and Clojure uses lists to represent function calls, special form calls, and macro calls. You can use any function, macro, or special form within the macro body, and you call macros just like you would a function or special form.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x5F88;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x9009;&amp;#x6587;&amp;#x6863;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5217;&amp;#x8868;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3B;&amp;#x4F53;&amp;#x3002;&amp;#x4E3B;&amp;#x4F53;&amp;#x51E0;&amp;#x4E4E;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x6709;&amp;#x610F;&amp;#x4E49;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x628A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x80FD;&amp;#x591F;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;Clojure&amp;#x7528;list&amp;#x4EE3;&amp;#x8868;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x548C;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x5728;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x4F55;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x50CF;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x90A3;&amp;#x6837;&amp;#x8C03;&amp;#x7528;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As an example, here&amp;#x2019;s our old friend the &lt;code&gt;infix&lt;/code&gt; macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&lt;code&gt;infix&lt;/code&gt;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Use this macro when you pine for the notation of your childhood&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [infixed]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infixed) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infixed) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infixed)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This macro rearranges a list into the correct order for infix notation. Here&amp;#x2019;s an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x628A;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#x7684;list&amp;#x91CD;&amp;#x65B0;&amp;#x5B89;&amp;#x6392;&amp;#x6210;&amp;#x6B63;&amp;#x786E;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;One key difference between functions and macros is that function arguments are fully evaluated before they&amp;#x2019;re passed to the function, whereas macros receive arguments as unevaluated data. You can see this in the example. If you tried evaluating &lt;code&gt;(1 + 1)&lt;/code&gt; on its own, you would get an exception. However, because you&amp;#x2019;re making a macro call, the unevaluated list &lt;code&gt;(1 + 1)&lt;/code&gt; is passed to &lt;code&gt;infix&lt;/code&gt;. Then the macro can use &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;, and &lt;code&gt;last&lt;/code&gt; to rearrange the list so Clojure can evaluate it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x5B8F;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5173;&amp;#x952E;&amp;#x5DEE;&amp;#x522B;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x53C2;&amp;#x6570;&amp;#x88AB;&amp;#x5168;&amp;#x90E8;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x518D;&amp;#x4F20;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x800C;&amp;#x5B8F;&amp;#x53C2;&amp;#x6570;&amp;#x4E0D;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x70B9;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5C1D;&amp;#x8BD5;&amp;#x6C42;&amp;#x503C;&lt;code&gt;(1 + 1)&lt;/code&gt;&amp;#x672C;&amp;#x8EAB;&amp;#xFF0C;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&amp;#x4F46;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FDB;&amp;#x884C;&amp;#x7684;&amp;#x662F;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x672A;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list&lt;code&gt;(1 +  1)&lt;/code&gt;&amp;#x4F20;&amp;#x7ED9;&amp;#x4E86;&lt;code&gt;infxi&lt;/code&gt;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x5B8F;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;first&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;&amp;#x91CD;&amp;#x65B0;&amp;#x5B89;&amp;#x6392;list,&amp;#x6240;&amp;#x4EE5;Clojure&amp;#x80FD;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By expanding the macro, you can see that &lt;code&gt;infix&lt;/code&gt; rearranges &lt;code&gt;(1 + 1)&lt;/code&gt; into &lt;code&gt;(+ 1 1)&lt;/code&gt;. Handy!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x4EE5;&amp;#x540E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&lt;code&gt;infix&lt;/code&gt;&amp;#x628A;&lt;code&gt;(1 + 1)&lt;/code&gt;&amp;#x91CD;&amp;#x65B0;&amp;#x5B89;&amp;#x6392;&amp;#x6210;&amp;#x4E86;&lt;code&gt;(+ 1 1)&lt;/code&gt;&amp;#x3002;&amp;#x5F88;&amp;#x65B9;&amp;#x4FBF;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also use argument destructuring in macro definitions, just like you can with functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x91CC;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix-2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [[operand1 op operand2]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; op operand1 operand2))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Destructuring arguments lets you succinctly bind values to symbols based on their position in a sequential argument. Here, &lt;code&gt;infix-2&lt;/code&gt; takes a sequential data structure as an argument and destructures by position so the first value is named &lt;code&gt;operand1&lt;/code&gt;, the second value is named &lt;code&gt;op&lt;/code&gt;, and the third value is named &lt;code&gt;operand2&lt;/code&gt; within the macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;&amp;#x8BA9;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x57FA;&amp;#x4E8E;&amp;#x503C;&amp;#x5728;&amp;#x5E8F;&amp;#x5217;&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;infix-2&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x57FA;&amp;#x4E8E;&amp;#x4F4D;&amp;#x7F6E;&amp;#x89E3;&amp;#x6784;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x5728;&amp;#x5B8F;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x4E3A;&lt;code&gt;operand1&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x503C;&amp;#x547D;&amp;#x540D;&amp;#x4E3A;&lt;code&gt;op&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x503C;&amp;#x547D;&amp;#x540D;&amp;#x4E3A;&lt;code&gt;operand2&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also create multiple-arity macros, and in fact the fundamental Boolean operations &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; are defined as macros. Here&amp;#x2019;s &lt;code&gt;and&lt;/code&gt;&amp;#x2019;s source code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x80FD;&amp;#x521B;&amp;#x5EFA;&amp;#x6709;&amp;#x591A;&amp;#x79CD;&amp;#x53C2;&amp;#x6570;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5B8F;&amp;#xFF0C;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x57FA;&amp;#x7840;&amp;#x5E03;&amp;#x5C14;&amp;#x64CD;&amp;#x4F5C;&lt;code&gt;and&lt;/code&gt;&amp;#x548C;&lt;code&gt;or&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x7528;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&lt;code&gt;and&lt;/code&gt;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defmacro and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;quot;Evaluates exprs one at a time, from left to right. If a form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  returns logical false (nil or false), and returns that value and&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  doesn&amp;apos;t evaluate any of the other expressions, otherwise it returns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  the value of the last expr. (and) returns true.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {:added &amp;quot;1.0&amp;quot;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ([] true)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ([x] x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ([x &amp;amp; next]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   `(let [and# ~x]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (if and# (and ~@next) and#))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;There&amp;#x2019;s a lot of stuff going on in this example, including the symbols &lt;code&gt;` &lt;/code&gt; and &lt;code&gt;~@&lt;/code&gt;, which you&amp;#x2019;ll learn about soon. What&amp;#x2019;s important to realize for now is that there are three macro bodies here: a 0-arity macro body that always returns &lt;code&gt;true&lt;/code&gt;, a 1-arity macro body that returns the operand, and an n-arity macro body that recursively calls itself. That&amp;#x2019;s right: macros can be recursive, and they also can use rest args (&lt;code&gt;&amp;amp; next&lt;/code&gt; in the n-arity macro body), just like functions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x540E;&amp;#x9762;&amp;#x4F1A;&amp;#x5B66;&amp;#x4E60;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;` &lt;/code&gt;&amp;#x548C;&lt;code&gt;~@&lt;/code&gt;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x662F;&amp;#x8BA4;&amp;#x8BC6;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#xFF1A;&amp;#x65E0;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;true&lt;/code&gt;&amp;#x7684;&amp;#xFF1B;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1B;n&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x9012;&amp;#xFF0C;&amp;#x5F52;&amp;#x8C03;&amp;#x7528;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x9012;&amp;#x5F52;&amp;#x800C;&amp;#x4E14;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x5269;&amp;#x4F59;&amp;#x53C2;&amp;#x6570;(n&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#x91CC;&amp;#x7684;&lt;code&gt;&amp;amp; next&lt;/code&gt;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now that you&amp;#x2019;re comfortable with the anatomy of macros, it&amp;#x2019;s time to strap yourself to your thinking mast Odysseus-style and learn to write macro bodies.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x719F;&amp;#x6089;&amp;#x4E86;&amp;#x5B8F;&amp;#x7684;&amp;#x89E3;&amp;#x6784;&amp;#x540E;&amp;#xFF0C;&amp;#x7EE7;&amp;#x7EED;&amp;#x5B66;&amp;#x4E60;&amp;#x5199;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Building Lists for Evaluation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;a href=&quot;#&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;/a&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Macro writing is all about building a list for Clojure to evaluate, and it requires a kind of inversion to your normal way of thinking. For one, you&amp;#x2019;ll often need to quote expressions to get unevaluated data structures in your final list (we&amp;#x2019;ll get back to that in a moment). More generally, you&amp;#x2019;ll need to be extra careful about the difference between a &lt;em&gt;symbol&lt;/em&gt; and its &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x4E00;&amp;#x5207;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list,&amp;#x8FD9;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x4E00;&amp;#x79CD;&amp;#x4E0E;&amp;#x5E73;&amp;#x5E38;&amp;#x76F8;&amp;#x53CD;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x601D;&amp;#x8003;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;list&amp;#x91CC;&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x5F15;&amp;#x7528;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x66F4;&amp;#x666E;&amp;#x904D;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x4F60;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&amp;#x4E0E;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5DEE;&amp;#x522B;&amp;#x7279;&amp;#x522B;&amp;#x5C0F;&amp;#x5FC3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Distinguishing Symbols and Values&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&quot;&gt;&lt;a href=&quot;#&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&quot;&gt;&lt;/a&gt;&amp;#x533A;&amp;#x5206;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Say you want to create a macro that takes an expression and both prints and returns its value. (This differs from &lt;code&gt;println&lt;/code&gt; in that &lt;code&gt;println&lt;/code&gt; always returns &lt;code&gt;nil&lt;/code&gt;.) You want your macro to return lists that look like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x4F60;&amp;#x5E0C;&amp;#x671B;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x5176;&amp;#x503C;&amp;#x3002;(&amp;#x4E0E;&lt;code&gt;println&lt;/code&gt;&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x4E4B;&amp;#x5904;&amp;#x662F;&lt;code&gt;println&lt;/code&gt;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;nil&lt;/code&gt;&amp;#x3002;)&amp;#x4F60;&amp;#x60F3;&amp;#x8BA9;&amp;#x4F60;&amp;#x7684;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;list&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Your first version of the macro might look like this, using the &lt;code&gt;list&lt;/code&gt; function to create the list that Clojure should evaluate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x7248;&amp;#x7684;&amp;#x5B8F;&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x521B;&amp;#x5EFA;&amp;#x6C42;&amp;#x503C;&amp;#x5217;&amp;#x8868;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; my-print-whoopsie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; let [result expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; println result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       result))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; CompilerException java.lang.RuntimeException: Can&amp;apos;t take value of a macro: #&amp;apos;clojure.core/let&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, if you tried this, you&amp;#x2019;d get the exception Can&amp;#x2019;t take the value of a macro: #&amp;#x2019;clojure.core/let. What&amp;#x2019;s going on here?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x8BD5;&amp;#x4E00;&amp;#x4E0B;&amp;#x4F60;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;Can&amp;#x2019;t take the value of a macro: #&amp;#x2019;clojure.core/let&amp;#x3002;&amp;#x600E;&amp;#x4E48;&amp;#x56DE;&amp;#x4E8B;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The reason this happens is that your macro body tries to get the &lt;em&gt;value&lt;/em&gt; that the &lt;em&gt;symbol&lt;/em&gt; &lt;code&gt;let&lt;/code&gt; refers to, whereas what you actually want to do is return the &lt;code&gt;let&lt;/code&gt; symbol itself. There are other problems, too: you&amp;#x2019;re trying to get the value of &lt;code&gt;result&lt;/code&gt;, which is unbound, and you&amp;#x2019;re trying to get the value of &lt;code&gt;println&lt;/code&gt; instead of returning its symbol. Here&amp;#x2019;s how you would write the macro to do what you want:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x5B8F;&amp;#x4E3B;&amp;#x4F53;&amp;#x91CC;&amp;#x5728;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&lt;code&gt;let&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#xFF0C;&amp;#x800C;&amp;#x4F60;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;let&lt;/code&gt;&amp;#x672C;&amp;#x8EAB;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&lt;code&gt;result&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x672A;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF1B;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&lt;code&gt;println&lt;/code&gt;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4F60;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; my-print-whoopsie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;let [&amp;apos;result expression]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;println &amp;apos;result)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;apos;result))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, you&amp;#x2019;re quoting each symbol you want to use as a symbol by prefixing it with the single quote character, &lt;code&gt;&amp;apos;&lt;/code&gt;. This tells Clojure to &lt;em&gt;turn off&lt;/em&gt; evaluation for whatever follows, in this case preventing Clojure from trying to resolve the symbols and instead just returning the symbols. The ability to use quoting to turn off evaluation is central to writing macros, so let&amp;#x2019;s give the topic its own section.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F15;&amp;#x7528;(quote)&amp;#x4E86;&amp;#x6BCF;&amp;#x4E2A;&amp;#x60F3;&amp;#x7528;&amp;#x4F5C;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5728;&amp;#x5B83;&amp;#x524D;&amp;#x9762;&amp;#x9644;&amp;#x52A0;&amp;#x4E86;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&lt;code&gt;&amp;apos;&lt;/code&gt;&amp;#x3002;&amp;#x65E0;&amp;#x8BBA;&amp;#x5F15;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;Clojure&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x963B;&amp;#x6B62;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#x529F;&amp;#x80FD;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5199;&amp;#x5B8F;&amp;#x975E;&amp;#x5E38;&amp;#x91CD;&amp;#x8981;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x5355;&amp;#x72EC;&amp;#x8BA8;&amp;#x8BBA;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Simple Quoting&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;You&amp;#x2019;ll almost always use quoting within your macros to obtain an unevaluated symbol. Let&amp;#x2019;s go through a brief refresher on quoting and then see how you might use it in a macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x83B7;&amp;#x5F97;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5B8F;&amp;#x91CC;&amp;#x51E0;&amp;#x4E4E;&amp;#x603B;&amp;#x662F;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x7B80;&amp;#x5355;&amp;#x56DE;&amp;#x987E;&amp;#x4E00;&amp;#x4E0B;&amp;#x5F15;&amp;#x7528;(quote)&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x770B;&amp;#x770B;&amp;#x5B8F;&amp;#x91CC;&amp;#x600E;&amp;#x4E48;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First, here&amp;#x2019;s a simple function call with no quoting:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x6CA1;&amp;#x6709;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If we add quote at the beginning, it returns an unevaluated data structure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x524D;&amp;#x9762;&amp;#x52A0;&amp;#x4E0A;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here in the returned list, &lt;code&gt;+&lt;/code&gt; is a symbol. If we evaluate this plus symbol, it yields the plus function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&lt;code&gt;+&lt;/code&gt;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x662F;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;lt;core$_PLUS_ clojure.core$_PLUS_@47b36583&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Whereas if we quote the plus symbol, it just yields the plus symbol:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F15;&amp;#x7528;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x53EA;&amp;#x751F;&amp;#x6210;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; +)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Evaluating an unbound symbol raises an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x672A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sweating-to-the-oldies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; Unable to resolve symbol: sweating-to-the-oldies in this context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;But quoting the symbol returns a symbol regardless of whether the symbol has a value associated with it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x5F15;&amp;#x7528;&amp;#x7B26;&amp;#x53F7;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8BBA;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x503C;&amp;#x4E0E;&amp;#x5B83;&amp;#x5173;&amp;#x8054;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; sweating-to-the-oldies)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; sweating-to-the-oldies&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The single quote character is a reader macro for (quote x):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#x662F;(quote x)&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;dr-jekyll-and-richard-simmons&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; dr-jekyll-and-richard-simmons&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can see quoting at work in the when macro. This is when&amp;#x2019;s actual source code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5B8F;&lt;code&gt;when&lt;/code&gt;&amp;#x91CC;&amp;#xFF0C;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;code&gt;when&lt;/code&gt;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; when&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Evaluates test. If logical true, evaluates body in an implicit do.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:added&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [test &amp;amp; body]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;if test (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;cons&lt;/span&gt;&lt;/span&gt; &amp;apos;do body)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that the macro definition quotes both &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;do&lt;/code&gt;. That&amp;#x2019;s because you want these symbols to be in the final list that &lt;code&gt;when&lt;/code&gt; returns for evaluation. Here&amp;#x2019;s an example of what that returned list might look like:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&lt;code&gt;if&lt;/code&gt;&amp;#x548C;&lt;code&gt;do&lt;/code&gt;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F60;&amp;#x5E0C;&amp;#x671B;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7B26;&amp;#x53F7;&amp;#x51FA;&amp;#x73B0;&amp;#x5728;&lt;code&gt;when&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6700;&amp;#x7EC8;list&amp;#x91CC;&amp;#x3002;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;list&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(macroexpand &amp;apos;(when (the-cows-come :home)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (call me :pappy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (slap me :silly)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (if (the-cows-come :home)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (do (call me :pappy)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (slap me :silly)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s another example of source code for a built-in macro, this time for &lt;code&gt;unless&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5167;&amp;#x5EFA;&amp;#x5B8F;&lt;code&gt;unless&lt;/code&gt;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; unless&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Inverted &amp;apos;if&amp;apos;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [test &amp;amp; branches]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;conj&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reverse&lt;/span&gt;&lt;/span&gt; branches) test &amp;apos;if))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Again, you have to quote &lt;code&gt;if&lt;/code&gt; because you want the unevaluated symbol to be placed in the resulting list, like this one:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt;&amp;#x8FD8;&amp;#x662F;&amp;#x5FC5;&amp;#x987B;&amp;#x88AB;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;list&amp;#x91CC;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x672A;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(macroexpand &amp;apos;(unless (done-been slapped? me)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (slap me :silly)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      (say &amp;quot;I reckon that&amp;apos;ll learn me&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (if (done-been slapped? me)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (say &amp;quot;I reckon that&amp;apos;ll learn me&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (slap me :silly))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In many cases, you&amp;#x2019;ll use simple quoting like this when writing macros, but most often you&amp;#x2019;ll use the more powerful syntax quote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x591A;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5199;&amp;#x5B8F;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7B80;&amp;#x5355;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F46;&amp;#x66F4;&amp;#x7ECF;&amp;#x5E38;&amp;#x7684;&amp;#x662F;&amp;#x4F7F;&amp;#x7528;&amp;#x66F4;&amp;#x5F3A;&amp;#x5927;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax Quoting&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;So far, you&amp;#x2019;ve seen macros that build up lists by using the &lt;code&gt;list&lt;/code&gt; function to create a list along with &lt;code&gt;&amp;apos;&lt;/code&gt; (quote), and functions that operate on lists like &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt;, and so on. Indeed, you could write macros that way until the cows come home. Sometimes, though, it leads to tedious and verbose code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x6B64;&amp;#x4E3A;&amp;#x6B62;&amp;#xFF0C;&amp;#x4F60;&amp;#x89C1;&amp;#x5230;&amp;#x7684;&amp;#x5B8F;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#xFF1A;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x52A0;&amp;#x4E0A;&lt;code&gt;&amp;#x2018;&lt;/code&gt;(&amp;#x5F15;&amp;#x7528;)&amp;#x548C;&amp;#x64CD;&amp;#x4F5C;list&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;first&lt;/code&gt;,&lt;code&gt;second&lt;/code&gt;,&lt;code&gt;last&lt;/code&gt;&amp;#x7B49;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#x5B8F;&amp;#x65E2;&amp;#x6162;&amp;#x53C8;&amp;#x7E41;&amp;#x7410;&amp;#x65E0;&amp;#x804A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax quoting returns unevaluated data structures, similar to normal quoting. However, there are two important differences. One difference is that syntax quoting will return the &lt;em&gt;fully qualified&lt;/em&gt; symbols (that is, with the symbol&amp;#x2019;s namespace included). Let&amp;#x2019;s compare quoting and syntax quoting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4E0E;&amp;#x666E;&amp;#x901A;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;&amp;#x4F46;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x533A;&amp;#x522B;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&lt;em&gt;&amp;#x5B8C;&amp;#x5168;&amp;#x89C4;&amp;#x8303;&lt;/em&gt;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;(&amp;#x5373;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;)&amp;#x3002;&amp;#x6BD4;&amp;#x8F83;&amp;#x4E00;&amp;#x4E0B;&amp;#x4E8C;&amp;#x8005;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quoting does not include a namespace if your code doesn&amp;#x2019;t include a namespace:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x6CA1;&amp;#x6709;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x5F15;&amp;#x7528;&amp;#x4E0D;&amp;#x5305;&amp;#x542B;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Write out the namespace, and it&amp;#x2019;ll be returned by normal quote:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x6709;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x666E;&amp;#x901A;&amp;#x5F15;&amp;#x7528;&amp;#x7ED3;&amp;#x679C;&amp;#x91CC;&amp;#x624D;&amp;#x6709;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;clojure.core/+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; clojure.core/+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax quoting will always include the symbol&amp;#x2019;s full namespace:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5B8C;&amp;#x6574;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; clojure.core/+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Quoting a list recursively quotes all the elements:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;list&amp;#x9012;&amp;#x5F52;&amp;#x5730;&amp;#x5F15;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x6210;&amp;#x5458;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntax quoting a list recursively syntax quotes all the elements:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;list&amp;#x9012;&amp;#x5F52;&amp;#x5730;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x6210;&amp;#x5458;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The reason syntax quotes include the namespace is to help you avoid name collisions, a topic covered in Chapter 6.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5305;&amp;#x542B;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x907F;&amp;#x514D;&amp;#x547D;&amp;#x540D;&amp;#x51B2;&amp;#x7A81;&amp;#xFF0C;&amp;#x7B2C;6&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FC7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The other difference between quoting and syntax quoting is that the latter allows you to unquote forms using the tilde, &lt;code&gt;~&lt;/code&gt;. It&amp;#x2019;s kind of like kryptonite in that way: whenever Superman is around kryptonite, his powers disappear. Whenever a tilde appears within a syntax-quoted form, the syntax quote&amp;#x2019;s power to return unevaluated, fully namespaced forms disappears. Here&amp;#x2019;s an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x91CC;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#xFF0C;&lt;code&gt;~&lt;/code&gt;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x8D85;&amp;#x4EBA;&amp;#x6328;&amp;#x7740;&amp;#x6C2A;&amp;#x661F;&amp;#x77F3;&amp;#x80FD;&amp;#x529B;&amp;#x5C31;&amp;#x4F1A;&amp;#x6D88;&amp;#x5931;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x53EA;&amp;#x8981;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#x51FA;&amp;#x73B0;&amp;#x5728;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5185;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x672A;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x5B8C;&amp;#x6574;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x80FD;&amp;#x529B;&amp;#x5C31;&amp;#x4F1A;&amp;#x6D88;&amp;#x5931;&amp;#x3002;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 ~(inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Because it comes after the tilde, &lt;code&gt;(inc 1)&lt;/code&gt; is evaluated instead of being quoted. Without the unquote, syntax quoting returns the unevaluated form with fully qualified symbols:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;&lt;code&gt;(inc 1)&lt;/code&gt;&amp;#x5728;&amp;#x6CE2;&amp;#x6D6A;&amp;#x7B26;&amp;#x540E;&amp;#x9762;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x88AB;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x8FD4;&amp;#x56DE;&amp;#x5B8C;&amp;#x5168;&amp;#x89C4;&amp;#x8303;&amp;#x7684;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 (inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 (clojure.core/inc 1))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you&amp;#x2019;re familiar with string interpolation, you can think of syntax quoting/unquoting similarly. In both cases, you&amp;#x2019;re creating a kind of template, placing a few variables within a larger, static structure. For example, in Ruby you can create the string &lt;code&gt;&amp;quot;Churn your butter, Jebediah!&amp;quot;&lt;/code&gt; through concatenation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x719F;&amp;#x6089;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6CE8;&amp;#x5165;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;/&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x4E0E;&amp;#x5176;&amp;#x7C7B;&amp;#x4F3C;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x90FD;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x79CD;&amp;#x6A21;&amp;#x7248;&amp;#xFF0C;&amp;#x5728;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#xFF0C;&amp;#x9759;&amp;#x6001;&amp;#x7ED3;&amp;#x6784;&amp;#x91CC;&amp;#x653E;&amp;#x5165;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x7528;Ruby,&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x8FDE;&amp;#x63A5;&amp;#x521B;&amp;#x5EFA;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;Churn your butter, Jebediah!&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name = &lt;span class=&quot;string&quot;&gt;&amp;quot;Jebediah&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;Churn your butter, &amp;quot;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;or through interpolation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6216;&amp;#x4F7F;&amp;#x7528;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6CE8;&amp;#x5165;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;Churn your butter, &lt;span class=&quot;subst&quot;&gt;#{name}&lt;/span&gt;!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the same way that string interpolation leads to clearer and more concise code, syntax quoting and unquoting allow you to create lists more clearly and concisely. Compare using the &lt;code&gt;list&lt;/code&gt; function, shown first, with using syntax quoting:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x6CE8;&amp;#x5165;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#xFF0C;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x4E5F;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x3002;&amp;#x6BD4;&amp;#x8F83;&amp;#x4E00;&amp;#x4E0B;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E0E;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(list &amp;apos;+ 1 (inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`(+ 1 ~(inc 1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, the syntax-quote version is more concise. Also, its visual form is closer to the final form of the list, making it easier to understand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x5176;&amp;#x89C6;&amp;#x89C9;&amp;#x5F62;&amp;#x72B6;&amp;#x66F4;&amp;#x63A5;&amp;#x8FD1;&amp;#x6700;&amp;#x7EC8;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F7F;&amp;#x5B83;&amp;#x66F4;&amp;#x597D;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using Syntax Quoting in a Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Now that you have a good handle on how syntax quoting works, take a look at the &lt;code&gt;code-critic&lt;/code&gt; macro. You&amp;#x2019;re going to write a more concise version using syntax quoting.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x4F60;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&lt;code&gt;code-critic&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x4F60;&amp;#x5C06;&amp;#x8981;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Phrases are courtesy Hermes Conrad from Futurama&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;println&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&amp;quot;Great squid of Madrid, this is bad code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;quote bad))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;println&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet gorilla of Manila, this is good code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;quote good))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;code-critic&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Great squid of Madrid, this is bad code: (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Sweet gorilla of Manila, this is good code: (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Just looking at all those tedious repetitions of &lt;code&gt;list&lt;/code&gt; and single quotes makes me cringe. But if you rewrite &lt;code&gt;code-critic&lt;/code&gt; using syntax quoting, you can make it sleek and concise:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x770B;&amp;#x90A3;&amp;#x4E9B;&amp;#x91CD;&amp;#x590D;&amp;#x70E6;&amp;#x4EBA;&amp;#x7684;&lt;code&gt;list&lt;/code&gt;&amp;#x548C;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x91CD;&amp;#x5199;&lt;code&gt;code-critic&lt;/code&gt;,&amp;#x4F1A;&amp;#x66F4;&amp;#x6574;&amp;#x9F50;&amp;#x7B80;&amp;#x6D01;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Phrases are courtesy Hermes Conrad from Futurama&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Great squid of Madrid, this is bad code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~bad))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet gorilla of Manila, this is good code:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~good))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, you want to quote everything except for the symbols &lt;code&gt;good&lt;/code&gt; and &lt;code&gt;bad&lt;/code&gt;. In the original version, you have to quote each piece individ&amp;#xAD;ually and explicitly place it in a list in an unwieldy fashion, just to prevent those two symbols from being quoted. With syntax quoting, you can just wrap the entire &lt;code&gt;do&lt;/code&gt; expression in a quote and simply unquote the two symbols that you want to evaluate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8981;&amp;#x5F15;&amp;#x7528;&amp;#x9664;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;good&lt;/code&gt;&amp;#x548C;&lt;code&gt;bad&lt;/code&gt;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4E1C;&amp;#x897F;&amp;#x3002;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x91CC;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5F97;&amp;#x4E0D;&amp;#x5355;&amp;#x72EC;&amp;#x5F15;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5E76;&amp;#x653E;&amp;#x5728;list&amp;#x91CC;&amp;#x3002;&amp;#x6709;&amp;#x4E86;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5427;&amp;#x6574;&amp;#x4E2A;&lt;code&gt;do&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#xFF0C;&amp;#x518D;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x90A3;&amp;#x4E9B;&amp;#x9700;&amp;#x8981;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And thus concludes the introduction to the mechanics of writing a macro! Sweet sacred boa of Western and Eastern Samoa, that was a lot!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x673A;&amp;#x5236;&amp;#x5C31;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E86;&amp;#xFF0C;&amp;#x771F;&amp;#x4E0D;&amp;#x5C11;&amp;#x554A;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To sum up, macros receive unevaluated, arbitrary data structures as arguments and return data structures that Clojure evaluates. When defining your macro, you can use argument destructuring just like you can with functions and &lt;code&gt;let&lt;/code&gt; bindings. You can also write multiple-arity and recursive macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x603B;&amp;#x7ED3;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5B8F;&amp;#x63A5;&amp;#x53D7;&amp;#x4EFB;&amp;#x610F;&amp;#x7684;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x5B9A;&amp;#x4E49;&amp;#x5B8F;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;&amp;#x548C;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x8DDF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x591A;&amp;#x5957;&amp;#x53C2;&amp;#x6570;&amp;#x548C;&amp;#x9012;&amp;#x5F52;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most of the time, your macros will return lists. You can build up the &lt;code&gt;list&lt;/code&gt; to be returned by using list functions or by using syntax quoting. Syntax quoting usually leads to code that&amp;#x2019;s clearer and more concise because it lets you create a template of the data structure you want to return that&amp;#x2019;s easier to parse visually. Whether you use syntax quoting or plain quoting, it&amp;#x2019;s important to be clear about the distinction between a symbol and the value it evaluates to when building up your list. And if you want your macro to return multiple forms for Clojure to evaluate, make sure to wrap them in a &lt;code&gt;do&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;list&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;list&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5EFA;&amp;#x7ACB;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#xFF0C;&amp;#x7B80;&amp;#x6D01;&amp;#xFF0C;&amp;#x89C6;&amp;#x89C9;&amp;#x4E0A;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x8FA8;&amp;#x8BA4;&amp;#x3002;&amp;#x4E0D;&amp;#x7BA1;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x8FD8;&amp;#x662F;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x5728;&amp;#x5EFA;&amp;#x7ACB;list&amp;#x65F6;&amp;#x5019;&amp;#x4F60;&amp;#x8981;&amp;#x533A;&amp;#x5206;&amp;#x6E05;&amp;#x695A;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x503C;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5E0C;&amp;#x671B;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x591A;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8981;&amp;#x786E;&amp;#x4FDD;&amp;#x7528;&lt;code&gt;do&lt;/code&gt;&amp;#x628A;&amp;#x4ED6;&amp;#x4EEC;&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Refactoring a Macro and Unquote Splicing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x6784;&amp;#x5B8F;&amp;#x4E0E;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;That &lt;code&gt;code-critic&lt;/code&gt; macro in the preceding section could still use some improvement. Look at the duplication! The two &lt;code&gt;println&lt;/code&gt; calls are nearly identical. Let&amp;#x2019;s clean that up. First, let&amp;#x2019;s create a function to generate those &lt;code&gt;println&lt;/code&gt; lists. Functions are easier to think about and play with than macros, so it&amp;#x2019;s often a good idea to move macro guts to helper functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x4E00;&amp;#x8282;&amp;#x7684;&lt;code&gt;code-critic&lt;/code&gt;&amp;#x5B8F;&amp;#x8FD8;&amp;#x80FD;&amp;#x4F18;&amp;#x5316;&amp;#x3002;&amp;#x770B;&amp;#x4E0B;&amp;#x91CD;&amp;#x590D;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x4E24;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x51E0;&amp;#x4E4E;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x5F00;&amp;#x59CB;&amp;#x6E05;&amp;#x7406;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x751F;&amp;#x6210;&amp;#x90A3;&amp;#x4E9B;&lt;code&gt;println&lt;/code&gt;list&amp;#x3002;&amp;#x51FD;&amp;#x6570;&amp;#x6BD4;&amp;#x5B8F;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x601D;&amp;#x8003;&amp;#x548C;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7ECF;&amp;#x5E38;&amp;#x628A;&amp;#x5B8F;&amp;#x5185;&amp;#x90E8;&amp;#x90E8;&amp;#x5206;&amp;#x79FB;&amp;#x5230;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;&amp;#x91CC;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; criticize-code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [criticism code]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; ~criticism (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~code)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; ~(&lt;span class=&quot;name&quot;&gt;criticize-code&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Cursed bacteria of Liberia, this is bad code:&amp;quot;&lt;/span&gt; bad)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ~(&lt;span class=&quot;name&quot;&gt;criticize-code&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet sacred boa of Western and Eastern Samoa, this is good code:&amp;quot;&lt;/span&gt; good)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice how the &lt;code&gt;criticize-code&lt;/code&gt; function returns a syntax-quoted list. This is how you build up the list that the macro will return.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x51FD;&amp;#x6570;&lt;code&gt;criticize-code&lt;/code&gt;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;list&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x6784;&amp;#x5EFA;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;list&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There&amp;#x2019;s more room for improvement, though. The code still has multiple, nearly identical calls to a function. In a situation like this where you want to apply the same function to a collection of values, it makes sense to use a seq function like &lt;code&gt;map&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x800C;&amp;#x8FD8;&amp;#x6709;&amp;#x63D0;&amp;#x5347;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x4ECD;&amp;#x7136;&amp;#x6709;&amp;#x591A;&amp;#x6B21;&amp;#x51E0;&amp;#x4E4E;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&amp;#x503C;&amp;#x7684;&amp;#x96C6;&amp;#x5408;&amp;#x8C03;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;map&lt;/code&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [bad good]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; ~(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; criticize-code %)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             [[&lt;span class=&quot;string&quot;&gt;&amp;quot;Great squid of Madrid, this is bad code:&amp;quot;&lt;/span&gt; bad]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              [&lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet gorilla of Manila, this is good code:&amp;quot;&lt;/span&gt; good]])))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is looking a little better. You&amp;#x2019;re mapping over each criticism/code pair and applying the &lt;code&gt;criticize-code&lt;/code&gt; function to the pair. Let&amp;#x2019;s try to run the code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x770B;&amp;#x8D77;&amp;#x6765;&amp;#x597D;&amp;#x70B9;&amp;#x4E86;&amp;#x3002;&amp;#x5BF9;&amp;#x6BCF;&amp;#x5BF9;criticism/code&amp;#x8C03;&amp;#x7528;&lt;code&gt;criticize-code&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5C1D;&amp;#x8BD5;&amp;#x8FD0;&amp;#x884C;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;code-critic&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; NullPointerException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Oh no! That didn&amp;#x2019;t work at all! What happened? The problem is that &lt;code&gt;map&lt;/code&gt; returns a list, and in this case, it returned a list of &lt;code&gt;println&lt;/code&gt; expressions. We just want the result of each &lt;code&gt;println&lt;/code&gt; call, but instead, this code sticks both results in a list and then tries to evaluate that list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FA;&amp;#x73B0;&amp;#x5F02;&amp;#x5E38;&amp;#x4E86;&amp;#xFF0C;&amp;#x4EC0;&amp;#x4E48;&amp;#x60C5;&amp;#x51B5;&amp;#xFF1F;&amp;#x95EE;&amp;#x9898;&amp;#x51FA;&amp;#x5728;&lt;code&gt;map&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;list,&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;list&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x53EA;&amp;#x662F;&amp;#x6BCF;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x628A;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7ED3;&amp;#x679C;&amp;#x653E;&amp;#x5728;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#x91CC;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In other words, as it&amp;#x2019;s evaluating this code, Clojure gets to something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6362;&amp;#x53E5;&amp;#x8BDD;&amp;#x8BF4;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#xFF0C;Clojure&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ((&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;criticism&amp;quot;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;criticism&amp;quot;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;then evaluates the first &lt;code&gt;println&lt;/code&gt; call to give us this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;criticism&amp;quot;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;and after evaluating the second &lt;code&gt;println&lt;/code&gt; call, does this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the cause of the exception. &lt;code&gt;println&lt;/code&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, so we end up with something like &lt;code&gt;(nil nil)&lt;/code&gt;. &lt;code&gt;nil&lt;/code&gt; isn&amp;#x2019;t callable, and we get a &lt;code&gt;NullPointerException&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x5F02;&amp;#x5E38;&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#xFF0C;&lt;code&gt;println&lt;/code&gt;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&lt;code&gt;nil&lt;/code&gt;,&amp;#x6700;&amp;#x540E;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x662F;&lt;code&gt;(nil nil)&lt;/code&gt;&amp;#x3002;&lt;code&gt;nil&lt;/code&gt;&amp;#x4E0D;&amp;#x53EF;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&lt;code&gt;NullPointerException&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What an inconvenience! But as it happens, unquote splicing was invented precisely to handle this kind of situation. Unquote splicing is performed with &lt;code&gt;~@&lt;/code&gt;. If you merely unquote a list, this is what you get:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x592A;&amp;#x4E0D;&amp;#x65B9;&amp;#x4FBF;&amp;#x4E86;&amp;#xFF01;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x662F;&amp;#x4E13;&amp;#x95E8;&amp;#x53D1;&amp;#x660E;&amp;#x51FA;&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x7684;&amp;#x3002;&amp;#x7528;&lt;code&gt;~@&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x662F;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ ~(list 1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ (1 2 3))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, if you use unquote splicing, this is what you get:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(+ ~@(list 1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/+ 1 2 3)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Unquote splicing unwraps a seqable data structure, placing its contents directly within the enclosing syntax-quoted data structure. It&amp;#x2019;s like the &lt;code&gt;~@&lt;/code&gt; is a sledgehammer and whatever follows it is a pi&amp;#xF1;ata, and the result is the most terrifying and awesome party you&amp;#x2019;ve ever been to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x6253;&amp;#x5F00;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x5E8F;&amp;#x5217;&amp;#x5316;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x628A;&amp;#x5176;&amp;#x5185;&amp;#x5BB9;&amp;#x76F4;&amp;#x63A5;&amp;#x653E;&amp;#x5728;&amp;#x5305;&amp;#x542B;&amp;#x4ED6;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x91CC;&amp;#x3002;&lt;code&gt;~@&lt;/code&gt;&amp;#x5C31;&amp;#x50CF;&amp;#x4E2A;&amp;#x9524;&amp;#x5B50;&amp;#xFF0C;&amp;#x8DDF;&amp;#x5728;&amp;#x5B83;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x5C31;&amp;#x50CF;&amp;#x4E2A;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%9A%AE%E7%B4%8D%E5%A1%94&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x76AE;&amp;#x7EB3;&amp;#x5854;&amp;#x76D2;&amp;#x5B50;&lt;/a&gt;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x53EF;&amp;#x60F3;&amp;#x800C;&amp;#x77E5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Anyway, if you use unquote splicing in your code critic, then everything will work great:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;,&amp;#x5C31;&amp;#x4E00;&amp;#x5207;ok&amp;#x4E86;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; code-critic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [good bad]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; ~@(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;apply&lt;/span&gt;&lt;/span&gt; criticize-code %)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              [[&lt;span class=&quot;string&quot;&gt;&amp;quot;Sweet lion of Zion, this is bad code:&amp;quot;&lt;/span&gt; bad]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               [&lt;span class=&quot;string&quot;&gt;&amp;quot;Great cow of Moscow, this is good code:&amp;quot;&lt;/span&gt; good]])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;code-critic&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Sweet lion of Zion, this is bad code: (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Great cow of Moscow, this is good code: (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Woohoo! You&amp;#x2019;ve successfully extracted repetitive code into a function and made your macro code cleaner. Sweet guinea pig of Winnipeg, that is good code!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x54C7;&amp;#xFF01;&amp;#x4F60;&amp;#x6210;&amp;#x529F;&amp;#x5730;&amp;#x628A;&amp;#x91CD;&amp;#x590D;&amp;#x4EE3;&amp;#x7801;&amp;#x63D0;&amp;#x53D6;&amp;#x51FA;&amp;#x6765;&amp;#x653E;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x5B8F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x52A0;&amp;#x6E05;&amp;#x6670;&amp;#x3002;&amp;#x5E72;&amp;#x7684;&amp;#x6F02;&amp;#x4EAE;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Things to Watch Out For&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;a href=&quot;#&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;/a&gt;&amp;#x7559;&amp;#x610F;&amp;#x63D0;&amp;#x9632;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Macros have a couple of sneaky gotchas that you should be aware of. In this section, you&amp;#x2019;ll learn about some macro pitfalls and how to avoid them. I hope you haven&amp;#x2019;t unstrapped yourself from your thinking mast.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BB2;&amp;#x8FF0;&amp;#x51E0;&amp;#x4E2A;&amp;#x5B8F;&amp;#x91CC;&amp;#x9690;&amp;#x853D;&amp;#x9677;&amp;#x9631;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x7279;&amp;#x522B;&amp;#x6CE8;&amp;#x610F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Variable Capture&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&quot;&gt;&lt;a href=&quot;#&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&quot;&gt;&lt;/a&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Variable capture&lt;/em&gt; occurs when a macro introduces a binding that, unknown to the macro&amp;#x2019;s user, eclipses an existing binding. For example, in the following code, a macro mischievously introduces its own &lt;code&gt;let&lt;/code&gt; binding, and that messes with the code:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5B8F;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x5B8F;&amp;#x7528;&amp;#x6237;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#xFF0C;&amp;#x5B8F;&amp;#x91CC;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x66F4;&amp;#x9AD8;&amp;#x800C;&amp;#x5C4F;&amp;#x853D;&amp;#x6389;&amp;#x5916;&amp;#x9762;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x5B8F;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; message &lt;span class=&quot;string&quot;&gt;&amp;quot;Good job!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; with-mischief&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; stuff-to-do]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;concat&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; &amp;apos;let [&amp;apos;message &lt;span class=&quot;string&quot;&gt;&amp;quot;Oh, big deal!&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          stuff-to-do))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;with-mischief&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s how I feel about that thing you did: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Here&amp;apos;s how I feel about that thing you did: Oh, big deal!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;println&lt;/code&gt; call references the symbol &lt;code&gt;message&lt;/code&gt;, which we think is bound to the string &lt;code&gt;&amp;quot;Good job!&amp;quot;&lt;/code&gt;. However, the &lt;code&gt;with-mischief&lt;/code&gt; macro has created a new binding for &lt;code&gt;message&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x5F15;&amp;#x7528;&amp;#x4E86;&amp;#x88AB;&amp;#x8BA4;&amp;#x4E3A;&amp;#x662F;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;Good job!&amp;quot;&lt;/code&gt;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;message&lt;/code&gt;&amp;#x3002;&amp;#x4F46;&lt;code&gt;with-mischief&lt;/code&gt;&amp;#x5B8F;&amp;#x4E3A;&lt;code&gt;message&lt;/code&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Notice that this macro didn&amp;#x2019;t use syntax quoting. Doing so would result in an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x6CA1;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x7528;&amp;#x4E86;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; message &lt;span class=&quot;string&quot;&gt;&amp;quot;Good job!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; with-mischief&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; stuff-to-do]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [message &lt;span class=&quot;string&quot;&gt;&amp;quot;Oh, big deal!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ~@stuff-to-do))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;with-mischief&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s how I feel about that thing you did: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; Exception: Can&amp;apos;t let qualified name: user/message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This exception is for your own good: syntax quoting is designed to prevent you from accidentally capturing variables within macros. If you want to introduce &lt;code&gt;let&lt;/code&gt; bindings in your macro, you can use a &lt;em&gt;gensym&lt;/em&gt;. The &lt;code&gt;gensym&lt;/code&gt; function produces unique symbols on each successive call:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F02;&amp;#x5E38;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x4F60;&amp;#x597D;&amp;#xFF1A;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x4E48;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7684;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x4E0D;&amp;#x4F1A;&amp;#x610F;&amp;#x5916;&amp;#x6355;&amp;#x83B7;&amp;#x5B8F;&amp;#x5185;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x7528;&lt;code&gt;let&lt;/code&gt;&amp;#x5728;&amp;#x5B8F;&amp;#x5185;&amp;#x5F15;&amp;#x5165;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&lt;/em&gt;&amp;#x3002;&lt;code&gt;gensym&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x6BCF;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;&amp;#x552F;&amp;#x4E00;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; G__655&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; G__658&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also pass a symbol prefix:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F20;&amp;#x5165;&amp;#x7B26;&amp;#x53F7;&amp;#x524D;&amp;#x7F00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt; &amp;apos;message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; message4760&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt; &amp;apos;message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; message4763&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s how you could rewrite &lt;code&gt;with-mischief&lt;/code&gt; to be less mischievous:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x91CD;&amp;#x5199;&amp;#x7684;&lt;code&gt;with-mischief&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; without-mischief&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;amp; stuff-to-do]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [macro-message (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;gensym&lt;/span&gt;&lt;/span&gt; &amp;apos;message)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [~macro-message &lt;span class=&quot;string&quot;&gt;&amp;quot;Oh, big deal!&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ~@stuff-to-do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I still need to say: &amp;quot;&lt;/span&gt; ~macro-message))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;without-mischief&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Here&amp;apos;s how I feel about that thing you did: &amp;quot;&lt;/span&gt; message))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; Here&amp;apos;s how I feel about that thing you did:  Good job!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; I still need to say:  Oh, big deal!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This example avoids variable capture by using &lt;code&gt;gensym&lt;/code&gt; to create a new, unique symbol that then gets bound to &lt;code&gt;macro-message&lt;/code&gt;. Within the syntax-quoted &lt;code&gt;let&lt;/code&gt; expression, &lt;code&gt;macro-message&lt;/code&gt; is unquoted, resolving to the gensym&amp;#x2019;d symbol. This gensym&amp;#x2019;d symbol is distinct from any symbols within &lt;code&gt;stuff-to-do&lt;/code&gt;, so you avoid variable capture. Because this is such a common pattern, you can use an auto-gensym. Auto-gensyms are more concise and convenient ways to use gensyms:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;gensym&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#x552F;&amp;#x4E00;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&lt;code&gt;macro-message&lt;/code&gt;,&amp;#x8FD9;&amp;#x5C31;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x3002;&amp;#x5728;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&lt;code&gt;macro-message&lt;/code&gt;&amp;#x88AB;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x90A3;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&lt;code&gt;stuff-to-do&lt;/code&gt;&amp;#x91CC;&amp;#x7684;&amp;#x4EFB;&amp;#x4F55;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x975E;&amp;#x5E38;&amp;#x666E;&amp;#x904D;&amp;#x7684;&amp;#x6A21;&amp;#x5F0F;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x3002;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x7528;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;`(blarg# blarg#)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(blarg__2869__auto__ blarg__2869__auto__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;`(let [name# &amp;quot;Larry Potter&amp;quot;] name#)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (clojure.core/let [name__2872__auto__ &amp;quot;Larry Potter&amp;quot;] name__2872__auto__)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this example, you create an auto-gensym by appending a hash mark (or &lt;em&gt;hashtag&lt;/em&gt;, if you must insist) to a symbol within a syntax-quoted list. Clojure automatically ensures that each instance of x&lt;code&gt;#&lt;/code&gt; resolves to the same symbol within the same syntax-quoted list, that each instance of y&lt;code&gt;#&lt;/code&gt; resolves similarly, and so on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x91CC;&amp;#x6709;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x589E;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E95;&amp;#x53F7;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x3002;Clojure&amp;#x81EA;&amp;#x52A8;&amp;#x786E;&amp;#x4FDD;&amp;#x5728;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;list&amp;#x91CC;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;x&lt;code&gt;#&lt;/code&gt;&amp;#x90FD;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;y&lt;code&gt;#&lt;/code&gt;&amp;#x4E5F;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x8BF8;&amp;#x5982;&amp;#x6B64;&amp;#x7C7B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;gensym&lt;/code&gt; and auto-gensym are both used all the time when writing macros, and they allow you to avoid variable capture.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x7ECF;&amp;#x5E38;&amp;#x4F1A;&amp;#x7528;&amp;#x5230;&lt;code&gt;gensym&lt;/code&gt;&amp;#x548C;auto-gensym&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x907F;&amp;#x514D;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Double Evaluation&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&quot;&gt;&lt;a href=&quot;#&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&quot;&gt;&lt;/a&gt;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Another gotcha to watch out for when writing macros is &lt;em&gt;double evaluation&lt;/em&gt;, which occurs when a form passed to a macro as an argument gets evaluated more than once. Consider the following:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x9700;&amp;#x8981;&amp;#x5C0F;&amp;#x5FC3;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#x662F;&amp;#xFF0C;&amp;#x5F53;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5C31;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; report&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-try]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; ~to-try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt; ~to-try)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt; ~to-try)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;;; Thread/sleep takes a number of milliseconds to sleep for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This code is meant to test its argument for truthiness. If the argument is truthy, it&amp;#x2019;s considered successful; if it&amp;#x2019;s falsey, it&amp;#x2019;s unsuccessful. The macro prints whether or not its argument was successful. In this case, you would actually sleep for two seconds because &lt;code&gt;(Thread/sleep 1000)&lt;/code&gt; gets evaluated twice: once right after &lt;code&gt;if&lt;/code&gt; and again when &lt;code&gt;println&lt;/code&gt; gets called. This happens because the code &lt;code&gt;(do (Thread/sleep 1000) (+ 1 1))&lt;/code&gt; is repeated throughout the macro expansion. It&amp;#x2019;s as if you&amp;#x2019;d written this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x60F3;&amp;#x8981;&amp;#x6D4B;&amp;#x8BD5;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x771F;&amp;#x4F2A;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x771F;&amp;#xFF0C;&amp;#x5219;&amp;#x89C6;&amp;#x4E3A;&amp;#x6210;&amp;#x529F;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x89C6;&amp;#x4E3A;&amp;#x5931;&amp;#x8D25;&amp;#x3002;&amp;#x5B8F;&amp;#x6253;&amp;#x5370;&amp;#x51FA;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x5426;&amp;#x6210;&amp;#x529F;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4F11;&amp;#x7720;&amp;#x4E86;&amp;#x4E24;&amp;#x79D2;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&lt;code&gt;(Thread/sleep 1000)&lt;/code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E24;&amp;#x6B21;&amp;#xFF1A;&lt;code&gt;if&lt;/code&gt;&amp;#x540E;&amp;#x9762;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&lt;code&gt;println&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;&amp;#x5019;&amp;#x4E00;&amp;#x6B21;&amp;#x3002;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4EE3;&amp;#x7801;&lt;code&gt;(do (Thread/sleep 1000) (+ 1 1))&lt;/code&gt;&amp;#x88AB;&amp;#x91CD;&amp;#x590D;&amp;#x4E86;&amp;#xFF0C;&amp;#x5C31;&amp;#x597D;&amp;#x50CF;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#x4E00;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;Thread/sleep&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;#x201C;Big deal!&amp;#x201D; your inner example critic says. Well, if your code did something like transfer money between bank accounts, this would be a very big deal. Here&amp;#x2019;s how you could avoid this problem:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x94F6;&amp;#x884C;&amp;#x8D26;&amp;#x53F7;&amp;#x95F4;&amp;#x8F6C;&amp;#x8D26;&amp;#xFF0C;&amp;#x8FD9;&amp;#x53EF;&amp;#x662F;&amp;#x5927;&amp;#x95EE;&amp;#x9898;&amp;#xFF01;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x907F;&amp;#x514D;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; report&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-try]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [result# ~to-try]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; result#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt; result#)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; ~to-try) &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt; result#))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;By placing &lt;code&gt;to-try&lt;/code&gt; in a &lt;code&gt;let&lt;/code&gt; expression, you only evaluate that code once and bind the result to an auto-gensym&amp;#x2019;d symbol, &lt;code&gt;result#&lt;/code&gt;, which you can now reference without reevaluating the &lt;code&gt;to-try&lt;/code&gt; code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x628A;&lt;code&gt;to-try&lt;/code&gt;&amp;#x653E;&amp;#x5728;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x91CC;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x5E76;&amp;#x628A;&amp;#x7ED3;&amp;#x679C;&amp;#x4E0E;&amp;#x81EA;&amp;#x52A8;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;result#&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F15;&amp;#x7528;&lt;code&gt;result#&lt;/code&gt;&amp;#x800C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5BF9;&lt;code&gt;to-try&lt;/code&gt;&amp;#x91CD;&amp;#x590D;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros All the Way Down&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&amp;#x8D8A;&amp;#x5199;&amp;#x8D8A;&amp;#x591A;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One subtle pitfall of using macros is that you can end up having to write more and more of them to get anything done. This is a consequence of the fact that macro expansion happens before evaluation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x9690;&amp;#x853D;&amp;#x7684;&amp;#x5B8F;&amp;#x9677;&amp;#x9631;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x5B8C;&amp;#x6210;&amp;#x4E00;&amp;#x4EF6;&amp;#x4E8B;&amp;#xFF0C;&amp;#x8981;&amp;#x5199;&amp;#x7684;&amp;#x5B8F;&amp;#x53EF;&amp;#x80FD;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x591A;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x5B8F;&amp;#x5148;&amp;#x5C55;&amp;#x5F00;&amp;#x518D;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, let&amp;#x2019;s say you wanted to &lt;code&gt;doseq&lt;/code&gt; using the &lt;code&gt;report&lt;/code&gt; macro. Instead of multiple calls to report:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x4F60;&amp;#x60F3;&amp;#x5728;&lt;code&gt;doseq&lt;/code&gt;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;report&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x591A;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&lt;code&gt;report&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 1) was successful: true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 2) was not successful: false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;let&amp;#x2019;s iterate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&lt;code&gt;doseq&lt;/code&gt;&amp;#x8FED;&amp;#x4EE3;&amp;#x8C03;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;doseq&lt;/span&gt;&lt;/span&gt; [code [&amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;apos;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; code))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; code was successful: (= 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; code was successful: (= 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The report macro works fine when we pass it functions individually, but when we use &lt;code&gt;doseq&lt;/code&gt; to iterate &lt;code&gt;report&lt;/code&gt; over multiple functions, it&amp;#x2019;s a worthless failure. Here&amp;#x2019;s what a macro expansion for one of the &lt;code&gt;doseq&lt;/code&gt; iterations would look like:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;report&amp;#x5B8F;&amp;#x5355;&amp;#x72EC;&amp;#x4F7F;&amp;#x7528;&amp;#x65F6;&amp;#x6CA1;&amp;#x6709;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x4F46;&amp;#x7528;&amp;#x5728;&lt;code&gt;doseq&lt;/code&gt;&amp;#x91CC;&amp;#x8FED;&amp;#x4EE3;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;&amp;#x5019;&amp;#x5931;&amp;#x8D25;&amp;#x4E86;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&lt;code&gt;doseq&lt;/code&gt;&amp;#x4E2D;&amp;#x67D0;&amp;#x4E00;&amp;#x6B21;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7684;&amp;#x6837;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &amp;apos;code &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt; code)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt; &amp;apos;code &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt; code))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, &lt;code&gt;report&lt;/code&gt; receives the unevaluated symbol &lt;code&gt;code&lt;/code&gt; in each iteration; however, we want it to receive whatever &lt;code&gt;code&lt;/code&gt; is bound to at evaluation time. But &lt;code&gt;report&lt;/code&gt;, operating at macro expansion time, just can&amp;#x2019;t access those values. It&amp;#x2019;s like it has T. rex arms, with runtime values forever out of its reach.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x89C1;&amp;#xFF0C;&amp;#x6BCF;&amp;#x6B21;&amp;#x8FED;&amp;#x4EE3;&amp;#x91CC;&lt;code&gt;report&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x662F;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;code&lt;/code&gt;;&amp;#x4F46;&amp;#x6211;&amp;#x4EEC;&amp;#x60F3;&amp;#x8BA9;&amp;#x4ED6;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x662F;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&lt;code&gt;code&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&lt;code&gt;report&lt;/code&gt;&amp;#x4F5C;&amp;#x7528;&amp;#x4E8E;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x65F6;&amp;#xFF0C;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;&amp;#x5230;&amp;#x8FD9;&amp;#x4E9B;&amp;#x503C;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x66B4;&amp;#x9F99;&amp;#x7684;&amp;#x80F3;&amp;#x818A;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x6C38;&amp;#x8FDC;&amp;#x591F;&amp;#x4E0D;&amp;#x7740;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x8005;&amp;#x8865;&amp;#x5145;&amp;#xFF1A;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x70B9;&amp;#x7ED5;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x628A;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0E;&amp;#x4E0B;&amp;#x9762;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&lt;code&gt;(if)&lt;/code&gt;&amp;#x90E8;&amp;#x5206;&amp;#x4E00;&amp;#x8D77;&amp;#x770B;&amp;#xFF0C;&amp;#x66F4;&amp;#x65B9;&amp;#x4FBF;&amp;#x7406;&amp;#x89E3;&amp;#x4E0B;&amp;#x6BB5;&amp;#x7684;&amp;#x89E3;&amp;#x91CA;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;report&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;let*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [result__5428__auto__ (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  result__5428__auto__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;was successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result__5428__auto__)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;clojure.core/println&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;&amp;quot;was not successful:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   result__5428__auto__)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;To resolve this situation, we might write another macro, like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x80FD;&amp;#x53C8;&amp;#x5199;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; doseq-macro&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [macroname &amp;amp; args]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     ~@(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [arg] (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; macroname arg)) args)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;doseq-macro&lt;/span&gt; report (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 1) was successful: true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (= 1 2) was not successful: false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are ever in this situation, take some time to rethink your approach. It&amp;#x2019;s easy to paint yourself into a corner, making it impossible to accomplish anything with run-of-the-mill function calls. You&amp;#x2019;ll be stuck having to write more macros instead. Macros are extremely powerful and awesome, and you shouldn&amp;#x2019;t be afraid to use them. They turn Clojure&amp;#x2019;s facilities for working with data into facilities for creating new languages informed by your programming problems. For some programs, it&amp;#x2019;s appropriate for your code to be like 90 percent macros. As awesome as they are, they also add new composition challenges. They only really compose with each other, so by using them, you might be missing out on the other kinds of composition (functional, object-oriented) available to you in Clojure.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x7ECF;&amp;#x5386;&amp;#x8FC7;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x82B1;&amp;#x70B9;&amp;#x65F6;&amp;#x95F4;&amp;#x91CD;&amp;#x65B0;&amp;#x601D;&amp;#x8003;&amp;#x4F60;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x4F60;&amp;#x5F88;&amp;#x5BB9;&amp;#x6613;&amp;#x9677;&amp;#x5165;&amp;#x7528;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5B8C;&amp;#x6210;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x56F0;&amp;#x5883;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F60;&amp;#x5C06;&amp;#x4F1A;&amp;#x5361;&amp;#x5728;&amp;#x5199;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x5B8F;&amp;#x4E0A;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x597D;&amp;#x5F88;&amp;#x5F3A;&amp;#x5927;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8BE5;&amp;#x5BB3;&amp;#x6015;&amp;#x4F7F;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&amp;#x5B8F;&amp;#x628A;Clojure&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x5DE5;&amp;#x5177;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7528;&amp;#x4E8E;&amp;#x89E3;&amp;#x51B3;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x65B0;&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#x3002;&amp;#x5BF9;&amp;#x4E8E;&amp;#x4E00;&amp;#x4E9B;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x6709;&amp;#x767E;&amp;#x5206;&amp;#x4E4B;90&amp;#x7684;&amp;#x5B8F;&amp;#x662F;&amp;#x5408;&amp;#x9002;&amp;#x7684;&amp;#x3002;&amp;#x5B8F;&amp;#x867D;&amp;#x7136;&amp;#x5F88;&amp;#x68D2;&amp;#xFF0C;&amp;#x4F46;&amp;#x5E26;&amp;#x6765;&amp;#x4E86;&amp;#x65B0;&amp;#x7684;&amp;#x7EC4;&amp;#x5408;&amp;#x6311;&amp;#x6218;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x53EA;&amp;#x80FD;&amp;#x4E92;&amp;#x76F8;&amp;#x7EC4;&amp;#x5408;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7528;&amp;#x4E86;&amp;#x4ED6;&amp;#x4EEC;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x9519;&amp;#x8FC7;Clojure&amp;#x91CC;&amp;#x5176;&amp;#x4ED6;&amp;#x53EF;&amp;#x7528;&amp;#x7EC4;&amp;#x5408;(&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#xFF0C;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&amp;#x2019;ve now covered all the mechanics of writing a macro. Pat yourself on the back! It&amp;#x2019;s a pretty big deal!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5B66;&amp;#x4E60;&amp;#x4E86;&amp;#x5199;&amp;#x5B8F;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x673A;&amp;#x5236;&amp;#xFF0C;&amp;#x771F;&amp;#x68D2;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To close out this chapter, it&amp;#x2019;s finally time to put on your pretending cap and work on that online potion store I talked about at the very beginning of the chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8BA2;&amp;#x5355;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Brews for the Brave and True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&quot;&gt;&lt;a href=&quot;#&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&quot;&gt;&lt;/a&gt;&amp;#x915D;&amp;#x917F;&amp;#x52C7;&amp;#x6562;&amp;#x4E0E;&amp;#x771F;&amp;#x5B9E;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;At the beginning of this chapter, I revealed a dream: to find some kind of drinkable that, once ingested, would temporarily give me the power and temperament of an &amp;#x2019;80s fitness guru, freeing me from a prison of inhibition and self-awareness. I&amp;#x2019;m sure that someone somewhere will someday invent such an elixir, so we might as well get to work on a system for selling this mythical potion. Let&amp;#x2019;s call this hypothetical concoction the Brave and True Ale. The name just came to me for no reason whatsoever.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7565;&amp;#x8FC7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before the orders come pouring in (pun! high-five!), we&amp;#x2019;ll need to have some validation in place. This section shows you a way to do this validation functionally and how to write the code that performs validations a bit more concisely using a macro you&amp;#x2019;ll write called &lt;code&gt;if-valid&lt;/code&gt;. This will help you understand a typical situation for writing your own macro. If you just want the macro definition, it&amp;#x2019;s okay to skip ahead to &amp;#x201C;if-valid&amp;#x201D; on page 182.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8282;&amp;#x5B66;&amp;#x4E60;&amp;#x5982;&amp;#x4F55;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BA2;&amp;#x5355;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5B8F;&lt;code&gt;if-valid&lt;/code&gt;&amp;#x3002;&amp;#x4F7F;&amp;#x4F60;&amp;#x7406;&amp;#x89E3;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x81EA;&amp;#x5DF1;&amp;#x5199;&amp;#x5B8F;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x60F3;&amp;#x770B;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x8DF3;&amp;#x5230;&amp;#x4E0B;&amp;#x4E00;&amp;#x8282;&amp;#x201D;&amp;#x201C;if-valid&amp;#x201D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Validation Functions&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;To keep things simple, we&amp;#x2019;ll just worry about validating the name and email for each order. For our store, I&amp;#x2019;m thinking we&amp;#x2019;ll want to have those order details represented like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x53EA;&amp;#x9A8C;&amp;#x8BC1;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8BA2;&amp;#x5355;&amp;#x7684;&amp;#x59D3;&amp;#x540D;&amp;#x548C;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8BA2;&amp;#x5355;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; order-details&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Mitchard Blimmons&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:email&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;mitchard.blimmonsgmail.com&amp;quot;&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This particular map has an invalid email address (it&amp;#x2019;s missing the &lt;code&gt;@&lt;/code&gt; symbol), so this is exactly the kind of order that our validation code should catch! Ideally, we want to write code that produces something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;map&amp;#x91CC;&amp;#x7684;&amp;#x90AE;&amp;#x4EF6;&amp;#x5730;&amp;#x5740;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7F3A;&amp;#x5C11;&lt;code&gt;@&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5E94;&amp;#x8BE5;&amp;#x80FD;&amp;#x53D1;&amp;#x73B0;&amp;#x3002;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5E94;&amp;#x8BE5;&amp;#x4EA7;&amp;#x751F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; order-details order-details-validations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:email [&amp;quot;Your email address doesn&amp;apos;t look like an email address.&amp;quot;]}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That is, we want to be able to call a function, &lt;code&gt;validate&lt;/code&gt;, with the data that needs validation and a definition for how to validate it. The result should be a map where each key corresponds to an invalid field, and each value is a vector of one or more validation messages for that field. The following two functions do the job.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x662F;&lt;code&gt;validate&lt;/code&gt;,&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x9700;&amp;#x8981;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x548C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&amp;#x7ED3;&amp;#x679C;&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;map,map&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&amp;#x9879;&amp;#x76EE;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x503C;&amp;#x662F;&amp;#x4E2A;&amp;#x5305;&amp;#x542B;&amp;#x4E00;&amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x5BF9;&amp;#x5E94;&amp;#x57DF;&amp;#x7684;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;vector&amp;#x3002;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s look at &lt;code&gt;order-details-validations&lt;/code&gt; first. Here&amp;#x2019;s how you could represent validations:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5148;&amp;#x770B;&amp;#x770B;&lt;code&gt;order-details-validations&lt;/code&gt;,&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x8868;&amp;#x793A;&amp;#x9A8C;&amp;#x8BC1;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; order-details-validations&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  {&lt;span class=&quot;symbol&quot;&gt;:name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;string&quot;&gt;&amp;quot;Please enter a name&amp;quot;&lt;/span&gt; not-empty]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;symbol&quot;&gt;:email&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [&lt;span class=&quot;string&quot;&gt;&amp;quot;Please enter an email address&amp;quot;&lt;/span&gt; not-empty&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;Your email address doesn&amp;apos;t look like an email address&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;or&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; %) (&lt;span class=&quot;name&quot;&gt;re-seq&lt;/span&gt; #&lt;span class=&quot;string&quot;&gt;&amp;quot;@&amp;quot;&lt;/span&gt; %))]})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a map where each key is associated with a vector of error message and validating function pairs. For example, &lt;code&gt;:name&lt;/code&gt; has one validating function, &lt;code&gt;not-empty&lt;/code&gt;; if that validation fails, you should get the &lt;code&gt;&amp;quot;Please enter a name&amp;quot;&lt;/code&gt; error message.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;map&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x4E0E;&amp;#x4E00;&amp;#x4E2A;vector&amp;#x5173;&amp;#x8054;&amp;#xFF0C;vector&amp;#x5305;&amp;#x542B;&amp;#x7684;&amp;#x662F;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&amp;#x4E0E;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&amp;#x5BF9;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;:name&lt;/code&gt;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x51FD;&amp;#x6570;&lt;code&gt;not-empty&lt;/code&gt;,&amp;#x5982;&amp;#x679C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5931;&amp;#x8D25;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&lt;code&gt;&amp;quot;Please enter a name&amp;quot;&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, we need to write out the &lt;code&gt;validate&lt;/code&gt; function. The validate function can be decomposed into two functions: one to apply validations to a single field and another to accumulate those error messages into a final map of error messages like &lt;code&gt;{:email [&amp;quot;Your email address doesn&amp;apos;t look like an email address.&amp;quot;]}&lt;/code&gt;. Here&amp;#x2019;s a function called &lt;code&gt;error-messages-for&lt;/code&gt; that applies validations to a single value:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x662F;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x4E24;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5355;&amp;#x4E2A;&amp;#x57DF;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7D2F;&amp;#x79EF;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&amp;#x5230;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;map&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;{:email [&amp;quot;Your email address doesn&amp;apos;t look like an email address.&amp;quot;]}&lt;/code&gt;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&lt;code&gt;error-messages-for&lt;/code&gt;&amp;#xFF0C;&amp;#x9A8C;&amp;#x8BC1;&amp;#x5355;&amp;#x72EC;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; error-messages-for&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Return a seq of error messages&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-validate message-validator-pairs]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; first (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;filter&lt;/span&gt;&lt;/span&gt; #(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;not&lt;/span&gt;&lt;/span&gt; ((&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; %) to-validate))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;partition&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; message-validator-pairs))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The first argument, &lt;code&gt;to-validate&lt;/code&gt;, is the field you want to validate. The second argument, &lt;code&gt;message-validator-pairs&lt;/code&gt;, should be a seq with an even number of elements. This seq gets grouped into pairs with &lt;code&gt;(partition 2 message-validator-pairs)&lt;/code&gt;. The first element of the pair should be an error message, and the second element of the pair should be a function (just like the pairs are arranged in &lt;code&gt;order-details-validations&lt;/code&gt;). The &lt;code&gt;error-messages-for&lt;/code&gt; function works by filtering out all error message and validation pairs where the validation function returns &lt;code&gt;true&lt;/code&gt; when applied to &lt;code&gt;to-validate&lt;/code&gt;. It then uses &lt;code&gt;map first&lt;/code&gt; to get the first element of each pair, the error message. Here it is in action:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&lt;code&gt;to-validate&lt;/code&gt;&amp;#x662F;&amp;#x8981;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7684;&amp;#x57DF;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&lt;code&gt;message-validator-pairs&lt;/code&gt;&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x5076;&amp;#x6570;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x5E8F;&amp;#x5217;&amp;#x3002;&amp;#x7528;&lt;code&gt;(partition 2 message-validator-pairs)&lt;/code&gt;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;&amp;#x5206;&amp;#x7EC4;&amp;#x6210;&amp;#x914D;&amp;#x5BF9;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x6BCF;&amp;#x5BF9;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x662F;&amp;#x51FD;&amp;#x6570;(&amp;#x5C31;&amp;#x50CF;&lt;code&gt;order-details-validations&lt;/code&gt;&amp;#x4E00;&amp;#x6837;)&amp;#x3002;&lt;code&gt;error-messages-for&lt;/code&gt;&amp;#x8FC7;&amp;#x6EE4;&amp;#x51FA;&amp;#x6240;&amp;#x6709;&amp;#x8C03;&amp;#x7528;&lt;code&gt;to-validate&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;true&lt;/code&gt;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;error-messages-for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;&amp;quot;Please enter a name&amp;quot;&lt;/span&gt; not-empty])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (&amp;quot;Please enter a name&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we need to accumulate these error messages in a map.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x9700;&amp;#x8981;&amp;#x628A;&amp;#x8FD9;&amp;#x4E9B;&amp;#x9519;&amp;#x8BEF;&amp;#x6D88;&amp;#x606F;&amp;#x7D2F;&amp;#x79EF;&amp;#x8FDB;&amp;#x4E00;&amp;#x4E2A;map&amp;#x91CC;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Here&amp;#x2019;s the complete &lt;code&gt;validate&lt;/code&gt; function, as well as the output when we apply it to our &lt;code&gt;order-details&lt;/code&gt; and &lt;code&gt;order-details-validations&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5B8C;&amp;#x6574;&amp;#x7684;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x548C;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&lt;code&gt;order-details&lt;/code&gt;,&lt;code&gt;order-details-validations&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x540E;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; validate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Returns a map with a vector of errors for each key&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-validate validations]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reduce&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;fn&lt;/span&gt;&lt;/span&gt; [errors validation]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [[fieldname validation-check-groups] validation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  value (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;get&lt;/span&gt;&lt;/span&gt; to-validate fieldname)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  error-messages (&lt;span class=&quot;name&quot;&gt;error-messages-for&lt;/span&gt; value validation-check-groups)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; error-messages)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;assoc&lt;/span&gt;&lt;/span&gt; errors fieldname error-messages))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          validations))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; order-details order-details-validations)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {:email (&amp;quot;Your email address doesn&amp;apos;t look like an email address&amp;quot;)}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Success! This works by reducing over &lt;code&gt;order-details-validations&lt;/code&gt; and associating the error messages (if there are any) for each key of &lt;code&gt;order-details&lt;/code&gt; into a final map of error messages.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6210;&amp;#x529F;&amp;#x4E86;&amp;#xFF01;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5BF9;&lt;code&gt;order-details-validations&lt;/code&gt;&amp;#x8FDB;&amp;#x884C;reduce,&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5C31;&amp;#x628A;&lt;code&gt;order-details&lt;/code&gt;&amp;#x6BCF;&amp;#x4E2A;key&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#x5173;&amp;#x8054;&amp;#x8FDB;&amp;#x6700;&amp;#x7EC8;map&amp;#x91CC;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;if-valid&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;if-valid&quot;&gt;&lt;a href=&quot;#if-valid&quot; class=&quot;headerlink&quot; title=&quot;if-valid&quot;&gt;&lt;/a&gt;if-valid&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;With our validation code in place, we can now validate records to our hearts&amp;#x2019; content! Most often, validation will look something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4E86;&amp;#xFF01;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7A0B;&amp;#x5E8F;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [errors (&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; order-details order-details-validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; errors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; errors)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The pattern is to do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Validate a record and bind the result to &lt;code&gt;errors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check whether there were any errors&lt;/li&gt;
&lt;li&gt;If there were, do the success thing, here &lt;code&gt;(println :success)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Otherwise, do the failure thing, here &lt;code&gt;(println :failure errors)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x505A;&amp;#x4E86;&amp;#x4E0B;&amp;#x5217;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x9A8C;&amp;#x8BC1;&amp;#x8BB0;&amp;#x5F55;&amp;#x5E76;&amp;#x628A;&amp;#x7ED3;&amp;#x679C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&lt;code&gt;errors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x68C0;&amp;#x67E5;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#x9519;&amp;#x8BEF;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x8FD0;&amp;#x884C;&amp;#x6210;&amp;#x529F;&amp;#x90E8;&amp;#x5206;,&lt;code&gt;(println :success)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;#x5426;&amp;#x5219;&amp;#x8FD0;&amp;#x884C;&amp;#x5931;&amp;#x8D25;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&lt;code&gt;(println :failure errors)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ve actually used this validation code in real production websites. At first, I found myself repeating minor variations of the code over and over, a sure sign that I needed to introduce an abstraction that would hide the repetitive parts: applying the &lt;code&gt;validate&lt;/code&gt; function, binding the result to some symbol, and checking whether the result is empty. To create this abstraction, you might be tempted to write a function like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6211;&amp;#x5728;&amp;#x5B9E;&amp;#x9645;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9A8C;&amp;#x8BC1;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x6211;&amp;#x53D1;&amp;#x73B0;&amp;#x4E00;&amp;#x4E9B;&amp;#x91CD;&amp;#x590D;&amp;#xFF1A;&amp;#x8C03;&amp;#x7528;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x68C0;&amp;#x67E5;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;&amp;#x7A7A;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&amp;#x660E;&amp;#x786E;&amp;#x7684;&amp;#x4FE1;&amp;#x53F7;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x5F15;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x62BD;&amp;#x8C61;&amp;#x9690;&amp;#x85CF;&amp;#x8FD9;&amp;#x4E9B;&amp;#x91CD;&amp;#x590D;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x4E3A;&amp;#x6B64;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; if-valid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [record validations success-code failure-code]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [errors (&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; record validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; errors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      success-code&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      failure-code)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, this wouldn&amp;#x2019;t work, because &lt;code&gt;success-code&lt;/code&gt; and &lt;code&gt;failure-code&lt;/code&gt; would get evaluated each time. A macro would work because macros let you control evaluation. Here&amp;#x2019;s how you&amp;#x2019;d use the macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x8FD9;&amp;#x6837;&amp;#x4E0D;&amp;#x884C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6BCF;&amp;#x6B21;&lt;code&gt;success-code&lt;/code&gt;&amp;#x548C;&lt;code&gt;failure-code&lt;/code&gt;&amp;#x90FD;&amp;#x4F1A;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&amp;#x5B8F;&amp;#x53EF;&amp;#x884C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A7;&amp;#x5236;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5B8F;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;if-valid&lt;/span&gt; order-details order-details-validations errors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; errors))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This macro hides the repetitive details and helps you express your intention more succinctly. It&amp;#x2019;s like asking someone to give you the bottle opener instead of saying, &amp;#x201C;Please give me the manual device for removing the temporary sealant from a glass container of liquid.&amp;#x201D; Here&amp;#x2019;s the implementation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x9690;&amp;#x85CF;&amp;#x4E86;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x6709;&amp;#x52A9;&amp;#x4E8E;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x8868;&amp;#x8FBE;&amp;#x51FA;&amp;#x610F;&amp;#x56FE;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x8BF4;&amp;#xFF1A;&amp;#x7ED9;&amp;#x6211;&amp;#x74F6;&amp;#x8D77;&amp;#x5B50;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x8BF4;&amp;#xFF1A;&amp;#x7ED9;&amp;#x6211;&amp;#x7528;&amp;#x4E8E;&amp;#x53BB;&amp;#x9664;&amp;#x88C5;&amp;#x6DB2;&amp;#x4F53;&amp;#x7684;&amp;#x73BB;&amp;#x7483;&amp;#x5BB9;&amp;#x5668;&amp;#x7684;&amp;#x4E34;&amp;#x65F6;&amp;#x5C01;&amp;#x53E3;&amp;#x6750;&amp;#x6599;&amp;#x7684;&amp;#x624B;&amp;#x52A8;&amp;#x8BBE;&amp;#x5907;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; if-valid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Handle validation more concisely&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [to-validate validations errors-name &amp;amp; then-else]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [~errors-name (&lt;span class=&quot;name&quot;&gt;validate&lt;/span&gt; ~to-validate ~validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;empty?&lt;/span&gt;&lt;/span&gt; ~errors-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ~@then-else)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This macro takes four arguments: &lt;code&gt;to-validate&lt;/code&gt;, &lt;code&gt;validations&lt;/code&gt;, &lt;code&gt;errors-name&lt;/code&gt;, and the rest argument &lt;code&gt;then-else&lt;/code&gt;. Using &lt;code&gt;errors-name&lt;/code&gt; like this is a new strategy. We want to have access to the errors returned by the &lt;code&gt;validate&lt;/code&gt; function within the &lt;code&gt;then-else&lt;/code&gt; statements. To do this, we tell the macro what symbol it should bind the result to. The following macro expansion shows how this works:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x63A5;&amp;#x53D7;&amp;#x56DB;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&lt;code&gt;to-validate&lt;/code&gt;,&lt;code&gt;validations&lt;/code&gt;,&lt;code&gt;errors-name&lt;/code&gt;,&amp;#x548C;&amp;#x5269;&amp;#x4F59;&amp;#x53C2;&amp;#x6570;&lt;code&gt;then-else&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x4E48;&amp;#x7528;&lt;code&gt;errors-name&lt;/code&gt;&amp;#x662F;&amp;#x4E2A;&amp;#x65B0;&amp;#x62DB;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x8981;&amp;#x5728;&lt;code&gt;then-else&lt;/code&gt;&amp;#x91CC;&amp;#x8BBF;&amp;#x95EE;&lt;code&gt;validate&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x3002;&amp;#x770B;&amp;#x770B;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;if-valid&lt;/span&gt; order-details order-details-validations my-error-name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; my-error-name)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;let*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; [my-error-name (&lt;span class=&quot;name&quot;&gt;user/validate&lt;/span&gt; order-details order-details-validations)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;clojure.core/empty?&lt;/span&gt; my-error-name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:success&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:failure&lt;/span&gt; my-error-name)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The syntax quote abstracts the general form of the &lt;code&gt;let/validate/if&lt;/code&gt; pattern you saw earlier. Then we use unquote splicing to unpack the &lt;code&gt;if&lt;/code&gt; branches, which were packed into the &lt;code&gt;then-else&lt;/code&gt; rest argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&amp;#x62BD;&amp;#x8C61;&amp;#x6389;&amp;#x4E86;&amp;#x524D;&amp;#x9762;&amp;#x7684;&lt;code&gt;let/validate/if&lt;/code&gt;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;&amp;#x6253;&amp;#x5F00;&amp;#x4E0D;&amp;#x5F15;&amp;#x7528;&amp;#x5C55;&amp;#x5F00;&amp;#x5305;&amp;#x5728;&lt;code&gt;then-else&lt;/code&gt;&amp;#x751F;&amp;#x80B2;&amp;#x53C2;&amp;#x6570;&amp;#x91CC;&amp;#x7684;&lt;code&gt;if&lt;/code&gt;&amp;#x5206;&amp;#x652F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That&amp;#x2019;s pretty simple! After all this talk about macros and going through their mechanics in such detail, I bet you were expecting something more complicated. Sorry, friend. If you&amp;#x2019;re having a hard time coping with your disappointment, I know of a certain drink that will help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x975E;&amp;#x5E38;&amp;#x7B80;&amp;#x5355;&amp;#xFF01;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8BB2;&amp;#x8FF0;&amp;#x4E86;&amp;#x5B8F;&amp;#x548C;&amp;#x6240;&amp;#x6709;&amp;#x5B8F;&amp;#x7684;&amp;#x673A;&amp;#x5236;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned how to write your own macros. Macros are defined very similarly to functions: they have arguments, a docstring, and a body. They can use argument destructuring and rest args, and they can be recursive. Your macros will almost always return lists. You&amp;#x2019;ll sometimes use &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;seq&lt;/code&gt; functions for simple macros, but most of the time you&amp;#x2019;ll use the syntax quote, &lt;code&gt;` &lt;/code&gt;, which lets you write macros using a safe template.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x4E86;&amp;#x5982;&amp;#x4F55;&amp;#x5199;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x5B8F;&amp;#x3002;&amp;#x5B8F;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF1A;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6587;&amp;#x6863;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x548C;&amp;#x4E3B;&amp;#x4F53;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x89E3;&amp;#x6784;&amp;#x548C;&amp;#x5269;&amp;#x4F59;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x9012;&amp;#x5F52;&amp;#x3002;&amp;#x5B8F;&amp;#x51E0;&amp;#x4E4E;&amp;#x603B;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;list&amp;#x3002;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x548C;&lt;code&gt;seq&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x5199;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F46;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4F7F;&amp;#x7528;&amp;#x8BED;&amp;#x6CD5;&amp;#x5F15;&amp;#x7528;&lt;code&gt;` &lt;/code&gt;,&amp;#x5B83;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#x5199;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you&amp;#x2019;re writing macros, it&amp;#x2019;s important to keep in mind the distinction between symbols and values: macros are expanded before code is evaluated and therefore don&amp;#x2019;t have access to the results of evaluation. Double evaluation and variable capture are two other subtle traps for the unwary, but you can avoid them through the judicious use of &lt;code&gt;let&lt;/code&gt; expressions and gensyms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5199;&amp;#x5B8F;&amp;#x65F6;&amp;#x5019;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x65F6;&amp;#x523B;&amp;#x533A;&amp;#x5206;&amp;#x6E05;&amp;#x695A;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x503C;&amp;#xFF1A;&amp;#x5B8F;&amp;#x6C42;&amp;#x503C;&amp;#x524D;&amp;#x5148;&amp;#x5C55;&amp;#x5F00;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x4E8C;&amp;#x6B21;&amp;#x6C42;&amp;#x503C;&amp;#x548C;&amp;#x53D8;&amp;#x91CF;&amp;#x6355;&amp;#x83B7;&amp;#x662F;&amp;#x4E24;&amp;#x4E2A;&amp;#x9690;&amp;#x853D;&amp;#x7684;&amp;#x9677;&amp;#x9631;&amp;#xFF0C;&amp;#x4F46;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;let&lt;/code&gt;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x751F;&amp;#x6210;&amp;#x907F;&amp;#x514D;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros are fun tools that allow you to code with fewer inhibitions. By letting you control evaluation, macros give you a degree of freedom and expression that other languages simply don&amp;#x2019;t allow. Throughout your Clojure journey, you&amp;#x2019;ll probably hear people cautioning you against their use, saying things like &amp;#x201C;Macros are evil&amp;#x201D; and &amp;#x201C;You should never use macros.&amp;#x201D; Don&amp;#x2019;t listen to these prudes&amp;#x2014;at least, not at first! Go out there and have a good time. That&amp;#x2019;s the only way you&amp;#x2019;ll learn the situations where it&amp;#x2019;s appropriate to use macros. You&amp;#x2019;ll come out the other side knowing how to use macros with skill and panache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x662F;&amp;#x6709;&amp;#x8DA3;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x53D7;&amp;#x5230;&amp;#x7684;&amp;#x9650;&amp;#x5236;&amp;#x66F4;&amp;#x5C11;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x63A7;&amp;#x5236;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5B8F;&amp;#x7ED9;&amp;#x4F60;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x5141;&amp;#x8BB8;&amp;#x7684;&amp;#x81EA;&amp;#x7531;&amp;#x548C;&amp;#x8868;&amp;#x8FBE;&amp;#x529B;&amp;#x3002;&amp;#x5728;&amp;#x4F60;&amp;#x7684;Clojurea&amp;#x65C5;&amp;#x9014;&amp;#x4E2D;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x4EBA;&amp;#x8B66;&amp;#x544A;&amp;#x4F60;&amp;#xFF0C;&amp;#x8BF4;&amp;#x5B8F;&amp;#x662F;&amp;#x9B54;&amp;#x9B3C;&amp;#xFF0C;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E5F;&amp;#x522B;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8F;&amp;#x4E4B;&amp;#x7C7B;&amp;#x7684;&amp;#x8BDD;&amp;#x3002;&amp;#x81F3;&amp;#x5C11;&amp;#x5F00;&amp;#x59CB;&amp;#x4E0D;&amp;#x8981;&amp;#x542C;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7684;&amp;#x3002;&amp;#x8BE5;&amp;#x7528;&amp;#x5C31;&amp;#x7528;&amp;#xFF0C;&amp;#x4E50;&amp;#x4EAB;&amp;#x5176;&amp;#x4E2D;&amp;#x3002;&amp;#x53EA;&amp;#x6709;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x624D;&amp;#x80FD;&amp;#x5B66;&amp;#x4F1A;&amp;#x5E94;&amp;#x8BE5;&amp;#x4F55;&amp;#x65F6;&amp;#x7528;&amp;#x5B8F;&amp;#xFF0C;&amp;#x624D;&amp;#x80FD;&amp;#x5B66;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x5B8F;&amp;#x7684;&amp;#x6280;&amp;#x5DE7;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Write the macro &lt;code&gt;when-valid&lt;/code&gt; so that it behaves similarly to &lt;code&gt;when&lt;/code&gt;. Here is an example of calling it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(when-valid order-details order-details-validations
 (println &amp;quot;It&amp;apos;s a success!&amp;quot;)
 (render :success))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When the data is valid, the println and render forms should be evaluated, and when-valid should return nil if the data is invalid.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You saw that &lt;code&gt;and&lt;/code&gt; is implemented as a macro. Implement &lt;code&gt;or&lt;/code&gt; as a macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In Chapter 5 you created a series of functions (&lt;code&gt;c-int&lt;/code&gt;, &lt;code&gt;c-str&lt;/code&gt;, &lt;code&gt;c-dex&lt;/code&gt;) to read an RPG character&amp;#x2019;s attributes. Write a macro that defines an arbitrary number of attribute-retrieving functions using one macro call. Here&amp;#x2019;s how you would call it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(defattrs c-int :intelligence
          c-str :strength
          c-dex :dexterity)
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;when-valid&lt;/code&gt;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5176;&amp;#x4E0E;&lt;code&gt;when&lt;/code&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;br&gt;&amp;#x6570;&amp;#x636E;&amp;#x5408;&amp;#x6CD5;&amp;#x65F6;&amp;#xFF0C;println&amp;#x548C;render&amp;#x5E94;&amp;#x8BE5;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;nil&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&lt;code&gt;and&lt;/code&gt;&amp;#x662F;&amp;#x7528;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF0C;&amp;#x7528;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&lt;code&gt;or&lt;/code&gt;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7B2C;5&amp;#x7AE0;&amp;#x4F60;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E86;&amp;#x4E00;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;(&lt;code&gt;c-int&lt;/code&gt;,&lt;code&gt;c-str&lt;/code&gt;,&lt;code&gt;c-dex&lt;/code&gt;)&amp;#x8BFB;&amp;#x53D6;RPG&amp;#x89D2;&amp;#x8272;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#x3002;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5C31;&amp;#x80FD;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EFB;&amp;#x610F;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#x83B7;&amp;#x53D6;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x8C03;&amp;#x7528;&amp;#x65B9;&amp;#x6CD5;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>【译】Brave Clojure 第七章:Clojure炼金术:读取，求值，宏</title>
    <link href="http://yoursite.com/2016/05/11/braveclojure-read-and-eval/"/>
    <id>http://yoursite.com/2016/05/11/braveclojure-read-and-eval/</id>
    <published>2016-05-11T07:42:47.000Z</published>
    <updated>2016-08-04T13:56:08.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CLOJURE FOR THE BRAVE AND TRUE&lt;/a&gt;&amp;#x7B2C;&amp;#x4E03;&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/read-and-eval/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure Alchemy: Reading, Evaluation, and Macros&lt;/a&gt; &amp;#x505A;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E2D;&amp;#x82F1;&amp;#x5BF9;&amp;#x7167;&amp;#xFF0C;&amp;#x82F1;&amp;#x6587;&amp;#x5F15;&amp;#x7528;&amp;#x8DDF;&amp;#x7740;&amp;#x4E2D;&amp;#x6587;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5728;&amp;#x6240;&amp;#x96BE;&amp;#x514D;&amp;#xFF0C;&amp;#x6B22;&amp;#x8FCE;&amp;#x6307;&amp;#x6B63;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://morrxy.github.io/tags/Clojure-For-The-Branve-And-True/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x5176;&amp;#x4ED6;&amp;#x7AE0;&amp;#x7684;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;Clojure&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x7B2C;3&amp;#x7AE0;&lt;a href=&quot;http://www.braveclojure.com/do-things/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;A Clojure Crash Course&lt;/a&gt;;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x67D0;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x67E5;&amp;#x770B;&lt;a href=&quot;http://clojuredocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;coojuredocs&lt;/a&gt;&amp;#x7684;&amp;#x53C2;&amp;#x8003;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6587;&amp;#x6863;&amp;#x90FD;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x5F00;&amp;#x59CB;&amp;#x3002;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The philosopher&amp;#x2019;s stone, along with the elixir of life and Viagra, is one of the most well-known specimens of alchemical lore, pursued for its ability to transmute lead into gold. Clojure, however, offers a tool that makes the philosopher&amp;#x2019;s stone look like a mere trinket: the macro.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x5DE5;&amp;#x5177;&amp;#xFF1A;&amp;#x5B8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros allow you to transform arbitrary expressions into valid Clojure, so you can extend the language itself to fit your needs. And you don&amp;#x2019;t even have to be a wizened old dude or lady in a robe to use them!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5B8F;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x628A;&amp;#x4EFB;&amp;#x610F;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;Clojure&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F60;&amp;#x80FD;&amp;#x591F;&amp;#x6269;&amp;#x5C55;&amp;#x8BED;&amp;#x8A00;&amp;#x4EE5;&amp;#x7B26;&amp;#x5408;&amp;#x4F60;&amp;#x7684;&amp;#x9700;&amp;#x6C42;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get just a sip of this power, consider this trivial macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; backwards&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [form]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;reverse&lt;/span&gt;&lt;/span&gt; form))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;backwards&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&amp;quot; backwards&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot; am&amp;quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;I&amp;quot;&lt;/span&gt; str))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;I am backwards&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The backwards macro allows Clojure to successfully evaluate the expression &lt;code&gt;(&amp;quot; backwards&amp;quot; &amp;quot; am&amp;quot; &amp;quot;I&amp;quot; str)&lt;/code&gt;, even though it doesn&amp;#x2019;t follow Clojure&amp;#x2019;s built-in syntax rules, which require an expression&amp;#x2019;s operand to appear first (not to mention the rule that an expression not be written in reverse order). Without backwards, the expression would fail harder than millennia of alchemists ironically spending their entire lives pursuing an impossible means of achieving immortality. With backwards, you&amp;#x2019;ve created your own syntax! You&amp;#x2019;ve extended Clojure so you can write code however you please! Better than turning lead into gold, I tell you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;code&gt;(&amp;quot; backwards&amp;quot; &amp;quot; am&amp;quot; &amp;quot;I&amp;quot; str)&lt;/code&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;Clojure&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;backwards&lt;/code&gt;&amp;#x5B8F;&amp;#x4F7F;Clojure&amp;#x80FD;&amp;#x6210;&amp;#x529F;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x4F60;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x521B;&amp;#x9020;&amp;#x4E86;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This chapter gives you the conceptual foundation you need to go mad with power writing your own macros. It explains the elements of Clojure&amp;#x2019;s evaluation model: the &lt;code&gt;reader&lt;/code&gt;, the &lt;code&gt;evaluator&lt;/code&gt;, and the &lt;code&gt;macro expander&lt;/code&gt;. It&amp;#x2019;s like the periodic table of Clojure elements. Think of how the periodic table reveals the properties of atoms: elements in the same column behave similarly because they have the same nuclear charge. Without the periodic table and its underlying theory, we&amp;#x2019;d be in the same position as the alchemists of yore, mixing stuff together randomly to see what blows up. But with a deeper understanding of the elements, you can see why stuff blows up and learn how to blow stuff up on purpose.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x5199;&amp;#x5B8F;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x5230;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x89E3;&amp;#x91CA;&amp;#x4E86;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x7684;&amp;#x4E09;&amp;#x4E2A;&amp;#x65B9;&amp;#x9762;&amp;#xFF1A;&lt;code&gt;reader&lt;/code&gt;(&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;)&amp;#xFF0C;&lt;code&gt;evaluator&lt;/code&gt;(&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;)&amp;#xFF0C;&lt;code&gt;macro expander&lt;/code&gt;(&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7A0B;&amp;#x5E8F;)&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;An Overview of Clojure&amp;#x2019;s Evaluation Model&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x6982;&amp;#x8FF0;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Clojure (like all Lisps) has an evaluation model that differs from most other languages: it has a two-phase system where it reads textual source code, producing Clojure data structures. These data structures are then evaluated: Clojure traverses the data structures and performs actions like function application or var lookup based on the type of the data structure. For example, when Clojure reads the text &lt;code&gt;(+ 1 2)&lt;/code&gt;, the result is a list data structure whose first element is a &lt;code&gt;+&lt;/code&gt; symbol, followed by the numbers 1 and 2. This data structure is passed to Clojure&amp;#x2019;s evaluator, which looks up the function corresponding to + and applies that function to 1 and 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure(&amp;#x4E0E;&amp;#x6240;&amp;#x6709;&amp;#x7684;Lisp&amp;#x4E00;&amp;#x6837;)&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x6A21;&amp;#x578B;&amp;#x4E0E;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x540C;&amp;#xFF1A;&amp;#x7531;&amp;#x4E24;&amp;#x6B65;&amp;#x7EC4;&amp;#x6210;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B65;&amp;#x8BFB;&amp;#x5165;&amp;#x6587;&amp;#x672C;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7B2C;&amp;#x4E8C;&amp;#x6B65;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x52A8;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x53D8;&amp;#x91CF;&amp;#x67E5;&amp;#x627E;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x6E90;&amp;#x7801;&lt;code&gt;(+ 1 2)&lt;/code&gt;,&amp;#x8BFB;&amp;#x5165;&amp;#x540E;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&lt;code&gt;+&lt;/code&gt;&amp;#x8FD9;&amp;#x4E2A;symbol(&amp;#x7B26;&amp;#x53F7;)&amp;#xFF0C;&amp;#x540E;&amp;#x9762;&amp;#x8DDF;&amp;#x7740;1&amp;#x548C;2&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4F20;&amp;#x7ED9;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x7528;1&amp;#x548C;2&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Languages that have this relationship between source code, data, and evaluation are called &lt;code&gt;homoiconic&lt;/code&gt;. (Incidentally, if you say &lt;code&gt;homoiconic&lt;/code&gt; in front of your bathroom mirror three times with the lights out, the ghost of John McCarthy appears and hands you a parenthesis.) Homoiconic languages empower you to reason about your code as a set of data structures that you can manipulate programmatically. To put this into context, let&amp;#x2019;s take a jaunt through the land of compilation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x5173;&amp;#x7CFB;&amp;#x7684;&amp;#x8BED;&amp;#x8A00;&amp;#x88AB;&amp;#x79F0;&amp;#x4E3A;&lt;code&gt;homoiconic&lt;/code&gt;&amp;#x8BED;&amp;#x8A00;(&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%90%8C%E5%83%8F%E6%80%A7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&lt;/a&gt;)&amp;#x3002;(&amp;#x987A;&amp;#x4FBF;&amp;#x63D0;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5F00;&amp;#x7740;&amp;#x706F;&amp;#xFF0C;&amp;#x5728;&amp;#x6D74;&amp;#x5BA4;&amp;#x955C;&amp;#x5B50;&amp;#x524D;&amp;#x9762;&amp;#x8BF4;&amp;#x4E09;&amp;#x58F0;&lt;code&gt;homoiconic&lt;/code&gt;,&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%BA%A6%E7%BF%B0%C2%B7%E9%BA%A6%E5%8D%A1%E9%94%A1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x7EA6;&amp;#x7FF0;&amp;#xB7;&amp;#x9EA6;&amp;#x5361;&amp;#x9521;&lt;/a&gt;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#xFF0C;&amp;#x5E76;&amp;#x4EA4;&amp;#x7ED9;&amp;#x4F60;&amp;#x4E00;&amp;#x5BF9;&amp;#x5706;&amp;#x62EC;&amp;#x53F7;&amp;#x3002;)&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x628A;&amp;#x4EE3;&amp;#x7801;&amp;#x770B;&amp;#x6210;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5E8F;&amp;#x64CD;&amp;#x7EB5;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5373;&amp;#x4F20;&amp;#x8BF4;&amp;#x4E2D;&amp;#x7684;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5373;&amp;#x6570;&amp;#x636E;&amp;#x8BED;&amp;#x8A00;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Programming languages require a compiler or interpreter for translating the code you write, which consists of Unicode characters, into something else: machine instructions, code in another programming language, whatever. During this process, the compiler constructs an &lt;code&gt;abstract syntax tree&lt;/code&gt; (AST), which is a data structure that represents your program. You can think of the AST as the input to the evaluator, which you can think of as a function that traverses the tree to produce the machine code or whatever as its output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x9700;&amp;#x8981;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6216;&amp;#x89E3;&amp;#x91CA;&amp;#x5668;&amp;#x628A;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x673A;&amp;#x5668;&amp;#x6307;&amp;#x4EE4;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x7B49;&amp;#x7B49;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6784;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&lt;/code&gt;(AST)&amp;#x4EE3;&amp;#x8868;&amp;#x6E90;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;AST&amp;#x770B;&amp;#x6210;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x904D;&amp;#x5386;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6811;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x673A;&amp;#x5668;&amp;#x7801;&amp;#x6216;&amp;#x5176;&amp;#x4ED6;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So far this sounds a lot like what I described for Clojure. However, in most languages the AST&amp;#x2019;s data structure is inaccessible within the programming language; the programming language space and the compiler space are forever separated, and never the twain shall meet. Figure 7-1 shows how you might visualize the compilation process for an expression in a non-Lisp programming language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x8BED;&amp;#x8A00;&amp;#x91CC;&amp;#xFF0C;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x662F;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BBF;&amp;#x95EE;AST&amp;#x7684;&amp;#xFF0C;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0E;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6C38;&amp;#x8FDC;&amp;#x662F;&amp;#x9694;&amp;#x79BB;&amp;#x7684;&amp;#x3002;&amp;#x56FE;7-1&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&amp;#x975E;Lisp&amp;#x8BED;&amp;#x8A00;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x7684;&amp;#x7F16;&amp;#x8BD1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-1&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/non-lisp-eval.png&quot; alt=&quot;&amp;#x56FE;7-1&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But Clojure is different, because Clojure is a Lisp and Lisps are hotter than a stolen tamale. Instead of evaluating an AST that&amp;#x2019;s represented as some inaccessible internal data structure, Lisps evaluate native data structures. Clojure still evaluates tree structures, but the trees are structured using Clojure lists and the nodes are Clojure values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;Clojure&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;Clojure&amp;#x662F;Lisp&amp;#x3002;Lisp&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0D;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x8BBF;&amp;#x95EE;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x6E90;&amp;#x751F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;Clojure&amp;#x4E5F;&amp;#x662F;&amp;#x5BF9;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F46;&amp;#x6811;&amp;#x662F;&amp;#x7531;Clojure&amp;#x6E90;&amp;#x751F;list&amp;#x6784;&amp;#x6210;&amp;#xFF0C;&amp;#x6811;&amp;#x8282;&amp;#x70B9;&amp;#x662F;&amp;#x6E90;&amp;#x751F;Clojure&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists are ideal for constructing tree structures. The first element of a list is treated as the root, and each subsequent element is treated as a branch. To create a nested tree, you can just use nested lists, as shown in Figure 7-2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;list&amp;#x6784;&amp;#x9020;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#x5F88;&amp;#x5408;&amp;#x9002;&amp;#x3002;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x6839;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x540E;&amp;#x7EED;&amp;#x5143;&amp;#x7D20;&amp;#x90FD;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&amp;#x3002;&amp;#x5982;&amp;#x9700;&amp;#x6784;&amp;#x5EFA;&amp;#x5D4C;&amp;#x5957;&amp;#x6811;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;list,&amp;#x5982;&amp;#x56FE;7-2&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-2&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/trees.png&quot; alt=&quot;&amp;#x56FE;7-2&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;First, Clojure&amp;#x2019;s reader converts the text &lt;code&gt;(+ 1 (* 6 7))&lt;/code&gt; into a nested list. (You&amp;#x2019;ll learn more about the reader in the next section.) Then, Clojure&amp;#x2019;s evaluator takes that data as input and produces a result. (It also compiles Java Virtual Machine ( JVM) bytecode, which you&amp;#x2019;ll learn about in Chapter 12. For now, we&amp;#x2019;ll just focus on the evaluation model on a conceptual level.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&lt;code&gt;(+ 1 (* 6 7))&lt;/code&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x5D4C;&amp;#x5957;list&amp;#x3002;&amp;#x7136;&amp;#x540E;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x5E76;&amp;#x4EA7;&amp;#x751F;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With this in mind, Figure 7-3 shows what Clojure&amp;#x2019;s evaluation process looks like.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;7-3&amp;#x8868;&amp;#x793A;&amp;#x4E86;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-3&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/lisp-eval.png&quot; alt=&quot;&amp;#x56FE;7-3&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;S-Expressions&lt;/strong&gt;&lt;br&gt;In your Lisp adventures, you&amp;#x2019;ll come across resources that explain that Lisps evaluate s-expressions. I avoid that term here because it&amp;#x2019;s ambiguous: you&amp;#x2019;ll see it used to refer to both the actual data object that gets evaluated and the source code that represents that data. Using the same term for two different components of Lisp evaluation (code and data) obscures what&amp;#x2019;s important: your text represents native data structures, and Lisps evaluate native data structures, which is unique and awesome. For a great treatment of s-expressions, check out &lt;a href=&quot;http://www.gigamonkeys.com/book/syntax-and-semantics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gigamonkeys.com/book/syntax-and-semantics.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5B66;&amp;#x4E60;Lisp&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F60;&amp;#x4F1A;&amp;#x78B0;&amp;#x4E0A;s-expressions(s&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;)&amp;#x7684;&amp;#x89E3;&amp;#x91CA;&amp;#x3002;&amp;#x6211;&amp;#x907F;&amp;#x514D;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x6B67;&amp;#x4E49;&amp;#x3002;&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#x5B83;&amp;#x65E2;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x53C8;&amp;#x53EF;&amp;#x4EE5;&amp;#x6307;&amp;#x6E90;&amp;#x7801;&amp;#x3002;&amp;#x7528;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x672F;&amp;#x8BED;&amp;#x4EE3;&amp;#x8868;Lips&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x4E24;&amp;#x4E2A;&amp;#x7EC4;&amp;#x6210;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x63A9;&amp;#x76D6;&amp;#x4E86;&amp;#x8981;&amp;#x70B9;&amp;#xFF1A;&amp;#x6E90;&amp;#x7801;&amp;#x6587;&amp;#x672C;&amp;#x4EE3;&amp;#x8868;&amp;#x6E90;&amp;#x751F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;Lisp&amp;#x5BF9;&amp;#x6E90;&amp;#x751F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5F88;&amp;#x72EC;&amp;#x7279;&amp;#x5F88;&amp;#x68D2;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E00;&amp;#x7BC7;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&lt;a href=&quot;http://www.gigamonkeys.com/book/syntax-and-semantics.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;s&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#x6587;&amp;#x7AE0;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the evaluator doesn&amp;#x2019;t actually care where its input comes from; it doesn&amp;#x2019;t have to come from the reader. As a result, you can send your program&amp;#x2019;s data structures directly to the Clojure evaluator with &lt;code&gt;eval&lt;/code&gt;. Behold!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E0D;&amp;#x5728;&amp;#x4E4E;&amp;#x8F93;&amp;#x5165;&amp;#x4ECE;&amp;#x54EA;&amp;#x6765;&amp;#xFF0C;&amp;#x8F93;&amp;#x5165;&amp;#x4E0D;&amp;#x4E00;&amp;#x5B9A;&amp;#x6765;&amp;#x81EA;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;&lt;code&gt;eval&lt;/code&gt;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; addition-list (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; addition-list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That&amp;#x2019;s right, baby! Your program just evaluated a Clojure list. You&amp;#x2019;ll read all about Clojure&amp;#x2019;s evaluation rules soon, but briefly, this is what happened: when Clojure evaluated the list, it looked up the list that &lt;code&gt;addition-list&lt;/code&gt; refers to; then it looked up the function corresponding to the &lt;code&gt;+&lt;/code&gt; symbol; and then it called that function with &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt; as arguments, returning &lt;code&gt;3&lt;/code&gt;. The data structures of your running program and those of the evaluator live in the same space, and the upshot is that you can use the full power of Clojure and all the code you&amp;#x2019;ve written to construct data structures for evaluation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#x3002;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#xFF1A;&amp;#x5F53;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&lt;code&gt;addition-list&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;list,&amp;#x7136;&amp;#x540E;&amp;#x627E;&amp;#x5230;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4EE5;&lt;code&gt;1&lt;/code&gt;&amp;#x548C;&lt;code&gt;2&lt;/code&gt;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&amp;#x8FD0;&amp;#x884C;&amp;#x4E2D;&amp;#x7684;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5904;&amp;#x4E8E;&amp;#x540C;&amp;#x4E00;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD0;&amp;#x7528;&amp;#x6240;&amp;#x6709;&amp;#x7684;Clojure&amp;#x529B;&amp;#x91CF;&amp;#x6784;&amp;#x5EFA;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7528;&amp;#x4E8E;&amp;#x6C42;&amp;#x503C;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(eval (concat addition-list [10]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(eval (list &amp;apos;def &amp;apos;lucky-number (concat addition-list [10])))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; #&amp;apos;user/lucky-number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lucky-number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Figure 7-4 shows the lists you sent to the evaluator in these two examples.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56FE;7-4&amp;#x663E;&amp;#x793A;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;list&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-4&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/data-to-eval.png&quot; alt=&quot;&amp;#x56FE;7-4&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your program can talk directly to its own evaluator, using its own functions and data to modify itself as it runs! Are you going mad with power yet? I hope so! Hold on to some of your sanity, though, because there&amp;#x2019;s still more to learn.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8DDF;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BF9;&amp;#x8BDD;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x5019;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4FEE;&amp;#x6539;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;So Clojure is homoiconic: it represents abstract syntax trees using lists, and you write textual representations of lists when you write Clojure code. Because the code you write represents data structures that you&amp;#x2019;re used to manipulating and the evaluator consumes those data structures, it&amp;#x2019;s easy to reason about how to programmatically modify your program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x662F;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#xFF1A;&amp;#x7528;list&amp;#x8868;&amp;#x793A;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6E90;&amp;#x7801;&amp;#x4E5F;&amp;#x7528;list&amp;#x8868;&amp;#x793A;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x8981;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4FEE;&amp;#x6539;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C31;&amp;#x5BB9;&amp;#x6613;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros are what allow you to perform those manipulations easily. The rest of this chapter covers Clojure&amp;#x2019;s reader and evaluation rules in detail to give you a precise understanding of how macros work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8F7B;&amp;#x677E;&amp;#x5B8C;&amp;#x6210;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x8BB2;&amp;#x8FF0;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x80FD;&amp;#x51C6;&amp;#x786E;&amp;#x7406;&amp;#x89E3;&amp;#x5B8F;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Reader&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The reader converts the textual source code you save in a file or enter in the REPL into Clojure data structures. It&amp;#x2019;s like a translator between the human world of Unicode characters and Clojure&amp;#x2019;s world of lists, vectors, maps, symbols, and other data structures. In this section, you&amp;#x2019;ll interact directly with the reader and learn how a handy feature, the reader macro, lets you write code more succinctly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x5B58;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#x7684;&amp;#x6216;REPL&amp;#x8F93;&amp;#x5165;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x5C31;&amp;#x50CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x7FFB;&amp;#x8BD1;&amp;#xFF0C;&amp;#x628A;&amp;#x4EBA;&amp;#x7C7B;&amp;#x4E16;&amp;#x754C;&amp;#x7684;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#x7FFB;&amp;#x8BD1;&amp;#x6210;Clojure&amp;#x4E16;&amp;#x754C;&amp;#x7684;list, vector, map, symbol&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x8981;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4EA4;&amp;#x4E92;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B66;&amp;#x4E60;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x4FBF;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BFB;&amp;#x5165;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;To understand reading, let&amp;#x2019;s first take a close look at how Clojure handles the text you type in the REPL. First, the REPL prompts you for text:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x7406;&amp;#x89E3;&amp;#x8BFB;&amp;#x5165;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x4ED4;&amp;#x7EC6;&amp;#x770B;&amp;#x770B;Clojure&amp;#x5982;&amp;#x4F55;&amp;#x5904;&amp;#x7406;REPL&amp;#x91CC;&amp;#x8F93;&amp;#x5165;&amp;#x7684;&amp;#x6587;&amp;#x5B57;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;REPL&amp;#x63D0;&amp;#x793A;&amp;#x4F60;&amp;#x8F93;&amp;#x5165;&amp;#x6587;&amp;#x5B57;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Then you enter a bit of text. Maybe something like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x4F60;&amp;#x8F93;&amp;#x5165;&amp;#x4E00;&amp;#x4E9B;&amp;#x6587;&amp;#x5B57;&amp;#x3002;&amp;#x4E5F;&amp;#x8BB8;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user=&amp;gt; (str &amp;quot;To understand what recursion is,&amp;quot; &amp;quot; you must first understand recursion.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;That text is really just a sequence of Unicode characters, but it&amp;#x2019;s meant to represent a combination of Clojure data structures. This textual representation of data structures is called a &lt;code&gt;reader form&lt;/code&gt;. In this example, the form represents a list data structure that contains three more forms: the &lt;code&gt;str&lt;/code&gt; symbol and two strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x5B57;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;Unicode&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EE3;&amp;#x8868;&amp;#x7684;&amp;#x662F;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7EC4;&amp;#x5408;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x5F62;&amp;#x5F0F;&amp;#x53EB;&amp;#x505A;&lt;code&gt;reader form&lt;/code&gt;(&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;)&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x53C8;&amp;#x5305;&amp;#x542B;&amp;#x4E86;3&amp;#x4E2A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF1A;&lt;code&gt;str&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x4E24;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you type those characters into the prompt and press enter, that text goes to the reader (remember REPL stands for read-eval-print-loop). Clojure reads the stream of characters and internally produces the corresponding data structures. It then evaluates the data structures and prints the textual representation of the result:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8F93;&amp;#x5165;&amp;#x5B8C;&amp;#x6210;&amp;#x5E76;&amp;#x56DE;&amp;#x8F66;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x672C;&amp;#x88AB;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;(REPL&amp;#x4EE3;&amp;#x8868;&amp;#x4E86;&amp;#x8BFB;&amp;#x5165;-&amp;#x6C42;&amp;#x503C;-&amp;#x6253;&amp;#x5370;-&amp;#x5FAA;&amp;#x73AF;)&amp;#x3002;Clojure&amp;#x5185;&amp;#x90E8;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6587;&amp;#x672C;&amp;#x4EA7;&amp;#x751F;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x8868;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;To understand what recursion is, you must first understand recursion.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Reading and evaluation are discrete processes that you can perform independently. One way to interact with the reader directly is by using the &lt;code&gt;read-string&lt;/code&gt; function. &lt;code&gt;read-string&lt;/code&gt; takes a string as an argument and processes it using Clojure&amp;#x2019;s reader, returning a data structure:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x662F;&amp;#x80FD;&amp;#x72EC;&amp;#x7ACB;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x5206;&amp;#x79BB;&amp;#x6B65;&amp;#x9AA4;&amp;#x3002;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;read-string&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&lt;code&gt;read-string&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;Clojure&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5904;&amp;#x7406;&amp;#x5B83;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list?&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;conj&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;) &lt;span class=&quot;symbol&quot;&gt;:zagglewag&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (:zagglewag + 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the first example, &lt;code&gt;read-string&lt;/code&gt; reads the string representation of a list containing a plus symbol and the numbers 1 and 2. The return value is an actual list, as proven by the second example. The last example uses &lt;code&gt;conj&lt;/code&gt; to prepend a keyword to the list. The takeaway is that reading and evaluating are independent of each other. You can read text without evaluating it, and you can pass the result to other functions. You can also evaluate the result, if you want:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&lt;code&gt;read-string&lt;/code&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5305;&amp;#x542B;&amp;#x52A0;&amp;#x53F7;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x6570;&amp;#x5B57;1&amp;#xFF0C;2&amp;#x7684;list&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x5B9E;&amp;#x9645;list&amp;#xFF0C;&amp;#x4ECE;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BC1;&amp;#x5B9E;&amp;#x3002;&amp;#x7B2C;&amp;#x4E09;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x7528;&lt;code&gt;conj&lt;/code&gt;&amp;#x628A;&amp;#x4E00;&amp;#x4E2A;keyword&amp;#x9644;&amp;#x52A0;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x4E0A;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x8981;&amp;#x70B9;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x4E92;&amp;#x76F8;&amp;#x72EC;&amp;#x7ACB;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BFB;&amp;#x5165;&amp;#x6587;&amp;#x672C;&amp;#x4F46;&amp;#x4E0D;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x8BFB;&amp;#x5165;&amp;#x7ED3;&amp;#x679C;&amp;#x4F20;&amp;#x7ED9;&amp;#x5176;&amp;#x4ED6;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x613F;&amp;#x610F;&amp;#xFF0C;&amp;#x4F60;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(+ 1 2)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In all the examples so far, there&amp;#x2019;s been a one-to-one relationship between the reader form and the corresponding data structures. Here are more examples of simple reader forms that directly map to the data structures they represent:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x90FD;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;() A list reader form&lt;br&gt;str A symbol reader form&lt;br&gt;[1 2] A vector reader form containing two number reader forms&lt;br&gt;{:sound &amp;#x201C;hoot&amp;#x201D;} A map reader form with a keyword reader form and string reader form&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;() list&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;str symbol&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;[1 2] vector&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x6570;&amp;#x5B57;&amp;#x8BFB;&amp;#x5165;&amp;#x5F62;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;{:sound &amp;#x201C;hoot&amp;#x201D;} map&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&amp;#x4E24;&amp;#x4E2A;&amp;#x8BFB;&amp;#x5165;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;keyword&amp;#x548C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;However, the reader can employ more complex behavior when converting text to data structures. For example, remember anonymous functions?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&amp;#x662F;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x66F4;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x3002;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x533F;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;#&lt;/span&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; %) &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Well, try this out:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BD5;&amp;#x8BD5;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;#(+ 1 %)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (fn* [p1__423#] (+ 1 p1__423#))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Whoa! This is not the one-to-one mapping that we&amp;#x2019;re used to. Reading &lt;code&gt;#(+ 1 %)&lt;/code&gt; somehow resulted in a list consisting of the &lt;code&gt;fn*&lt;/code&gt; symbol, a vector containing a symbol, and a list containing three elements. What just happened?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x64E6;&amp;#xFF01;&amp;#x8FD9;&amp;#x4E0D;&amp;#x662F;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x8BFB;&amp;#x5165;&lt;code&gt;#(+ 1 %)&lt;/code&gt;&amp;#x751F;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x5305;&amp;#x542B;&lt;code&gt;fn*&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;vector(&amp;#x542B;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;)&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;list(&amp;#x542B;&amp;#x6709;3&amp;#x4E2A;&amp;#x6210;&amp;#x5458;)&amp;#x3002;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Reader Macros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;I&amp;#x2019;ll answer my own question: the reader used a &lt;em&gt;reader macro&lt;/em&gt; to transform &lt;code&gt;#(+ 1 %)&lt;/code&gt;. Reader macros are sets of rules for transforming text into data structures. They often allow you to represent data structures in more compact ways because they take an abbreviated reader form and expand it into a full form. They&amp;#x2019;re designated by &lt;em&gt;macro characters&lt;/em&gt;, like &lt;code&gt;&amp;apos;&lt;/code&gt; (the single quote), &lt;code&gt;#&lt;/code&gt;, and &lt;code&gt;@&lt;/code&gt;. They&amp;#x2019;re also completely different from the macros we&amp;#x2019;ll get to later. So as not to get the two confused, I&amp;#x2019;ll always refer to reader macros using the full term reader macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/em&gt;&amp;#x8F6C;&amp;#x6362;&amp;#x4E86;&lt;code&gt;#(+ 1 %)&lt;/code&gt;&amp;#x3002;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x662F;&amp;#x4E00;&amp;#x7EC4;&amp;#x89C4;&amp;#x5219;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x91C7;&amp;#x7528;&amp;#x4E86;&amp;#x7F29;&amp;#x5199;&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5E76;&amp;#x88AB;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x5B8C;&amp;#x6574;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x66F4;&amp;#x7B80;&amp;#x6D01;&amp;#x5730;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x7531;&lt;em&gt;&amp;#x5B8F;&amp;#x5B57;&amp;#x7B26;&lt;/em&gt;&amp;#x6807;&amp;#x8BC6;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;&amp;#x2018;&lt;/code&gt;(&amp;#x5355;&amp;#x5F15;&amp;#x53F7;)&amp;#xFF0C;&lt;code&gt;#&lt;/code&gt;,&lt;code&gt;@&lt;/code&gt;&amp;#x3002;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E0E;&amp;#x540E;&amp;#x9762;&amp;#x8BB2;&amp;#x7684;&amp;#x5B8F;&amp;#x5B8C;&amp;#x5168;&amp;#x662F;&amp;#x4E24;&amp;#x7801;&amp;#x4E8B;&amp;#x3002;&amp;#x4E0D;&amp;#x8981;&amp;#x6DF7;&amp;#x4E3A;&amp;#x4E00;&amp;#x8C08;&amp;#x3002;&amp;#x5F15;&amp;#x7528;&amp;#x4ED6;&amp;#x4EEC;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x6211;&amp;#x4F1A;&amp;#x603B;&amp;#x662F;&amp;#x7528;&amp;#x5B8C;&amp;#x6574;&amp;#x7684;&lt;em&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&lt;/em&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, you can see how the quote reader macro expands the single quote character here:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x770B;&amp;#x770B;&amp;#x5F15;&amp;#x7528;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x6269;&amp;#x5C55;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x5B57;&amp;#x7B26;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;apos;(a b c)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (quote (a b c))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When the reader encounters the single quote, it expands it to a list whose first member is the symbol &lt;code&gt;quote&lt;/code&gt; and whose second member is the data structure that followed the single quote. The &lt;code&gt;deref&lt;/code&gt; reader macro works similarly for the &lt;code&gt;@&lt;/code&gt; character:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x9047;&amp;#x5230;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x628A;&amp;#x5B83;&amp;#x5C55;&amp;#x5F00;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x5176;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;quote&lt;/code&gt;,&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x662F;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7C7B;&amp;#x4F3C;&amp;#x5730;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&lt;code&gt;@&lt;/code&gt;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&lt;code&gt;defef&lt;/code&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;@var&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (clojure.core/deref var)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Reader macros can also do crazy stuff like cause text to be ignored. The semicolon designates the single-line comment reader macro:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x8FD8;&amp;#x80FD;&amp;#x5FFD;&amp;#x7565;&amp;#x6587;&amp;#x672C;&amp;#x3002;&amp;#x5206;&amp;#x53F7;&amp;#x662F;&amp;#x5355;&amp;#x884C;&amp;#x6CE8;&amp;#x91CA;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;; ignore!\n(+ 1 2)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;And that&amp;#x2019;s the reader! Your humble companion, toiling away at transforming text into data structures. Now let&amp;#x2019;s look at how Clojure evaluates those data structures.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x770B;Clojure&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x6C42;&amp;#x503C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Evaluator&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;a href=&quot;#&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&quot;&gt;&lt;/a&gt;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;You can think of Clojure&amp;#x2019;s evaluator as a function that takes a data structure as an argument, processes the data structure using rules corresponding to the data structure&amp;#x2019;s type, and returns a result. To evaluate a symbol, Clojure looks up what the symbol refers to. To evaluate a list, Clojure looks at the first element of the list and calls a function, macro, or special form. Any other values (including strings, numbers, and keywords) simply evaluate to themselves.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x770B;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7528;&amp;#x4E0E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7C7B;&amp;#x578B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89C4;&amp;#x5219;&amp;#x5904;&amp;#x7406;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x6C42;&amp;#x503C;list&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Clojure&amp;#x67E5;&amp;#x770B;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x5B8F;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x503C;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x6570;&amp;#x5B57;&amp;#xFF0C;keyword&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For example, let&amp;#x2019;s say you&amp;#x2019;ve typed &lt;code&gt;(+ 1 2)&lt;/code&gt; in the REPL. Figure 7-5 shows a diagram of the data structure that gets sent to the evaluator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x4F60;&amp;#x5728;REPL&amp;#x8F93;&amp;#x5165;&amp;#x4E86;&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x56FE;7-5&amp;#x793A;&amp;#x610F;&amp;#x4E86;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-5&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/simple-eval.png&quot; alt=&quot;7-5&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Because it&amp;#x2019;s a list, the evaluator starts by evaluating the first element in the list. The first element is the plus symbol, and the evaluator resolves that by returning the corresponding function. Because the first element in the list is a function, the evaluator evaluates each of the operands. The operands 1 and 2 evaluate to themselves because they&amp;#x2019;re not lists or symbols. Then the evaluator calls the addition function with 1 and 2 as the operands, and returns the result.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5148;&amp;#x6C42;&amp;#x503C;list&amp;#x91CC;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x3002;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x52A0;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x89E3;&amp;#x6790;&amp;#x5B83;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;1&amp;#x548C;2&amp;#x4E0D;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x662F;list&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x90FD;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;1&amp;#x548C;2&amp;#x4F5C;&amp;#x4E3A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The rest of this section explains the evaluator&amp;#x2019;s rules for each kind of data structure more fully. To show how the evaluator works, we&amp;#x2019;ll just run each example in the REPL. Keep in mind that the REPL first reads your text to get a data structure, then sends that data structure to the evaluator, and then prints the result as text.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x8282;&amp;#x7684;&amp;#x5269;&amp;#x4F59;&amp;#x90E8;&amp;#x5206;&amp;#x5168;&amp;#x9762;&amp;#x89E3;&amp;#x91CA;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5BF9;&amp;#x6BCF;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt;&lt;br&gt;I write about how Clojure evaluates data structures in this chapter, but that&amp;#x2019;s imprecise. Technically, data structure refers to some kind of collection, like a linked list or b-tree, or whatever, but I also use the term to refer to scalar (singular, noncollection) values like symbols and numbers. I considered using the term data objects but didn&amp;#x2019;t want to imply object-oriented programming, or using just data but didn&amp;#x2019;t want to confuse that with data as a concept. So, data structure it is, and if you find this offensive, I will give you a thousand apologies, thoughtfully organized in a Van Emde Boas tree.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&amp;#x6570;&amp;#x636E;&lt;/strong&gt;&lt;br&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x91CC;&amp;#x6211;&amp;#x7ECF;&amp;#x5E38;&amp;#x63D0;&amp;#x5230;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x4E0D;&amp;#x592A;&amp;#x7CBE;&amp;#x786E;&amp;#x3002;&amp;#x6280;&amp;#x672F;&amp;#x4E0A;&amp;#x8BB2;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x6307;&amp;#x67D0;&amp;#x79CD;&amp;#x96C6;&amp;#x5408;&amp;#xFF0C;&amp;#x4F46;&amp;#x6211;&amp;#x4E5F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BCD;&amp;#x4EE3;&amp;#x8868;&amp;#x7EAF;&amp;#x91CF;(&amp;#x5355;&amp;#x4E2A;&amp;#x7684;&amp;#xFF0C;&amp;#x975E;&amp;#x96C6;&amp;#x5408;)&amp;#x503C;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x6570;&amp;#x5B57;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x6BD4;&amp;#x7528;&amp;#x6570;&amp;#x636E;&amp;#x5BF9;&amp;#x8C61;&amp;#x6216;&amp;#x6570;&amp;#x636E;&amp;#x66F4;&amp;#x5408;&amp;#x9002;&amp;#x3002;&amp;#x5982;&amp;#x6709;&amp;#x4E0D;&amp;#x59A5;&amp;#xFF0C;&amp;#x6DF1;&amp;#x8868;&amp;#x6B49;&amp;#x610F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These Things Evaluate to Themselves&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot;&gt;&lt;a href=&quot;#&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&quot;&gt;&lt;/a&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E1C;&amp;#x897F;&amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Whenever Clojure evaluates data structures that aren&amp;#x2019;t a list or symbol, the result is the data structure itself:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x65E0;&amp;#x8BBA;&amp;#x4F55;&amp;#x65F6;&amp;#xFF0C;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;list&amp;#x6216;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; {}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;:huzzah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; :huzzah&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Empty lists evaluate to themselves, too:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A7A;list&amp;#x4E5F;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;symbols&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x7B26;&amp;#x53F7;&quot;&gt;&lt;a href=&quot;#&amp;#x7B26;&amp;#x53F7;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B26;&amp;#x53F7;&quot;&gt;&lt;/a&gt;&amp;#x7B26;&amp;#x53F7;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One of your fundamental tasks as a programmer is creating abstractions by associating names with values. You learned how to do this in Chapter 3 by using &lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, and function definitions. Clojure uses &lt;em&gt;symbols&lt;/em&gt; to name functions, macros, data, and anything else you can use, and evaluates them by &lt;em&gt;resolving&lt;/em&gt; them. To resolve a symbol, Clojure traverses any bindings you&amp;#x2019;ve created and then looks up the symbol&amp;#x2019;s entry in a namespace mapping, which you learned about in Chapter 6. Ultimately, a symbol resolves to either a &lt;em&gt;value&lt;/em&gt; or a &lt;em&gt;special form&lt;/em&gt;&amp;#x2014;a built-in Clojure operator that provides fundamental behavior.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C31;&amp;#x662F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x540D;&amp;#x5B57;&amp;#x548C;&amp;#x503C;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x7B2C;3&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x7684;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;,&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x90FD;&amp;#x662F;&amp;#x5E72;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7684;&amp;#x3002;Clojure&amp;#x7528;&lt;em&gt;&amp;#x7B26;&amp;#x53F7;&lt;/em&gt;&amp;#x547D;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5B8F;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x548C;&amp;#x4EFB;&amp;#x4F55;&amp;#x5176;&amp;#x4ED6;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&lt;em&gt;&amp;#x89E3;&amp;#x6790;&lt;/em&gt;&amp;#x6765;&amp;#x5BF9;&amp;#x5176;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x8981;&amp;#x89E3;&amp;#x6790;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;Clojure&amp;#x904D;&amp;#x5386;&amp;#x6240;&amp;#x6709;&amp;#x4F60;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x6761;&amp;#x76EE;&amp;#xFF0C;&amp;#x7B2C;6&amp;#x7AE0;&amp;#x8BB2;&amp;#x89E3;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&amp;#x6700;&amp;#x7EC8;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x503C;&lt;/em&gt;&amp;#x6216;&amp;#x4E00;&amp;#x4E2A;&lt;em&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt;&amp;#x2013;&amp;#x63D0;&amp;#x4F9B;&amp;#x57FA;&amp;#x7840;&amp;#x884C;&amp;#x4E3A;&amp;#x7684;Clojure&amp;#x5167;&amp;#x5EFA;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In general, Clojure resolves a symbol by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Looking up whether the symbol names a special form. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Looking up whether the symbol corresponds to a local binding. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Trying to find a namespace mapping introduced by &lt;code&gt;def&lt;/code&gt;. If it doesn&amp;#x2019;t . . .&lt;/li&gt;
&lt;li&gt;Throwing an exception&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;Clojure&amp;#x8FD9;&amp;#x6837;&amp;#x89E3;&amp;#x6790;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x91CC;&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;def&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x6620;&amp;#x5C04;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x2026;&lt;/li&gt;
&lt;li&gt;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s first look at a symbol resolving to a special form. Special forms, like &lt;code&gt;if&lt;/code&gt;, are always used in the context of an operation; they&amp;#x2019;re always the first element in a list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5148;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;if&lt;/code&gt;,&amp;#x603B;&amp;#x662F;&amp;#x4F5C;&amp;#x4E3A;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x603B;&amp;#x662F;list&amp;#x91CC;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:a&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;:b&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; :a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In this case, &lt;code&gt;if&lt;/code&gt; is a special form and it&amp;#x2019;s being used as an operator. If you try to refer to a special form outside of this context, you&amp;#x2019;ll get an exception:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&lt;code&gt;if&lt;/code&gt;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x5176;&amp;#x4ED6;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x5F15;&amp;#x7528;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5F02;&amp;#x5E38;:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; CompilerException java.lang.RuntimeException: Unable to resolve symbol: if in this context&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, let&amp;#x2019;s evaluate some &lt;em&gt;local bindings&lt;/em&gt;. A local binding is any association between a symbol and a value that wasn&amp;#x2019;t created by &lt;code&gt;def&lt;/code&gt;. In the next example, the symbol &lt;code&gt;x&lt;/code&gt; is bound to 5 using &lt;code&gt;let&lt;/code&gt;. When the evaluator resolves &lt;code&gt;x&lt;/code&gt;, it resolves the symbol &lt;code&gt;x&lt;/code&gt; to the value 5:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&lt;em&gt;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&lt;/em&gt;&amp;#x3002;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x662F;&amp;#x4EFB;&amp;#x4F55;&amp;#x975E;&lt;code&gt;def&lt;/code&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;x&lt;/code&gt;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;let&lt;/code&gt;&amp;#x4E0E;5&amp;#x7ED1;&amp;#x5B9A;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x89E3;&amp;#x6790;&lt;code&gt;x&lt;/code&gt;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x503C;5:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Now if we create a namespace mapping of &lt;code&gt;x&lt;/code&gt; to 15, Clojure resolves it accordingly:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;x&lt;/code&gt;&amp;#x4E0E;15&amp;#x7684;&amp;#x547D;&amp;#x540D;&amp;#x7A7A;&amp;#x95F4;&amp;#x6620;&amp;#x5C04;,Clojure&amp;#x4F1A;&amp;#x76F8;&amp;#x5E94;&amp;#x5730;&amp;#x89E3;&amp;#x6790;&amp;#x5B83;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In the next example, &lt;code&gt;x&lt;/code&gt; is mapped to 15, but we introduce a local binding of &lt;code&gt;x&lt;/code&gt; to 5 using &lt;code&gt;let&lt;/code&gt;. So &lt;code&gt;x&lt;/code&gt; is resolved to 5:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;x&lt;/code&gt;&amp;#x6620;&amp;#x5C04;&amp;#x6210;15,&amp;#x4F46;&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;&amp;#x91CC;&lt;code&gt;x&lt;/code&gt;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;let&lt;/code&gt;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E3A;5,&amp;#x6240;&amp;#x4EE5;&lt;code&gt;x&lt;/code&gt;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;5:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;def&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can nest bindings, in which case the most recently defined binding takes precedence:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x7ED1;&amp;#x5B9A;,&amp;#x6700;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x6700;&amp;#x9AD8;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [x &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; x &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Functions also create local bindings, binding parameters to arguments within the function body. In this next example, &lt;code&gt;exclaim&lt;/code&gt; is mapped to a function. Within the function body, the parameter name &lt;code&gt;exclamation&lt;/code&gt; is bound to the argument passed to the function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E5F;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x672C;&amp;#x5730;&amp;#x7ED1;&amp;#x5B9A;,&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x91CC;,&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x540D;&amp;#x4E0E;&amp;#x53C2;&amp;#x6570;&amp;#x503C;&amp;#x7ED1;&amp;#x5B9A;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;exclaim&lt;/code&gt;&amp;#x662F;&amp;#x51FD;&amp;#x6570;.&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x91CC;,&amp;#x53C2;&amp;#x6570;&amp;#x540D;&lt;code&gt;exclamation&lt;/code&gt;&amp;#x4E0E;&amp;#x4F20;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x503C;&amp;#x7ED1;&amp;#x5B9A;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; exclaim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [exclamation]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;str&lt;/span&gt;&lt;/span&gt; exclamation &lt;span class=&quot;string&quot;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;exclaim&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Hadoken&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; &amp;quot;Hadoken!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Finally, in this last example, &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;inc&lt;/code&gt; both refer to functions:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&lt;code&gt;map&lt;/code&gt;&amp;#x548C;&lt;code&gt;inc&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x5F15;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;map&lt;/span&gt;&lt;/span&gt; inc [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (2 3 4)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;When Clojure evaluates this code, it first evaluates the &lt;code&gt;map&lt;/code&gt; symbol, looking up the corresponding function and applying it to its arguments. The symbol &lt;code&gt;map&lt;/code&gt; refers to the map function, but it shouldn&amp;#x2019;t be confused with the function itself. The &lt;code&gt;map&lt;/code&gt; symbol is still a data structure, the same way that the string &lt;code&gt;&amp;quot;fried salad&amp;quot;&lt;/code&gt; is a data structure, but it&amp;#x2019;s not the same as the function itself:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x89E3;&amp;#x6790;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x65F6;,&amp;#x5148;&amp;#x6C42;&amp;#x503C;&lt;code&gt;map&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;,&amp;#x67E5;&amp;#x627E;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x7528;&amp;#x5176;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;.&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x662F;map&amp;#x51FD;&amp;#x6570;,&amp;#x4F46;&amp;#x4E0D;&amp;#x8981;&amp;#x628A;&amp;#x5B83;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x81EA;&amp;#x8EAB;&amp;#x6DF7;&amp;#x6DC6;&amp;#x3002;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;map&lt;/code&gt;&amp;#x4ECD;&amp;#x7136;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;,&amp;#x5C31;&amp;#x50CF;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;code&gt;&amp;quot;fried salad&amp;quot;&lt;/code&gt;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E00;&amp;#x6837;,&amp;#x7B26;&amp;#x53F7;&amp;#x4E0D;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x672C;&amp;#x8EAB;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; +&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;type&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; clojure.lang.Symbol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;In these examples, you&amp;#x2019;re interacting with the plus symbol, &lt;code&gt;+&lt;/code&gt;, as a data structure. You&amp;#x2019;re not interacting with the addition function that it refers to. If you evaluate it, Clojure looks up the function and applies it:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;,&amp;#x4F60;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x4EA4;&amp;#x4E92;.&amp;#x4E0D;&amp;#x662F;&amp;#x4E0E;&amp;#x5B83;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#x4EA4;&amp;#x4E92;.&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x5B83;&amp;#x6C42;&amp;#x503C;,Clojure&amp;#x67E5;&amp;#x627E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;) &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;On their own, symbols and their referents don&amp;#x2019;t actually do anything; Clojure performs work by evaluating lists.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x7B26;&amp;#x53F7;&amp;#x548C;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x81EA;&amp;#x8EAB;&amp;#x6765;&amp;#x8BF4;,&amp;#x4ED6;&amp;#x4EEC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E5F;&amp;#x4E0D;&amp;#x505A;;Clojure&amp;#x9760;&amp;#x6C42;&amp;#x503C;list&amp;#x5E72;&amp;#x6D3B;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lists&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;a href=&quot;#&amp;#x5217;&amp;#x8868;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5217;&amp;#x8868;&quot;&gt;&lt;/a&gt;&amp;#x5217;&amp;#x8868;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;If the data structure is an empty list, it evaluates to an empty list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x7A7A;list, &amp;#x6C42;&amp;#x503C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x7A7A;list:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;()&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Otherwise, it is evaluated as a &lt;em&gt;call&lt;/em&gt; to the first element in the list. The way the call is performed depends on the nature of that first element.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5426;&amp;#x5219;,&amp;#x5C31;&amp;#x662F;&amp;#x5BF9;&amp;#x5217;&amp;#x8868;&amp;#x91CC;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&lt;em&gt;&amp;#x8C03;&amp;#x7528;&lt;/em&gt;&amp;#x7684;&amp;#x6C42;&amp;#x503C;.&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x7531;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x6027;&amp;#x8D28;&amp;#x51B3;&amp;#x5B9A;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Function Calls&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&quot;&gt;&lt;/a&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;When performing a function call, each operand is fully evaluated and then passed to the function as an argument. In this example, the &lt;code&gt;+&lt;/code&gt; symbol resolves to a function:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FDB;&amp;#x884C;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x65F6;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x5B8C;&amp;#x5168;&amp;#x6C42;&amp;#x503C;,&amp;#x7136;&amp;#x540E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x51FD;&amp;#x6570;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;,&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure sees that the list&amp;#x2019;s head is a function, so it proceeds to evaluate the rest of the elements in the list. The operands 1 and 2 both evaluate to themselves, and after they&amp;#x2019;re evaluated, Clojure applies the addition function to them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x770B;&amp;#x5230;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x662F;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;,&amp;#x6240;&amp;#x4EE5;&amp;#x5B83;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;list&amp;#x91CC;&amp;#x5269;&amp;#x4F59;&amp;#x7684;&amp;#x5143;&amp;#x7D20;.&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;1&amp;#x548C;2&amp;#x90FD;&amp;#x6C42;&amp;#x503C;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;,&amp;#x4E4B;&amp;#x540E;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also nest function calls:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E5F;&amp;#x53EF;&amp;#x80FD;&amp;#x5D4C;&amp;#x5957;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Even though the second argument is a list, Clojure follows the same process here: look up the &lt;code&gt;+&lt;/code&gt; symbol and evaluate each argument. To evaluate the list &lt;code&gt;(+ 2 3)&lt;/code&gt;, Clojure resolves the first member to the addition function and proceeds to evaluate each of the arguments. In this way, evaluation is recursive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5C3D;&amp;#x7BA1;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x52A0;&amp;#x662F;&amp;#x4E2A;list,Clojure&amp;#x4ECD;&amp;#x91C7;&amp;#x7528;&amp;#x540C;&amp;#x6837;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;: &amp;#x67E5;&amp;#x627E;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;+&lt;/code&gt;&amp;#x5E76;&amp;#x6C42;&amp;#x503C;&amp;#x5176;&amp;#x6BCF;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;.&amp;#x6C42;&amp;#x503C;list&lt;code&gt;(+ 2 3)&lt;/code&gt;&amp;#x65F6;,Clojure&amp;#x628A;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x52A0;&amp;#x6CD5;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x7EE7;&amp;#x7EED;&amp;#x6C42;&amp;#x503C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;.&amp;#x6C42;&amp;#x503C;&amp;#x4EE5;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x9012;&amp;#x5F52;&amp;#x8FDB;&amp;#x884C;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Special Forms&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;You can also call &lt;em&gt;special forms&lt;/em&gt;. In general, special forms are special because they implement core behavior that can&amp;#x2019;t be implemented with functions. For example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&lt;/em&gt; &amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;.&amp;#x603B;&amp;#x7684;&amp;#x6765;&amp;#x8BF4;,&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7279;&amp;#x6B8A;&amp;#x4E4B;&amp;#x5904;&amp;#x5728;&amp;#x4E8E;: &amp;#x5B83;&amp;#x4EEC;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x529F;&amp;#x80FD;.&amp;#x6BD4;&amp;#x5982;:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;if&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Here, we ask Clojure to evaluate a list beginning with the symbol &lt;code&gt;if&lt;/code&gt;. That &lt;code&gt;if&lt;/code&gt; symbol gets resolved to the &lt;code&gt;if&lt;/code&gt; special form, and Clojure calls that special form with the operands &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;,Clojure&amp;#x6C42;&amp;#x503C;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EE5;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;if&lt;/code&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;list&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&lt;code&gt;if&lt;/code&gt;&amp;#x7B26;&amp;#x53F7;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&lt;code&gt;if&lt;/code&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;,Clojure&amp;#x7528;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Special forms don&amp;#x2019;t follow the same evaluation rules as normal functions. For example, when you call a function, each operand gets evaluated. However, with &lt;code&gt;if&lt;/code&gt; you don&amp;#x2019;t want each operand to be evaluated. You only want certain operands to be evaluated, depending on whether the condition is true or false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E0D;&amp;#x9075;&amp;#x4ECE;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x89C4;&amp;#x5219;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#x65F6;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x4F46;&amp;#x5BF9;&amp;#x4E8E;&lt;code&gt;if&lt;/code&gt;,&amp;#x4E0D;&amp;#x5E0C;&amp;#x671B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x90FD;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x53EA;&amp;#x5E0C;&amp;#x671B;&amp;#x6839;&amp;#x636E;&amp;#x6761;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;true&amp;#x6216;false,&amp;#x67D0;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another important special form is &lt;code&gt;quote&lt;/code&gt;. You&amp;#x2019;ve seen lists represented like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x662F;&lt;code&gt;&amp;#x5F15;&amp;#x7528;&lt;/code&gt;(quote)&amp;#x3002;&amp;#x4F60;&amp;#x5DF2;&amp;#x7ECF;&amp;#x89C1;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E48;&amp;#x8868;&amp;#x793A;&amp;#x7684;list:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;(a b c)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you saw in &amp;#x201C;The Reader&amp;#x201D; on page 153, this invokes a reader macro so that we end up with this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x524D;&amp;#x9762;&amp;#x89C1;&amp;#x8FC7;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5B8F;&amp;#x6700;&amp;#x7EC8;&amp;#x5F97;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;quote&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; b c))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Normally, Clojure would try to resolve the &lt;code&gt;a&lt;/code&gt; symbol and then call it because it&amp;#x2019;s the first element in a list. The &lt;code&gt;quote&lt;/code&gt; special form tells the evaluator, &amp;#x201C;Instead of evaluating my next data structure like normal, just return the data structure itself.&amp;#x201D; In this case, you end up with a list consisting of the symbols &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x901A;&amp;#x5E38;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;a&lt;/code&gt;&amp;#x662F;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;Clojure&amp;#x4F1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x89E3;&amp;#x6790;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x3002;&lt;code&gt;&amp;#x5F15;&amp;#x7528;&lt;/code&gt;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x662F;&amp;#x544A;&amp;#x8BC9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8981;&amp;#x6C42;&amp;#x503C;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x91CC;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&lt;code&gt;a&lt;/code&gt;,&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;c&lt;/code&gt;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;list&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, and &lt;code&gt;recur&lt;/code&gt; are all special forms as well. You can see why: they don&amp;#x2019;t get evaluated the same way as functions. For example, normally when the evaluator evaluates a symbol, it resolves that symbol, but &lt;code&gt;def&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; obviously don&amp;#x2019;t behave that way. Instead of resolving symbols, they actually create associations between symbols and values. So the evaluator receives a combination of data structures from the reader, and it goes about resolving the symbols and calling the functions or special forms at the beginning of each list. But there&amp;#x2019;s more! You can also place a &lt;em&gt;macro&lt;/em&gt; at the beginning of a list instead of a function or a special form, and this can give you tremendous power over how the rest of the data structures are evaluated.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;def&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;, &lt;code&gt;fn&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt; &amp;#x548C; &lt;code&gt;recur&lt;/code&gt;&amp;#x90FD;&amp;#x662F;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x539F;&amp;#x56E0;&amp;#x662F;&amp;#x4ED6;&amp;#x4EEC;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0D;&amp;#x540C;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6C42;&amp;#x503C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#x65F6;&amp;#xFF0C;&amp;#x4F1A;&amp;#x89E3;&amp;#x6790;&amp;#x90A3;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x4F46;&lt;code&gt;def&lt;/code&gt;&amp;#x548C;&lt;code&gt;let&lt;/code&gt;&amp;#x660E;&amp;#x663E;&amp;#x4E0D;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x7B26;&amp;#x53F7;&amp;#x4E0E;&amp;#x503C;&amp;#x7684;&amp;#x5173;&amp;#x8054;&amp;#x3002;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF1A;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4ECE;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5E76;&amp;#x89E3;&amp;#x6790;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5B8C;&amp;#xFF01;list&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x9664;&amp;#x4E86;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&lt;em&gt;&amp;#x5B8F;&lt;/em&gt;&amp;#xFF0C;&amp;#x5B8F;&amp;#x8D4B;&amp;#x4E88;&amp;#x4F60;&amp;#x6781;&amp;#x5176;&amp;#x5F3A;&amp;#x5927;&amp;#x7684;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5176;&amp;#x540E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5982;&amp;#x4F55;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Macros&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x5B8F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Hmm . . . Clojure evaluates data structures&amp;#x2014;the same data structures that we write and manipulate in our Clojure programs. Wouldn&amp;#x2019;t it be awesome if we could use Clojure to manipulate the data structures that Clojure evaluates? Yes, yes it would! And guess what? You can do this with macros! Did your head just explode? Mine did!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x548C;&amp;#x6211;&amp;#x4EEC;&amp;#x5199;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x80FD;&amp;#x591F;&amp;#x4FEE;&amp;#x6539;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x5F88;&amp;#x68D2;&amp;#x5462;&amp;#xFF1F;&amp;#x5B8F;&amp;#x5C31;&amp;#x662F;&amp;#x5E72;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7684;&amp;#xFF01;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x64CD;&amp;#x7EB5;Clojure&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To get an idea of what macros do, let&amp;#x2019;s look at some code. Say we want to write a function that makes Clojure read infix notation (such as &lt;code&gt;1 + 1&lt;/code&gt;) instead of its normal notation with the operator first (&lt;code&gt;+ 1 1&lt;/code&gt;). This example is not a macro. Rather, it merely shows that you can write code using infix notation and then use Clojure to transform it so it will actually execute. First, create a list that represents infix addition:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x611F;&amp;#x53D7;&amp;#x4E00;&amp;#x4E0B;&amp;#x5B8F;&amp;#x4F7F;&amp;#x5E72;&amp;#x5565;&amp;#x7684;&amp;#xFF0C;&amp;#x6765;&amp;#x770B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x8BF4;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x8BFB;&amp;#x53D6;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;1 + 1&lt;/code&gt;),&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x6B63;&amp;#x5E38;&amp;#x7684;&amp;#x524D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;(&lt;code&gt;+ 1 1&lt;/code&gt;)&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E0D;&amp;#x662F;&amp;#x5B8F;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x8BA9;&amp;#x4F60;&amp;#x77E5;&amp;#x9053;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x53EF;&amp;#x4EE5;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2D;&amp;#x7F6E;&amp;#x52A0;&amp;#x6CD5;list&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (1 + 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Clojure will throw an exception if you try to make it evaluate this list:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; ClassCastException java.lang.Long cannot be cast to clojure.lang.IFn&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;However, &lt;code&gt;read-string&lt;/code&gt; returns a list, and you can use Clojure to reorganize that list into something it &lt;code&gt;can&lt;/code&gt; successfully evaluate:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4F46;&lt;code&gt;read-string&lt;/code&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;list,&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x7EC4;&amp;#x8FD9;&amp;#x4E2A;list&amp;#xFF0C;&amp;#x4F7F;&amp;#x5B83;&lt;code&gt;&amp;#x80FD;&amp;#x591F;&lt;/code&gt;&amp;#x6210;&amp;#x529F;&amp;#x6C42;&amp;#x503C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [infix (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infix)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;If you eval this, it returns 2, just as you&amp;#x2019;d expect:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;2&amp;#xFF0C;&amp;#x5982;&amp;#x4F60;&amp;#x6240;&amp;#x613F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;eval&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;let&lt;/span&gt;&lt;/span&gt; [infix (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;(1 + 1)&amp;quot;&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infix) (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infix))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;This is cool, but it&amp;#x2019;s also quite clunky. That&amp;#x2019;s where macros come in. Macros give you a convenient way to manipulate lists before Clojure evaluates them. Macros are a lot like functions: they take arguments and return a value, just like a function would. They work on Clojure data structures, just like functions do. What makes them unique and powerful is the way they fit in to the evaluation process. They are executed in between the reader and the evaluator&amp;#x2014;so they can manipulate the data structures that the reader spits out and transform with those data structures before passing them to the evaluator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5F88;&amp;#x9177;&amp;#xFF0C;&amp;#x4F46;&amp;#x5F88;&amp;#x9EBB;&amp;#x70E6;&amp;#x3002;&amp;#x5B8F;&amp;#x5C31;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x3002;Clojure&amp;#x6C42;&amp;#x503C;list&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x7528;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x65B9;&amp;#x4FBF;&amp;#x5730;&amp;#x64CD;&amp;#x7EB5;&amp;#x5B83;&amp;#x3002;&amp;#x5B8F;&amp;#x5F88;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&amp;#x63A5;&amp;#x53D7;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x3002;&amp;#x5B8F;&amp;#x50CF;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x8D77;&amp;#x4F5C;&amp;#x7528;&amp;#x3002;&amp;#x5B8F;&amp;#x7684;&amp;#x72EC;&amp;#x7279;&amp;#x548C;&amp;#x5F3A;&amp;#x5927;&amp;#x4E4B;&amp;#x5904;&amp;#x5728;&amp;#x4E8E;&amp;#x5B83;&amp;#x5982;&amp;#x4F55;&amp;#x878D;&amp;#x5165;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5B8F;&amp;#x6267;&amp;#x884C;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E4B;&amp;#x95F4;&amp;#x2013;&amp;#x6240;&amp;#x4EE5;&amp;#x5B8F;&amp;#x80FD;&amp;#x64CD;&amp;#x7EB5;&amp;#x5E76;&amp;#x8F6C;&amp;#x6362;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x4F20;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;#x2019;s look at an example:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defmacro ignore-last-operand&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [function-call]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (butlast function-call))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x278A; (ignore-last-operand (+ 1 2 10))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;; This will not print anything&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(ignore-last-operand (+ 1 2 (println &amp;quot;look at me!!!&amp;quot;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;At &amp;#x278A; the macro &lt;code&gt;ignore-last-operand&lt;/code&gt; receives the list &lt;code&gt;(+ 1 2 10)&lt;/code&gt; as its argument, not the value 13. This is very different from a function call, because function calls always evaluate all of the arguments passed in, so there is no possible way for a function to reach into one of its operands and alter or ignore it. By contrast, when you call a macro, the operands are not evaluated. In particular, symbols are not resolved; they are passed as symbols. Lists are not evaluated either; that is, the first element in the list is not called as a function, special form, or macro. Rather, the unevaluated list data structure is passed in.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5728; &amp;#x278A; &amp;#x5904;&amp;#xFF0C;&amp;#x5B8F;&lt;code&gt;ignore-last-operand&lt;/code&gt;&amp;#x63A5;&amp;#x53D7;&amp;#x4E86;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x662F;list&lt;code&gt;(+ 1 2 10)&lt;/code&gt;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;13&amp;#x3002;&amp;#x8FD9;&amp;#x4E0E;&amp;#x51FD;&amp;#x6570;&amp;#x5F88;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;&amp;#x603B;&amp;#x662F;&amp;#x6C42;&amp;#x503C;&amp;#x6240;&amp;#x6709;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x51FD;&amp;#x6570;&amp;#x65E0;&amp;#x6CD5;&amp;#x5FFD;&amp;#x7565;&amp;#x6216;&amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x4E0E;&amp;#x4E4B;&amp;#x76F8;&amp;#x53CD;&amp;#xFF0C;&amp;#x5B8F;&amp;#x4E0D;&amp;#x5BF9;&amp;#x53C2;&amp;#x6570;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7279;&amp;#x522B;&amp;#x662F;&amp;#x5B8F;&amp;#x4E0D;&amp;#x5BF9;&amp;#x7B26;&amp;#x53F7;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x7B26;&amp;#x53F7;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x8FD8;&amp;#x662F;&amp;#x7B26;&amp;#x53F7;&amp;#x3002;&amp;#x5B8F;&amp;#x4E5F;&amp;#x4E0D;&amp;#x5BF9;list&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5373;list&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4F5C;&amp;#x4E3A;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x6216;&amp;#x5B8F;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&amp;#x5B8F;&amp;#x7684;&amp;#x8FD8;&amp;#x662F;&amp;#x672A;&amp;#x6C42;&amp;#x503C;&amp;#x7684;list&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another difference is that the data structure returned by a function is not evaluated, but the data structure returned by a macro &lt;code&gt;is&lt;/code&gt;. The process of determining the return value of a macro is called &lt;code&gt;macro expansion&lt;/code&gt;, and you can use the function &lt;code&gt;macroexpand&lt;/code&gt; to see what data structure a macro returns before that data structure is evaluated. Note that you have to quote the form that you pass to &lt;code&gt;macroexpand&lt;/code&gt;:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5DEE;&amp;#x522B;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4E0D;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#xFF0C;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&lt;code&gt;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&lt;/code&gt;&amp;#x3002;&amp;#x5B8F;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53EB;&lt;code&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&lt;/code&gt;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x770B;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;macroexpand&lt;/code&gt;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#x5FC5;&amp;#x987B;&amp;#x7528;quote&amp;#x5305;&amp;#x4F4F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;ignore-last-operand&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;macroexpand&lt;/span&gt;&lt;/span&gt; &amp;apos;(&lt;span class=&quot;name&quot;&gt;ignore-last-operand&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;+&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;look at me!!!&amp;quot;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; (+ 1 2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;As you can see, both expansions result in the list &lt;code&gt;(+ 1 2)&lt;/code&gt;. When this list is evaluated, as in the previous example, the result is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x4E24;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7ED3;&amp;#x679C;&amp;#x90FD;&amp;#x662F;list&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x5F53;&amp;#x8FD9;&amp;#x4E2A;list&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&lt;code&gt;3&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Just for fun, here&amp;#x2019;s a macro for doing simple infix notation:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x597D;&amp;#x73A9;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x5B9E;&amp;#x73B0;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x4E2D;&amp;#x7F6E;&amp;#x8868;&amp;#x793A;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defmacro&lt;/span&gt;&lt;/span&gt; infix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [infixed]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;list&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;second&lt;/span&gt;&lt;/span&gt; infixed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;first&lt;/span&gt;&lt;/span&gt; infixed)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;last&lt;/span&gt;&lt;/span&gt; infixed)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;infix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;; =&amp;gt; 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The best way to think about this whole process is to picture a phase between reading and evaluation: the &lt;code&gt;macro expansion&lt;/code&gt; phase. Figure 7-6 shows how you can visualize the entire evaluation process for &lt;code&gt;(infix (1 + 2))&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x601D;&amp;#x8003;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x6700;&amp;#x597D;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;&amp;#x56FE;&amp;#x4E0A;&amp;#x7684;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x9636;&amp;#x6BB5;&amp;#x4E2D;&amp;#x95F4;&amp;#x753B;&amp;#x51FA;&lt;code&gt;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&lt;/code&gt;&amp;#x9636;&amp;#x6BB5;&amp;#x3002;&amp;#x56FE;7-6&amp;#x6F14;&amp;#x793A;&amp;#x4E86;&lt;code&gt;(infix (1 + 2))&lt;/code&gt;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56FE;7-6&lt;img src=&quot;http://www.braveclojure.com/assets/images/cftbat/read-and-eval/whole-shebang.png&quot; alt=&quot;7-6&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;And that&amp;#x2019;s how macros fit into the evaluation process. But why would you want to do this? The reason is that macros allow you to transform an arbitrary data structure like &lt;code&gt;(1 + 2)&lt;/code&gt; into one that can Clojure can evaluate, &lt;code&gt;(+ 1 2)&lt;/code&gt;. That means &lt;code&gt;you can use Clojure to extend itself&lt;/code&gt; so you can write programs however you please. In other words, macros enable &lt;code&gt;syntactic abstraction&lt;/code&gt;. Syntactic abstraction may sound a bit abstract (ha ha!), so let&amp;#x2019;s explore that a little.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x5B8F;&amp;#x878D;&amp;#x5165;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&amp;#x4F46;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8981;&amp;#x8FD9;&amp;#x4E48;&amp;#x5E72;&amp;#x5462;&amp;#xFF1F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B8F;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x4EFB;&amp;#x610F;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&lt;code&gt;(1 + 2)&lt;/code&gt;,&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x80FD;&amp;#x6C42;&amp;#x503C;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&lt;code&gt;(+ 1 2)&lt;/code&gt;&amp;#x3002;&amp;#x8FD9;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x53EF;&amp;#x4EE5;&lt;code&gt;&amp;#x7528;Clojure&amp;#x8BED;&amp;#x8A00;&amp;#x6269;&amp;#x5C55;&amp;#x81EA;&amp;#x8EAB;&lt;/code&gt;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x4F60;&amp;#x9AD8;&amp;#x5174;&amp;#xFF0C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7231;&amp;#x600E;&amp;#x4E48;&amp;#x5199;&amp;#x600E;&amp;#x4E48;&amp;#x5199;&amp;#x3002;&amp;#x6362;&amp;#x53E5;&amp;#x8BDD;&amp;#x8BF4;&amp;#xFF0C;Clojure&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x8FDB;&amp;#x884C;&lt;code&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&lt;/code&gt;&amp;#x3002;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x542C;&amp;#x8D77;&amp;#x6765;&amp;#x6709;&amp;#x70B9;&amp;#x62BD;&amp;#x8C61;&amp;#xFF0C;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x63A2;&amp;#x7D22;&amp;#x4E00;&amp;#x4E0B;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Syntactic Abstraction and the -&amp;gt; Macro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E;-gt-&amp;#x5B8F;&quot;&gt;&lt;a href=&quot;#&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E;-gt-&amp;#x5B8F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E; -&amp;gt; &amp;#x5B8F;&quot;&gt;&lt;/a&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&amp;#x4E0E; -&amp;gt; &amp;#x5B8F;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Often, Clojure code consists of a bunch of nested function calls. For example, I use the following function in one of my projects:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Clojure&amp;#x4EE3;&amp;#x7801;&amp;#x7ECF;&amp;#x5E38;&amp;#x7531;&amp;#x5927;&amp;#x91CF;&amp;#x5D4C;&amp;#x5957;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x6784;&amp;#x6210;&amp;#x3002;&amp;#x6BD4;&amp;#x5982;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x5728;&amp;#x6211;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; read-resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;Read a resource into a string&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;read-string&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;slurp&lt;/span&gt;&lt;/span&gt; (&lt;span class=&quot;name&quot;&gt;clojure.java.io/resource&lt;/span&gt; path))))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;To understand the function body, you have to find the innermost form, in this case &lt;code&gt;(clojure.java.io/resource path)&lt;/code&gt;, and then work your way outward from right to left to see how the result of each function gets passed to another function. This right-to-left flow is opposite of what non-Lisp programmers are used to. As you get used to writing in Clojure, this kind of code gets easier and easier to understand. But if you want to translate Clojure code so you can read it in a more familiar, left-to-right, top-to-bottom manner, you can use the built-in &lt;code&gt;-&amp;gt;&lt;/code&gt; macro, which is also known as the &lt;code&gt;threading&lt;/code&gt; or &lt;code&gt;stabby&lt;/code&gt; macro. It lets you rewrite the preceding function like this:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8981;&amp;#x7406;&amp;#x89E3;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#xFF0C;&amp;#x4F60;&amp;#x5FC5;&amp;#x987B;&amp;#x627E;&amp;#x5230;&amp;#x6700;&amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x5F62;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&lt;code&gt;(clojure.java.io/resource path)&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x4ECE;&amp;#x53F3;&amp;#x81F3;&amp;#x5DE6;&amp;#x5730;&amp;#x5F80;&amp;#x5916;&amp;#x5C42;&amp;#x8D70;&amp;#xFF0C;&amp;#x67E5;&amp;#x770B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x4F20;&amp;#x7ED9;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x4ECE;&amp;#x53F3;&amp;#x5F80;&amp;#x5DE6;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0E;&amp;#x975E;Lisp&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x76F8;&amp;#x53CD;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x4E60;&amp;#x60EF;&amp;#x4E86;Clojure&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4F1A;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x60F3;&amp;#x8F6C;&amp;#x6362;Clojure&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4F60;&amp;#x7528;&amp;#x66F4;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#xFF0C;&amp;#x4ECE;&amp;#x5DE6;&amp;#x5230;&amp;#x53F3;&amp;#xFF0C;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x9605;&amp;#x8BFB;&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5167;&amp;#x5EFA;&amp;#x7684;&lt;code&gt;-&amp;gt;&lt;/code&gt;&amp;#x5B8F;&amp;#x505A;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B8F;&amp;#x4E5F;&amp;#x53EB;&lt;code&gt;&amp;#x7A7F;&amp;#x7EBF;&lt;/code&gt;&amp;#x6216;&lt;code&gt;&amp;#x7A7F;&amp;#x4E32;&lt;/code&gt;&amp;#x5B8F;&amp;#x3002;&amp;#x524D;&amp;#x9762;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FD9;&amp;#x4E48;&amp;#x5199;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;defn&lt;/span&gt;&lt;/span&gt; read-resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [path]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (&lt;span class=&quot;name&quot;&gt;&lt;span class=&quot;builtin-name&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt; path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      clojure.java.io/resource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      slurp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      read-string))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;You can read this as a pipeline that goes from top to bottom instead of from inner parentheses to outer parentheses. First, &lt;code&gt;path&lt;/code&gt; gets passed to &lt;code&gt;io/resource&lt;/code&gt;, then the result gets passed to &lt;code&gt;slurp&lt;/code&gt;, and finally the result of that gets passed to &lt;code&gt;read-string&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x7BA1;&amp;#x9053;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x4ECE;&amp;#x5185;&amp;#x5230;&amp;#x5916;&amp;#x7684;&amp;#x62EC;&amp;#x53F7;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&lt;code&gt;path&lt;/code&gt;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;io/resource&lt;/code&gt;,&amp;#x7136;&amp;#x540E;&amp;#x7ED3;&amp;#x679C;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;slurp&lt;/code&gt;,&amp;#x6700;&amp;#x540E;&amp;#x53C8;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&lt;code&gt;read-string&lt;/code&gt;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These two ways of defining &lt;code&gt;read-resource&lt;/code&gt; are entirely equivalent. However, the second one might be easier understand because we can approach it from top to bottom, a direction we&amp;#x2019;re used to. The &lt;code&gt;-&amp;gt;&lt;/code&gt; also lets us omit parentheses, which means there&amp;#x2019;s less visual noise to contend with. This is a &lt;code&gt;syntactic abstraction&lt;/code&gt; because it lets you write code in a syntax that&amp;#x2019;s different from Clojure&amp;#x2019;s built-in syntax but is preferable for human consumption. Better than lead into gold!!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x7528;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x5B9A;&amp;#x4E49;&lt;code&gt;read-resource&lt;/code&gt;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&amp;#x4F46;&amp;#x7B2C;&amp;#x4E8C;&amp;#x79CD;&amp;#x53EF;&amp;#x80FD;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4E60;&amp;#x60EF;&amp;#x7684;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5230;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5411;&amp;#x3002;&lt;code&gt;-&amp;gt;&lt;/code&gt;&amp;#x8FD8;&amp;#x7701;&amp;#x53BB;&amp;#x4E86;&amp;#x62EC;&amp;#x53F7;&amp;#xFF0C;&amp;#x89C6;&amp;#x89C9;&amp;#x4E0A;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x3002;&amp;#x8FD9;&amp;#x662F;&amp;#x4E2A;&lt;code&gt;&amp;#x8BED;&amp;#x6CD5;&amp;#x62BD;&amp;#x8C61;&lt;/code&gt;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5B83;&amp;#x4F7F;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x591F;&amp;#x7528;&amp;#x4E0E;Clojure&amp;#x5185;&amp;#x7F6E;&amp;#x8BED;&amp;#x6CD5;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x4F46;&amp;#x4EBA;&amp;#x7C7B;&amp;#x66F4;&amp;#x559C;&amp;#x6B22;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&amp;#x771F;&amp;#x5C4C;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Summary&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;a href=&quot;#&amp;#x603B;&amp;#x7ED3;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x603B;&amp;#x7ED3;&quot;&gt;&lt;/a&gt;&amp;#x603B;&amp;#x7ED3;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;In this chapter, you learned about Clojure&amp;#x2019;s evaluation process. First, the reader transforms text into Clojure data structures. Next, the macro expander transforms those data structures with macros, converting your custom syntax into syntactically valid data structures. Finally, those data structures get sent to the evaluator. The evaluator processes data structures based on their type: symbols are resolved to their referents; lists result in function, macro, or special form calls; and everything else evaluates to itself.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x7AE0;&amp;#x8BB2;&amp;#x8FF0;&amp;#x4E86;Clojure&amp;#x7684;&amp;#x6C42;&amp;#x503C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#xFF0C;&amp;#x8BFB;&amp;#x5165;&amp;#x7A0B;&amp;#x5E8F;&amp;#x628A;&amp;#x6587;&amp;#x672C;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;Clojure&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#xFF0C;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7528;&amp;#x5B8F;&amp;#x8F6C;&amp;#x6362;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x628A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x8BED;&amp;#x6CD5;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x8BED;&amp;#x6CD5;&amp;#x5408;&amp;#x6CD5;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x88AB;&amp;#x4F20;&amp;#x7ED9;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x3002;&amp;#x6C42;&amp;#x503C;&amp;#x7A0B;&amp;#x5E8F;&amp;#x57FA;&amp;#x4E8E;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5904;&amp;#x7406;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&amp;#x7B26;&amp;#x53F7;&amp;#x88AB;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x7B26;&amp;#x53F7;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF1B;list&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x3001;&amp;#x5B8F;&amp;#x6216;&amp;#x7279;&amp;#x6B8A;&amp;#x5F62;&amp;#x5F0F;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#xFF1B;&amp;#x6240;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x578B;&amp;#x90FD;&amp;#x89E3;&amp;#x6790;&amp;#x4E3A;&amp;#x81EA;&amp;#x8EAB;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The coolest thing about this process is that it allows you to use Clojure to expand its own syntax. This process is made easier because Clojure is homoiconic: its text represents data structures, and those data structures represent abstract syntax trees, allowing you to more easily reason about how to construct syntax-expanding macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x6700;&amp;#x9177;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5141;&amp;#x8BB8;&amp;#x4F60;&amp;#x7528;Clojure&amp;#x6269;&amp;#x5C55;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x8BED;&amp;#x6CD5;&amp;#x3002;&amp;#x56E0;&amp;#x4E3A;Clojure&amp;#x662F;&amp;#x540C;&amp;#x50CF;&amp;#x6027;&amp;#x8BED;&amp;#x8A00;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x4E86;&amp;#xFF1A;&amp;#x4EE3;&amp;#x7801;&amp;#x4EE3;&amp;#x8868;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x4EE3;&amp;#x8868;&amp;#x62BD;&amp;#x8C61;&amp;#x8BED;&amp;#x6CD5;&amp;#x6811;&amp;#xFF0C;&amp;#x4F7F;&amp;#x4F60;&amp;#x63A8;&amp;#x65AD;&amp;#x5982;&amp;#x4F55;&amp;#x6784;&amp;#x5EFA;&amp;#x8BED;&amp;#x6CD5;&amp;#x6269;&amp;#x5C55;&amp;#x5B8F;&amp;#x53D8;&amp;#x5F97;&amp;#x66F4;&amp;#x52A0;&amp;#x5BB9;&amp;#x6613;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With all these new concepts in your brainacles, you&amp;#x2019;re now ready to blow stuff up on purpose, just like I promised. The next chapter will teach you everything you need to know about writing macros. Hold on to your socks or they&amp;#x2019;re liable to get knocked off!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6982;&amp;#x5FF5;&amp;#x4E3A;&amp;#x4E0B;&amp;#x7AE0;&amp;#x505A;&amp;#x597D;&amp;#x4E86;&amp;#x51C6;&amp;#x5907;&amp;#x3002;&amp;#x4E0B;&amp;#x7AE0;&amp;#x4F1A;&amp;#x8BB2;&amp;#x8FF0;&amp;#x5199;&amp;#x5B8F;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x77E5;&amp;#x8BC6;&amp;#xFF01;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Exercises&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;a href=&quot;#&amp;#x7EC3;&amp;#x4E60;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7EC3;&amp;#x4E60;&quot;&gt;&lt;/a&gt;&amp;#x7EC3;&amp;#x4E60;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;These exercises focus on reading and evaluation. Chapter 8 has exercises for writing macros.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC3;&amp;#x4E60;&amp;#x4E13;&amp;#x6CE8;&amp;#x4E8E;&amp;#x8BFB;&amp;#x5165;&amp;#x548C;&amp;#x6C42;&amp;#x503C;&amp;#x3002;&amp;#x7B2C;8&amp;#x7AE0;&amp;#x6709;&amp;#x5199;&amp;#x5B8F;&amp;#x7EC3;&amp;#x4E60;&amp;#x3002;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;code&gt;list&lt;/code&gt; function, quoting, and &lt;code&gt;read-string&lt;/code&gt; to create a list that, when evaluated, prints your first name and your favorite sci-fi movie.&lt;/li&gt;
&lt;li&gt;Create an infix function that takes a list like &lt;code&gt;(1 + 3 * 4 - 5)&lt;/code&gt; and transforms it into the lists that Clojure needs in order to correctly evaluate the expression using operator precedence rules.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&lt;code&gt;list&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&lt;code&gt;quote&lt;/code&gt; &amp;#x548C; &lt;code&gt;read-string&lt;/code&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;list,&amp;#x8FD9;&amp;#x4E2A;list&amp;#x88AB;&amp;#x6C42;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x6253;&amp;#x5370;&amp;#x4F60;&amp;#x7684;&amp;#x59D3;&amp;#x548C;&amp;#x4F60;&amp;#x6700;&amp;#x559C;&amp;#x6B22;&amp;#x7684;&amp;#x79D1;&amp;#x5E7B;&amp;#x7535;&amp;#x5F71;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7F16;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;infix&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x63A5;&amp;#x53D7;&amp;#x5F62;&amp;#x5982;&lt;code&gt;(1 + 3 * 4 - 5)&lt;/code&gt;&amp;#x7684;list&amp;#xFF0C;&amp;#x5E76;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x89C4;&amp;#x5219;&amp;#x6B63;&amp;#x786E;&amp;#x7684;Clojure&amp;#x9700;&amp;#x8981;&amp;#x7684;list&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&amp;#x8BD1;&amp;#x6587;&amp;#x7ED3;&amp;#x675F;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x6587;&amp;#x662F;&amp;#x6211;&amp;#x5BF9;Clojure&amp;#x4E66;&amp;#x7C4D; &lt;a href=&quot;http://www.braveclojure.com/clojure-for-the-brave-and-true/&quot; tar
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
      <category term="Clojure For The Branve And True" scheme="http://yoursite.com/tags/Clojure-For-The-Branve-And-True/"/>
    
  </entry>
  
  <entry>
    <title>OpenClose原则的几类使用场景</title>
    <link href="http://yoursite.com/2016/03/27/openclose-principle-use-case/"/>
    <id>http://yoursite.com/2016/03/27/openclose-principle-use-case/</id>
    <published>2016-03-26T17:33:28.000Z</published>
    <updated>2016-03-27T14:17:07.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;a href=&quot;#OpenClose&amp;#x539F;&amp;#x5219;&quot; class=&quot;headerlink&quot; title=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;/a&gt;OpenClose&amp;#x539F;&amp;#x5219;&lt;/h2&gt;&lt;p&gt;&amp;#x524D;&amp;#x4E00;&amp;#x9635;&amp;#x770B;&amp;#x5230;&amp;#x9648;&amp;#x5929;&amp;#x8001;&amp;#x5E08;&amp;#x7684;&amp;#x4E00;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;,&amp;#x6807;&amp;#x9898;&amp;#x662F;&lt;a href=&quot;http://t.cn/Rq7j4fu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x8C08;&amp;#x8C08;&amp;#x6211;&amp;#x5BF9;&amp;#x5DE5;&amp;#x7A0B;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x7684;&amp;#x770B;&amp;#x6CD5;&lt;/a&gt;.&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x7BC7;&amp;#x542B;&amp;#x91D1;&amp;#x91CF;&amp;#x5F02;&amp;#x5E38;&amp;#x9AD8;&amp;#x7684;&amp;#x6587;&amp;#x7AE0;,&amp;#x5F3A;&amp;#x70C8;&amp;#x5EFA;&amp;#x8BAE;&amp;#x4ED4;&amp;#x7EC6;&amp;#x9605;&amp;#x8BFB;.&amp;#x8FD9;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x8FD8;&amp;#x4F7F;&amp;#x6211;&amp;#x5F00;&amp;#x59CB;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5B66;&amp;#x4E60;Clojure,&amp;#x56E0;&amp;#x4E3A;Rich Hickey&amp;#x90A3;&amp;#x7BC7;&lt;a href=&quot;http://t.cn/R795YxA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Simple Made Easy&lt;/a&gt;&amp;#x5B9E;&amp;#x5728;&amp;#x662F;&amp;#x592A;&amp;#x8BF1;&amp;#x4EBA;&amp;#x4E86;&amp;#x2026;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x8FD9;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x91CC;,&amp;#x6211;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;: &lt;code&gt;Open to extension, Close to modification&lt;/code&gt;. &amp;#x5373;&amp;#x4EE3;&amp;#x7801;&amp;#x5199;&amp;#x5B8C;&amp;#x4EE5;&amp;#x540E;,&amp;#x4FDD;&amp;#x6301;&amp;#x6269;&amp;#x5C55;&amp;#x80FD;&amp;#x529B;,&amp;#x4F46;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x518D;&amp;#x6539;&amp;#x52A8;&amp;#x4EE3;&amp;#x7801;.&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x76EE;&amp;#x524D;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x5C31;&amp;#x662F;:&amp;#x628A;&lt;code&gt;&amp;#x6761;&amp;#x4EF6;&amp;#x68C0;&amp;#x6D4B;&lt;/code&gt;&amp;#x548C;&lt;code&gt;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/code&gt;&amp;#x7EC4;&amp;#x7EC7;&amp;#x6210;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x6210;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;,&amp;#x6709;&amp;#x65B0;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x65F6;&amp;#x5019;,&amp;#x53EA;&amp;#x8981;&amp;#x589E;&amp;#x52A0;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5C31;&amp;#x884C;&amp;#x4E86;(Open to extension),&amp;#x800C;&amp;#x9009;&amp;#x62E9;&amp;#x5E76;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x904D;&amp;#x5386;&amp;#x51FD;&amp;#x6570;&amp;#x5B8C;&amp;#x6210;,&amp;#x4E0D;&amp;#x518D;&amp;#x9700;&amp;#x8981;&amp;#x4FEE;&amp;#x6539;(Close to modification).&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x7406;&amp;#x89E3;&amp;#x89D2;&amp;#x5EA6;&amp;#x5C31;&amp;#x662F;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;,&amp;#x628A;&amp;#x5305;&amp;#x542B;&amp;#x591A;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;,&amp;#x5C06;&amp;#x6765;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x589E;&amp;#x52A0;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5206;&amp;#x89E3;&amp;#x6210;&amp;#x5355;&amp;#x903B;&amp;#x8F91;&amp;#x72EC;&amp;#x7ACB;&amp;#x4EFB;&amp;#x52A1;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&lt;/h2&gt;&lt;p&gt;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x573A;&amp;#x666F;,&amp;#x6839;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x6587;&amp;#x5B57;,type&amp;#x4E3A;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;&amp;#x6570;&amp;#x5B57;,&amp;#x73B0;&amp;#x5728;&amp;#x8981;&amp;#x53D6;&amp;#x5F97;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x5B57;.&amp;#x76F4;&amp;#x63A5;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#x5C31;&amp;#x662F;if&amp;#x52A0;&amp;#x4FEE;&amp;#x6539;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTypeName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; result = &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;spck_list&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;detail&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;search&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type === &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;) result = &lt;span class=&quot;string&quot;&gt;&amp;apos;activity&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;,&amp;#x5176;&amp;#x5B9E;&amp;#x4EE5;&amp;#x524D;&amp;#x786E;&amp;#x5B9E;&amp;#x53EA;&amp;#x6709;3&amp;#x79CD;,&amp;#x73B0;&amp;#x5728;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;4&amp;#x79CD;,&amp;#x6CA1;&amp;#x51C6;&amp;#x4EE5;&amp;#x540E;&amp;#x8FD8;&amp;#x4F1A;&amp;#x589E;&amp;#x52A0;,PM&amp;#x7684;idea,&amp;#x4F60;&amp;#x61C2;&amp;#x7684;.&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x91C7;&amp;#x7528;OpenClose&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTypeName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;type&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; coll = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;spck_list&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;detail&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;search&amp;apos;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;activity&amp;apos;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; found = _.find(coll, item =&amp;gt; item[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] === type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; found ? found[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x867D;&amp;#x7136;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x770B;&amp;#x4E0D;&amp;#x51FA;&amp;#x660E;&amp;#x663E;&amp;#x4F18;&amp;#x52BF;,&amp;#x4F46;&amp;#x9009;&amp;#x62E9;&amp;#x903B;&amp;#x8F91;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5F88;&amp;#x591A;,&amp;#x6267;&amp;#x884C;&amp;#x903B;&amp;#x8F91;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5F88;&amp;#x957F;,&amp;#x5F88;&amp;#x4E71;,&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x5C31;&amp;#x4F1A;&amp;#x66F4;&amp;#x660E;&amp;#x663E;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;&amp;#x5927;&amp;#x4E00;&amp;#x70B9;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&lt;/h2&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x6B21;&amp;#x9700;&amp;#x8981;&amp;#x683C;&amp;#x5F0F;&amp;#x5316;&amp;#x4ECE;DB&amp;#x53D6;&amp;#x56DE;&amp;#x7684;&amp;#x6570;&amp;#x636E;,&amp;#x6B63;&amp;#x597D;&amp;#x8FD8;&amp;#x662F;&amp;#x4E0A;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x7684;&amp;#x8DEF;&amp;#x7531;&amp;#x91CC;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;,&amp;#x7531;&amp;#x4E8E;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E86;&amp;#x4E0D;&amp;#x540C;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;,&amp;#x6240;&amp;#x4EE5;&amp;#x8981;&amp;#x6839;&amp;#x636E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x5BF9;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x5316;.&amp;#x8FD9;&amp;#x6B21;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;&amp;#x91C7;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x539F;&amp;#x5219;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;formatActWithDetail&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//act.type  0:&amp;#x7CBE;&amp;#x54C1;&amp;#x5408;&amp;#x96C6; 1:&amp;#x5355;&amp;#x54C1;&amp;#x63A8;&amp;#x8350; 2:&amp;#x68C0;&amp;#x7D22;&amp;#x89C4;&amp;#x5219; 9:&amp;#x5B98;&amp;#x7F51;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x62FC;&amp;#x88C5;0,2,9&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterWithAction = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format0(act) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format2(act, matched) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: type =&amp;gt; type === &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; { &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; format9(act, matched) }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; run(filterWithAction, act.type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;coll, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; option &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; coll) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.filter(args)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; option.action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format0&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x7CBE;&amp;#x54C1;&amp;#x5408;&amp;#x96C6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; result = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activityId: act.id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (act.width === &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;) result.pic = imgurl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x68C0;&amp;#x7D22;&amp;#x89C4;&amp;#x5219;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keyword: matched.keyword,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;format9&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;act, matched&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5B98;&amp;#x7F51;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; imgurl = getImgurl(act);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    activityId: &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(matched.keyword),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: act.name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgSrc: imgurl,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: act.width&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x6709;&amp;#x76F8;&amp;#x4F3C;,&amp;#x4E5F;&amp;#x6709;&amp;#x5DEE;&amp;#x5F02;,&amp;#x6709;&amp;#x7684;&amp;#x8FD8;&amp;#x6709;&amp;#x81EA;&amp;#x5DF1;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5982;&amp;#x679C;&amp;#x5199;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x5373;&amp;#x96BE;&amp;#x770B;,&amp;#x53C8;&amp;#x75DB;&amp;#x82E6;,&amp;#x53C8;&amp;#x4E0D;&amp;#x597D;&amp;#x6269;&amp;#x5C55;,&amp;#x56E0;&amp;#x4E3A;&amp;#x6269;&amp;#x5C55;&amp;#x65F6;&amp;#x5019;&amp;#x53C8;&amp;#x662F;&amp;#x4E00;&amp;#x6B21;&amp;#x5373;&amp;#x96BE;&amp;#x770B;&amp;#x53C8;&amp;#x75DB;&amp;#x82E6;&amp;#x7684;&amp;#x7ECF;&amp;#x5386;.&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;OpenClose&amp;#x5199;&amp;#x6CD5;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6BD4;&amp;#x4E0A;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#x660E;&amp;#x663E;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot;&gt;&lt;a href=&quot;#&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;-&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&quot;&gt;&lt;/a&gt;&amp;#x66F4;&amp;#x5927;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&lt;/h2&gt;&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x4E00;&amp;#x4E2A;api&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x5305;&amp;#x542B;&amp;#x597D;&amp;#x51E0;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x4F46;&amp;#x7531;&amp;#x4E8E;&amp;#x67D0;&amp;#x4E9B;&amp;#x539F;&amp;#x56E0;(&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;api&amp;#x66F4;&amp;#x5408;&amp;#x9002;),&amp;#x8FD9;&amp;#x4E2A;api&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5728;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x62C6;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;api,&amp;#x800C;&amp;#x662F;&amp;#x5E26;&amp;#x7740;&amp;#x591A;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;api&amp;#x8BF7;&amp;#x6C42;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;,&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x5199;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x76F4;&amp;#x63A5;&amp;#x7528;if&amp;#x8BED;&amp;#x53E5;&amp;#x5224;&amp;#x65AD;&amp;#x53C2;&amp;#x6570;&amp;#x5E76;&amp;#x6267;&amp;#x884C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x5FCD;&amp;#x65E0;&amp;#x53EF;&amp;#x5FCD;&amp;#x4E86;,&amp;#x56E0;&amp;#x4E3A;&amp;#x592A;&amp;#x591A;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&amp;#x9700;&amp;#x8981;&amp;#x540C;&amp;#x65F6;&amp;#x8003;&amp;#x8651;.&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;OpenClose&amp;#x539F;&amp;#x5219;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&amp;#x53D1;&amp;#x6325;&amp;#x5A01;&amp;#x529B;.&amp;#x5373;&amp;#x76F4;&amp;#x63A5;&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;api&amp;#x6839;&amp;#x636E;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;,&amp;#x62C6;&amp;#x5206;&amp;#x6210;&amp;#x591A;&amp;#x4E2A;&amp;#x5185;&amp;#x90E8;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&amp;#x65E2;&amp;#x964D;&amp;#x4F4E;&amp;#x4E86;&amp;#x5F00;&amp;#x53D1;&amp;#x75DB;&amp;#x82E6;&amp;#x5EA6;,&amp;#x4E5F;&amp;#x4FDD;&amp;#x6301;&amp;#x4E86;&amp;#x6269;&amp;#x5C55;&amp;#x6027;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0A;&amp;#x8FF0;&amp;#x63CF;&amp;#x8FF0;&amp;#x7684;&amp;#x5177;&amp;#x4F53;&amp;#x4F8B;&amp;#x5B50;,&amp;#x591A;&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;,&amp;#x5404;&amp;#x4E2A;&amp;#x5206;&amp;#x4EAB;&amp;#x7684;&amp;#x76F8;&amp;#x4F3C;&amp;#x548C;&amp;#x5DEE;&amp;#x5F02;&amp;#x6709;&amp;#x5927;&amp;#x6709;&amp;#x5C0F;,&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5206;&amp;#x4EAB;&amp;#x7C7B;&amp;#x578B;&amp;#x4ECE;3&amp;#x79CD;&amp;#x589E;&amp;#x52A0;&amp;#x5230;&amp;#x4E86;5&amp;#x79CD;,&amp;#x76F4;&amp;#x63A5;&amp;#x770B;OpenClose&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#x5427;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//type: 1&amp;#x6D3B;&amp;#x52A8; 2&amp;#x4E13;&amp;#x8F91; 3&amp;#x5355;&amp;#x54C1; 4&amp;#x6211;&amp;#x7684;&amp;#x7CBE;&amp;#x9009;&amp;#x96C6; 5&amp;#x540E;&amp;#x53F0;&amp;#x5EFA;&amp;#x7684;&amp;#x6D3B;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//channelId 0 &amp;#x5FAE;&amp;#x4FE1;&amp;#x597D;&amp;#x53CB; 1&amp;#x5FAE;&amp;#x4FE1;&amp;#x670B;&amp;#x53CB;&amp;#x5708; 2 &amp;#x5FAE;&amp;#x535A; 3 QQ&amp;#x597D;&amp;#x53CB; 4 QQ&amp;#x7A7A;&amp;#x95F4; 5 &amp;#x77ED;&amp;#x4FE1; 6 &amp;#x4E8C;&amp;#x7EF4;&amp;#x7801; 7&amp;#x590D;&amp;#x5236;&amp;#x94FE;&amp;#x63A5; 8&amp;#x5FAE;&amp;#x4FE1;&amp;#x5FEB;&amp;#x7167; 9&amp;#x670B;&amp;#x53CB;&amp;#x5708;&amp;#x5FEB;&amp;#x7167;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5355;&amp;#x54C1;&amp;#x6216;&amp;#x8005;&amp;#x6D3B;&amp;#x52A8;&amp;#x9700;&amp;#x8981;&amp;#x4F20;&amp;#x5165;&amp;#x5355;&amp;#x54C1;&amp;#x7684;url&amp;#x94FE;&amp;#x63A5;&amp;#x5730;&amp;#x5740;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; args = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    userId: req.get(&lt;span class=&quot;string&quot;&gt;&amp;apos;uid&amp;apos;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    productId: req.body.pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url: req.body.url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    type: req.body.type,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    channelId: req.body.channel_id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; filterWithAction = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;1&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-active&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;2&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-album&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;3&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-product&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;4&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-best&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      filter: args =&amp;gt; args.type === &lt;span class=&quot;string&quot;&gt;&amp;apos;5&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      action: () =&amp;gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;./share-action/action-spck-list&amp;apos;&lt;/span&gt;)(args, res, req)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  run(filterWithAction, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;coll, args&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; option &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; coll) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (option.filter(args)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; option.action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,5&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x5185;&amp;#x5BB9;,&amp;#x6BCF;&amp;#x79CD;&amp;#x53C8;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x79CD;&amp;#x5206;&amp;#x4EAB;&amp;#x6E20;&amp;#x9053;,&amp;#x5176;&amp;#x4E2D;&amp;#x6709;&amp;#x7684;&amp;#x6E20;&amp;#x9053;&amp;#x9700;&amp;#x8981;&amp;#x8FD4;&amp;#x56DE;&amp;#x9644;&amp;#x52A0;&amp;#x7684;&amp;#x6570;&amp;#x636E;.&amp;#x6211;&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x62FC;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;args&lt;/code&gt;&amp;#x5BF9;&amp;#x8C61;.&amp;#x7136;&amp;#x540E;&amp;#x76F4;&amp;#x63A5;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;type&lt;/code&gt;&amp;#x53C2;&amp;#x6570;,&amp;#x628A;&amp;#x8FD9;&amp;#x4E2A;api&amp;#x62C6;&amp;#x5206;&amp;#x6210;5&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5355;&amp;#x4E00;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x5904;&amp;#x7406;&amp;#x6A21;&amp;#x5757;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x653E;&amp;#x5728;&amp;#x5355;&amp;#x72EC;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;,&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5168;&amp;#x90E8;&amp;#x4F20;&amp;#x8FC7;&amp;#x53BB;,&amp;#x8FD9;&amp;#x5C42;api&amp;#x5C31;&amp;#x4E0D;&amp;#x518D;&amp;#x5E72;&amp;#x5176;&amp;#x4ED6;&amp;#x4E8B;&amp;#x60C5;&amp;#x4E86;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E0B;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5904;&amp;#x7406;&amp;#x6A21;&amp;#x5757;&lt;code&gt;action-active.js&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = (args, res, req) =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; productId = args.productId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; channelId = args.channelId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; testArgs([productId, channelId]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; shareUrl = &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${global.appConfig.activityUrl}&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;${productId}&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; recordShare(args.userId, shareUrl, args.type, channelId, productId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; shareId = _.first(data).id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; apiUrl = global.appConfig.apiUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        content : &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5546;&amp;#x54C1;&amp;#x5728;&amp;#x53C2;&amp;#x52A0;&amp;#x6D3B;&amp;#x52A8;&amp;#xFF0C;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x5F88;&amp;#x4E0D;&amp;#x9519;&amp;#xFF0C;&amp;#x5FEB;&amp;#x6765;&amp;#x770B;&amp;#x770B;&amp;#x5427;&amp;#xFF01;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        url: &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;${apiUrl}&lt;/span&gt;share/share?share_id=&lt;span class=&quot;subst&quot;&gt;${shareId}&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      status: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sendError(res, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logError(err, req);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;,&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x6BB5;&amp;#x5355;&amp;#x4E00;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#x7F16;&amp;#x7801;&amp;#x7684;&amp;#x540C;&amp;#x662F;&amp;#x8003;&amp;#x8651;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;.&amp;#x53EF;&amp;#x4EE5;&amp;#x60F3;&amp;#x8C61;&amp;#x4E00;&amp;#x4E0B;&amp;#x628A;&amp;#x6240;&amp;#x6709;5&amp;#x79CD;&amp;#x6DF7;&amp;#x5728;&amp;#x4E00;&amp;#x8D77;,&amp;#x800C;&amp;#x4E14;&amp;#x5C06;&amp;#x6765;&amp;#x6CA1;&amp;#x51C6;&amp;#x4F1A;&amp;#x589E;&amp;#x52A0;&amp;#x5206;&amp;#x4EAB;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;,&amp;#x4EE3;&amp;#x7801;&amp;#x91CC;&amp;#x4F1A;&amp;#x5230;&amp;#x5904;&amp;#x5145;&amp;#x6EE1;&amp;#x4E86;if,&amp;#x800C;OpenClose&amp;#x4E00;&amp;#x65E6;&amp;#x642D;&amp;#x597D;,&amp;#x6BCF;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5C31;&amp;#x90FD;&amp;#x4EAB;&amp;#x53D7;&amp;#x5230;&amp;#x5355;&amp;#x4E00;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x6E05;&amp;#x6670;&amp;#x660E;&amp;#x4E86;,&amp;#x540C;&amp;#x65F6;&amp;#x73B0;&amp;#x5B58;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7684;&amp;#x4FEE;&amp;#x6539;,&amp;#x65B0;&amp;#x589E;&amp;#x65B0;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x90FD;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5F71;&amp;#x54CD;&amp;#x5176;&amp;#x4ED6;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot;&gt;&lt;a href=&quot;#&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&quot;&gt;&lt;/a&gt;&amp;#x6B22;&amp;#x8FCE;&amp;#x4EA4;&amp;#x6D41;&amp;#x6307;&amp;#x6B63;&lt;/h2&gt;&lt;p&gt;&amp;#x6C34;&amp;#x5E73;&amp;#x6709;&amp;#x9650;,&amp;#x5982;&amp;#x679C;&amp;#x60A8;&amp;#x53D1;&amp;#x73B0;&amp;#x4E86;&amp;#x5176;&amp;#x4ED6;&amp;#x597D;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;,&amp;#x6216;&amp;#x8005;&amp;#x6211;&amp;#x7406;&amp;#x89E3;&amp;#x7684;&amp;#x4E0D;&amp;#x6B63;&amp;#x786E;,&amp;#x4E0D;&amp;#x5168;&amp;#x9762;&amp;#x7684;&amp;#x5730;&amp;#x65B9;,&amp;#x8BF7;&amp;#x52A1;&amp;#x5FC5;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;,&amp;#x975E;&amp;#x5E38;&amp;#x611F;&amp;#x8C22;!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;a href=&quot;#OpenClose&amp;#x539F;&amp;#x5219;&quot; class=&quot;headerlink&quot; title=&quot;OpenClose&amp;#x539F;&amp;#x5219;&quot;&gt;&lt;/a&gt;OpenClose&amp;#
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bluebird带给我的惊喜</title>
    <link href="http://yoursite.com/2016/03/13/bluebird-serendipity/"/>
    <id>http://yoursite.com/2016/03/13/bluebird-serendipity/</id>
    <published>2016-03-13T13:31:19.000Z</published>
    <updated>2016-03-13T13:31:19.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;a href=&quot;#&amp;#x80CC;&amp;#x666F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;/a&gt;&amp;#x80CC;&amp;#x666F;&lt;/h2&gt;&lt;p&gt;&amp;#x7528;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&amp;#x5F00;&amp;#x53D1;App&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;Api.&amp;#x6846;&amp;#x67B6;:&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express&lt;/a&gt;,Promise&amp;#x5E93;:&lt;a href=&quot;http://bluebirdjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bluebird&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5C40;&amp;#x9650;&quot;&gt;&lt;a href=&quot;#&amp;#x5C40;&amp;#x9650;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5C40;&amp;#x9650;&quot;&gt;&lt;/a&gt;&amp;#x5C40;&amp;#x9650;&lt;/h2&gt;&lt;p&gt;&amp;#x6211;&amp;#x6CA1;&amp;#x7528;&amp;#x8FC7;ES7&amp;#x7684;await,async&amp;#x8BED;&amp;#x6CD5;,&amp;#x6240;&amp;#x4EE5;&amp;#x65E0;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;.&amp;#x53E6;&amp;#x5916;,bluebird&amp;#x4E5F;&amp;#x4E86;&amp;#x89E3;&amp;#x7684;&amp;#x4E0D;&amp;#x8BE6;&amp;#x7EC6;,&amp;#x5982;&amp;#x6709;&amp;#x5199;&amp;#x7684;&amp;#x4E0D;&amp;#x5BF9;&amp;#x7684;&amp;#x5730;&amp;#x65B9;,&amp;#x5B9E;&amp;#x5C5E;&amp;#x6B63;&amp;#x5E38;,&amp;#x6B22;&amp;#x8FCE;&amp;#x8BA8;&amp;#x8BBA;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x60CA;&amp;#x559C;&amp;#x51FA;&amp;#x73B0;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&lt;/h2&gt;&lt;h3 id=&quot;&amp;#x4ECE;callback&amp;#x5230;async&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;callback&amp;#x5230;async&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;callback&amp;#x5230;async&quot;&gt;&lt;/a&gt;&amp;#x4ECE;callback&amp;#x5230;async&lt;/h3&gt;&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x53EA;&amp;#x7528;Node&amp;#x7684;&amp;#x4F20;&amp;#x7EDF;callback&amp;#x5D4C;&amp;#x5957;&amp;#x65B9;&amp;#x5F0F;.&amp;#x540E;&amp;#x6765;&amp;#x6709;&amp;#x7684;api&amp;#x7EC8;&amp;#x4E8E;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;callback hell,&amp;#x53D8;&amp;#x5F97;&amp;#x96BE;&amp;#x4EE5;&amp;#x9605;&amp;#x8BFB;,&amp;#x7406;&amp;#x89E3;,&amp;#x8C03;&amp;#x8BD5;,&amp;#x4E8E;&amp;#x662F;&amp;#x53EA;&amp;#x597D;&amp;#x5BFB;&amp;#x627E;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6CD5;.&amp;#x9996;&amp;#x5148;&amp;#x627E;&amp;#x5230;&amp;#x4E86;&lt;a href=&quot;https://www.npmjs.com/package/async&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;async&lt;/a&gt;.async&amp;#x6CA1;&amp;#x6709;&amp;#x5F15;&amp;#x5165;&amp;#x65B0;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;,&amp;#x4E5F;&amp;#x7528;callback,&amp;#x4F46;&amp;#x53EA;&amp;#x7528;&amp;#x4E00;&amp;#x5C42;.&amp;#x5F00;&amp;#x59CB;&amp;#x7528;&amp;#x7684;&amp;#x8FD8;&amp;#x4E0D;&amp;#x9519;,&amp;#x7528;&amp;#x5B83;&amp;#x7684;&lt;a href=&quot;https://www.npmjs.com/package/async#waterfall&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;waterfall&lt;/a&gt;,&lt;a href=&quot;https://www.npmjs.com/package/async#parallel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parallel&lt;/a&gt;&amp;#x7B49;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;api&amp;#x7EC4;&amp;#x7EC7;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;.&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/03/13/bluebird-serendipity/async-1.jpg&quot; alt=&quot;async&amp;#x5199;&amp;#x7684;&amp;#x65E0;&amp;#x5D4C;&amp;#x5957;n&amp;#x6B65;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x63A5;&amp;#x53E3;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x7528;async&amp;#x7684;waterfall&amp;#x5199;&amp;#x7684;&amp;#x4E0D;&amp;#x5E26;&amp;#x5D4C;&amp;#x5957;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;(&amp;#x6BCF;&amp;#x6B65;&amp;#x5185;&amp;#x6CA1;&amp;#x6709;asycn&amp;#x7684;api&amp;#x5D4C;&amp;#x5957;),&amp;#x6BCF;&amp;#x6B65;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x6536;&amp;#x8D77;&amp;#x4E86;.&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x67E5;&amp;#x8BE2;,&amp;#x5F80;respEntity&amp;#x7684;data&amp;#x91CC;&amp;#x653E;&amp;#x6570;&amp;#x636E;.&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;callback&amp;#x5199;&amp;#x5DF2;&amp;#x7ECF;&amp;#x65E0;&amp;#x6CD5;&amp;#x5FCD;&amp;#x53D7;&amp;#x4E86;,&amp;#x7528;async&amp;#x7B97;&amp;#x662F;&amp;#x57FA;&amp;#x672C;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;callback hell.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x4ECE;async&amp;#x5230;Promise-bluebird&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;async&amp;#x5230;Promise-bluebird&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;async&amp;#x5230;Promise(bluebird)&quot;&gt;&lt;/a&gt;&amp;#x4ECE;async&amp;#x5230;Promise(bluebird)&lt;/h3&gt;&lt;p&gt;&amp;#x540E;&amp;#x6765;&amp;#x6709;&amp;#x4E9B;api,&amp;#x603B;&amp;#x4F53;&amp;#x662F;&amp;#x4E32;&amp;#x884C;&amp;#x7ED3;&amp;#x6784;,&amp;#x4F46;&amp;#x6709;&amp;#x4E9B;&amp;#x6B65;&amp;#x9AA4;&amp;#x53EF;&amp;#x4EE5;&amp;#x5E76;&amp;#x884C;&amp;#x8FD0;&amp;#x884C;,&amp;#x5F97;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x7ED3;&amp;#x679C;&amp;#x4EE5;&amp;#x540E;&amp;#x518D;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B65;(&amp;#x6216;&amp;#x603B;&amp;#x4F53;&amp;#x5E76;&amp;#x884C;,&amp;#x5176;&amp;#x4E2D;&amp;#x6709;&amp;#x4E32;&amp;#x884C;),&amp;#x8FD9;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x5D4C;&amp;#x5957;,&amp;#x5F00;&amp;#x59CB;&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;async&amp;#x884C;&amp;#x4E0D;&amp;#x884C;,&amp;#x5C31;&amp;#x6CA1;&amp;#x5D4C;&amp;#x5957;&amp;#x7528;,&amp;#x540E;&amp;#x6765;&amp;#x4E3A;&amp;#x4E86;&amp;#x6027;&amp;#x80FD;&amp;#x6700;&amp;#x4F18;,&amp;#x8BD5;&amp;#x4E86;&amp;#x4E00;&amp;#x4E0B;,&amp;#x53D1;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#x5199;,&amp;#x4F46;&amp;#x975E;&amp;#x5E38;&amp;#x75DB;&amp;#x82E6;.&amp;#x56E0;&amp;#x4E3A;async&amp;#x6BCF;&amp;#x6B65;&amp;#x5185;&amp;#x7528;&amp;#x7684;&amp;#x8FD8;&amp;#x662F;callback&amp;#x65B9;&amp;#x5F0F;,&amp;#x4E00;&amp;#x65E6;&amp;#x5D4C;&amp;#x5957;,&amp;#x5C31;&amp;#x662F;2&amp;#x5C42;callback&amp;#x52A0;&amp;#x4E0A;2&amp;#x5C42;async&amp;#x81EA;&amp;#x8EAB;&amp;#x7684;&amp;#x6A21;&amp;#x7248;&amp;#x4EE3;&amp;#x7801;,&amp;#x6BCF;&amp;#x6B65;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x5F80;&amp;#x540E;&amp;#x4F20;,&amp;#x7F20;&amp;#x7EF5;&amp;#x60B1;&amp;#x607B;,&amp;#x5B8C;&amp;#x5168;&amp;#x65E0;&amp;#x6CD5;&amp;#x76F4;&amp;#x89C6;.&lt;/p&gt;
&lt;p&gt;&amp;#x4E8E;&amp;#x662F;&amp;#x5F00;&amp;#x59CB;&amp;#x5B66;&amp;#x4E60;Promise,&amp;#x4E0D;&amp;#x719F;&amp;#x6089;Promise&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x7684;&amp;#x53EF;&amp;#x4EE5;&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-promises&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x770B;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;,&amp;#x5E76;&amp;#x627E;&amp;#x5230;&amp;#x4E86;bluebird.bluebird&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x529F;&amp;#x80FD;&amp;#x7684;Promise&amp;#x5E93;,&amp;#x6027;&amp;#x80FD;&amp;#x636E;&amp;#x8BF4;&amp;#x4E5F;&amp;#x4E0D;&amp;#x9519;.&lt;a href=&quot;http://bluebirdjs.com/docs/why-bluebird.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x5B98;&amp;#x7F51;:Why bluebird?&lt;/a&gt;.&amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x6301;&amp;#x7EED;&amp;#x4E86;&amp;#x4E00;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;,&amp;#x7528;&lt;code&gt;Promise.props&lt;/code&gt;,&lt;code&gt;Promise.all&lt;/code&gt;,&amp;#x548C;&lt;code&gt;then&lt;/code&gt;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;async&amp;#x7684;&amp;#x5D4C;&amp;#x5957;&amp;#x75DB;&amp;#x70B9;,&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5168;&amp;#x90E8;&amp;#x64B8;&amp;#x5E73;.&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x5C42;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x4F8B;&amp;#x5B50;,&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;:&amp;#x68C0;&amp;#x6D4B;&amp;#x53C2;&amp;#x6570;&amp;#x540E;,&amp;#x5F00;&amp;#x59CB;&amp;#x7528;bluebird&amp;#x8D70;&amp;#x5F02;&amp;#x6B65;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;,&amp;#x5148;&amp;#x9A8C;&amp;#x8BC1;&amp;#x7528;&amp;#x6237;,&amp;#x5982;&amp;#x679C;&amp;#x53C2;&amp;#x6570;&amp;#x9519;&amp;#x8BEF;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;,&amp;#x5426;&amp;#x5219;&amp;#x7EE7;&amp;#x7EED;&amp;#x5E76;&amp;#x884C;&amp;#x67E5;&amp;#x8BE2;2&amp;#x79CD;&amp;#x6570;&amp;#x636E;,&amp;#x518D;&amp;#x62FC;&amp;#x7ED3;&amp;#x679C;,&amp;#x8FD4;&amp;#x56DE;&amp;#x6570;&amp;#x636E;&amp;#x6216;&amp;#x4E2D;&amp;#x95F4;&amp;#x6709;&amp;#x4EFB;&amp;#x610F;&amp;#x6B65;&amp;#x9AA4;&amp;#x51FA;&amp;#x9519;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uid = req.query.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// valid&amp;#x662F;&amp;#x540C;&amp;#x6B65;&amp;#x8F85;&amp;#x52A9;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!valid(uid)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x65E0;&amp;#x6548;&amp;#x53C2;&amp;#x6570;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// validUser, queryUser, queryMessage&amp;#x90FD;&amp;#x662F;&amp;#x5F02;&amp;#x6B65;&amp;#x67E5;&amp;#x5E93;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x7528;bluebird&amp;#x5199;&amp;#x6210;&amp;#x8FD4;&amp;#x56DE;Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x5199;&amp;#x6210;&amp;#x4F20;&amp;#x7EDF;&amp;#x7684;callback,&amp;#x518D;&amp;#x7528;Promise.promisify&amp;#x6216;Promise.promisifyAll&amp;#x5305;&amp;#x8D77;&amp;#x6765;&amp;#x8FD4;&amp;#x56DE;Promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(validUser(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.props({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: queryUser(uid),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: queryMessage(uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = data.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; message = data.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;success&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user: formatUser(user),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: formatMsg(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: err.message ? err.message : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5F02;&amp;#x5E38;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;,&amp;#x7528;bluebird&amp;#x5199;&amp;#x5F02;&amp;#x6B65;&amp;#x4E32;&amp;#x5E76;&amp;#x884C;&amp;#x5D4C;&amp;#x5957;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;,&amp;#x4F7F;&amp;#x6BCF;&amp;#x4E2A;&amp;#x903B;&amp;#x8F91;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x51FD;&amp;#x6570;.&amp;#x8FD9;&amp;#x5C31;&amp;#x4F7F;&amp;#x5F00;&amp;#x53D1;,&amp;#x8C03;&amp;#x8BD5;,&amp;#x4FEE;&amp;#x6539;&amp;#x90FD;&amp;#x53D8;&amp;#x5F97;&amp;#x8F7B;&amp;#x677E;&amp;#x6109;&amp;#x5FEB;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;,&amp;#x6781;&amp;#x5927;&amp;#x63D0;&amp;#x9AD8;&amp;#x4E86;&amp;#x6548;&amp;#x7387;.&amp;#x5F00;&amp;#x53D1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;,&amp;#x5B8C;&amp;#x5168;&amp;#x7B26;&amp;#x5408;&amp;#x4EBA;&amp;#x7C7B;&amp;#x601D;&amp;#x7EF4;&amp;#x8FC7;&amp;#x7A0B;,&amp;#x5904;&amp;#x7406;&amp;#x5B8C;&amp;#x4E00;&amp;#x4E2A;,&amp;#x518D;&amp;#x5904;&amp;#x7406;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;.&amp;#x6574;&amp;#x4E2A;&amp;#x5F02;&amp;#x6B65;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5B8C;&amp;#x5168;&amp;#x53EF;&amp;#x4EE5;&amp;#x5148;&amp;#x5199;&amp;#x51FA;&amp;#x6240;&amp;#x6709;&amp;#x4E1A;&amp;#x52A1;&amp;#x7684;stub&amp;#x51FD;&amp;#x6570;,&amp;#x628A;&amp;#x8DEF;&amp;#x7531;&amp;#x8D70;&amp;#x901A;,&amp;#x518D;&amp;#x6328;&amp;#x4E2A;&amp;#x5B9E;&amp;#x73B0;&amp;#x5177;&amp;#x4F53;&amp;#x529F;&amp;#x80FD;.&amp;#x8C03;&amp;#x8BD5;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7406;&amp;#x89E3;&amp;#x4EE3;&amp;#x7801;&amp;#x548C;&amp;#x65AD;&amp;#x70B9;&amp;#x9009;&amp;#x62E9;&amp;#x90FD;&amp;#x53D8;&amp;#x7684;&amp;#x4E00;&amp;#x76EE;&amp;#x4E86;&amp;#x7136;.&amp;#x4E1A;&amp;#x52A1;&amp;#x66F4;&amp;#x6539;&amp;#x65F6;&amp;#x5019;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x4E32;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x53EA;&amp;#x8981;&amp;#x6CE8;&amp;#x91CA;&amp;#x6389;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;then&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x5C31;&amp;#x884C;,&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x5E76;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x53EA;&amp;#x8981;&amp;#x6CE8;&amp;#x91CA;&amp;#x6389;Promise.props&amp;#x91CC;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x67D0;&amp;#x4E00;&amp;#x9879;&amp;#x5C31;&amp;#x884C;.&amp;#x6DFB;&amp;#x52A0;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x540C;&amp;#x7406;.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot;&gt;&lt;a href=&quot;#&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&quot;&gt;&lt;/a&gt;&amp;#x4ECE;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F02;&amp;#x6B65;&amp;#x4EE3;&amp;#x7801;&amp;#x5DE5;&amp;#x5177;&amp;#x5230;bluebird&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;&lt;/h3&gt;&lt;p&gt;&amp;#x4F46;&amp;#x5B9E;&amp;#x9645;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E2D;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6A21;&amp;#x5F0F;&amp;#x4F1A;&amp;#x9047;&amp;#x4E0A;&amp;#x4E00;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;,&amp;#x6BD4;&amp;#x5982;&amp;#x53C2;&amp;#x6570;&amp;#x68C0;&amp;#x67E5;&amp;#x672C;&amp;#x8EAB;&amp;#x7684;&amp;#x5F02;&amp;#x5E38;&amp;#x68C0;&amp;#x6D4B;&amp;#x548C;&amp;#x8FD4;&amp;#x56DE;,&amp;#x7ECF;&amp;#x5E38;&amp;#x9700;&amp;#x8981;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;.&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x590D;&amp;#x5199;&amp;#x591A;&amp;#x6B21;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&amp;#x52A0;&amp;#x4E0A;&amp;#x5F02;&amp;#x6B65;&amp;#x90E8;&amp;#x5206;&amp;#x4E5F;&amp;#x6709;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;,&amp;#x5BFC;&amp;#x81F4;&amp;#x5F02;&amp;#x5E38;&amp;#x5904;&amp;#x7406;&amp;#x6CA1;&amp;#x90A3;&amp;#x4E48;&amp;#x6E05;&amp;#x6670;,&amp;#x4E5F;&amp;#x4E0D;&amp;#x7B26;&amp;#x5408;DRY&amp;#x539F;&amp;#x5219;.&amp;#x6709;&amp;#x4E00;&amp;#x6B21;&amp;#x5199;&amp;#x4E86;3&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x68C0;&amp;#x67E5;&amp;#x52A0;&amp;#x4E09;&amp;#x4E2A;&amp;#x8FD4;&amp;#x56DE;,&amp;#x770B;&amp;#x7740;&amp;#x5B9E;&amp;#x5728;&amp;#x96BE;&amp;#x53D7;,&amp;#x4E8E;&amp;#x662F;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4E86;&amp;#x4E00;&amp;#x4E0B;&amp;#x628A;&amp;#x6574;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x90FD;&amp;#x7528;&amp;#x4E00;&amp;#x53E5;Promise&amp;#x4E32;&amp;#x8D77;&amp;#x6765;,&amp;#x7528;&amp;#x6700;&amp;#x540E;&amp;#x7684;catch&amp;#x6355;&amp;#x83B7;&amp;#x4ECE;&amp;#x5934;&amp;#x5230;&amp;#x5C3E;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x540C;&amp;#x6B65;,&amp;#x5F02;&amp;#x6B65;&amp;#x548C;&amp;#x5185;&amp;#x90E8;&amp;#x5D4C;&amp;#x5957;&amp;#x5F02;&amp;#x5E38;,&amp;#x53D1;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;,&amp;#x4E8E;&amp;#x662F;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8DEF;&amp;#x7531;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x5C31;&amp;#x53D8;&amp;#x6210;&amp;#x4E00;&amp;#x53E5;Promise.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x60CA;&amp;#x559C;-&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;-&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot;&gt;&lt;a href=&quot;#&amp;#x60CA;&amp;#x559C;-&amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;-&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x60CA;&amp;#x559C;: &amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;,&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&quot;&gt;&lt;/a&gt;&amp;#x60CA;&amp;#x559C;: &amp;#x4F5C;&amp;#x4E3A;&amp;#x4EE3;&amp;#x7801;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x5DE5;&amp;#x5177;,&amp;#x628A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x7528;&amp;#x4E00;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#x4E32;&amp;#x8D77;&amp;#x6765;&amp;#x4E86;&lt;/h2&gt;&lt;p&gt;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x601D;&amp;#x8DEF;,&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x6539;&amp;#x6210;&amp;#x8FD9;&amp;#x6837;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uid = req.query.uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(testUid(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(validUser(uid))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(() =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.props({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: queryUser(uid),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: queryMessage(uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.then(data =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = data.user;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; message = data.message;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg: &lt;span class=&quot;string&quot;&gt;&amp;apos;success&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      user: formatUser(user),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      message: formatMsg(message)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  })&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.catch(err =&amp;gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  sendError(err, res);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testUid&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;uid&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!valid(uid)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; err = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x65E0;&amp;#x6548;&amp;#x53C2;&amp;#x6570;&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err.code = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;&amp;#x51FD;&amp;#x6570;&lt;code&gt;sendError&lt;/code&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x72EC;&amp;#x7ACB;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x4F9B;&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x4F7F;&amp;#x7528;,&amp;#x6BCF;&amp;#x5904;&amp;#x5F02;&amp;#x5E38;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5B9A;&amp;#x4E49;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7F16;&amp;#x7801;&amp;#x548C;&amp;#x6587;&amp;#x5B57;,&amp;#x7136;&amp;#x540E;&amp;#x629B;&amp;#x51FA;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendError&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;res, err&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send({&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    code: err.code ? err.code : &lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message: err.message ? err.message : &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5F02;&amp;#x5E38;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data: {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x89E3;&amp;#x51B3;&amp;#x4E86;&amp;#x91CD;&amp;#x590D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x5462;?&amp;#x5C31;&amp;#x6CA1;&amp;#x6709;&amp;#x7136;&amp;#x540E;&amp;#x4E86;,&amp;#x6240;&amp;#x6709;&amp;#x8DEF;&amp;#x7531;&amp;#x5168;&amp;#x90FD;&amp;#x6309;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5957;&amp;#x8DEF;&amp;#x91CD;&amp;#x5199;,&amp;#x81EA;&amp;#x6211;&amp;#x611F;&amp;#x89C9;&amp;#x903C;&amp;#x683C;&amp;#x9AD8;&amp;#x4E86;&amp;#x4E9B;.&amp;#x6709;&amp;#x4E9B;&amp;#x51FD;&amp;#x6570;&amp;#x5F0F;&amp;#x8FDE;&amp;#x7EED;transform&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x611F;&amp;#x89C9;,&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x4EE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;,&amp;#x4EE5;&amp;#x8FD4;&amp;#x56DE;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x675F;,&amp;#x4E00;&amp;#x53E5;&amp;#x5B8C;&amp;#x6210;,&amp;#x4E2D;&amp;#x95F4;&amp;#x5F02;&amp;#x6B65;&amp;#x5E76;&amp;#x884C;&amp;#x4EA7;&amp;#x751F;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;return Promise.props()&lt;/code&gt;&amp;#x6216;return&amp;#x5355;&amp;#x4E00;Promise&amp;#x5F80;&amp;#x540E;&amp;#x4F20;,&amp;#x90FD;&amp;#x5168;&amp;#x4E86;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;then&lt;/code&gt;&amp;#x91CC;&amp;#x6574;&amp;#x7406;,&amp;#x683C;&amp;#x5F0F;&amp;#x5316;&amp;#x6570;&amp;#x636E;&amp;#x8FD4;&amp;#x56DE;.&amp;#x540E;&amp;#x9762;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&lt;code&gt;.catch&lt;/code&gt;&amp;#x6355;&amp;#x83B7;&amp;#x6240;&amp;#x6709;&amp;#x5F02;&amp;#x5E38;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird-Api-&amp;#x53C2;&amp;#x8003;&quot;&gt;&lt;a href=&quot;#&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird-Api-&amp;#x53C2;&amp;#x8003;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird Api,&amp;#x53C2;&amp;#x8003;&quot;&gt;&lt;/a&gt;&amp;#x5E38;&amp;#x7528;&amp;#x7684;bluebird Api,&lt;a href=&quot;http://bluebirdjs.com/docs/api-reference.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6D41;&amp;#x63A7;&amp;#x5236;api&lt;br&gt;&lt;code&gt;then&lt;/code&gt;(&amp;#x5355;&amp;#x4E00;&amp;#x5F02;&amp;#x6B65;&amp;#x6216;&amp;#x540C;&amp;#x6B65;),&lt;code&gt;Promise.props&lt;/code&gt;(&amp;#x6709;&amp;#x9650;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5E76;&amp;#x884C;),&lt;code&gt;Promise.all&lt;/code&gt;,&lt;code&gt;Prommise.map&lt;/code&gt;(&amp;#x4E0D;&amp;#x5B9A;&amp;#x4E2A;&amp;#x6570;&amp;#x7684;&amp;#x5E76;&amp;#x884C;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6570;&amp;#x636E;&amp;#x5E93;api&lt;br&gt;&lt;code&gt;Promise.using&lt;/code&gt;(&amp;#x8BBF;&amp;#x95EE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;,&amp;#x81EA;&amp;#x52A8;&amp;#x91CA;&amp;#x653E;&amp;#x8FDE;&amp;#x63A5;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5176;&amp;#x4ED6;&lt;br&gt;&lt;code&gt;Promise.resolve()&lt;/code&gt;(&amp;#x4FBF;&amp;#x4E8E;&amp;#x4F20;&amp;#x9012;&amp;#x503C;),&lt;code&gt;catch&lt;/code&gt;(&amp;#x6355;&amp;#x83B7;&amp;#x5F02;&amp;#x5E38;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;&amp;#x5E0C;&amp;#x671B;&quot;&gt;&lt;a href=&quot;#&amp;#x5E0C;&amp;#x671B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E0C;&amp;#x671B;&quot;&gt;&lt;/a&gt;&amp;#x5E0C;&amp;#x671B;&lt;/h2&gt;&lt;p&gt;&amp;#x6709;&amp;#x5F88;&amp;#x591A;bluebird&amp;#x7684;api,&amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x5E72;&amp;#x5565;&amp;#x7684;,&amp;#x5927;&amp;#x81F4;&amp;#x770B;&amp;#x4E86;&amp;#x4E0B;,&amp;#x4E5F;&amp;#x6CA1;&amp;#x770B;&amp;#x61C2;,&amp;#x5982;&amp;#x679C;&amp;#x60A8;&amp;#x6709;&amp;#x5206;&amp;#x4EAB;,&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;,&amp;#x4E07;&amp;#x5206;&amp;#x611F;&amp;#x8C22;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;a href=&quot;#&amp;#x80CC;&amp;#x666F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x80CC;&amp;#x666F;&quot;&gt;&lt;/a&gt;&amp;#x80CC;&amp;#x666F;&lt;/h2&gt;&lt;p&gt;&amp;#x7528;&lt;a hre
    
    </summary>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="Promise" scheme="http://yoursite.com/tags/Promise/"/>
    
      <category term="bluebird" scheme="http://yoursite.com/tags/bluebird/"/>
    
  </entry>
  
  <entry>
    <title>Clojure的sequence抽象</title>
    <link href="http://yoursite.com/2016/03/11/clojure-abstraction-seq-collection/"/>
    <id>http://yoursite.com/2016/03/11/clojure-abstraction-seq-collection/</id>
    <published>2016-03-11T10:02:04.000Z</published>
    <updated>2016-03-11T10:20:23.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x6765;&amp;#x6E90;:&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Programming_to_Abstractions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Clojure for the brave and true&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming-to-Abstractions&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming-to-Abstractions&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming to Abstractions?&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;Programming to Abstractions?&lt;/h2&gt;&lt;p&gt;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x8BBE;&amp;#x8BA1;&amp;#x51FD;&amp;#x6570;&amp;#x5E93;&amp;#x7684;&amp;#x539F;&amp;#x5219;,Clojure&amp;#x91C7;&amp;#x7528;&amp;#x4E86;&amp;#x8FD9;&amp;#x79CD;&amp;#x539F;&amp;#x5219;.&lt;br&gt;&amp;#x5373;&amp;#x628A;&amp;#x5177;&amp;#x6709;&amp;#x76F8;&amp;#x4F3C;&amp;#x7279;&amp;#x5F81;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x62BD;&amp;#x8C61;&amp;#x6210;&amp;#x67D0;&amp;#x4E2A;&amp;#x6982;&amp;#x5FF5;,&amp;#x6BD4;&amp;#x5982;&lt;code&gt;sequence&lt;/code&gt;.&amp;#x4E4B;&amp;#x540E;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7C7B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x64CD;&amp;#x4F5C;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;a href=&quot;#&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&quot;&gt;&lt;/a&gt;&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x4E1C;&amp;#x897F;&lt;/h2&gt;&lt;p&gt;Javascript&amp;#x7684;&lt;code&gt;Lodash&lt;/code&gt;&amp;#x5E93;&amp;#x7684;&lt;a href=&quot;https://lodash.com/docs#map&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;map&lt;/a&gt;&amp;#x548C;&lt;a href=&quot;https://lodash.com/docs#reduce&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reduce&lt;/a&gt;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x540C;&amp;#x65F6;&amp;#x63A5;&amp;#x53D7;&amp;#x6570;&amp;#x7EC4;&amp;#x548C;&amp;#x5BF9;&amp;#x8C61;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;.&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot;&gt;&lt;a href=&quot;#&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&quot;&gt;&lt;/a&gt;&amp;#x5E26;&amp;#x6765;&amp;#x7684;&amp;#x597D;&amp;#x5904;&lt;/h2&gt;&lt;p&gt;&amp;#x8BA9;&amp;#x4F60;&amp;#x5199;&amp;#x7A0B;&amp;#x5E8F;&amp;#x65F6;&amp;#x5019;,&amp;#x4E13;&amp;#x6CE8;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x80FD;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;,&amp;#x540C;&amp;#x65F6;&amp;#x5C3D;&amp;#x53EF;&amp;#x80FD;&amp;#x5730;&amp;#x5FFD;&amp;#x7565;&amp;#x5B83;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;.&lt;/p&gt;
&lt;h2 id=&quot;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot;&gt;&lt;a href=&quot;#map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot; class=&quot;headerlink&quot; title=&quot;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&quot;&gt;&lt;/a&gt;map&amp;#x51FD;&amp;#x6570;&amp;#x4F8B;&amp;#x5B50;&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(defn titleize&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [topic]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  (str topic &amp;quot; for the Brave and True&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize [&amp;quot;Hamsters&amp;quot; &amp;quot;Ragnarok&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Hamsters for the Brave and True&amp;quot; &amp;quot;Ragnarok for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize &amp;apos;(&amp;quot;Empathy&amp;quot; &amp;quot;Decorating&amp;quot;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Empathy for the Brave and True&amp;quot; &amp;quot;Decorating for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(map titleize #{&amp;quot;Elbows&amp;quot; &amp;quot;Soap Carving&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (&amp;quot;Elbows for the Brave and True&amp;quot; &amp;quot;Soap Carving for the Brave and True&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var list = [&amp;quot;Transylvania&amp;quot;, &amp;quot;Forks, WA&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;map(list, function (val) { return val + &amp;quot; mapped!&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// =&amp;gt; [&amp;quot;Transylvania mapped!&amp;quot;, &amp;quot;Forks, WA mapped!&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4F8B;&amp;#x5B50;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;,Clojure&amp;#x7684;&lt;code&gt;map&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x53D7;&amp;#x591A;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;,&amp;#x5305;&amp;#x62EC;List,Vector,Set,Map.&lt;code&gt;map&lt;/code&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x57FA;&amp;#x4E8E;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;,&amp;#x800C;&amp;#x662F;&amp;#x57FA;&amp;#x4E8E;&lt;code&gt;sequence&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;.&lt;/p&gt;
&lt;h2 id=&quot;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&quot;&gt;&lt;/a&gt;sequence&amp;#x4EE5;&amp;#x53CA;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sequence&lt;/code&gt;&amp;#x662F;Clojure&amp;#x5BF9;&amp;#x67D0;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x7684;&amp;#x62BD;&amp;#x8C61;,&amp;#x5373;&amp;#x5E8F;&amp;#x5217;&amp;#x7ED3;&amp;#x6784;.&lt;code&gt;sequence&lt;/code&gt;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;first&lt;/code&gt;: &amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x5E8F;&amp;#x5217;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/first&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rest&lt;/code&gt;: &amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x9664;&amp;#x4E86;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x6784;&amp;#x6210;&amp;#x7684;&amp;#x5E8F;&amp;#x5217; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/rest&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cons&lt;/code&gt;: &amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;)&amp;#x548C;&amp;#x7B2C;2&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;(&amp;#x4E00;&amp;#x4E2A;&amp;#x5E8F;&amp;#x5217;)&amp;#x65B0;&amp;#x7EC4;&amp;#x6210;&amp;#x7684;&amp;#x5E8F;&amp;#x5217; &lt;a href=&quot;http://clojure.github.io/clojure/clojure.core-api.html#clojure.core/cons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x53EA;&amp;#x8981;&amp;#x67D0;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#x652F;&amp;#x6301;&amp;#x4E0A;&amp;#x9762;&amp;#x4E09;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;,&amp;#x5C31;&amp;#x80FD;&amp;#x628A;&amp;#x5B83;&amp;#x89C6;&amp;#x4E3A;&lt;code&gt;sequence&lt;/code&gt;,&amp;#x56E0;&amp;#x6B64;&amp;#x5C31;&amp;#x80FD;&amp;#x5BF9;&amp;#x5B83;&amp;#x8FDB;&amp;#x884C;map(&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x57FA;&amp;#x4E8E;&lt;code&gt;sequence&lt;/code&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x51FD;&amp;#x6570;,&amp;#x5305;&amp;#x62EC;&lt;code&gt;filter&lt;/code&gt;,&lt;code&gt;reduce&lt;/code&gt;,&lt;code&gt;group-by&lt;/code&gt;&amp;#x7B49;)&amp;#x64CD;&amp;#x4F5C;.&lt;/p&gt;
&lt;h2 id=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;/a&gt;sequence&amp;#x51FD;&amp;#x6570;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&lt;/h2&gt;&lt;p&gt;&amp;#x5F53;&amp;#x67D0;&amp;#x4E2A;&lt;code&gt;sequence&lt;/code&gt;&amp;#x51FD;&amp;#x6570;(&amp;#x6BD4;&amp;#x5982;&lt;code&gt;map&lt;/code&gt;)&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;,&amp;#x4F1A;&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x901A;&amp;#x8FC7;&lt;code&gt;seq&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;&amp;#x7C7B;&amp;#x4F3C;List&amp;#x7684;,&amp;#x652F;&amp;#x6301;&amp;#x4E0A;&amp;#x8FF0;&lt;code&gt;sequence&lt;/code&gt;&amp;#x6838;&amp;#x5FC3;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;.&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x7528;&amp;#x5B83;&amp;#x8FDB;&amp;#x884C;&amp;#x76F8;&amp;#x5173;&amp;#x8BA1;&amp;#x7B97;.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(seq &amp;apos;(1 2 3))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq [1 2 3])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq #{1 2 3})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; (1 2 3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(seq {:name &amp;quot;Bill Compton&amp;quot; :occupation &amp;quot;Dead mopey guy&amp;quot;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; =&amp;gt; ([:name &amp;quot;Bill Compton&amp;quot;] [:occupation &amp;quot;Dead mopey guy&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot;&gt;&lt;a href=&quot;#sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot; class=&quot;headerlink&quot; title=&quot;sequence&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&quot;&gt;&lt;/a&gt;&lt;code&gt;sequence&lt;/code&gt;&amp;#x51FD;&amp;#x6570;&amp;#x4E3E;&amp;#x4F8B;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Seq_Function_Examples&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&amp;#x53C2;&amp;#x8003;&amp;#x8FD9;&amp;#x91CC;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6765;&amp;#x6E90;:&lt;a href=&quot;http://www.braveclojure.com/core-functions-in-depth/#Programming_to_Abstractions&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
    
      <category term="Clojure" scheme="http://yoursite.com/tags/Clojure/"/>
    
  </entry>
  
  <entry>
    <title>今天听了陈天老师的函数式编程的分享</title>
    <link href="http://yoursite.com/2016/02/27/compose-monad/"/>
    <id>http://yoursite.com/2016/02/27/compose-monad/</id>
    <published>2016-02-27T14:10:32.000Z</published>
    <updated>2016-03-04T14:15:23.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&lt;/h3&gt;&lt;p&gt;FP&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x662F;&amp;#x7EC4;&amp;#x5408;,&amp;#x4E00;&amp;#x4E9B;&amp;#x6BD4;&amp;#x8F83;&amp;#x96BE;&amp;#x61C2;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;(&amp;#x6BD4;&amp;#x5982;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monad_(functional_programming&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;monad&lt;/a&gt;), &lt;a href=&quot;https://en.wikipedia.org/wiki/Functor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;functor&lt;/a&gt;),&amp;#x90FD;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x5F3A;&amp;#x5316;FP&amp;#x7684;&amp;#x7EC4;&amp;#x5408;&amp;#x529F;&amp;#x80FD;.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E8C;&lt;/h3&gt;&lt;p&gt;FP&amp;#x975E;&amp;#x5E38;&amp;#x6709;&amp;#x5229;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;OpenClose&amp;#x539F;&amp;#x5219;,&amp;#x65E2;Open to extension, close to modification.&lt;/p&gt;
&lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B9;&amp;#x4E09;&lt;/h3&gt;&lt;p&gt;Javascript&amp;#x7684;&lt;code&gt;Promise&lt;/code&gt;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&lt;code&gt;monad&lt;/code&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;a href=&quot;#&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x91CD;&amp;#x70B9;&amp;#x4E00;&quot;&gt;&lt;/a&gt;&amp;#x91CD;&amp;#x70B
    
    </summary>
    
    
      <category term="Functional Programming" scheme="http://yoursite.com/tags/Functional-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Rails Many to Many Associations</title>
    <link href="http://yoursite.com/2013/10/20/rails-many-to-many-associations/"/>
    <id>http://yoursite.com/2013/10/20/rails-many-to-many-associations/</id>
    <published>2013-10-19T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:59.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;has_many through&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires a join model&lt;/li&gt;
&lt;li&gt;name your join table anything&lt;ul&gt;
&lt;li&gt;ex: memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;more flexible, can add additional attributes(solumns) to join table&lt;br&gt;Cons:&lt;/li&gt;
&lt;li&gt;additional join model required&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;has_and_belongs_to_many&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no join model necesary&lt;/li&gt;
&lt;li&gt;assumes join table based on convention&lt;ul&gt;
&lt;li&gt;ex: groups_users&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easier, no join model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;not as flexible, can&amp;#x2019;t add additional attributes(solumns) to join table&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;has_many through&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requires a join model&lt;/li&gt;
&lt;li&gt;name your join table anything&lt;ul&gt;
&lt;li&gt;ex: memberships&lt;/li&gt;
&lt;/ul&gt;
&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Deployment Options</title>
    <link href="http://yoursite.com/2013/09/27/deployment-options/"/>
    <id>http://yoursite.com/2013/09/27/deployment-options/</id>
    <published>2013-09-26T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:48.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;Managed&lt;ul&gt;
&lt;li&gt;Google App Engine&lt;/li&gt;
&lt;li&gt;Heroku&lt;ul&gt;
&lt;li&gt;cons: no server access, constrained enviroment&lt;/li&gt;
&lt;li&gt;pros: don&amp;#x2019;t need devops skills&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Self Service&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPS&lt;ul&gt;
&lt;li&gt;pros: your own virtualized environment/server&lt;/li&gt;
&lt;li&gt;cons: need devop/sysadmin skills&lt;/li&gt;
&lt;li&gt;AWS, Rackspace, Digital Ocean, Linode&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Physical Machines&lt;ul&gt;
&lt;li&gt;colocation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Shared host&lt;ul&gt;
&lt;li&gt;your app in a dir, other apps in other dir&lt;/li&gt;
&lt;li&gt;roomates&lt;/li&gt;
&lt;li&gt;pro: very cheap&lt;/li&gt;
&lt;li&gt;cons: too many to list&lt;/li&gt;
&lt;li&gt;Vendors&lt;ul&gt;
&lt;li&gt;Dreamhost&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Managed&lt;ul&gt;
&lt;li&gt;Google App Engine&lt;/li&gt;
&lt;li&gt;Heroku&lt;ul&gt;
&lt;li&gt;cons: no server access, constrained enviroment&lt;/li&gt;
&lt;li&gt;pros: don&amp;#x2019;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tools of Modern Web Development</title>
    <link href="http://yoursite.com/2013/09/17/tools-of-modern-web-development/"/>
    <id>http://yoursite.com/2013/09/17/tools-of-modern-web-development/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot;&gt;&lt;a href=&quot;#juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot; class=&quot;headerlink&quot; title=&quot;juggle many layers of technologies, all with different syntax &amp;amp; behaviors, and understand how they integrate with each other&quot;&gt;&lt;/a&gt;juggle many layers of technologies, all with different syntax &amp;amp; behaviors, and understand how they integrate with each other&lt;/h2&gt;&lt;h2 id=&quot;Other-things-web-developers-must-be-aware-of&quot;&gt;&lt;a href=&quot;#Other-things-web-developers-must-be-aware-of&quot; class=&quot;headerlink&quot; title=&quot;Other things web developers must be aware of:&quot;&gt;&lt;/a&gt;Other things web developers must be aware of:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;best practices&lt;/li&gt;
&lt;li&gt;security concerns&lt;/li&gt;
&lt;li&gt;browser compatibility&lt;/li&gt;
&lt;li&gt;mobile operating systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;FrontEnd&quot;&gt;&lt;a href=&quot;#FrontEnd&quot; class=&quot;headerlink&quot; title=&quot;FrontEnd&quot;&gt;&lt;/a&gt;FrontEnd&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Javascript&lt;ul&gt;
&lt;li&gt;frameworks&lt;ul&gt;
&lt;li&gt;jquery&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MVC&lt;ul&gt;
&lt;li&gt;backbone.js&lt;/li&gt;
&lt;li&gt;Ember.js&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ajax&lt;/li&gt;
&lt;li&gt;coffeesript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTML&lt;ul&gt;
&lt;li&gt;erb&lt;/li&gt;
&lt;li&gt;haml&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CSS&lt;ul&gt;
&lt;li&gt;sass&lt;/li&gt;
&lt;li&gt;&amp;#x2026;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mobile&lt;ul&gt;
&lt;li&gt;responsive&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MiddleWare&quot;&gt;&lt;a href=&quot;#MiddleWare&quot; class=&quot;headerlink&quot; title=&quot;MiddleWare&quot;&gt;&lt;/a&gt;MiddleWare&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;APIs&lt;/li&gt;
&lt;li&gt;URLs&lt;/li&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;request/response processing&lt;/li&gt;
&lt;li&gt;security&lt;ul&gt;
&lt;li&gt;xss, crsf, code injection, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;BackEnd&quot;&gt;&lt;a href=&quot;#BackEnd&quot; class=&quot;headerlink&quot; title=&quot;BackEnd&quot;&gt;&lt;/a&gt;BackEnd&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;database&lt;ul&gt;
&lt;li&gt;relational&lt;ul&gt;
&lt;li&gt;MySql&lt;/li&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NoSql&lt;ul&gt;
&lt;li&gt;document&lt;ul&gt;
&lt;li&gt;MangoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;web services&lt;/li&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;li&gt;SOAP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MISC&quot;&gt;&lt;a href=&quot;#MISC&quot; class=&quot;headerlink&quot; title=&quot;MISC&quot;&gt;&lt;/a&gt;MISC&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;deployment&lt;/li&gt;
&lt;li&gt;background processing&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;bundler&lt;/li&gt;
&lt;li&gt;rvm&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;juggle-many-layers-of-technologies-all-with-different-syntax-amp-behaviors-and-understand-how-they-integrate-with-each-other&quot;&gt;&lt;a hre
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP and MVC</title>
    <link href="http://yoursite.com/2013/09/17/http-and-mvc/"/>
    <id>http://yoursite.com/2013/09/17/http-and-mvc/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:01.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP:&quot;&gt;&lt;/a&gt;HTTP:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;verb/method (GET or POST)&lt;/li&gt;
&lt;li&gt;url&lt;/li&gt;
&lt;li&gt;parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Response&lt;ul&gt;
&lt;li&gt;status code (200, 301, 404, 500)&lt;/li&gt;
&lt;li&gt;payload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Stateless: we have to rebuild the world at every request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;MVC&quot;&gt;&lt;a href=&quot;#MVC&quot; class=&quot;headerlink&quot; title=&quot;MVC:&quot;&gt;&lt;/a&gt;MVC:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Model, View, Controller&lt;/li&gt;
&lt;li&gt;Controller&lt;ul&gt;
&lt;li&gt;routes to appropriate action based on request&lt;/li&gt;
&lt;li&gt;action my talk to model, and then either redirect (301) or render view (200) as the response&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Important-Sinatra-concepts&quot;&gt;&lt;a href=&quot;#Important-Sinatra-concepts&quot; class=&quot;headerlink&quot; title=&quot;Important Sinatra concepts:&quot;&gt;&lt;/a&gt;Important Sinatra concepts:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Rendering template allows access by template to ivars set up in action&lt;/li&gt;
&lt;li&gt;Template have access seeeion hash&lt;/li&gt;
&lt;li&gt;session&lt;/li&gt;
&lt;li&gt;params&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP:&quot;&gt;&lt;/a&gt;HTTP:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Request&lt;ul&gt;
&lt;li&gt;verb/method (GET or POST)&lt;/li&gt;
&lt;li&gt;url
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Porcess of Building Web App using Rails</title>
    <link href="http://yoursite.com/2013/09/17/porcess-of-building-web-app-using-rails/"/>
    <id>http://yoursite.com/2013/09/17/porcess-of-building-web-app-using-rails/</id>
    <published>2013-09-16T16:00:00.000Z</published>
    <updated>2016-02-27T09:48:13.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;build mock up&lt;/li&gt;
&lt;li&gt;build domain model&lt;/li&gt;
&lt;li&gt;build relation DB that support all business logic&lt;/li&gt;
&lt;li&gt;build url points, control actions, template&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;build mock up&lt;/li&gt;
&lt;li&gt;build domain model&lt;/li&gt;
&lt;li&gt;build relation DB that support all business logic&lt;/li&gt;
&lt;li&gt;build url points, con
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby&#39;s inheritance</title>
    <link href="http://yoursite.com/2013/09/12/rubys-inheritance/"/>
    <id>http://yoursite.com/2013/09/12/rubys-inheritance/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:43.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;quot;
  end
end

class Dog &amp;lt; Animal
  def speak
    &amp;quot;#{ name } is barking!&amp;quot;
  end
end

class Cat &amp;lt; Animal
end

fido = Dog.new(&amp;apos;fido&amp;apos;)
puts fido.name
puts fido.speak

kitty = Cat.new(&amp;apos;kitty&amp;apos;)
puts kitty.name
puts kitty.speak

puts Dog.ancestors
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;produce&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fido
fido is barking!
kitty
kitty is speaking!
Dog
Animal
Object
Kernel
BasicObject
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;q
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby&#39;s composition</title>
    <link href="http://yoursite.com/2013/09/12/rubys-composition/"/>
    <id>http://yoursite.com/2013/09/12/rubys-composition/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:27.000Z</updated>
    
    <content type="html">&lt;pre&gt;&lt;code&gt;module Swimmable
  def swim
    &amp;quot;#{ name } is swimming!&amp;quot;
  end
end

module Fetchable
  def fetch
    &amp;quot;#{ name } is fetching!&amp;quot;
  end
end    

class Animal
  attr_accessor :name

  def initialize(name)
    @name = name
  end

  def speak
    &amp;quot;#{ name } is speaking!&amp;quot;
  end
end

class Mammal &amp;lt; Animal
  def warm_blooded?
    true
  end
end

class Dog &amp;lt; Mammal
  include Swimmable
  include Fetchable

  def speak
    &amp;quot;#{ name } is barking!&amp;quot;
  end
end

fido = Dog.new(&amp;apos;fido&amp;apos;)
puts fido.swim
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;produce&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fido is swimming!
Dog
Fetchable
Swimmable
Mammal
Animal
Object
Kernel
BasicObject
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;pre&gt;&lt;code&gt;module Swimmable
  def swim
    &amp;quot;#{ name } is swimming!&amp;quot;
  end
end

module Fetchable
  def fetch
    &amp;quot;#{ name } is
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>process of design app&#39;s class and module</title>
    <link href="http://yoursite.com/2013/09/12/process-of-design-apps-class-and-module/"/>
    <id>http://yoursite.com/2013/09/12/process-of-design-apps-class-and-module/</id>
    <published>2013-09-11T16:00:00.000Z</published>
    <updated>2016-02-27T09:47:09.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;Write out the detailed specs&lt;/li&gt;
&lt;li&gt;Extract out major nouns; these are your classes.&lt;/li&gt;
&lt;li&gt;Extract out major verbs; these are your behaviors/methods.&lt;/li&gt;
&lt;li&gt;Create objects out of those classes; these are your actors in your program.&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;Write out the detailed specs&lt;/li&gt;
&lt;li&gt;Extract out major nouns; these are your classes.&lt;/li&gt;
&lt;li&gt;Extract out major verbs; these are 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Ruby method scope</title>
    <link href="http://yoursite.com/2013/09/11/ruby-method-scope/"/>
    <id>http://yoursite.com/2013/09/11/ruby-method-scope/</id>
    <published>2013-09-10T16:00:00.000Z</published>
    <updated>2016-02-27T09:46:44.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Ruby-method-scope-convention&quot;&gt;&lt;a href=&quot;#Ruby-method-scope-convention&quot; class=&quot;headerlink&quot; title=&quot;Ruby method scope convention&quot;&gt;&lt;/a&gt;Ruby method scope convention&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ruby method not have a strict pass by value or pass by reference.&lt;/li&gt;
&lt;li&gt;if you passing an argument, and the argument calls a method that mutates the caller which may or may not have a &lt;code&gt;!&lt;/code&gt;, then it&amp;#x2019;s going to change that object.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very common source bug.&lt;/p&gt;
&lt;h2 id=&quot;example&quot;&gt;&lt;a href=&quot;#example&quot; class=&quot;headerlink&quot; title=&quot;example&quot;&gt;&lt;/a&gt;example&lt;/h2&gt;&lt;h3 id=&quot;pass-by-value-not-mutate-argument-in-method&quot;&gt;&lt;a href=&quot;#pass-by-value-not-mutate-argument-in-method&quot; class=&quot;headerlink&quot; title=&quot;pass by value(not mutate argument in method):&quot;&gt;&lt;/a&gt;pass by value(not mutate argument in method):&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;a = [1, 2, 1]
def my_method(a)
  a.uniq
end
puts a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1
2
1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;pass-by-reference-mutate-argument-in-method&quot;&gt;&lt;a href=&quot;#pass-by-reference-mutate-argument-in-method&quot; class=&quot;headerlink&quot; title=&quot;pass by reference(mutate argument in method):&quot;&gt;&lt;/a&gt;pass by reference(mutate argument in method):&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;a = [1, 2, 1]
def my_method(a)
  a.uniq!
end
puts a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1
2
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Ruby-method-scope-convention&quot;&gt;&lt;a href=&quot;#Ruby-method-scope-convention&quot; class=&quot;headerlink&quot; title=&quot;Ruby method scope convention&quot;&gt;&lt;/a&gt;Ru
    
    </summary>
    
    
  </entry>
  
</feed>
